;; Object semanticdb-project-database-file-17742fc
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-17742fc"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1a0a73c"
      :major-mode emacs-lisp-mode
      :tags nil
      :file "egg-autoloads.el"
      :pointmax 345
      :fsize 3869
      :lastmodtime '(23398 10231 183116 392000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1a0b2dc"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("egg-custom" include nil nil [1984 2005])
            ("ediff" include nil nil [2006 2022])
            ("dolist-done" function
               (:documentation "Loop over a list.
Evaluate BODY with VAR bound to each car from LIST, in turn.
if DONE then stops the loop and return DONE.
(fn (VAR LIST DONE) BODY...)"
                :arguments ("spec" "body"))
                nil [2165 2621])
            ("subseq" function (:arguments ("seq" "start" "end")) nil [2858 2986])
            ("egg-find-if" function (:arguments ("predicate" "seq")) nil [2988 3116])
            ("egg--find-not" function (:arguments ("list" "predicate")) nil [3118 3342])
            ("egg--find" function (:arguments ("list" "predicate")) nil [3344 3562])
            ("egg-unquote-posix-regexp" function (:arguments ("string")) nil [3564 3779])
            ("invoked-interactively-p" function (:documentation "wrapper for checking if the function was invoked interactively,
works around the deprecation of 'interactive-p' after Emacs 23.2") nil [3782 4129])
            ("egg-text" function
               (:documentation "Format TEXT with face FACE at compile-time or run-time."
                :arguments ("text" "face"))
                nil [4132 4472])
            ("egg-pretty-help-text" function
               (:documentation "Perform key bindings substitutions and highlighting in STRINGS."
                :arguments ("strings"))
                nil [4474 5398])
            ("egg-prop" function
               (:documentation "Propertize TEXT with properties list PROP at compile-time or run-time."
                :arguments ("text" "prop"))
                nil [5400 5767])
            ("find-file-at-point" function
               (:documentation "Find filename, guessing a default from text around point."
                :prototype-flag t
                :user-visible-flag t)
                nil [5770 5873])
            ("defalias" code nil nil [5874 5928])
            ("egg-string-at-point" function nil nil [5929 5979])
            ("egg-goto-line" function (:arguments ("line")) nil [5981 6065])
            ("egg-prepend" function
               (:documentation "Make STR appear to have prefix PREFIX.
If OTHER-PROPERTIES was non-nil, apply it to STR."
                :arguments ("str" "prefix" "other-properties"))
                nil [6067 6376])
            ("egg-pick-file-contents" function
               (:documentation "Pick a string out of the contents of the file FILE-NAME.
This function searches for and return the 1st match of REGEXP on the
contents of the file. If indices was not nil, then return the first
successful submatch in the order in INDICES."
                :arguments ("file-name" "regexp" "indices"))
                nil [6379 7000])
            ("egg-pick-file-records" function
               (:documentation "Return a list of strings from the contents of the file FILE-NAME.
START-RE is the regexp to match the beginning of a record.
END-RE is the regexp to match the end of a record."
                :arguments ("file-name" "start-re" "end-re"))
                nil [7003 7905])
            ("egg-rbranch-to-remote" function
               (:documentation "Return the remote name in the remote-branch RBRANCH.
E.g: `foo' in `foo/bar'"
                :arguments ("rbranch"))
                nil [7907 8145])
            ("egg-rbranch-name" function
               (:documentation "Return the ref name in the remote-branch RBRANCH.
E.g: `bar' in `foo/bar'"
                :arguments ("rbranch"))
                nil [8147 8358])
            ("egg-file-as-string-raw" function (:arguments ("file-name")) nil [8360 8483])
            ("egg-file-as-string" function
               (:documentation "return the contents of file FILE-NAME as a string."
                :arguments ("file-name"))
                nil [8485 8776])
            ("egg-commit-at-point" function (:arguments ("pos" "object")) nil [8778 8905])
            ("egg-ref-at-point" function (:arguments ("pos" "type" "object")) nil [8907 9182])
            ("egg-ref-at" function (:arguments ("pos" "object")) nil [9184 9264])
            ("egg-head-at-point" function (:arguments ("pos" "object")) nil [9266 9375])
            ("egg-head-at" function (:arguments ("pos")) nil [9377 9447])
            ("egg-tag-at-point" function (:arguments ("pos" "object")) nil [9449 9556])
            ("egg-remote-at-point" function (:arguments ("pos" "object")) nil [9558 9671])
            ("egg-references-at-point" function (:arguments ("pos" "object")) nil [9673 9808])
            ("egg-ref-or-commit-at" function (:arguments ("pos" "object")) nil [9810 9934])
            ("egg-commit-at" function (:arguments ("pos" "object")) nil [9936 10018])
            ("egg-rsite-at" function (:arguments ("pos" "object")) nil [10020 10125])
            ("egg-delta-file-at" function (:arguments ("pos" "object")) nil [10127 10223])
            ("egg-delta-hunk-at" function (:arguments ("pos" "object")) nil [10225 10321])
            ("egg-navigation-at-point" function nil nil [10323 10402])
            ("egg-invisible-spec-at-point" function nil nil [10404 10486])
            ("egg-hunk-at-point" function nil nil [10488 10555])
            ("egg-diff-at-point" function nil nil [10557 10624])
            ("egg-point-in-section" function (:arguments ("section-id")) nil [10626 10725])
            ("egg-use-region-p" function nil nil [10727 10851])
            ("egg-safe-search" function (:arguments ("re" "limit" "no" "backward" "end")) nil [10853 11115])
            ("egg-safe-search-pickup" function (:arguments ("re" "limit" "no")) nil [11117 11308])
            ("egg-section-relative-pos" function (:arguments ("pos")) nil [11310 11567])
            ("egg-buffer-goto-section" function (:arguments ("section" "offset")) nil [11569 11858])
            ("egg-current-line-string" function nil nil [11861 11990])
            ("egg-insert-string-buffer" function (:arguments ("string" "buf")) nil [11992 12089])
            ("egg-insert-current-line-buffer" function (:arguments ("buf")) nil [12091 12197])
            ("egg--ediffing-temp-buffers" variable nil nil [12335 12374])
            ("egg--add-ediffing-temp-buffers" function (:arguments ("buffers")) nil [12375 12556])
            ("egg--kill-ediffing-temp-buffers" function nil nil [12558 12937])
            ("egg--ediff-saved-window-config" variable nil nil [12939 12982])
            ("egg--ediff-save-windows-config-hook" function nil nil [12983 13100])
            ("egg--ediff-restore-windows-config-hook" function nil nil [13102 13280])
            ("egg-subst-ucs-char-in-buffer" function (:arguments ("start" "from" "to")) nil [13282 13573])
            ("egg-redraw-chars-in-region" function (:arguments ("beg" "end" "map")) nil [13575 13814])
            ("egg-gpg-agent-info" variable nil nil [13946 13977])
            ("egg-gpg-agent-info" function (:arguments ("action-if-not-set")) nil [13978 15475])
            ("egg-insert-texi-for-command" function nil nil [15624 15987])
            ("egg-update-texi-command-doc" function nil nil [15989 16309])
            ("egg-insert-texi-for-map" function nil nil [16311 17143])
            ("egg-base" package nil nil [17145 17164]))          
      :file "egg-base.el"
      :pointmax 17165
      :fsize 17165
      :lastmodtime '(23398 10229 539766 347000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-f71498"
      :file "egg-custom.el"
      :fsize 24483
      :lastmodtime '(23398 10229 893103 274000)))
  :file "!home!lk!.emacs.d!elpa!egg-20180713.918!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
