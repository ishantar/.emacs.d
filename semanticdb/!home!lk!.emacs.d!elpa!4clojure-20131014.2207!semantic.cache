;; Object semanticdb-project-database-file-25dff50
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-25dff50"
  :tables
  (list
    (semanticdb-table "semanticdb-table-25dff30"
      :major-mode emacs-lisp-mode
      :tags nil
      :file "4clojure-autoloads.el"
      :pointmax 355
      :fsize 1116
      :lastmodtime '(23398 10698 874530 368000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-25dff70"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("json" include nil nil [1331 1346])
            ("request" include nil nil [1347 1365])
            ("4clojure-cached-question" variable nil nil [1367 1469])
            ("4clojure/get-question-cached" function (:arguments ("problem-number")) nil [1471 2056])
            ("4clojure/questions-for-problem" function (:arguments ("problem-number")) nil [2058 2338])
            ("4clojure/first-question-for-problem" function (:arguments ("problem-number")) nil [2340 2668])
            ("4clojure/description-of-problem" function (:arguments ("problem-number")) nil [2670 2867])
            ("4clojure/restrictions-for-problem" function (:arguments ("problem-number")) nil [2869 3243])
            ("4clojure/start-new-problem" function (:arguments ("problem-number")) nil [3245 4136])
            ("4clojure/format-problem-for-buffer" function (:arguments ("problem-number" "description" "questions" "restrictions")) nil [4138 4796])
            ("4clojure/get-answer-from-current-buffer" function (:arguments ("problem-number")) nil [4798 5320])
            ("4clojure/problem-number-of-current-buffer" function nil nil [5322 5873])
            ("4clojure/check-answer" function (:arguments ("problem-number" "answer")) nil [5875 6627])
            ("4clojure-open-question" function
               (:user-visible-flag t
                :arguments ("problem-number"))
                nil [6644 6836])
            ("4clojure-next-question" function (:user-visible-flag t) nil [6854 7128])
            ("4clojure-previous-question" function (:user-visible-flag t) nil [7146 7557])
            ("4clojure-check-answers" function (:user-visible-flag t) nil [7574 8137])
            ("4clojure" package nil nil [8139 8158]))          
      :file "4clojure.el"
      :pointmax 8185
      :fsize 8186
      :lastmodtime '(23398 10698 734528 949000)
      :unmatched-syntax nil))
  :file "!home!lk!.emacs.d!elpa!4clojure-20131014.2207!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
