;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [768 787])
            ("limits.h" include (:system-flag t) nil [788 807])
            ("stdio.h" include (:system-flag t) nil [808 826])
            ("stdlib.h" include (:system-flag t) nil [827 846])
            ("lisp.h" include nil nil [847 864])
            ("blockinput.h" include nil nil [865 888])
            ("commands.h" include nil nil [890 911])
            ("keyboard.h" include nil nil [912 933])
            ("dispextern.h" include nil nil [934 957])
            ("buffer.h" include nil nil [958 977])
            ("CACHEABLE" variable (:constant-flag t) nil [1221 1230])
            ("Vautoload_queue" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1607 1635])
            ("Vrun_hooks" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1772 1795])
            ("when_entered_debugger" variable
               (:typemodifiers ("static")
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [2709 2748])
            ("Vsignaling_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [2881 2913])
            ("inhibit_lisp_code" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [3036 3066])
            ("EXTERNALLY_VISIBLE" variable (:type "int") nil [3184 3203])
            ("EXTERNALLY_VISIBLE" variable (:type "int") nil [3254 3273])
            ("EXTERNALLY_VISIBLE" variable (:type "int") nil [3327 3346])
            ("EXTERNALLY_VISIBLE" variable (:type "int") nil [3403 3422])
            ("EXTERNALLY_VISIBLE" variable (:type "int") nil [3463 3482])
            ("funcall_lambda" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3519 3531])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3532 3542])
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3543 3557]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3484 3558])
            ("apply_lambda" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3592 3604])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3605 3617])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3618 3628]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3559 3629])
            ("lambda_arity" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3663 3675]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3630 3676])
            ("specpdl_symbol" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [3713 3736]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3678 3804])
            ("specpdl_kind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [3845 3868]))                  
                :type ("specbind_tag" type (:type "enum") nil nil))
                nil [3806 3934])
            ("specpdl_old_value" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [3974 3997]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3936 4068])
            ("set_specpdl_old_value" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4105 4128])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4129 4145]))                  
                :type "void")
                nil [4070 4215])
            ("specpdl_where" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4251 4274]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4217 4340])
            ("specpdl_saved_value" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4382 4405]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4342 4478])
            ("specpdl_arg" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4512 4535]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4480 4606])
            ("backtrace_function" function
               (:arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4640 4663]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4608 4738])
            ("backtrace_nargs" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4774 4797]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [4740 4869])
            ("backtrace_args" function
               (:pointer 1
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [4901 4924]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [4871 4995])
            ("backtrace_debug_on_exit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [5034 5057]))                  
                :type "bool")
                nil [4997 5137])
            ("set_backtrace_args" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [5227 5250])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5251 5269])
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5270 5286]))                  
                :type "void")
                nil [5195 5382])
            ("set_backtrace_debug_on_exit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [5425 5448])
                    ("doe" variable (:type "bool") (reparse-symbol arg-sub-list) [5449 5458]))                  
                :type "void")
                nil [5384 5537])
            ("backtrace_p" function
               (:arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [5605 5628]))                  
                :type "bool")
                nil [5587 5655])
            ("backtrace_top" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5692 5697]))                  
                :type ("specbinding" type (:type "union") nil nil))
                nil [5657 5832])
            ("backtrace_next" function
               (:pointer 1
                :arguments 
                  ( ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [5870 5893]))                  
                :type ("specbinding" type (:type "union") nil nil))
                nil [5834 5993])
            ("init_eval_once" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6016 6021]))                  
                :type "void")
                nil [5995 6374])
            ("init_eval" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6443 6448]))                  
                :type "void")
                nil [6427 7198])
            ("restore_stack_limits" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7289 7306]))                  
                :type "void")
                nil [7255 7395])
            ("grow_specpdl" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7423 7428]))                  
                :type "void")
                nil [7397 7429])
            ("call_debugger" function
               (:arguments 
                  ( ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7514 7530]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7487 9705])
            ("do_debug_on_call" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("code" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9737 9754])
                    ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9755 9771]))                  
                :type "void")
                nil [9707 9888])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("For" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10094 10098])
                    ("" variable (:type ("Sor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10099 10103])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10107 10117])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10128 10132]))                  
                :type "int")
                nil [10081 10334])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10553 10558])
                    ("" variable (:type ("Sand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10559 10564])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10568 10578])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10589 10593]))                  
                :type "int")
                nil [10539 10800])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fif" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11015 11019])
                    ("" variable (:type ("Sif" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11020 11024])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11028 11038])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11049 11053]))                  
                :type "int")
                nil [11002 11364])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcond" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11540 11546])
                    ("" variable (:type ("Scond" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11547 11553])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11557 11567])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11578 11582]))                  
                :type "int")
                nil [11525 12046])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fprogn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12353 12360])
                    ("" variable (:type ("Sprogn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12361 12368])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12372 12382])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12393 12397]))                  
                :type "int")
                nil [12337 12508])
            ("prog_ignore" function
               (:arguments 
                  ( ("body" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12760 12777]))                  
                :type "void")
                nil [12742 12798])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fprog1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12816 12823])
                    ("" variable (:type ("Sprog1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12824 12831])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12835 12845])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12856 12860]))                  
                :type "int")
                nil [12800 13078])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fprog2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13187 13194])
                    ("" variable (:type ("Sprog2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13195 13202])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13206 13216])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13227 13231]))                  
                :type "int")
                nil [13171 13462])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsetq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13540 13546])
                    ("" variable (:type ("Ssetq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13547 13553])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13557 13567])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13578 13582]))                  
                :type "int")
                nil [13525 14063])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fquote" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14883 14890])
                    ("" variable (:type ("Squote" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14891 14898])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14902 14912])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14923 14927]))                  
                :type "int")
                nil [14867 15566])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15707 15717])
                    ("" variable (:type ("Sfunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15718 15728])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15732 15742])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15753 15757]))                  
                :type "int")
                nil [15688 15961])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdefvaralias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16983 16996])
                    ("" variable (:type ("Sdefvaralias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16997 17010])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17027 17031]))                  
                :type "int")
                nil [16961 17634])
            ("default_toplevel_binding" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19426 19445]))                  
                :type ("specbinding" type (:type "union") nil nil))
                nil [19373 19925])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdefault_toplevel_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19960 19984])
                    ("" variable (:type ("Sdefault_toplevel_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19985 20009])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20026 20030]))                  
                :type "int")
                nil [19927 20146])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fset_default_toplevel_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20430 20458])
                    ("" variable (:type ("Sset_default_toplevel_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20466 20494])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20511 20515]))                  
                :type "int")
                nil [20393 20659])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdefvar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20863 20871])
                    ("" variable (:type ("Sdefvar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20872 20880])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20884 20894])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20905 20909]))                  
                :type "int")
                nil [20846 22175])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdefconst" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23803 23813])
                    ("" variable (:type ("Sdefconst" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23814 23824])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23828 23838])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23849 23853]))                  
                :type "int")
                nil [23784 24610])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmake_var_non_special" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25345 25367])
                    ("" variable (:type ("Smake_var_non_special" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25375 25397])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25414 25418]))                  
                :type "int")
                nil [25305 25471])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("FletX" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25584 25590])
                    ("" variable (:type ("SletX" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25591 25597])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25601 25611])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25622 25626]))                  
                :type "int")
                nil [25569 25993])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Flet" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27358 27363])
                    ("" variable (:type ("Slet" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27364 27369])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27373 27383])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27394 27398]))                  
                :type "int")
                nil [27344 27754])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fwhile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29479 29486])
                    ("" variable (:type ("Swhile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29487 29494])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29498 29508])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29519 29523]))                  
                :type "int")
                nil [29463 29717])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmacroexpand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29925 29938])
                    ("" variable (:type ("Smacroexpand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29939 29952])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29969 29973]))                  
                :type "int")
                nil [29903 30412])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31817 31824])
                    ("" variable (:type ("Scatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31825 31832])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31836 31846])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31857 31861]))                  
                :type "int")
                nil [31801 32267])
            ("clobbered_eassert" variable (:constant-flag t) nil [32534 32551])
            ("internal_catch" function
               (:arguments 
                  ( ("tag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32765 32781])
                    ("func" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32804 32816]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32819 32835]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [32737 33349])
            ("unwind_to_catch" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [34125 34146])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34148 34166]))                  
                :type "void")
                nil [34086 34814])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fthrow" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34832 34839])
                    ("" variable (:type ("Sthrow" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34840 34847])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34864 34868])
                    ("" variable (:type ("attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34968 34979])
                    ("" variable (:type ("noreturn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34980 34989]))                  
                :type "int")
                nil [34816 35037])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Funwind_protect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35366 35382])
                    ("" variable (:type ("Sunwind_protect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35383 35399])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35403 35413])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35424 35428]))                  
                :type "int")
                nil [35341 35701])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcondition_case" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35908 35924])
                    ("" variable (:type ("Scondition_case" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35925 35941])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35945 35955])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35966 35970]))                  
                :type "int")
                nil [35883 37146])
            ("internal_lisp_condition_case" function
               (:arguments 
                  ( ("var" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37493 37509])
                    ("bodyform" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37510 37531])
                    ("handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37541 37562]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [37451 39949])
            ("internal_condition_case" function
               (:arguments 
                  ( ("bfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [40418 40423]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40426 40447])
                    ("hfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40472 40484]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [40361 40875])
            ("internal_condition_case_1" function
               (:arguments 
                  ( ("bfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41013 41025]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41028 41044])
                    ("handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41051 41072])
                    ("hfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41099 41111]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [40954 41505])
            ("internal_condition_case_2" function
               (:arguments 
                  ( ("bfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41659 41671])
                            ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41672 41684]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41693 41710])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41717 41734])
                    ("handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41741 41762])
                    ("hfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41789 41801]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [41600 42202])
            ("internal_condition_case_n" function
               (:arguments 
                  ( ("bfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42367 42377])
                            ("" variable
                               (:pointer 1
                                :type ("Lisp_Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42378 42392]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42401 42417])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [42424 42442])
                    ("handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42449 42470])
                    ("hfun" function
                       (:function-pointer t
                        :arguments 
                          ( ("err" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42497 42513])
                            ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42520 42536])
                            ("args" variable
                               (:pointer 1
                                :type ("Lisp_Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42543 42561]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42308 42976])
            ("internal_catch_all_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("function" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [43043 43050]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("argument" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [43053 43068]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42978 43504])
            ("internal_catch_all" function
               (:arguments 
                  ( ("function" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [43766 43773]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil)
                    ("argument" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [43776 43791])
                    ("handler" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43835 43847]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43710 44306])
            ("push_handler" function
               (:pointer 1
                :arguments 
                  ( ("tag_ch_val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44339 44362])
                    ("handlertype" variable (:type ("handlertype" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [44363 44392]))                  
                :type ("handler" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [44308 44518])
            ("push_handler_nosignal" function
               (:pointer 1
                :arguments 
                  ( ("tag_ch_val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44560 44583])
                    ("handlertype" variable (:type ("handlertype" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [44584 44613]))                  
                :type ("handler" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [44520 45177])
            ("signal_or_quit" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45216 45228])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45229 45241])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [45242 45247]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [45181 45248])
            ("find_handler_clause" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45289 45301])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45302 45314]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [45249 45315])
            ("maybe_call_debugger" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("conditions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45349 45372])
                    ("sig" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45373 45389])
                    ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45395 45412]))                  
                :type "bool")
                nil [45316 45413])
            ("process_quit_flag" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [45446 45451]))                  
                :type "void")
                nil [45415 45642])
            ("maybe_quit" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [46372 46377]))                  
                :type "void")
                nil [46355 46517])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsignal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46536 46544])
                    ("" variable (:type ("Ssignal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46545 46553])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46570 46574])
                    ("" variable (:type ("attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47187 47198])
                    ("" variable (:type ("noreturn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47199 47208]))                  
                :type "int")
                nil [46519 47255])
            ("quit" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [47397 47402]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [47379 47451])
            ("signal_or_quit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("error_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47754 47779])
                    ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47780 47797])
                    ("keyboard_quit" variable (:type "bool") (reparse-symbol arg-sub-list) [47798 47817]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [47719 51140])
            ("xsignal0" function
               (:arguments 
                  ( ("error_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51227 51252]))                  
                :type "void")
                nil [51212 51288])
            ("xsignal1" function
               (:arguments 
                  ( ("error_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51305 51330])
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51331 51347]))                  
                :type "void")
                nil [51290 51390])
            ("xsignal2" function
               (:arguments 
                  ( ("error_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51407 51432])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51433 51450])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51451 51468]))                  
                :type "void")
                nil [51392 51518])
            ("xsignal3" function
               (:arguments 
                  ( ("error_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51535 51560])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51561 51578])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51579 51596])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51597 51614]))                  
                :type "void")
                nil [51520 51670])
            ("signal_error" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [51815 51829])
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51830 51846]))                  
                :type "void")
                nil [51796 52197])
            ("wants_debugger" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52317 52334])
                    ("conditions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52335 52358]))                  
                :type "bool")
                nil [52289 52685])
            ("skip_debugger" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("conditions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52880 52903])
                    ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52904 52921]))                  
                :type "bool")
                nil [52853 53523])
            ("maybe_call_debugger" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("conditions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53868 53891])
                    ("sig" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53892 53908])
                    ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53909 53926]))                  
                :type "bool")
                nil [53835 54582])
            ("find_handler_clause" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54624 54645])
                    ("conditions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54646 54669]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [54584 55145])
            ("vformat_string" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55232 55246])
                    ("ap" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55247 55258]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [55204 55578])
            ("verror" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55644 55658])
                    ("ap" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55659 55670]))                  
                :type "void")
                nil [55631 55719])
            ("error" function
               (:arguments 
                  ( ("m" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55801 55815])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [55816 55820]))                  
                :type "void")
                nil [55789 55876])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcommandp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55898 55908])
                    ("" variable (:type ("Scommandp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55909 55919])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55936 55940]))                  
                :type "int")
                nil [55879 56678])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fautoload" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58229 58239])
                    ("" variable (:type ("Sautoload" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58240 58250])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58267 58271]))                  
                :type "int")
                nil [58210 58998])
            ("un_autoload" function
               (:arguments 
                  ( ("oldqueue" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59781 59802]))                  
                :type "void")
                nil [59763 60271])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fautoload_do_load" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60439 60457])
                    ("" variable (:type ("Sautoload_do_load" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60458 60476])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60493 60497]))                  
                :type "int")
                nil [60412 60856])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Feval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62824 62830])
                    ("" variable (:type ("Seval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62831 62837])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62854 62858]))                  
                :type "int")
                nil [62809 63100])
            ("grow_specpdl" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [63765 63770]))                  
                :type "void")
                nil [63739 64466])
            ("record_in_backtrace" function
               (:arguments 
                  ( ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64499 64520])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64521 64539])
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64540 64556]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [64468 64883])
            ("eval_sub" function
               (:arguments 
                  ( ("form" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64999 65016]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [64977 70834])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fapply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70853 70860])
                    ("" variable (:type ("Sapply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70861 70868])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70872 70877])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70888 70892]))                  
                :type "int")
                nil [70837 71140])
            ("funcall_nil" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73088 73104])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73105 73123]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [73056 73168])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frun_hooks" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73190 73201])
                    ("" variable (:type ("Srun_hooks" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73202 73213])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73217 73222])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73233 73237]))                  
                :type "int")
                nil [73170 73944])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frun_hook_with_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74065 74085])
                    ("" variable (:type ("Srun_hook_with_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74093 74113])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74117 74122])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74133 74137]))                  
                :type "int")
                nil [74036 74605])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frun_hook_with_args_until_success" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74882 74916])
                    ("" variable (:type ("Srun_hook_with_args_until_success" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74924 74958])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74962 74967])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74978 74982]))                  
                :type "int")
                nil [74839 75587])
            ("funcall_not" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75678 75694])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75695 75713]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [75646 75769])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frun_hook_with_args_until_failure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75814 75848])
                    ("" variable (:type ("Srun_hook_with_args_until_failure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75856 75890])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75894 75899])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75910 75914]))                  
                :type "int")
                nil [75771 76572])
            ("run_hook_wrapped_funcall" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76698 76714])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [76715 76733]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76653 76893])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frun_hook_wrapped" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76922 76940])
                    ("" variable (:type ("Srun_hook_wrapped" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76941 76959])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76963 76968])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76979 76983]))                  
                :type "int")
                nil [76895 77370])
            ("run_hook_with_args" function
               (:arguments 
                  ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77711 77727])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77728 77746])
                    ("funcall" function
                       (:function-pointer t
                        :arguments 
                          ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77776 77792])
                            ("args" variable
                               (:pointer 1
                                :type ("Lisp_Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77793 77811]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        nil nil))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77679 79176])
            ("run_hook" function
               (:arguments 
                  ( ("hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79250 79267]))                  
                :type "void")
                nil [79235 79305])
            ("run_hook_with_args_2" function
               (:arguments 
                  ( ("hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79410 79427])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79428 79445])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79446 79463]))                  
                :type "void")
                nil [79383 79516])
            ("apply1" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79562 79577])
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79578 79594]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79542 79665])
            ("call0" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79727 79742]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79708 79774])
            ("call1" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79856 79871])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79872 79889]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [79837 79930])
            ("call2" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80019 80034])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80035 80052])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80053 80070]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80000 80117])
            ("call3" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80212 80227])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80228 80245])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80246 80263])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80264 80281]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80193 80334])
            ("call4" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80435 80450])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80451 80468])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80469 80486])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80487 80504])
                    ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80512 80529]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80416 80588])
            ("call5" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80695 80710])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80711 80728])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80729 80746])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80747 80764])
                    ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80772 80789])
                    ("arg5" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80790 80807]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80676 80872])
            ("call6" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80985 81000])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81001 81018])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81019 81036])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81037 81054])
                    ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81062 81079])
                    ("arg5" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81080 81097])
                    ("arg6" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81098 81115]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [80966 81186])
            ("call7" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81305 81320])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81321 81338])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81339 81356])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81357 81374])
                    ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81382 81399])
                    ("arg5" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81400 81417])
                    ("arg6" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81418 81435])
                    ("arg7" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81436 81453]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [81286 81530])
            ("call8" function
               (:arguments 
                  ( ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81658 81673])
                    ("arg1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81674 81691])
                    ("arg2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81692 81709])
                    ("arg3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81710 81727])
                    ("arg4" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81735 81752])
                    ("arg5" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81753 81770])
                    ("arg6" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81771 81788])
                    ("arg7" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81789 81806])
                    ("arg8" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81814 81831]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [81639 81914])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffunctionp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81936 81947])
                    ("" variable (:type ("Sfunctionp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81948 81959])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81976 81980]))                  
                :type "int")
                nil [81916 82048])
            ("FUNCTIONP" function
               (:arguments 
                  ( ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82126 82145]))                  
                :type "bool")
                nil [82110 82858])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffuncall" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82878 82887])
                    ("" variable (:type ("Sfuncall" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82888 82897])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82901 82906])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82917 82921]))                  
                :type "int")
                nil [82860 83174])
            ("funcall_subr" function
               (:arguments 
                  ( ("subr" variable
                       (:pointer 1
                        :type ("Lisp_Subr" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [84999 85022])
                    ("numargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85023 85041])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [85042 85060]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [84973 87706])
            ("apply_lambda" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87741 87757])
                    ("args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87758 87775])
                    ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87776 87792]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [87708 88542])
            ("funcall_lambda" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88792 88808])
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88809 88825])
                    ("arg_vector" variable
                       (:pointer 1
                        :typemodifiers ("register")
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [88828 88861]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [88757 92673])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffunc_arity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [92696 92708])
                    ("" variable (:type ("Sfunc_arity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [92709 92721])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [92738 92742]))                  
                :type "int")
                nil [92675 93083])
            ("lambda_arity" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fun" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94423 94439]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [94390 95653])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffetch_bytecode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95680 95696])
                    ("" variable (:type ("Sfetch_bytecode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95697 95713])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95737 95741]))                  
                :type "int")
                nil [95655 95826])
            ("let_shadows_buffer_binding_p" function
               (:arguments 
                  ( ("symbol" variable
                       (:pointer 1
                        :type ("Lisp_Symbol" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [96621 96648]))                  
                :type "bool")
                nil [96586 97034])
            ("do_specbind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("sym" variable
                       (:pointer 1
                        :type ("Lisp_Symbol" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [97061 97085])
                    ("bind" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [97086 97110])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97124 97142])
                    ("bindflag" variable (:type ("Set_Internal_Bind" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [97143 97175]))                  
                :type "void")
                nil [97036 97778])
            ("specbind" function
               (:arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [98430 98449])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [98450 98468]))                  
                :type "void")
                nil [98415 100469])
            ("record_unwind_protect" function
               (:arguments 
                  ( ("function" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100570 100582]))                          
                        :type "void")
                        nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100585 100601]))                  
                :type "void")
                nil [100525 100741])
            ("record_unwind_protect_ptr" function
               (:arguments 
                  ( ("function" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [100792 100799]))                          
                        :type "void")
                        nil nil)
                    ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [100802 100812]))                  
                :type "void")
                nil [100743 100968])
            ("record_unwind_protect_int" function
               (:arguments 
                  ( ("function" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [101019 101023]))                          
                        :type "void")
                        nil nil)
                    ("arg" variable (:type "int") (reparse-symbol arg-sub-list) [101026 101034]))                  
                :type "void")
                nil [100970 101190])
            ("record_unwind_protect_void" function
               (:arguments 
                  ( ("function" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [101242 101247]))                          
                        :type "void")
                        nil nil))                  
                :type "void")
                nil [101192 101371])
            ("rebind_for_thread_switch" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [101404 101409]))                  
                :type "void")
                nil [101373 101779])
            ("do_one_unbind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("this_binding" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [101808 101840])
                    ("unwinding" variable (:type "bool") (reparse-symbol arg-sub-list) [101841 101856])
                    ("bindflag" variable (:type ("Set_Internal_Bind" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [101872 101904]))                  
                :type "void")
                nil [101781 103806])
            ("do_nothing" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [103832 103837]))                  
                :type "void")
                nil [103808 103840])
            ("record_unwind_protect_nothing" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [103992 103997]))                  
                :type "void")
                nil [103956 104044])
            ("clear_unwind_protect" function
               (:arguments 
                  ( ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104187 104203]))                  
                :type "void")
                nil [104160 104330])
            ("set_unwind_protect" function
               (:arguments 
                  ( ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104534 104550])
                    ("func" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104564 104576]))                          
                        :type "void")
                        nil nil)
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104585 104601]))                  
                :type "void")
                nil [104509 104730])
            ("set_unwind_protect_ptr" function
               (:arguments 
                  ( ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104761 104777])
                    ("func" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [104791 104798]))                          
                        :type "void")
                        nil nil)
                    ("arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [104801 104811]))                  
                :type "void")
                nil [104732 104956])
            ("unbind_to" function
               (:arguments 
                  ( ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105095 105111])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105112 105130]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [105072 105756])
            ("unbind_for_thread_switch" function
               (:arguments 
                  ( ("thr" variable
                       (:pointer 1
                        :type ("thread_state" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [105789 105814]))                  
                :type "void")
                nil [105758 106126])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fspecial_variable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106157 106177])
                    ("" variable (:type ("Sspecial_variable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106178 106198])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106215 106219]))                  
                :type "int")
                nil [106128 106432])
            ("get_backtrace_starting_at" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("base" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106582 106599]))                  
                :type ("specbinding" type (:type "union") nil nil))
                nil [106528 106912])
            ("get_backtrace_frame" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("nframes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106962 106982])
                    ("base" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106983 107000]))                  
                :type ("specbinding" type (:type "union") nil nil))
                nil [106914 107263])
            ("backtrace_frame_apply" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107307 107328])
                    ("pdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [107329 107352]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107265 107823])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbacktrace_debug" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107851 107868])
                    ("" variable (:type ("Sbacktrace_debug" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107869 107886])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107903 107907]))                  
                :type "int")
                nil [107825 108094])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmapbacktrace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108303 108317])
                    ("" variable (:type ("Smapbacktrace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108318 108332])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108349 108353]))                  
                :type "int")
                nil [108280 108994])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbacktrace_frame_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109458 109484])
                    ("" variable (:type ("Sbacktrace_frame_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109492 109518])
                    ("" variable (:type ("NULL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109525 109530])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109538 109542]))                  
                :type "int")
                nil [109422 109744])
            ("backtrace_eval_unrewind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("distance" variable (:type "int") (reparse-symbol arg-sub-list) [110381 110394]))                  
                :type "void")
                nil [110344 112784])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbacktrace_eval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112811 112827])
                    ("" variable (:type ("Sbacktrace_eval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112828 112844])
                    ("" variable (:type ("NULL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112851 112856])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112864 112868]))                  
                :type "int")
                nil [112786 113071])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbacktrace__locals" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113669 113688])
                    ("" variable (:type ("Sbacktrace__locals" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113689 113708])
                    ("" variable (:type ("NULL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113715 113720])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113728 113732]))                  
                :type "int")
                nil [113641 113922])
            ("mark_specpdl" function
               (:arguments 
                  ( ("first" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [116006 116031])
                    ("ptr" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [116032 116055]))                  
                :type "void")
                nil [115987 116871])
            ("get_backtrace" function
               (:arguments 
                  ( ("array" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [116893 116911]))                  
                :type "void")
                nil [116873 117262])
            ("backtrace_top_function" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [117300 117305]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117264 117418])
            ("syms_of_eval" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [117439 117444]))                  
                :type "void")
                nil [117420 125710]))          
      :file "eval.c"
      :pointmax 125711
      :fsize 125709
      :lastmodtime '(23150 33450 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("clobbered_eassert" (spp-arg-list ("E") 32550 . 32553) . ((symbol "verify" 32554 . 32560) (semantic-list "(sizeof (E) != 0)" 32561 . 32578)))
          ("CACHEABLE")
          )
)
    (semanticdb-table "semanticdb-table"
      :file "config.h"
      :fsize 65150
      :lastmodtime '(23153 38568 150075 444000))
    (semanticdb-table "semanticdb-table"
      :file "lisp.h"
      :fsize 158179
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "blockinput.h"
      :fsize 2324
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "commands.h"
      :fsize 1778
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "keyboard.h"
      :fsize 18511
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "dispextern.h"
      :fsize 124830
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "buffer.h"
      :fsize 47253
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [756 775])
            ("stdlib.h" include (:system-flag t) nil [777 796])
            ("unistd.h" include (:system-flag t) nil [797 816])
            ("filevercmp.h" include (:system-flag t) nil [817 840])
            ("intprops.h" include (:system-flag t) nil [841 862])
            ("vla.h" include (:system-flag t) nil [863 879])
            ("errno.h" include (:system-flag t) nil [880 898])
            ("lisp.h" include nil nil [900 917])
            ("character.h" include nil nil [918 940])
            ("coding.h" include nil nil [941 960])
            ("composite.h" include nil nil [961 983])
            ("buffer.h" include nil nil [984 1003])
            ("intervals.h" include nil nil [1004 1026])
            ("window.h" include nil nil [1027 1046])
            ("puresize.h" include nil nil [1047 1068])
            ("gnutls.h" include nil nil [1069 1088])
            ("sort_vector_copy" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1209 1221])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1222 1232])
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1242 1263])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1255 1264])
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1265 1286])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1278 1287]))                  
                :type "void")
                nil [1179 1288])
            ("equal_kind" type
               (:members 
                  ( ("EQUAL_NO_QUIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1307 1321])
                    ("EQUAL_PLAIN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1322 1334])
                    ("EQUAL_INCLUDING_PROPERTIES" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1335 1363]))                  
                :type "enum")
                nil [1289 1364])
            ("internal_equal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1393 1405])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1406 1418])
                    ("" variable (:type ("equal_kind" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [1426 1442])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [1443 1447])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1448 1460]))                  
                :type "bool")
                nil [1365 1461])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fidentity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1482 1492])
                    ("" variable (:type ("Sidentity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1493 1503])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1520 1524])
                    ("" variable (:type ("attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1570 1581]))                  
                :type "int")
                nil [1463 1608])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frandom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1645 1653])
                    ("" variable (:type ("Srandom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1654 1662])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1679 1683]))                  
                :type "int")
                nil [1628 2258])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Flength" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2895 2903])
                    ("" variable (:type ("Slength" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2904 2912])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2929 2933]))                  
                :type "int")
                nil [2878 3258])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsafe_length" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4068 4081])
                    ("" variable (:type ("Ssafe_length" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4082 4095])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4112 4116]))                  
                :type "int")
                nil [4046 4387])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_bytes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4512 4526])
                    ("" variable (:type ("Sstring_bytes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4527 4541])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4558 4562]))                  
                :type "int")
                nil [4489 4702])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4796 4810])
                    ("" variable (:type ("Sstring_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4811 4825])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4842 4846]))                  
                :type "int")
                nil [4773 5063])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcompare_strings" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5386 5403])
                    ("" variable (:type ("Scompare_strings" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5404 5421])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5438 5442]))                  
                :type "int")
                nil [5360 6759])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8302 8316])
                    ("" variable (:type ("Sstring_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8317 8331])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8348 8352]))                  
                :type "int")
                nil [8279 8568])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_version_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9333 9355])
                    ("" variable (:type ("Sstring_version_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9363 9385])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9402 9406]))                  
                :type "int")
                nil [9302 9946])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_collate_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10679 10701])
                    ("" variable (:type ("Sstring_collate_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10702 10724])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10741 10745]))                  
                :type "int")
                nil [10648 11910])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_collate_equalp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12407 12430])
                    ("" variable (:type ("Sstring_collate_equalp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12431 12454])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12471 12475]))                  
                :type "int")
                nil [12375 13680])
            ("concat" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14174 14190])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14191 14209])
                    ("target_type" variable (:type ("Lisp_Type" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [14216 14243])
                    ("last_special" variable (:type "bool") (reparse-symbol arg-sub-list) [14244 14262]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [14147 14263])
            ("concat2" function
               (:arguments 
                  ( ("s1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14301 14316])
                    ("s2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14317 14332]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [14280 14402])
            ("concat3" function
               (:arguments 
                  ( ("s1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14440 14455])
                    ("s2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14456 14471])
                    ("s3" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14472 14487]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [14419 14561])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fappend" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14580 14588])
                    ("" variable (:type ("Sappend" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14589 14597])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14601 14606])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14617 14621]))                  
                :type "int")
                nil [14563 14952])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15020 15028])
                    ("" variable (:type ("Sconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15029 15037])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15041 15046])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15057 15061]))                  
                :type "int")
                nil [15003 15353])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fvconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15424 15433])
                    ("" variable (:type ("Svconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15434 15443])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15447 15452])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15463 15467]))                  
                :type "int")
                nil [15406 15732])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcopy_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15814 15829])
                    ("" variable (:type ("Scopy_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15830 15845])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15862 15866]))                  
                :type "int")
                nil [15790 16152])
            ("textprop_rec" type
               (:members 
                  ( ("argnum" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16938 16955])
                    ("from" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17003 17018])
                    ("to" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17068 17081]))                  
                :type "struct")
                nil [16914 17125])
            ("concat" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17154 17170])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17171 17189])
                    ("target_type" variable (:type ("Lisp_Type" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [17191 17218])
                    ("last_special" variable (:type "bool") (reparse-symbol arg-sub-list) [17219 17237]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17127 24693])
            ("string_char_byte_cache_string" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [24696 24745])
            ("string_char_byte_cache_charpos" variable
               (:typemodifiers ("static")
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [24746 24794])
            ("string_char_byte_cache_bytepos" variable
               (:typemodifiers ("static")
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [24795 24843])
            ("clear_string_char_byte_cache" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [24880 24885]))                  
                :type "void")
                nil [24845 24929])
            ("string_char_to_byte" function
               (:arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25031 25050])
                    ("char_index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25051 25072]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [25000 26314])
            ("string_byte_to_char" function
               (:arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26422 26441])
                    ("byte_index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26442 26463]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [26391 27832])
            ("string_make_multibyte" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27923 27942]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27881 28541])
            ("string_to_multibyte" function
               (:arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28751 28770]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28718 29402])
            ("string_make_unibyte" function
               (:arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29486 29505]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29453 29852])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_make_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29886 29909])
                    ("" variable (:type ("Sstring_make_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29910 29933])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29957 29961]))                  
                :type "int")
                nil [29854 30572])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_make_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30675 30696])
                    ("" variable (:type ("Sstring_make_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30697 30718])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30742 30746]))                  
                :type "int")
                nil [30645 31062])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_as_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31161 31180])
                    ("" variable (:type ("Sstring_as_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31181 31200])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31224 31228]))                  
                :type "int")
                nil [31133 31563])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_as_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31895 31916])
                    ("" variable (:type ("Sstring_as_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31917 31938])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31962 31966]))                  
                :type "int")
                nil [31865 32637])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_to_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33243 33264])
                    ("" variable (:type ("Sstring_to_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33265 33286])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33310 33314]))                  
                :type "int")
                nil [33213 33833])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstring_to_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33932 33951])
                    ("" variable (:type ("Sstring_to_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33952 33971])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33995 33999]))                  
                :type "int")
                nil [33904 34366])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcopy_alist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34819 34831])
                    ("" variable (:type ("Scopy_alist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34832 34844])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34861 34865]))                  
                :type "int")
                nil [34798 35182])
            ("validate_subarray" function
               (:arguments 
                  ( ("array" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35738 35756])
                    ("from" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35757 35774])
                    ("to" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35775 35790])
                    ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35796 35811])
                    ("ifrom" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35812 35829])
                    ("ito" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35830 35845]))                  
                :type "void")
                nil [35714 36320])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsubstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36342 36353])
                    ("" variable (:type ("Ssubstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36354 36365])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36382 36386]))                  
                :type "int")
                nil [36322 37071])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsubstring_no_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37808 37833])
                    ("" variable (:type ("Ssubstring_no_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37834 37859])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37876 37880]))                  
                :type "int")
                nil [37774 38313])
            ("substring_both" function
               (:arguments 
                  ( ("string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38935 38954])
                    ("from" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38955 38970])
                    ("from_byte" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38971 38991])
                    ("to" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38994 39007])
                    ("to_byte" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39008 39026]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38907 39586])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fnthcdr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39606 39614])
                    ("" variable (:type ("Snthcdr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39615 39623])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39640 39644]))                  
                :type "int")
                nil [39589 39733])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fnth" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40007 40012])
                    ("" variable (:type ("Snth" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40013 40018])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40035 40039]))                  
                :type "int")
                nil [39993 40179])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Felt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40234 40239])
                    ("" variable (:type ("Selt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40240 40245])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40262 40266]))                  
                :type "int")
                nil [40220 40362])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmember" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40617 40625])
                    ("" variable (:type ("Smember" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40626 40634])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40651 40655]))                  
                :type "int")
                nil [40600 40834])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmemq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41014 41020])
                    ("" variable (:type ("Smemq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41021 41027])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41044 41048]))                  
                :type "int")
                nil [40999 41224])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmemql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41392 41399])
                    ("" variable (:type ("Smemql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41400 41407])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41424 41428]))                  
                :type "int")
                nil [41376 41605])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fassq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41889 41895])
                    ("" variable (:type ("Sassq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41896 41902])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41919 41923]))                  
                :type "int")
                nil [41874 42149])
            ("assq_no_quit" function
               (:arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42488 42504])
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42505 42522]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [42462 42672])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fassoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42690 42697])
                    ("" variable (:type ("Sassoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42698 42705])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42722 42726]))                  
                :type "int")
                nil [42674 42994])
            ("assoc_no_quit" function
               (:arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43551 43567])
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43568 43585]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [43524 43797])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frassq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43815 43822])
                    ("" variable (:type ("Srassq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43823 43830])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43847 43851]))                  
                :type "int")
                nil [43799 44027])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frassoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44233 44241])
                    ("" variable (:type ("Srassoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44242 44250])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44267 44271]))                  
                :type "int")
                nil [44216 44454])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdelq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44722 44728])
                    ("" variable (:type ("Sdelq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44729 44735])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44752 44756]))                  
                :type "int")
                nil [44707 45232])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdelete" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45557 45565])
                    ("" variable (:type ("Sdelete" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45566 45574])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45591 45595]))                  
                :type "int")
                nil [45540 46228])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fnreverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48182 48192])
                    ("" variable (:type ("Snreverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48193 48203])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48220 48224]))                  
                :type "int")
                nil [48163 48420])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Freverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49538 49547])
                    ("" variable (:type ("Sreverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49548 49557])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49574 49578]))                  
                :type "int")
                nil [49520 49723])
            ("sort_list" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51132 51149])
                    ("predicate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51150 51172]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [51102 51567])
            ("inorder" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pred" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51714 51731])
                    ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51732 51746])
                    ("b" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51747 51761]))                  
                :type "bool")
                nil [51693 51801])
            ("merge_vectors" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pred" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52022 52039])
                    ("alen" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52048 52063])
                    ("a" variable
                       (:dereference 1
                        :constant-flag t
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52064 52111])
                    ("blen" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52120 52135])
                    ("b" variable
                       (:dereference 1
                        :constant-flag t
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52136 52174])
                    ("dest" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52183 52225]))                  
                :type "void")
                nil [51995 52681])
            ("sort_vector_inplace" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pred" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52837 52854])
                    ("len" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52855 52869])
                    ("vec" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52877 52919])
                    ("tmp" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52927 52974]))                  
                :type "void")
                nil [52804 53243])
            ("sort_vector_copy" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pred" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53365 53382])
                    ("len" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53383 53397])
                    ("src" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53402 53444])
                    ("dest" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53449 53492]))                  
                :type "void")
                nil [53335 53853])
            ("sort_vector" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vector" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53988 54007])
                    ("predicate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54008 54030]))                  
                :type "void")
                nil [53963 54362])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54379 54385])
                    ("" variable (:type ("Ssort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54386 54392])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54409 54413]))                  
                :type "int")
                nil [54364 54739])
            ("merge" function
               (:arguments 
                  ( ("org_l1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54962 54981])
                    ("org_l2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54982 55001])
                    ("pred" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55002 55019]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [54943 55642])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fplist_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55744 55755])
                    ("" variable (:type ("Splist_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55756 55767])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55784 55788]))                  
                :type "int")
                nil [55724 56123])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fget" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56398 56403])
                    ("" variable (:type ("Sget" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56404 56409])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56426 56430]))                  
                :type "int")
                nil [56384 56597])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fplist_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56888 56899])
                    ("" variable (:type ("Splist_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56900 56911])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56928 56932]))                  
                :type "int")
                nil [56868 57412])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fput" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57972 57977])
                    ("" variable (:type ("Sput" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57978 57983])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58000 58004]))                  
                :type "int")
                nil [57958 58177])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Flax_plist_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58341 58356])
                    ("" variable (:type ("Slax_plist_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58357 58372])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58389 58393]))                  
                :type "int")
                nil [58317 58713])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Flax_plist_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59067 59082])
                    ("" variable (:type ("Slax_plist_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59083 59098])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59115 59119]))                  
                :type "int")
                nil [59043 59617])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Feql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60137 60142])
                    ("" variable (:type ("Seql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60143 60148])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60165 60169]))                  
                :type "int")
                nil [60123 60342])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fequal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60483 60490])
                    ("" variable (:type ("Sequal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60491 60498])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60515 60519]))                  
                :type "int")
                nil [60467 60932])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fequal_including_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61043 61071])
                    ("" variable (:type ("Sequal_including_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61072 61100])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61117 61121]))                  
                :type "int")
                nil [61006 61343])
            ("equal_no_quit" function
               (:arguments 
                  ( ("o1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61641 61656])
                    ("o2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61657 61672]))                  
                :type "bool")
                nil [61621 61734])
            ("internal_equal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("o1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62306 62321])
                    ("o2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62322 62337])
                    ("equal_kind" variable (:type ("equal_kind" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [62338 62365])
                    ("depth" variable (:type "int") (reparse-symbol arg-sub-list) [62368 62378])
                    ("ht" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62379 62394]))                  
                :type "bool")
                nil [62278 66398])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffillarray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66422 66433])
                    ("" variable (:type ("Sfillarray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66434 66445])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66462 66466]))                  
                :type "int")
                nil [66402 66608])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fclear_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67782 67796])
                    ("" variable (:type ("Sclear_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67797 67811])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67835 67839]))                  
                :type "int")
                nil [67759 67953])
            ("nconc2" function
               (:arguments 
                  ( ("s1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68177 68192])
                    ("s2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68193 68208]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [68157 68245])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fnconc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68263 68270])
                    ("" variable (:type ("Snconc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68271 68278])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68282 68287])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68298 68302]))                  
                :type "int")
                nil [68247 68489])
            ("mapcar1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("leni" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69346 69361])
                    ("vals" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69362 69380])
                    ("fn" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69381 69396])
                    ("seq" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69397 69413]))                  
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [69320 70371])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmapconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70393 70404])
                    ("" variable (:type ("Smapconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70405 70416])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70433 70437]))                  
                :type "int")
                nil [70373 70792])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmapcar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71431 71439])
                    ("" variable (:type ("Smapcar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71440 71448])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71465 71469]))                  
                :type "int")
                nil [71414 71709])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmapc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72065 72071])
                    ("" variable (:type ("Smapc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72072 72078])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72095 72099]))                  
                :type "int")
                nil [72050 72347])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmapcan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72574 72582])
                    ("" variable (:type ("Smapcan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72583 72591])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72608 72612]))                  
                :type "int")
                nil [72557 72837])
            ("do_yes_or_no_p" function
               (:arguments 
                  ( ("prompt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73294 73313]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [73266 73366])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fyes_or_no_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73390 73403])
                    ("" variable (:type ("Syes_or_no_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73404 73417])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73434 73438]))                  
                :type "int")
                nil [73368 73891])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fload_average" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74895 74909])
                    ("" variable (:type ("Sload_average" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74910 74924])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74941 74945]))                  
                :type "int")
                nil [74872 75591])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Ffeaturep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76001 76011])
                    ("" variable (:type ("Sfeaturep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76012 76022])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76039 76043]))                  
                :type "int")
                nil [75982 76470])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fprovide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76722 76731])
                    ("" variable (:type ("Sprovide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76732 76741])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76758 76762]))                  
                :type "int")
                nil [76704 77007])
            ("require_nesting_list" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [77705 77745])
            ("require_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("old_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77775 77797]))                  
                :type "void")
                nil [77747 77837])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Frequire" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77857 77866])
                    ("" variable (:type ("Srequire" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77867 77876])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77893 77897]))                  
                :type "int")
                nil [77839 78794])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fplist_member" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81783 81797])
                    ("" variable (:type ("Splist_member" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81798 81812])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81829 81833]))                  
                :type "int")
                nil [81760 82207])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fwidget_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82521 82533])
                    ("" variable (:type ("Swidget_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82534 82546])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82563 82567]))                  
                :type "int")
                nil [82500 82725])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fwidget_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82856 82868])
                    ("" variable (:type ("Swidget_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82869 82881])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82898 82902]))                  
                :type "int")
                nil [82835 83086])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fwidget_apply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83453 83467])
                    ("" variable (:type ("Swidget_apply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83468 83482])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83486 83491])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83502 83506]))                  
                :type "int")
                nil [83430 83713])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Flocale_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84069 84082])
                    ("" variable (:type ("Slocale_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84083 84096])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84113 84117]))                  
                :type "int")
                nil [84047 84855])
            ("MIME_LINE_LENGTH" variable (:constant-flag t) nil [86630 86646])
            ("IS_ASCII" variable (:constant-flag t) nil [86659 86667])
            ("IS_BASE64" variable (:constant-flag t) nil [86711 86720])
            ("IS_BASE64_IGNORABLE" variable (:constant-flag t) nil [86807 86826])
            ("READ_QUADRUPLET_BYTE" variable (:constant-flag t) nil [87111 87131])
            ("base64_value_to_char" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',	/*  0- 9 */
  'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',	/* 10-19 */
  'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd',	/* 20-29 */
  'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',	/* 30-39 */
  'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',	/* 40-49 */
  'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7',	/* 50-59 */
  '8', '9', '+', '/'					/* 60-63 */
}"
                :type "char")
                nil [87409 87879])
            ("base64_char_to_value" variable
               (:dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,	/*   0-  9 */
  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,	/*  10- 19 */
  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,	/*  20- 29 */
  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,	/*  30- 39 */
  -1,  -1,  -1,  62,  -1,  -1,  -1,  63,  52,  53,	/*  40- 49 */
  54,  55,  56,  57,  58,  59,  60,  61,  -1,  -1,	/*  50- 59 */
  -1,  -1,  -1,  -1,  -1,  0,   1,   2,   3,   4,	/*  60- 69 */
  5,   6,   7,   8,   9,   10,  11,  12,  13,  14,	/*  70- 79 */
  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,	/*  80- 89 */
  25,  -1,  -1,  -1,  -1,  -1,  -1,  26,  27,  28,	/*  90- 99 */
  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,	/* 100-109 */
  39,  40,  41,  42,  43,  44,  45,  46,  47,  48,	/* 110-119 */
  49,  50,  51,  -1,  -1,  -1,  -1,  -1			/* 120-127 */
}"
                :type "short")
                nil [87937 88823])
            ("base64_encode_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [89521 89534])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [89535 89542])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89543 89553])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [89554 89559])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [89560 89565]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [89487 89566])
            ("base64_decode_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [89601 89614])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [89615 89622])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89623 89633])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [89634 89639])
                    ("" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [89646 89658]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [89567 89659])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbase64_encode_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89692 89714])
                    ("" variable (:type ("Sbase64_encode_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89715 89737])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89763 89767]))                  
                :type "int")
                nil [89661 90012])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbase64_encode_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91738 91760])
                    ("" variable (:type ("Sbase64_encode_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91761 91783])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91807 91811]))                  
                :type "int")
                nil [91707 92002])
            ("base64_encode_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("from" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [93000 93017])
                    ("to" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [93018 93027])
                    ("length" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [93028 93045])
                    ("line_break" variable (:type "bool") (reparse-symbol arg-sub-list) [93049 93065])
                    ("multibyte" variable (:type "bool") (reparse-symbol arg-sub-list) [93066 93081]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [92966 94734])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbase64_decode_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94768 94790])
                    ("" variable (:type ("Sbase64_decode_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94791 94813])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [94839 94843]))                  
                :type "int")
                nil [94737 95050])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbase64_decode_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96878 96900])
                    ("" variable (:type ("Sbase64_decode_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96901 96923])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96947 96951]))                  
                :type "int")
                nil [96847 97026])
            ("base64_decode_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("from" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [97977 97994])
                    ("to" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [97995 98004])
                    ("length" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [98005 98022])
                    ("multibyte" variable (:type "bool") (reparse-symbol arg-sub-list) [98026 98041])
                    ("nchars_return" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [98042 98067]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [97943 99470])
            ("weak_hash_tables" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("Lisp_Hash_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [100461 100509])
            ("CHECK_HASH_TABLE" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100711 100725]))                  
                :type "void")
                nil [100681 100780])
            ("set_hash_key_and_value" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [100818 100844])
                    ("key_and_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100845 100871]))                  
                :type "void")
                nil [100782 100911])
            ("set_hash_next" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [100939 100965])
                    ("next" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100966 100983]))                  
                :type "void")
                nil [100912 101005])
            ("set_hash_next_slot" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [101038 101064])
                    ("idx" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101065 101079])
                    ("val" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101080 101094]))                  
                :type "void")
                nil [101006 101143])
            ("set_hash_hash" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [101171 101197])
                    ("hash" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101198 101215]))                  
                :type "void")
                nil [101144 101237])
            ("set_hash_hash_slot" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [101270 101296])
                    ("idx" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101297 101311])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101312 101328]))                  
                :type "void")
                nil [101238 101363])
            ("set_hash_index" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [101392 101418])
                    ("index" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101419 101437]))                  
                :type "void")
                nil [101364 101461])
            ("set_hash_index_slot" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [101495 101521])
                    ("idx" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101522 101536])
                    ("val" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101537 101551]))                  
                :type "void")
                nil [101462 101601])
            ("check_hash_table" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101770 101786]))                  
                :type ("Lisp_Hash_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [101720 101844])
            ("next_almost_prime" function
               (:arguments 
                  ( ("n" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102089 102101]))                  
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [102060 102236])
            ("get_key_arg" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102573 102589])
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [102590 102606])
                    ("args" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [102607 102625])
                    ("used" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [102626 102637]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [102543 102806])
            ("larger_vecalloc" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103127 103143])
                    ("incr_min" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103144 103163])
                    ("nitems_max" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103164 103185]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103091 103868])
            ("larger_vector" function
               (:arguments 
                  ( ("vec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103970 103986])
                    ("incr_min" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103987 104006])
                    ("nitems_max" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104007 104028]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [103943 104264])
            ("HASH_NEXT" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [104559 104585])
                    ("idx" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104586 104600]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [104531 104641])
            ("HASH_INDEX" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [104813 104839])
                    ("idx" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104840 104854]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [104784 104896])
            ("cmpfn_eql" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [105079 105106])
                    ("key1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105111 105128])
                    ("key2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105133 105150]))                  
                :type "bool")
                nil [105056 105247])
            ("cmpfn_equal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [105435 105462])
                    ("key1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105469 105486])
                    ("key2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105493 105510]))                  
                :type "bool")
                nil [105410 105552])
            ("cmpfn_user_defined" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [105761 105788])
                    ("key1" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105795 105812])
                    ("key2" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105819 105836]))                  
                :type "bool")
                nil [105729 105900])
            ("hashfn_eq" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [106095 106122])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106123 106139]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [106066 106179])
            ("hashfn_equal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [106380 106407])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106408 106424]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [106348 106454])
            ("hashfn_eql" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [106651 106678])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106679 106695]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [106621 106769])
            ("hashfn_user_defined" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ht" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [106994 107021])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107022 107038]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [106955 107131])
            ("hashtest_eq" variable
               (:default-value "{ LISPSYM_INITIALLY (Qeq), LISPSYM_INITIALLY (Qnil),
		  LISPSYM_INITIALLY (Qnil), 0, hashfn_eq }"
                :type ("hash_table_test" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [107133 107540])
            ("hashtest_eql" variable
               (:default-value "{ LISPSYM_INITIALLY (Qeql), LISPSYM_INITIALLY (Qnil),
		   LISPSYM_INITIALLY (Qnil), cmpfn_eql, hashfn_eql }"
                :type ("hash_table_test" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [107133 107540])
            ("hashtest_equal" variable
               (:default-value "{ LISPSYM_INITIALLY (Qequal), LISPSYM_INITIALLY (Qnil),
		     LISPSYM_INITIALLY (Qnil), cmpfn_equal, hashfn_equal }"
                :type ("hash_table_test" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [107133 107540])
            ("allocate_hash_table" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [107646 107651]))                  
                :type ("Lisp_Hash_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [107593 107740])
            ("INDEX_SIZE_BOUND" variable (:constant-flag t) nil [107865 107881])
            ("make_hash_table" function
               (:arguments 
                  ( ("test" variable (:type ("hash_table_test" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [109131 109159])
                    ("size" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109160 109175])
                    ("rehash_size" variable (:type "float") (reparse-symbol arg-sub-list) [109179 109197])
                    ("rehash_threshold" variable (:type "float") (reparse-symbol arg-sub-list) [109198 109221])
                    ("weak" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109225 109242])
                    ("pure" variable (:type "bool") (reparse-symbol arg-sub-list) [109243 109253]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [109102 110830])
            ("copy_hash_table" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h1" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [110971 110998]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110935 111498])
            ("maybe_resize_hash_table" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [111659 111685]))                  
                :type "void")
                nil [111622 113976])
            ("hash_lookup" function
               (:arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [114176 114202])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114203 114219])
                    ("hash" variable
                       (:pointer 1
                        :type ("EMACS_UINT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [114220 114237]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [114153 114728])
            ("hash_put" function
               (:arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [114927 114953])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114954 114970])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114971 114989])
                    ("hash" variable (:type ("EMACS_UINT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [114993 115009]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [114907 115672])
            ("hash_remove_from_table" function
               (:arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [115778 115804])
                    ("key" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [115805 115821]))                  
                :type "void")
                nil [115749 116800])
            ("hash_clear" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [116855 116881]))                  
                :type "void")
                nil [116831 117299])
            ("sweep_weak_table" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("Lisp_Hash_Table" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [117731 117757])
                    ("remove_entries_p" variable (:type "bool") (reparse-symbol arg-sub-list) [117758 117780]))                  
                :type "bool")
                nil [117701 119570])
            ("sweep_weak_hash_tables" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [119830 119835]))                  
                :type "void")
                nil [119801 120910])
            ("SXHASH_MAX_DEPTH" variable (:constant-flag t) nil [121160 121176])
            ("SXHASH_MAX_LEN" variable (:constant-flag t) nil [121273 121287])
            ("hash_string" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [121424 121440])
                    ("len" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [121441 121455]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [121400 121656])
            ("sxhash_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [121817 121833])
                    ("len" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [121834 121848]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [121784 121927])
            ("sxhash_float" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("val" variable (:type "double") (reparse-symbol arg-sub-list) [122017 122028]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [121985 122420])
            ("sxhash_list" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122588 122605])
                    ("depth" variable (:type "int") (reparse-symbol arg-sub-list) [122606 122616]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [122557 123032])
            ("sxhash_vector" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [123171 123187])
                    ("depth" variable (:type "int") (reparse-symbol arg-sub-list) [123188 123198]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [123138 123497])
            ("sxhash_bool_vector" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [123583 123599]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [123545 123858])
            ("sxhash" function
               (:arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [124020 124036])
                    ("depth" variable (:type "int") (reparse-symbol arg-sub-list) [124037 124047]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [124001 125189])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsxhash_eq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125384 125395])
                    ("" variable (:type ("Ssxhash_eq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125396 125407])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125424 125428]))                  
                :type "int")
                nil [125364 125562])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsxhash_eql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125635 125647])
                    ("" variable (:type ("Ssxhash_eql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125648 125660])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125677 125681]))                  
                :type "int")
                nil [125614 125819])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsxhash_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125895 125909])
                    ("" variable (:type ("Ssxhash_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125910 125924])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125941 125945]))                  
                :type "int")
                nil [125872 126091])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmake_hash_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126172 126189])
                    ("" variable (:type ("Smake_hash_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126190 126207])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126211 126216])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126227 126231]))                  
                :type "int")
                nil [126146 127857])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcopy_hash_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130902 130919])
                    ("" variable (:type ("Scopy_hash_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130920 130937])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130954 130958]))                  
                :type "int")
                nil [130876 131023])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_count" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131110 131128])
                    ("" variable (:type ("Shash_table_count" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131129 131147])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131164 131168]))                  
                :type "int")
                nil [131083 131238])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_rehash_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131334 131358])
                    ("" variable (:type ("Shash_table_rehash_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131366 131390])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131407 131411]))                  
                :type "int")
                nil [131301 131482])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_rehash_threshold" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131764 131793])
                    ("" variable (:type ("Shash_table_rehash_threshold" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131801 131830])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [131847 131851]))                  
                :type "int")
                nil [131726 131927])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132026 132043])
                    ("" variable (:type ("Shash_table_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132044 132061])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132078 132082]))                  
                :type "int")
                nil [132000 132291])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132424 132441])
                    ("" variable (:type ("Shash_table_test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132442 132459])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132476 132480]))                  
                :type "int")
                nil [132398 132538])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_weakness" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132621 132642])
                    ("" variable (:type ("Shash_table_weakness" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132643 132664])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132688 132692]))                  
                :type "int")
                nil [132591 132752])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fhash_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132823 132837])
                    ("" variable (:type ("Shash_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132838 132852])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132869 132873]))                  
                :type "int")
                nil [132800 132946])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fclrhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133012 133021])
                    ("" variable (:type ("Sclrhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133022 133031])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133048 133052]))                  
                :type "int")
                nil [132994 133120])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fgethash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133298 133307])
                    ("" variable (:type ("Sgethash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133308 133317])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133334 133338]))                  
                :type "int")
                nil [133280 133513])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fputhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133682 133691])
                    ("" variable (:type ("Sputhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133692 133701])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133718 133722]))                  
                :type "int")
                nil [133664 133936])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fremhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134227 134236])
                    ("" variable (:type ("Sremhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134237 134246])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134263 134267]))                  
                :type "int")
                nil [134209 134337])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmaphash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134495 134504])
                    ("" variable (:type ("Smaphash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134505 134514])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134531 134535]))                  
                :type "int")
                nil [134477 134722])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdefine_hash_table_test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [134983 135007])
                    ("" variable (:type ("Sdefine_hash_table_test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [135015 135039])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [135056 135060]))                  
                :type "int")
                nil [134950 135638])
            ("md5.h" include nil nil [135882 135898])
            ("sha1.h" include nil nil [135899 135916])
            ("sha256.h" include nil nil [135917 135936])
            ("sha512.h" include nil nil [135937 135956])
            ("make_digest_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("digest" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [135997 136016])
                    ("digest_size" variable (:type "int") (reparse-symbol arg-sub-list) [136017 136033]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [135958 136309])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsecure_hash_algorithms" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136344 136368])
                    ("" variable (:type ("Ssecure_hash_algorithms" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136376 136400])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136417 136421]))                  
                :type "int")
                nil [136311 136498])
            ("extract_data_from_object" function
               (:pointer 1
                :arguments 
                  ( ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136952 136969])
                    ("start_byte" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [136996 137018])
                    ("end_byte" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [137045 137065]))                  
                :type "char")
                nil [136919 141740])
            ("secure_hash" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("algorithm" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141834 141856])
                    ("object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141857 141876])
                    ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141877 141895])
                    ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141902 141918])
                    ("coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141919 141945])
                    ("noerror" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141946 141966])
                    ("binary" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141973 141992]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141802 143577])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmd5" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143593 143598])
                    ("" variable (:type ("Smd5" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143599 143604])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143621 143625]))                  
                :type "int")
                nil [143579 144925])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fsecure_hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145032 145045])
                    ("" variable (:type ("Ssecure_hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145046 145059])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145076 145080]))                  
                :type "int")
                nil [145010 145627])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbuffer_hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145729 145742])
                    ("" variable (:type ("Sbuffer_hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145743 145756])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145773 145777]))                  
                :type "int")
                nil [145707 145997])
            ("syms_of_fns" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [146849 146854]))                  
                :type "void")
                nil [146831 152327]))          
      :file "fns.c"
      :pointmax 152328
      :fsize 152327
      :lastmodtime '(23150 33450 0 0)
      :unmatched-syntax '((semantic-list 145998 . 146827) (punctuation 145776 . 145777) (number 145763 . 145764) (number 145760 . 145761) (number 145757 . 145758) (string 145714 . 145727) (semantic-list 145628 . 145705) (punctuation 145079 . 145080) (number 145066 . 145067) (number 145063 . 145064) (number 145060 . 145061) (string 145017 . 145030) (semantic-list 144926 . 145008) (punctuation 143624 . 143625) (number 143611 . 143612) (number 143608 . 143609) (number 143605 . 143606) (string 143586 . 143591) (semantic-list 136499 . 136682) (punctuation 136420 . 136421) (number 136407 . 136408) (number 136404 . 136405) (number 136401 . 136402) (string 136318 . 136342) (semantic-list 135639 . 135702) (punctuation 135059 . 135060) (number 135046 . 135047) (number 135043 . 135044) (number 135040 . 135041) (string 134957 . 134981) (semantic-list 134723 . 134947) (punctuation 134534 . 134535) (number 134521 . 134522) (number 134518 . 134519) (number 134515 . 134516) (string 134484 . 134493) (semantic-list 134338 . 134474) (punctuation 134266 . 134267) (number 134253 . 134254) (number 134250 . 134251) (number 134247 . 134248) (string 134216 . 134225) (semantic-list 133937 . 134206) (punctuation 133721 . 133722) (number 133708 . 133709) (number 133705 . 133706) (number 133702 . 133703) (string 133671 . 133680) (semantic-list 133514 . 133661) (punctuation 133337 . 133338) (number 133324 . 133325) (number 133321 . 133322) (number 133318 . 133319) (string 133287 . 133296) (semantic-list 133121 . 133277) (punctuation 133051 . 133052) (number 133038 . 133039) (number 133035 . 133036) (number 133032 . 133033) (string 133001 . 133010) (semantic-list 132947 . 132991) (punctuation 132872 . 132873) (number 132859 . 132860) (number 132856 . 132857) (number 132853 . 132854) (string 132807 . 132821) (semantic-list 132753 . 132797) (punctuation 132691 . 132692) (number 132678 . 132679) (number 132675 . 132676) (number 132672 . 132673) (string 132598 . 132619) (semantic-list 132539 . 132588) (punctuation 132479 . 132480) (number 132466 . 132467) (number 132463 . 132464) (number 132460 . 132461) (string 132405 . 132422) (semantic-list 132292 . 132395) (punctuation 132081 . 132082) (number 132068 . 132069) (number 132065 . 132066) (number 132062 . 132063) (string 132007 . 132024) (semantic-list 131928 . 131997) (punctuation 131850 . 131851) (number 131837 . 131838) (number 131834 . 131835) (number 131831 . 131832) (string 131733 . 131762) (semantic-list 131483 . 131723) (punctuation 131410 . 131411) (number 131397 . 131398) (number 131394 . 131395) (number 131391 . 131392) (string 131308 . 131332) (semantic-list 131239 . 131298) (punctuation 131167 . 131168) (number 131154 . 131155) (number 131151 . 131152) (number 131148 . 131149) (string 131090 . 131108) (semantic-list 131024 . 131080) (punctuation 130957 . 130958) (number 130944 . 130945) (number 130941 . 130942) (number 130938 . 130939) (string 130883 . 130900) (semantic-list 127858 . 130873) (punctuation 126230 . 126231) (number 126217 . 126218) (number 126208 . 126209) (string 126153 . 126170) (semantic-list 126092 . 126144) (punctuation 125944 . 125945) (number 125931 . 125932) (number 125928 . 125929) (number 125925 . 125926) (string 125879 . 125893) (semantic-list 125820 . 125870) (punctuation 125680 . 125681) (number 125667 . 125668) (number 125664 . 125665) (number 125661 . 125662) (string 125621 . 125633) (semantic-list 125563 . 125612) (punctuation 125427 . 125428) (number 125414 . 125415) (number 125411 . 125412) (number 125408 . 125409) (string 125371 . 125382) (symbol 119761 . 119770) (semantic-list 97027 . 97715) (punctuation 96950 . 96951) (number 96937 . 96938) (number 96934 . 96935) (number 96931 . 96932) (string 96854 . 96876) (semantic-list 95051 . 96845) (punctuation 94842 . 94843) (string 94827 . 94830) (number 94824 . 94825) (number 94821 . 94822) (string 94744 . 94766) (semantic-list 92003 . 92964) (punctuation 91810 . 91811) (number 91797 . 91798) (number 91794 . 91795) (number 91791 . 91792) (string 91714 . 91736) (semantic-list 90013 . 91705) (punctuation 89766 . 89767) (string 89751 . 89754) (number 89748 . 89749) (number 89745 . 89746) (string 89668 . 89690) (semantic-list 84856 . 86535) (punctuation 84116 . 84117) (number 84103 . 84104) (number 84100 . 84101) (number 84097 . 84098) (string 84054 . 84067) (semantic-list 83714 . 83986) (punctuation 83505 . 83506) (number 83492 . 83493) (number 83483 . 83484) (string 83437 . 83451) (semantic-list 83087 . 83428) (punctuation 82901 . 82902) (number 82888 . 82889) (number 82885 . 82886) (number 82882 . 82883) (string 82842 . 82854) (semantic-list 82726 . 82833) (punctuation 82566 . 82567) (number 82553 . 82554) (number 82550 . 82551) (number 82547 . 82548) (string 82507 . 82519) (semantic-list 82208 . 82498) (punctuation 81832 . 81833) (number 81819 . 81820) (number 81816 . 81817) (number 81813 . 81814) (string 81767 . 81781) (semantic-list 78795 . 81393) (punctuation 77896 . 77897) (number 77883 . 77884) (number 77880 . 77881) (number 77877 . 77878) (string 77846 . 77855) (semantic-list 77008 . 77594) (punctuation 76761 . 76762) (number 76748 . 76749) (number 76745 . 76746) (number 76742 . 76743) (string 76711 . 76720) (semantic-list 76471 . 76702) (punctuation 76042 . 76043) (number 76029 . 76030) (number 76026 . 76027) (number 76023 . 76024) (string 75989 . 75999) (semantic-list 75592 . 75979) (punctuation 74944 . 74945) (number 74931 . 74932) (number 74928 . 74929) (number 74925 . 74926) (string 74879 . 74893) (semantic-list 73892 . 74869) (punctuation 73437 . 73438) (number 73424 . 73425) (number 73421 . 73422) (number 73418 . 73419) (string 73375 . 73388) (semantic-list 72838 . 73177) (punctuation 72611 . 72612) (number 72598 . 72599) (number 72595 . 72596) (number 72592 . 72593) (string 72564 . 72572) (semantic-list 72348 . 72555) (punctuation 72098 . 72099) (number 72085 . 72086) (number 72082 . 72083) (number 72079 . 72080) (string 72057 . 72063) (semantic-list 71710 . 72048) (punctuation 71468 . 71469) (number 71455 . 71456) (number 71452 . 71453) (number 71449 . 71450) (string 71421 . 71429) (semantic-list 70793 . 71412) (punctuation 70436 . 70437) (number 70423 . 70424) (number 70420 . 70421) (number 70417 . 70418) (string 70380 . 70391) (semantic-list 68490 . 68941) (punctuation 68301 . 68302) (number 68288 . 68289) (number 68279 . 68280) (string 68254 . 68261) (semantic-list 67954 . 68139) (punctuation 67838 . 67839) (number 67825 . 67826) (number 67822 . 67823) (number 67819 . 67820) (string 67766 . 67780) (semantic-list 66609 . 67757) (punctuation 66465 . 66466) (number 66452 . 66453) (number 66449 . 66450) (number 66446 . 66447) (string 66409 . 66420) (semantic-list 61344 . 61435) (punctuation 61120 . 61121) (number 61107 . 61108) (number 61104 . 61105) (number 61101 . 61102) (string 61013 . 61041) (semantic-list 60933 . 61004) (punctuation 60518 . 60519) (number 60505 . 60506) (number 60502 . 60503) (number 60499 . 60500) (string 60474 . 60481) (semantic-list 60343 . 60465) (punctuation 60168 . 60169) (number 60155 . 60156) (number 60152 . 60153) (number 60149 . 60150) (string 60130 . 60135) (semantic-list 59618 . 60120) (punctuation 59118 . 59119) (number 59105 . 59106) (number 59102 . 59103) (number 59099 . 59100) (string 59050 . 59065) (semantic-list 58714 . 59041) (punctuation 58392 . 58393) (number 58379 . 58380) (number 58376 . 58377) (number 58373 . 58374) (string 58324 . 58339) (semantic-list 58178 . 58314) (punctuation 58003 . 58004) (number 57990 . 57991) (number 57987 . 57988) (number 57984 . 57985) (string 57965 . 57970) (semantic-list 57413 . 57956) (punctuation 56931 . 56932) (number 56918 . 56919) (number 56915 . 56916) (number 56912 . 56913) (string 56875 . 56886) (semantic-list 56598 . 56866) (punctuation 56429 . 56430) (number 56416 . 56417) (number 56413 . 56414) (number 56410 . 56411) (string 56391 . 56396) (semantic-list 56124 . 56382) (punctuation 55787 . 55788) (number 55774 . 55775) (number 55771 . 55772) (number 55768 . 55769) (string 55731 . 55742) (semantic-list 54740 . 54941) (punctuation 54412 . 54413) (number 54399 . 54400) (number 54396 . 54397) (number 54393 . 54394) (string 54371 . 54377) (semantic-list 49724 . 51003) (punctuation 49577 . 49578) (number 49564 . 49565) (number 49561 . 49562) (number 49558 . 49559) (string 49527 . 49536) (semantic-list 48421 . 49518) (punctuation 48223 . 48224) (number 48210 . 48211) (number 48207 . 48208) (number 48204 . 48205) (string 48170 . 48180) (semantic-list 46229 . 48161) (punctuation 45594 . 45595) (number 45581 . 45582) (number 45578 . 45579) (number 45575 . 45576) (string 45547 . 45555) (semantic-list 45233 . 45538) (punctuation 44755 . 44756) (number 44742 . 44743) (number 44739 . 44740) (number 44736 . 44737) (string 44714 . 44720) (semantic-list 44455 . 44704) (punctuation 44270 . 44271) (number 44257 . 44258) (number 44254 . 44255) (number 44251 . 44252) (string 44223 . 44231) (semantic-list 44028 . 44214) (punctuation 43850 . 43851) (number 43837 . 43838) (number 43834 . 43835) (number 43831 . 43832) (string 43806 . 43813) (semantic-list 42995 . 43324) (punctuation 42725 . 42726) (number 42712 . 42713) (number 42709 . 42710) (number 42706 . 42707) (string 42681 . 42688) (semantic-list 42150 . 42336) (punctuation 41922 . 41923) (number 41909 . 41910) (number 41906 . 41907) (number 41903 . 41904) (string 41881 . 41887) (semantic-list 41606 . 41872) (punctuation 41427 . 41428) (number 41414 . 41415) (number 41411 . 41412) (number 41408 . 41409) (string 41383 . 41390) (semantic-list 41225 . 41374) (punctuation 41047 . 41048) (number 41034 . 41035) (number 41031 . 41032) (number 41028 . 41029) (string 41006 . 41012) (semantic-list 40835 . 40997) (punctuation 40654 . 40655) (number 40641 . 40642) (number 40638 . 40639) (number 40635 . 40636) (string 40607 . 40615) (semantic-list 40363 . 40598) (punctuation 40265 . 40266) (number 40252 . 40253) (number 40249 . 40250) (number 40246 . 40247) (string 40227 . 40232) (semantic-list 40180 . 40218) (punctuation 40038 . 40039) (number 40025 . 40026) (number 40022 . 40023) (number 40019 . 40020) (string 40000 . 40005) (semantic-list 39734 . 39991) (punctuation 39643 . 39644) (number 39630 . 39631) (number 39627 . 39628) (number 39624 . 39625) (string 39596 . 39604) (semantic-list 38314 . 38799) (punctuation 37879 . 37880) (number 37866 . 37867) (number 37863 . 37864) (number 37860 . 37861) (string 37781 . 37806) (semantic-list 37072 . 37771) (punctuation 36385 . 36386) (number 36372 . 36373) (number 36369 . 36370) (number 36366 . 36367) (string 36329 . 36340) (semantic-list 35183 . 35470) (punctuation 34864 . 34865) (number 34851 . 34852) (number 34848 . 34849) (number 34845 . 34846) (string 34805 . 34817) (semantic-list 34367 . 34794) (punctuation 33998 . 33999) (number 33985 . 33986) (number 33982 . 33983) (number 33979 . 33980) (string 33911 . 33930) (semantic-list 33834 . 33902) (punctuation 33313 . 33314) (number 33300 . 33301) (number 33297 . 33298) (number 33294 . 33295) (string 33220 . 33241) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (semantic-list 61344 . 61435) (punctuation 61120 . 61121) (number 61107 . 61108) (number 61104 . 61105) (number 61101 . 61102) (string 61013 . 61041) (semantic-list 60933 . 61004) (punctuation 60518 . 60519) (number 60505 . 60506) (number 60502 . 60503) (number 60499 . 60500) (string 60474 . 60481) (semantic-list 60343 . 60465) (punctuation 60168 . 60169) (number 60155 . 60156) (number 60152 . 60153) (number 60149 . 60150) (string 60130 . 60135) (semantic-list 59618 . 60120) (punctuation 59118 . 59119) (number 59105 . 59106) (number 59102 . 59103) (number 59099 . 59100) (string 59050 . 59065) (semantic-list 58714 . 59041) (punctuation 58392 . 58393) (number 58379 . 58380) (number 58376 . 58377) (number 58373 . 58374) (string 58324 . 58339) (semantic-list 58178 . 58314) (punctuation 58003 . 58004) (number 57990 . 57991) (number 57987 . 57988) (number 57984 . 57985) (string 57965 . 57970) (semantic-list 57413 . 57956) (punctuation 56931 . 56932) (number 56918 . 56919) (number 56915 . 56916) (number 56912 . 56913) (string 56875 . 56886) (semantic-list 56598 . 56866) (punctuation 56429 . 56430) (number 56416 . 56417) (number 56413 . 56414) (number 56410 . 56411) (string 56391 . 56396) (semantic-list 56124 . 56382) (punctuation 55787 . 55788) (number 55774 . 55775) (number 55771 . 55772) (number 55768 . 55769) (string 55731 . 55742) (semantic-list 54740 . 54941) (punctuation 54412 . 54413) (number 54399 . 54400) (number 54396 . 54397) (number 54393 . 54394) (string 54371 . 54377) (semantic-list 49724 . 51003) (punctuation 49577 . 49578) (number 49564 . 49565) (number 49561 . 49562) (number 49558 . 49559) (string 49527 . 49536) (semantic-list 48421 . 49518) (punctuation 48223 . 48224) (number 48210 . 48211) (number 48207 . 48208) (number 48204 . 48205) (string 48170 . 48180) (semantic-list 46229 . 48161) (punctuation 45594 . 45595) (number 45581 . 45582) (number 45578 . 45579) (number 45575 . 45576) (string 45547 . 45555) (semantic-list 45233 . 45538) (punctuation 44755 . 44756) (number 44742 . 44743) (number 44739 . 44740) (number 44736 . 44737) (string 44714 . 44720) (semantic-list 44455 . 44704) (punctuation 44270 . 44271) (number 44257 . 44258) (number 44254 . 44255) (number 44251 . 44252) (string 44223 . 44231) (semantic-list 44028 . 44214) (punctuation 43850 . 43851) (number 43837 . 43838) (number 43834 . 43835) (number 43831 . 43832) (string 43806 . 43813) (semantic-list 42995 . 43324) (punctuation 42725 . 42726) (number 42712 . 42713) (number 42709 . 42710) (number 42706 . 42707) (string 42681 . 42688) (semantic-list 42150 . 42336) (punctuation 41922 . 41923) (number 41909 . 41910) (number 41906 . 41907) (number 41903 . 41904) (string 41881 . 41887) (semantic-list 41606 . 41872) (punctuation 41427 . 41428) (number 41414 . 41415) (number 41411 . 41412) (number 41408 . 41409) (string 41383 . 41390) (semantic-list 41225 . 41374) (punctuation 41047 . 41048) (number 41034 . 41035) (number 41031 . 41032) (number 41028 . 41029) (string 41006 . 41012) (semantic-list 40835 . 40997) (punctuation 40654 . 40655) (number 40641 . 40642) (number 40638 . 40639) (number 40635 . 40636) (string 40607 . 40615) (semantic-list 40363 . 40598) (punctuation 40265 . 40266) (number 40252 . 40253) (number 40249 . 40250) (number 40246 . 40247) (string 40227 . 40232) (semantic-list 40180 . 40218) (punctuation 40038 . 40039) (number 40025 . 40026) (number 40022 . 40023) (number 40019 . 40020) (string 40000 . 40005) (semantic-list 39734 . 39991) (punctuation 39643 . 39644) (number 39630 . 39631) (number 39627 . 39628) (number 39624 . 39625) (string 39596 . 39604) (semantic-list 38314 . 38799) (punctuation 37879 . 37880) (number 37866 . 37867) (number 37863 . 37864) (number 37860 . 37861) (string 37781 . 37806) (semantic-list 37072 . 37771) (punctuation 36385 . 36386) (number 36372 . 36373) (number 36369 . 36370) (number 36366 . 36367) (string 36329 . 36340) (semantic-list 35183 . 35470) (punctuation 34864 . 34865) (number 34851 . 34852) (number 34848 . 34849) (number 34845 . 34846) (string 34805 . 34817) (semantic-list 34367 . 34794) (punctuation 33998 . 33999) (number 33985 . 33986) (number 33982 . 33983) (number 33979 . 33980) (string 33911 . 33930) (semantic-list 33834 . 33902) (punctuation 33313 . 33314) (number 33300 . 33301) (number 33297 . 33298) (number 33294 . 33295) (string 33220 . 33241) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 33313 . 33314) (number 33300 . 33301) (number 33297 . 33298) (number 33294 . 33295) (string 33220 . 33241) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 54412 . 54413) (number 54399 . 54400) (number 54396 . 54397) (number 54393 . 54394) (string 54371 . 54377) (semantic-list 49724 . 51003) (punctuation 49577 . 49578) (number 49564 . 49565) (number 49561 . 49562) (number 49558 . 49559) (string 49527 . 49536) (semantic-list 48421 . 49518) (punctuation 48223 . 48224) (number 48210 . 48211) (number 48207 . 48208) (number 48204 . 48205) (string 48170 . 48180) (semantic-list 46229 . 48161) (punctuation 45594 . 45595) (number 45581 . 45582) (number 45578 . 45579) (number 45575 . 45576) (string 45547 . 45555) (semantic-list 45233 . 45538) (punctuation 44755 . 44756) (number 44742 . 44743) (number 44739 . 44740) (number 44736 . 44737) (string 44714 . 44720) (semantic-list 44455 . 44704) (punctuation 44270 . 44271) (number 44257 . 44258) (number 44254 . 44255) (number 44251 . 44252) (string 44223 . 44231) (semantic-list 44028 . 44214) (punctuation 43850 . 43851) (number 43837 . 43838) (number 43834 . 43835) (number 43831 . 43832) (string 43806 . 43813) (semantic-list 42995 . 43324) (punctuation 42725 . 42726) (number 42712 . 42713) (number 42709 . 42710) (number 42706 . 42707) (string 42681 . 42688) (semantic-list 42150 . 42336) (punctuation 41922 . 41923) (number 41909 . 41910) (number 41906 . 41907) (number 41903 . 41904) (string 41881 . 41887) (semantic-list 41606 . 41872) (punctuation 41427 . 41428) (number 41414 . 41415) (number 41411 . 41412) (number 41408 . 41409) (string 41383 . 41390) (semantic-list 41225 . 41374) (punctuation 41047 . 41048) (number 41034 . 41035) (number 41031 . 41032) (number 41028 . 41029) (string 41006 . 41012) (semantic-list 40835 . 40997) (punctuation 40654 . 40655) (number 40641 . 40642) (number 40638 . 40639) (number 40635 . 40636) (string 40607 . 40615) (semantic-list 40363 . 40598) (punctuation 40265 . 40266) (number 40252 . 40253) (number 40249 . 40250) (number 40246 . 40247) (string 40227 . 40232) (semantic-list 40180 . 40218) (punctuation 40038 . 40039) (number 40025 . 40026) (number 40022 . 40023) (number 40019 . 40020) (string 40000 . 40005) (semantic-list 39734 . 39991) (punctuation 39643 . 39644) (number 39630 . 39631) (number 39627 . 39628) (number 39624 . 39625) (string 39596 . 39604) (semantic-list 38314 . 38799) (punctuation 37879 . 37880) (number 37866 . 37867) (number 37863 . 37864) (number 37860 . 37861) (string 37781 . 37806) (semantic-list 37072 . 37771) (punctuation 36385 . 36386) (number 36372 . 36373) (number 36369 . 36370) (number 36366 . 36367) (string 36329 . 36340) (semantic-list 35183 . 35470) (punctuation 34864 . 34865) (number 34851 . 34852) (number 34848 . 34849) (number 34845 . 34846) (string 34805 . 34817) (semantic-list 34367 . 34794) (punctuation 33998 . 33999) (number 33985 . 33986) (number 33982 . 33983) (number 33979 . 33980) (string 33911 . 33930) (semantic-list 33834 . 33902) (punctuation 33313 . 33314) (number 33300 . 33301) (number 33297 . 33298) (number 33294 . 33295) (string 33220 . 33241) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (semantic-list 77008 . 77594) (punctuation 76761 . 76762) (number 76748 . 76749) (number 76745 . 76746) (number 76742 . 76743) (string 76711 . 76720) (semantic-list 76471 . 76702) (punctuation 76042 . 76043) (number 76029 . 76030) (number 76026 . 76027) (number 76023 . 76024) (string 75989 . 75999) (semantic-list 75592 . 75979) (punctuation 74944 . 74945) (number 74931 . 74932) (number 74928 . 74929) (number 74925 . 74926) (string 74879 . 74893) (semantic-list 73892 . 74869) (punctuation 73437 . 73438) (number 73424 . 73425) (number 73421 . 73422) (number 73418 . 73419) (string 73375 . 73388) (semantic-list 72838 . 73177) (punctuation 72611 . 72612) (number 72598 . 72599) (number 72595 . 72596) (number 72592 . 72593) (string 72564 . 72572) (semantic-list 72348 . 72555) (punctuation 72098 . 72099) (number 72085 . 72086) (number 72082 . 72083) (number 72079 . 72080) (string 72057 . 72063) (semantic-list 71710 . 72048) (punctuation 71468 . 71469) (number 71455 . 71456) (number 71452 . 71453) (number 71449 . 71450) (string 71421 . 71429) (semantic-list 70793 . 71412) (punctuation 70436 . 70437) (number 70423 . 70424) (number 70420 . 70421) (number 70417 . 70418) (string 70380 . 70391) (semantic-list 68490 . 68941) (punctuation 68301 . 68302) (number 68288 . 68289) (number 68279 . 68280) (string 68254 . 68261) (semantic-list 67954 . 68139) (punctuation 67838 . 67839) (number 67825 . 67826) (number 67822 . 67823) (number 67819 . 67820) (string 67766 . 67780) (semantic-list 66609 . 67757) (punctuation 66465 . 66466) (number 66452 . 66453) (number 66449 . 66450) (number 66446 . 66447) (string 66409 . 66420) (semantic-list 61344 . 61435) (punctuation 61120 . 61121) (number 61107 . 61108) (number 61104 . 61105) (number 61101 . 61102) (string 61013 . 61041) (semantic-list 60933 . 61004) (punctuation 60518 . 60519) (number 60505 . 60506) (number 60502 . 60503) (number 60499 . 60500) (string 60474 . 60481) (semantic-list 60343 . 60465) (punctuation 60168 . 60169) (number 60155 . 60156) (number 60152 . 60153) (number 60149 . 60150) (string 60130 . 60135) (semantic-list 59618 . 60120) (punctuation 59118 . 59119) (number 59105 . 59106) (number 59102 . 59103) (number 59099 . 59100) (string 59050 . 59065) (semantic-list 58714 . 59041) (punctuation 58392 . 58393) (number 58379 . 58380) (number 58376 . 58377) (number 58373 . 58374) (string 58324 . 58339) (semantic-list 58178 . 58314) (punctuation 58003 . 58004) (number 57990 . 57991) (number 57987 . 57988) (number 57984 . 57985) (string 57965 . 57970) (semantic-list 57413 . 57956) (punctuation 56931 . 56932) (number 56918 . 56919) (number 56915 . 56916) (number 56912 . 56913) (string 56875 . 56886) (semantic-list 56598 . 56866) (punctuation 56429 . 56430) (number 56416 . 56417) (number 56413 . 56414) (number 56410 . 56411) (string 56391 . 56396) (semantic-list 56124 . 56382) (punctuation 55787 . 55788) (number 55774 . 55775) (number 55771 . 55772) (number 55768 . 55769) (string 55731 . 55742) (semantic-list 54740 . 54941) (punctuation 54412 . 54413) (number 54399 . 54400) (number 54396 . 54397) (number 54393 . 54394) (string 54371 . 54377) (semantic-list 49724 . 51003) (punctuation 49577 . 49578) (number 49564 . 49565) (number 49561 . 49562) (number 49558 . 49559) (string 49527 . 49536) (semantic-list 48421 . 49518) (punctuation 48223 . 48224) (number 48210 . 48211) (number 48207 . 48208) (number 48204 . 48205) (string 48170 . 48180) (semantic-list 46229 . 48161) (punctuation 45594 . 45595) (number 45581 . 45582) (number 45578 . 45579) (number 45575 . 45576) (string 45547 . 45555) (semantic-list 45233 . 45538) (punctuation 44755 . 44756) (number 44742 . 44743) (number 44739 . 44740) (number 44736 . 44737) (string 44714 . 44720) (semantic-list 44455 . 44704) (punctuation 44270 . 44271) (number 44257 . 44258) (number 44254 . 44255) (number 44251 . 44252) (string 44223 . 44231) (semantic-list 44028 . 44214) (punctuation 43850 . 43851) (number 43837 . 43838) (number 43834 . 43835) (number 43831 . 43832) (string 43806 . 43813) (semantic-list 42995 . 43324) (punctuation 42725 . 42726) (number 42712 . 42713) (number 42709 . 42710) (number 42706 . 42707) (string 42681 . 42688) (semantic-list 42150 . 42336) (punctuation 41922 . 41923) (number 41909 . 41910) (number 41906 . 41907) (number 41903 . 41904) (string 41881 . 41887) (semantic-list 41606 . 41872) (punctuation 41427 . 41428) (number 41414 . 41415) (number 41411 . 41412) (number 41408 . 41409) (string 41383 . 41390) (semantic-list 41225 . 41374) (punctuation 41047 . 41048) (number 41034 . 41035) (number 41031 . 41032) (number 41028 . 41029) (string 41006 . 41012) (semantic-list 40835 . 40997) (punctuation 40654 . 40655) (number 40641 . 40642) (number 40638 . 40639) (number 40635 . 40636) (string 40607 . 40615) (semantic-list 40363 . 40598) (punctuation 40265 . 40266) (number 40252 . 40253) (number 40249 . 40250) (number 40246 . 40247) (string 40227 . 40232) (semantic-list 40180 . 40218) (punctuation 40038 . 40039) (number 40025 . 40026) (number 40022 . 40023) (number 40019 . 40020) (string 40000 . 40005) (semantic-list 39734 . 39991) (punctuation 39643 . 39644) (number 39630 . 39631) (number 39627 . 39628) (number 39624 . 39625) (string 39596 . 39604) (semantic-list 38314 . 38799) (punctuation 37879 . 37880) (number 37866 . 37867) (number 37863 . 37864) (number 37860 . 37861) (string 37781 . 37806) (semantic-list 37072 . 37771) (punctuation 36385 . 36386) (number 36372 . 36373) (number 36369 . 36370) (number 36366 . 36367) (string 36329 . 36340) (semantic-list 35183 . 35470) (punctuation 34864 . 34865) (number 34851 . 34852) (number 34848 . 34849) (number 34845 . 34846) (string 34805 . 34817) (semantic-list 34367 . 34794) (punctuation 33998 . 33999) (number 33985 . 33986) (number 33982 . 33983) (number 33979 . 33980) (string 33911 . 33930) (semantic-list 33834 . 33902) (punctuation 33313 . 33314) (number 33300 . 33301) (number 33297 . 33298) (number 33294 . 33295) (string 33220 . 33241) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (semantic-list 68490 . 68941) (punctuation 68301 . 68302) (number 68288 . 68289) (number 68279 . 68280) (string 68254 . 68261) (semantic-list 67954 . 68139) (punctuation 67838 . 67839) (number 67825 . 67826) (number 67822 . 67823) (number 67819 . 67820) (string 67766 . 67780) (semantic-list 66609 . 67757) (punctuation 66465 . 66466) (number 66452 . 66453) (number 66449 . 66450) (number 66446 . 66447) (string 66409 . 66420) (semantic-list 61344 . 61435) (punctuation 61120 . 61121) (number 61107 . 61108) (number 61104 . 61105) (number 61101 . 61102) (string 61013 . 61041) (semantic-list 60933 . 61004) (punctuation 60518 . 60519) (number 60505 . 60506) (number 60502 . 60503) (number 60499 . 60500) (string 60474 . 60481) (semantic-list 60343 . 60465) (punctuation 60168 . 60169) (number 60155 . 60156) (number 60152 . 60153) (number 60149 . 60150) (string 60130 . 60135) (semantic-list 59618 . 60120) (punctuation 59118 . 59119) (number 59105 . 59106) (number 59102 . 59103) (number 59099 . 59100) (string 59050 . 59065) (semantic-list 58714 . 59041) (punctuation 58392 . 58393) (number 58379 . 58380) (number 58376 . 58377) (number 58373 . 58374) (string 58324 . 58339) (semantic-list 58178 . 58314) (punctuation 58003 . 58004) (number 57990 . 57991) (number 57987 . 57988) (number 57984 . 57985) (string 57965 . 57970) (semantic-list 57413 . 57956) (punctuation 56931 . 56932) (number 56918 . 56919) (number 56915 . 56916) (number 56912 . 56913) (string 56875 . 56886) (semantic-list 56598 . 56866) (punctuation 56429 . 56430) (number 56416 . 56417) (number 56413 . 56414) (number 56410 . 56411) (string 56391 . 56396) (semantic-list 56124 . 56382) (punctuation 55787 . 55788) (number 55774 . 55775) (number 55771 . 55772) (number 55768 . 55769) (string 55731 . 55742) (semantic-list 54740 . 54941) (punctuation 54412 . 54413) (number 54399 . 54400) (number 54396 . 54397) (number 54393 . 54394) (string 54371 . 54377) (semantic-list 49724 . 51003) (punctuation 49577 . 49578) (number 49564 . 49565) (number 49561 . 49562) (number 49558 . 49559) (string 49527 . 49536) (semantic-list 48421 . 49518) (punctuation 48223 . 48224) (number 48210 . 48211) (number 48207 . 48208) (number 48204 . 48205) (string 48170 . 48180) (semantic-list 46229 . 48161) (punctuation 45594 . 45595) (number 45581 . 45582) (number 45578 . 45579) (number 45575 . 45576) (string 45547 . 45555) (semantic-list 45233 . 45538) (punctuation 44755 . 44756) (number 44742 . 44743) (number 44739 . 44740) (number 44736 . 44737) (string 44714 . 44720) (semantic-list 44455 . 44704) (punctuation 44270 . 44271) (number 44257 . 44258) (number 44254 . 44255) (number 44251 . 44252) (string 44223 . 44231) (semantic-list 44028 . 44214) (punctuation 43850 . 43851) (number 43837 . 43838) (number 43834 . 43835) (number 43831 . 43832) (string 43806 . 43813) (semantic-list 42995 . 43324) (punctuation 42725 . 42726) (number 42712 . 42713) (number 42709 . 42710) (number 42706 . 42707) (string 42681 . 42688) (semantic-list 42150 . 42336) (punctuation 41922 . 41923) (number 41909 . 41910) (number 41906 . 41907) (number 41903 . 41904) (string 41881 . 41887) (semantic-list 41606 . 41872) (punctuation 41427 . 41428) (number 41414 . 41415) (number 41411 . 41412) (number 41408 . 41409) (string 41383 . 41390) (semantic-list 41225 . 41374) (punctuation 41047 . 41048) (number 41034 . 41035) (number 41031 . 41032) (number 41028 . 41029) (string 41006 . 41012) (semantic-list 40835 . 40997) (punctuation 40654 . 40655) (number 40641 . 40642) (number 40638 . 40639) (number 40635 . 40636) (string 40607 . 40615) (semantic-list 40363 . 40598) (punctuation 40265 . 40266) (number 40252 . 40253) (number 40249 . 40250) (number 40246 . 40247) (string 40227 . 40232) (semantic-list 40180 . 40218) (punctuation 40038 . 40039) (number 40025 . 40026) (number 40022 . 40023) (number 40019 . 40020) (string 40000 . 40005) (semantic-list 39734 . 39991) (punctuation 39643 . 39644) (number 39630 . 39631) (number 39627 . 39628) (number 39624 . 39625) (string 39596 . 39604) (semantic-list 38314 . 38799) (punctuation 37879 . 37880) (number 37866 . 37867) (number 37863 . 37864) (number 37860 . 37861) (string 37781 . 37806) (semantic-list 37072 . 37771) (punctuation 36385 . 36386) (number 36372 . 36373) (number 36369 . 36370) (number 36366 . 36367) (string 36329 . 36340) (semantic-list 35183 . 35470) (punctuation 34864 . 34865) (number 34851 . 34852) (number 34848 . 34849) (number 34845 . 34846) (string 34805 . 34817) (semantic-list 34367 . 34794) (punctuation 33998 . 33999) (number 33985 . 33986) (number 33982 . 33983) (number 33979 . 33980) (string 33911 . 33930) (semantic-list 33834 . 33902) (punctuation 33313 . 33314) (number 33300 . 33301) (number 33297 . 33298) (number 33294 . 33295) (string 33220 . 33241) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480) (semantic-list 32638 . 33211) (punctuation 31965 . 31966) (number 31952 . 31953) (number 31949 . 31950) (number 31946 . 31947) (string 31872 . 31893) (semantic-list 31564 . 31863) (punctuation 31227 . 31228) (number 31214 . 31215) (number 31211 . 31212) (number 31208 . 31209) (string 31140 . 31159) (semantic-list 31063 . 31131) (punctuation 30745 . 30746) (number 30732 . 30733) (number 30729 . 30730) (number 30726 . 30727) (string 30652 . 30673) (semantic-list 30573 . 30643) (punctuation 29960 . 29961) (number 29947 . 29948) (number 29944 . 29945) (number 29941 . 29942) (string 29861 . 29884) (semantic-list 16153 . 16787) (punctuation 15865 . 15866) (number 15852 . 15853) (number 15849 . 15850) (number 15846 . 15847) (string 15797 . 15812) (semantic-list 15733 . 15787) (punctuation 15466 . 15467) (number 15453 . 15454) (number 15444 . 15445) (string 15413 . 15422) (semantic-list 15354 . 15404) (punctuation 15060 . 15061) (number 15047 . 15048) (number 15038 . 15039) (string 15010 . 15018) (semantic-list 14953 . 15001) (punctuation 14620 . 14621) (number 14607 . 14608) (number 14598 . 14599) (string 14570 . 14578) (semantic-list 13681 . 14144) (punctuation 12474 . 12475) (number 12461 . 12462) (number 12458 . 12459) (number 12455 . 12456) (string 12382 . 12405) (semantic-list 11911 . 12373) (punctuation 10744 . 10745) (number 10731 . 10732) (number 10728 . 10729) (number 10725 . 10726) (string 10655 . 10677) (semantic-list 9947 . 10646) (punctuation 9405 . 9406) (number 9392 . 9393) (number 9389 . 9390) (number 9386 . 9387) (string 9309 . 9331) (semantic-list 8569 . 9300) (punctuation 8351 . 8352) (number 8338 . 8339) (number 8335 . 8336) (number 8332 . 8333) (string 8286 . 8300) (semantic-list 6760 . 8277) (punctuation 5441 . 5442) (number 5428 . 5429) (number 5425 . 5426) (number 5422 . 5423) (string 5367 . 5384) (semantic-list 5064 . 5358) (punctuation 4845 . 4846) (number 4832 . 4833) (number 4829 . 4830) (number 4826 . 4827) (string 4780 . 4794) (semantic-list 4703 . 4771) (punctuation 4561 . 4562) (number 4548 . 4549) (number 4545 . 4546) (number 4542 . 4543) (string 4496 . 4510) (semantic-list 4388 . 4487) (punctuation 4115 . 4116) (number 4102 . 4103) (number 4099 . 4100) (number 4096 . 4097) (string 4053 . 4066) (semantic-list 3259 . 4044) (punctuation 2932 . 2933) (number 2919 . 2920) (number 2916 . 2917) (number 2913 . 2914) (string 2885 . 2893) (semantic-list 2259 . 2834) (punctuation 1682 . 1683) (number 1669 . 1670) (number 1666 . 1667) (number 1663 . 1664) (string 1635 . 1643) (semantic-list 1609 . 1626) (CONST 1582 . 1587) (punctuation 1580 . 1581) (punctuation 1523 . 1524) (number 1510 . 1511) (number 1507 . 1508) (number 1504 . 1505) (string 1470 . 1480))
      :lexical-table 
        '(("INDEX_SIZE_BOUND" . ((semantic-list "((ptrdiff_t) min (MOST_POSITIVE_FIXNUM, PTRDIFF_MAX / word_size))" 107886 . 107951)))
          ("SXHASH_MAX_LEN" . ((number "7" 121290 . 121291)))
          ("IS_ASCII" (spp-arg-list ("Character") 86667 . 86678) . ((semantic-list "((Character) < 128)" 86683 . 86702)))
          ("IS_BASE64" (spp-arg-list ("Character") 86720 . 86731) . ((semantic-list "(IS_ASCII (Character) && base64_char_to_value[Character] >= 0)" 86736 . 86798)))
          ("MIME_LINE_LENGTH" . ((number "76" 86647 . 86649)))
          ("READ_QUADRUPLET_BYTE" (spp-arg-list ("retval") 87131 . 87139) . 
              ((DO "do" 87144 . 87146) (semantic-list "{					\\
      if (i == length)			\\
	{				\\
	  if (nchars_return)		\\
	    *nchars_return = nchars;	\\
	  return (retval);		\\
	}				\\
      c = from[i++];			\\
    }" 87157 . 87318) (WHILE "while" 87327 . 87332) (semantic-list "(IS_BASE64_IGNORABLE (c))" 87333 . 87358)))
          ("IS_BASE64_IGNORABLE" (spp-arg-list ("Character") 86826 . 86837) . ((semantic-list "((Character) == ' ' || (Character) == '\\t' || (Character) == '\\n' \\
   || (Character) == '\\f' || (Character) == '\\r')" 86842 . 86959)))
          ("SXHASH_MAX_DEPTH" . ((number "3" 121177 . 121178)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "character.h"
      :fsize 22792
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "coding.h"
      :fsize 25165
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "composite.h"
      :fsize 12842
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "intervals.h"
      :fsize 11604
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "window.h"
      :fsize 40744
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "puresize.h"
      :fsize 3443
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "gnutls.h"
      :fsize 3146
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [738 757])
            ("lisp.h" include nil nil [759 776])
            ("macros.h" include nil nil [777 796])
            ("window.h" include nil nil [797 816])
            ("keyboard.h" include nil nil [817 838])
            ("executing_kbd_macro_iterations" variable (:type ("EMACS_INT" type (:type "class") nil nil)) nil [1024 1065])
            ("executing_kbd_macro" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [1280 1312])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstart_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1340 1357])
                    ("" variable (:type ("Sstart_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1358 1375])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1394 1398]))                  
                :type "int")
                nil [1314 1917])
            ("end_kbd_macro" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4361 4366]))                  
                :type "void")
                nil [4341 4628])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fend_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4654 4669])
                    ("" variable (:type ("Send_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4670 4685])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4704 4708]))                  
                :type "int")
                nil [4630 5314])
            ("store_kbd_macro_char" function
               (:arguments 
                  ( ("c" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6023 6037]))                  
                :type "void")
                nil [5996 6638])
            ("finalize_kbd_macro_chars" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6811 6816]))                  
                :type "void")
                nil [6780 6885])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcancel_kbd_macro_events" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6921 6946])
                    ("" variable (:type ("Scancel_kbd_macro_events" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6954 6979])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6996 7000]))                  
                :type "int")
                nil [6887 7079])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fstore_kbd_macro_event" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7197 7220])
                    ("" variable (:type ("Sstore_kbd_macro_event" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7228 7251])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7268 7272]))                  
                :type "int")
                nil [7165 7353])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fcall_last_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7437 7458])
                    ("" variable (:type ("Scall_last_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7459 7480])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7506 7510]))                  
                :type "int")
                nil [7407 7967])
            ("pop_kbd_macro" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("info" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8966 8983]))                  
                :type "void")
                nil [8939 9191])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fexecute_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9221 9240])
                    ("" variable (:type ("Sexecute_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9241 9260])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9277 9281]))                  
                :type "int")
                nil [9193 9717])
            ("init_macros" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10936 10941]))                  
                :type "void")
                nil [10918 11006])
            ("syms_of_macros" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11029 11034]))                  
                :type "void")
                nil [11008 12307]))          
      :file "macros.c"
      :pointmax 12308
      :fsize 12307
      :lastmodtime '(23150 33450 0 0)
      :unmatched-syntax '((semantic-list 9718 . 10915) (punctuation 9280 . 9281) (number 9267 . 9268) (number 9264 . 9265) (number 9261 . 9262) (string 9200 . 9219) (semantic-list 7968 . 8799) (punctuation 7509 . 7510) (string 7494 . 7497) (number 7491 . 7492) (number 7488 . 7489) (string 7414 . 7435) (semantic-list 7354 . 7404) (punctuation 7271 . 7272) (number 7258 . 7259) (number 7255 . 7256) (number 7252 . 7253) (string 7172 . 7195) (semantic-list 7080 . 7163) (punctuation 6999 . 7000) (number 6986 . 6987) (number 6983 . 6984) (number 6980 . 6981) (string 6894 . 6919) (semantic-list 5315 . 5938) (punctuation 4707 . 4708) (string 4692 . 4695) (number 4689 . 4690) (number 4686 . 4687) (string 4637 . 4652) (semantic-list 1918 . 4287) (punctuation 1397 . 1398) (string 1382 . 1385) (number 1379 . 1380) (number 1376 . 1377) (string 1321 . 1338)))
    (semanticdb-table "semanticdb-table"
      :file "macros.h"
      :fsize 1665
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [1118 1137])
            ("stdio.h" include (:system-flag t) nil [1139 1157])
            ("limits.h" include (:system-flag t) nil [1158 1177])
            ("lisp.h" include nil nil [1179 1196])
            ("character.h" include nil nil [1197 1219])
            ("charset.h" include nil nil [1220 1240])
            ("ccl.h" include nil nil [1241 1257])
            ("coding.h" include nil nil [1258 1277])
            ("Vccl_program_table" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1714 1752])
            ("GET_HASH_TABLE" variable (:constant-flag t) nil [1806 1820])
            ("CCL_HEADER_BUF_MAG" variable (:constant-flag t) nil [2568 2586])
            ("CCL_HEADER_EOF" variable (:constant-flag t) nil [2597 2611])
            ("CCL_HEADER_MAIN" variable (:constant-flag t) nil [2623 2638])
            ("CCL_CODE_MAX" variable (:constant-flag t) nil [3449 3461])
            ("CCL_CODE_MIN" variable (:constant-flag t) nil [3492 3504])
            ("CCL_SetRegister" variable (:constant-flag t) nil [3732 3747])
            ("CCL_SetShortConst" variable (:constant-flag t) nil [3903 3920])
            ("CCL_SetConst" variable (:constant-flag t) nil [4092 4104])
            ("CCL_SetArray" variable (:constant-flag t) nil [4287 4299])
            ("CCL_Jump" variable (:constant-flag t) nil [4564 4572])
            ("CCL_JumpCond" variable (:constant-flag t) nil [4767 4779])
            ("CCL_WriteRegisterJump" variable (:constant-flag t) nil [4939 4960])
            ("CCL_WriteRegisterReadJump" variable (:constant-flag t) nil [5126 5151])
            ("CCL_WriteConstJump" variable (:constant-flag t) nil [5505 5523])
            ("CCL_WriteConstReadJump" variable (:constant-flag t) nil [5699 5721])
            ("CCL_WriteStringJump" variable (:constant-flag t) nil [6088 6107])
            ("CCL_WriteArrayReadJump" variable (:constant-flag t) nil [6415 6437])
            ("CCL_ReadJump" variable (:constant-flag t) nil [6934 6946])
            ("CCL_Branch" variable (:constant-flag t) nil [7101 7111])
            ("CCL_ReadRegister" variable (:constant-flag t) nil [7416 7432])
            ("CCL_WriteExprConst" variable (:constant-flag t) nil [7645 7663])
            ("CCL_ReadBranch" variable (:constant-flag t) nil [7954 7968])
            ("CCL_WriteRegister" variable (:constant-flag t) nil [8336 8353])
            ("CCL_WriteExprRegister" variable (:constant-flag t) nil [8660 8681])
            ("CCL_Call" variable (:constant-flag t) nil [8848 8856])
            ("CCL_WriteConstString" variable (:constant-flag t) nil [9124 9144])
            ("CCL_WriteArray" variable (:constant-flag t) nil [9510 9524])
            ("CCL_End" variable (:constant-flag t) nil [9779 9786])
            ("CCL_ExprSelfConst" variable (:constant-flag t) nil [10055 10072])
            ("CCL_ExprSelfReg" variable (:constant-flag t) nil [10239 10254])
            ("CCL_SetExprConst" variable (:constant-flag t) nil [10537 10553])
            ("CCL_SetExprReg" variable (:constant-flag t) nil [10750 10764])
            ("CCL_JumpCondExprConst" variable (:constant-flag t) nil [10929 10950])
            ("CCL_JumpCondExprReg" variable (:constant-flag t) nil [11251 11270])
            ("CCL_ReadJumpCondExprConst" variable (:constant-flag t) nil [11565 11590])
            ("CCL_ReadJumpCondExprReg" variable (:constant-flag t) nil [11923 11946])
            ("CCL_Extension" variable (:constant-flag t) nil [12272 12285])
            ("CCL_ReadMultibyteChar2" variable (:constant-flag t) nil [12747 12769])
            ("CCL_WriteMultibyteChar2" variable (:constant-flag t) nil [12974 12997])
            ("CCL_TranslateCharacter" variable (:constant-flag t) nil [13308 13330])
            ("CCL_TranslateCharacterConstTbl" variable (:constant-flag t) nil [13647 13677])
            ("CCL_IterateMultipleMap" variable (:constant-flag t) nil [14318 14340])
            ("CCL_MapMultiple" variable (:constant-flag t) nil [17253 17268])
            ("MAX_MAP_SET_LEVEL" variable (:constant-flag t) nil [17540 17557])
            ("tr_stack" type
               (:typedef ("" type
                     (:members 
                        ( ("rest_length" variable (:type "int") (reparse-symbol classsubparts) [17581 17597])
                          ("orig_val" variable (:type "int") (reparse-symbol classsubparts) [17600 17613]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [17562 17625])
            ("mapping_stack" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("tr_stack" type (:type "class") nil nil))
                nil [17627 17676])
            ("mapping_stack_pointer" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("tr_stack" type (:type "class") nil nil))
                nil [17677 17716])
            ("stack_idx_of_map_multiple" variable
               (:typemodifiers ("static")
                :type "int")
                nil [17826 17863])
            ("PUSH_MAPPING_STACK" variable (:constant-flag t) nil [17873 17891])
            ("POP_MAPPING_STACK" variable (:constant-flag t) nil [18101 18118])
            ("CCL_CALL_FOR_MAP_INSTRUCTION" variable (:constant-flag t) nil [18328 18356])
            ("CCL_MapSingle" variable (:constant-flag t) nil [19159 19172])
            ("CCL_LookupIntConstTbl" variable (:constant-flag t) nil [19461 19482])
            ("CCL_LookupCharConstTbl" variable (:constant-flag t) nil [19688 19710])
            ("CCL_PLUS" variable (:constant-flag t) nil [19960 19968])
            ("CCL_MINUS" variable (:constant-flag t) nil [19998 20007])
            ("CCL_MUL" variable (:constant-flag t) nil [20037 20044])
            ("CCL_DIV" variable (:constant-flag t) nil [20075 20082])
            ("CCL_MOD" variable (:constant-flag t) nil [20113 20120])
            ("CCL_AND" variable (:constant-flag t) nil [20151 20158])
            ("CCL_OR" variable (:constant-flag t) nil [20189 20195])
            ("CCL_XOR" variable (:constant-flag t) nil [20226 20233])
            ("CCL_LSH" variable (:constant-flag t) nil [20264 20271])
            ("CCL_RSH" variable (:constant-flag t) nil [20303 20310])
            ("CCL_LSH8" variable (:constant-flag t) nil [20342 20350])
            ("CCL_RSH8" variable (:constant-flag t) nil [20387 20395])
            ("CCL_DIVMOD" variable (:constant-flag t) nil [20444 20454])
            ("CCL_LS" variable (:constant-flag t) nil [20498 20504])
            ("CCL_GT" variable (:constant-flag t) nil [20537 20543])
            ("CCL_EQ" variable (:constant-flag t) nil [20576 20582])
            ("CCL_LE" variable (:constant-flag t) nil [20616 20622])
            ("CCL_GE" variable (:constant-flag t) nil [20656 20662])
            ("CCL_NE" variable (:constant-flag t) nil [20696 20702])
            ("CCL_DECODE_SJIS" variable (:constant-flag t) nil [20737 20752])
            ("CCL_ENCODE_SJIS" variable (:constant-flag t) nil [20847 20862])
            ("CCL_SUCCESS" variable (:constant-flag t) nil [20994 21005])
            ("CCL_SUSPEND" variable (:constant-flag t) nil [21296 21307])
            ("CCL_INVALID_CMD" variable (:constant-flag t) nil [21543 21558])
            ("ASCENDING_ORDER" variable (:constant-flag t) nil [22029 22044])
            ("GET_CCL_RANGE" variable (:constant-flag t) nil [22103 22116])
            ("GET_CCL_CODE" variable (:constant-flag t) nil [22373 22385])
            ("IN_INT_RANGE" variable (:constant-flag t) nil [22484 22496])
            ("CCL_WRITE_CHAR" variable (:constant-flag t) nil [22689 22703])
            ("CCL_WRITE_STRING" variable (:constant-flag t) nil [23003 23019])
            ("CCL_READ_CHAR" variable (:constant-flag t) nil [23657 23670])
            ("CCL_DECODE_CHAR" variable (:constant-flag t) nil [24169 24184])
            ("CCL_ENCODE_CHAR" variable (:constant-flag t) nil [24495 24510])
            ("ccl_prog_stack" type
               (:members 
                  ( ("ccl_prog" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25539 25561])
                    ("ic" variable (:type "int") (reparse-symbol classsubparts) [25606 25613])
                    ("eof_ic" variable (:type "int") (reparse-symbol classsubparts) [25648 25659]))                  
                :type "struct")
                nil [25509 25709])
            ("ccl_prog_stack_struct" variable
               (:dereference 1
                :typemodifiers ("static")
                :type ("ccl_prog_stack" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [25770 25826])
            ("ccl_driver" function
               (:arguments 
                  ( ("ccl" variable
                       (:pointer 1
                        :type ("ccl_program" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [25845 25869])
                    ("source" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [25870 25882])
                    ("destination" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [25883 25900])
                    ("src_size" variable (:type "int") (reparse-symbol arg-sub-list) [25901 25914])
                    ("dst_size" variable (:type "int") (reparse-symbol arg-sub-list) [25915 25928])
                    ("charset_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25929 25954]))                  
                :type "void")
                nil [25828 48985])
            ("resolve_symbol_ccl_program" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ccl" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49396 49412]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [49349 51097])
            ("ccl_get_compiled_code" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ccl_prog" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51434 51455])
                    ("idx" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51456 51471]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [51392 52218])
            ("setup_ccl_program" function
               (:arguments 
                  ( ("ccl" variable
                       (:pointer 1
                        :type ("ccl_program" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52544 52568])
                    ("ccl_prog" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52569 52590]))                  
                :type "bool")
                nil [52520 53306])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fccl_program_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53333 53348])
                    ("" variable (:type ("Sccl_program_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53349 53364])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53381 53385]))                  
                :type "int")
                nil [53309 53566])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fccl_execute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53918 53931])
                    ("" variable (:type ("Sccl_execute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53932 53945])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53962 53966]))                  
                :type "int")
                nil [53896 54597])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fccl_execute_on_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55217 55240])
                    ("" variable (:type ("Sccl_execute_on_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55241 55264])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55288 55292]))                  
                :type "int")
                nil [55185 56534])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fregister_ccl_program" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59801 59823])
                    ("" variable (:type ("Sregister_ccl_program" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59824 59846])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59870 59874]))                  
                :type "int")
                nil [59770 60156])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fregister_code_conversion_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61783 61813])
                    ("" variable (:type ("Sregister_code_conversion_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61821 61851])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61875 61879]))                  
                :type "int")
                nil [61744 62014])
            ("syms_of_ccl" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [62924 62929]))                  
                :type "void")
                nil [62906 64909]))          
      :file "ccl.c"
      :pointmax 64910
      :fsize 64909
      :lastmodtime '(23150 33450 0 0)
      :unmatched-syntax '((semantic-list 62015 . 62903) (punctuation 61878 . 61879) (number 61865 . 61866) (number 61862 . 61863) (number 61859 . 61860) (string 61751 . 61781) (semantic-list 60157 . 61374) (punctuation 59873 . 59874) (number 59860 . 59861) (number 59857 . 59858) (number 59854 . 59855) (string 59777 . 59799) (semantic-list 56535 . 59768) (punctuation 55291 . 55292) (number 55278 . 55279) (number 55275 . 55276) (number 55272 . 55273) (string 55192 . 55215) (semantic-list 54598 . 55183) (punctuation 53965 . 53966) (number 53952 . 53953) (number 53949 . 53950) (number 53946 . 53947) (string 53903 . 53916) (semantic-list 53567 . 53894) (punctuation 53384 . 53385) (number 53371 . 53372) (number 53368 . 53369) (number 53365 . 53366) (string 53316 . 53331))
      :lexical-table 
        '(("CCL_SetShortConst" . ((number "0x01" 3921 . 3925)))
          ("CCL_ReadRegister" . ((number "0x0E" 7433 . 7437)))
          ("CCL_ReadJumpCondExprConst" . ((number "0x1D" 11591 . 11595)))
          ("CCL_TranslateCharacter" . ((number "0x02" 13331 . 13335)))
          ("CCL_OR" . ((number "0x06" 20197 . 20201)))
          ("GET_CCL_RANGE" (spp-arg-list ("var" "ccl_prog" "ic" "lo" "hi") 22116 . 22143) . 
              ((DO "do" 22149 . 22151) (semantic-list "{								\\
      EMACS_INT prog_word = XINT ((ccl_prog)[ic]);		\\
      if (! ASCENDING_ORDER (lo, prog_word, hi))		\\
	CCL_INVALID_CMD;					\\
      (var) = prog_word;					\\
    }" 22165 . 22342) (WHILE "while" 22354 . 22359) (semantic-list "(0)" 22360 . 22363)))
          ("CCL_HEADER_EOF" . ((number "1" 2613 . 2614)))
          ("CCL_SetArray" . ((number "0x03" 4301 . 4305)))
          ("CCL_SetExprConst" . ((number "0x19" 10554 . 10558)))
          ("CCL_ReadJumpCondExprReg" . ((number "0x1E" 11947 . 11951)))
          ("CCL_WRITE_STRING" (spp-arg-list ("len") 23019 . 23024) . 
              ((DO "do" 23033 . 23035) (semantic-list "{								\\
    int ccli;							\\
    if (!dst)							\\
      CCL_INVALID_CMD;						\\
    else if (dst + len <= dst_end)				\\
      {								\\
	if (XFASTINT (ccl_prog[ic]) & 0x1000000)		\\
	  for (ccli = 0; ccli < len; ccli++)			\\
	    *dst++ = XFASTINT (ccl_prog[ic + ccli]) & 0xFFFFFF;	\\
	else							\\
	  for (ccli = 0; ccli < len; ccli++)			\\
	    *dst++ = ((XFASTINT (ccl_prog[ic + (ccli / 3)]))	\\
		      >> ((2 - (ccli % 3)) * 8)) & 0xFF;	\\
      }								\\
    else							\\
      CCL_SUSPEND (CCL_STAT_SUSPEND_BY_DST);			\\
  }" 23036 . 23567) (WHILE "while" 23568 . 23573) (semantic-list "(0)" 23574 . 23577)))
          ("CCL_SetRegister" . ((number "0x00" 3749 . 3753)))
          ("CCL_WriteExprConst" . ((number "0x0F" 7664 . 7668)))
          ("CCL_IterateMultipleMap" . ((number "0x10" 14341 . 14345)))
          ("CCL_LookupCharConstTbl" . ((number "0x14" 19711 . 19715)))
          ("CCL_MUL" . ((number "0x02" 20046 . 20050)))
          ("CCL_MOD" . ((number "0x04" 20122 . 20126)))
          ("CCL_GE" . ((number "0x14" 20664 . 20668)))
          ("CCL_HEADER_BUF_MAG" . ((number "0" 2587 . 2588)))
          ("CCL_WriteExprRegister" . ((number "0x12" 8682 . 8686)))
          ("CCL_WriteArray" . ((number "0x15" 9526 . 9530)))
          ("CCL_End" . ((number "0x16" 9789 . 9793)))
          ("CCL_SetExprReg" . ((number "0x1A" 10766 . 10770)))
          ("IN_INT_RANGE" (spp-arg-list ("val") 22496 . 22501) . ((symbol "ASCENDING_ORDER" 22502 . 22517) (semantic-list "(INT_MIN, val, INT_MAX)" 22518 . 22541)))
          ("CCL_ENCODE_CHAR" (spp-arg-list ("c" "charset_list" "id" "encoded") 24510 . 24540) . 
              ((DO "do" 24546 . 24548) (semantic-list "{								\\
    unsigned ncode;						\\
								\\
    charset = char_charset ((c), (charset_list), &ncode);	\\
    if (! charset && ! NILP (charset_list))			\\
      charset = char_charset ((c), Qnil, &ncode);	  	\\
    if (charset)						\\
      {								\\
	(id) = CHARSET_ID (charset);				\\
	(encoded) = ncode;					\\
      }								\\
   }" 24549 . 24883) (WHILE "while" 24884 . 24889) (semantic-list "(0)" 24890 . 24893)))
          ("CCL_SetConst" . ((number "0x02" 4106 . 4110)))
          ("CCL_WriteRegisterReadJump" . ((number "0x07" 5152 . 5156)))
          ("CCL_GT" . ((number "0x11" 20545 . 20549)))
          ("CCL_LE" . ((number "0x13" 20624 . 20628)))
          ("CCL_SUCCESS" . 
              ((DO "do" 21010 . 21012) (semantic-list "{					\\
    ccl->status = CCL_STAT_SUCCESS;	\\
    goto ccl_finish;			\\
  }" 21021 . 21095) (WHILE "while" 21102 . 21107) (semantic-list "(0)" 21108 . 21111)))
          ("GET_CCL_CODE" (spp-arg-list ("code" "ccl_prog" "ic") 22385 . 22405) . ((symbol "GET_CCL_RANGE" 22412 . 22425) (semantic-list "(code, ccl_prog, ic, CCL_CODE_MIN, CCL_CODE_MAX)" 22426 . 22474)))
          ("CCL_DECODE_CHAR" (spp-arg-list ("id" "code") 24184 . 24194) . ((semantic-list "((id) == 0 ? (code)			\\
   : (charset = CHARSET_FROM_ID ((id)), DECODE_CHAR (charset, (code))))" 24199 . 24294)))
          ("CCL_CODE_MAX" . ((semantic-list "((1 << (28 - 1)) - 1)" 3462 . 3483)))
          ("CCL_WriteRegister" . ((number "0x11" 8354 . 8358)))
          ("CCL_LSH8" . ((number "0x0A" 20351 . 20355)))
          ("CCL_LS" . ((number "0x10" 20506 . 20510)))
          ("CCL_READ_CHAR" (spp-arg-list ("r") 23670 . 23673) . 
              ((DO "do" 23680 . 23682) (semantic-list "{						\\
    if (! src)					\\
      CCL_INVALID_CMD;				\\
    else if (src < src_end)			\\
      r = *src++;				\\
    else if (ccl->last_block)			\\
      {						\\
	r = -1;					\\
	ic = ccl->eof_ic;			\\
	goto ccl_repeat;			\\
      }						\\
    else					\\
      CCL_SUSPEND (CCL_STAT_SUSPEND_BY_SRC);	\\
    }" 23683 . 23987) (WHILE "while" 23988 . 23993) (semantic-list "(0)" 23994 . 23997)))
          ("CCL_CODE_MIN" . ((semantic-list "(-1 - CCL_CODE_MAX)" 3505 . 3524)))
          ("CCL_JumpCondExprReg" . ((number "0x1C" 11271 . 11275)))
          ("CCL_ExprSelfConst" . ((number "0x17" 10073 . 10077)))
          ("CCL_ExprSelfReg" . ((number "0x18" 10256 . 10260)))
          ("CCL_WriteMultibyteChar2" . ((number "0x01" 12998 . 13002)))
          ("PUSH_MAPPING_STACK" (spp-arg-list ("restlen" "orig") 17891 . 17906) . 
              ((DO "do" 17910 . 17912) (semantic-list "{							\\
    mapping_stack_pointer->rest_length = (restlen);	\\
    mapping_stack_pointer->orig_val = (orig);		\\
    mapping_stack_pointer++;				\\
  }" 17923 . 18073) (WHILE "while" 18082 . 18087) (semantic-list "(0)" 18088 . 18091)))
          ("CCL_CALL_FOR_MAP_INSTRUCTION" (spp-arg-list ("symbol" "ret_ic") 18356 . 18372) . 
              ((DO "do" 18376 . 18378) (semantic-list "{								\\
    struct ccl_program called_ccl;				\\
    if (stack_idx >= 256					\\
	|| ! setup_ccl_program (&called_ccl, (symbol)))		\\
      {								\\
	if (stack_idx > 0)					\\
	  {							\\
	    ccl_prog = ccl_prog_stack_struct[0].ccl_prog;	\\
	    ic = ccl_prog_stack_struct[0].ic;			\\
	    eof_ic = ccl_prog_stack_struct[0].eof_ic;		\\
	  }							\\
	CCL_INVALID_CMD;					\\
      }								\\
    ccl_prog_stack_struct[stack_idx].ccl_prog = ccl_prog;	\\
    ccl_prog_stack_struct[stack_idx].ic = (ret_ic);		\\
    ccl_prog_stack_struct[stack_idx].eof_ic = eof_ic;		\\
    stack_idx++;						\\
    ccl_prog = called_ccl.prog;					\\
    ic = CCL_HEADER_MAIN;					\\
    eof_ic = XFASTINT (ccl_prog[CCL_HEADER_EOF]);		\\
    goto ccl_repeat;						\\
  }" 18390 . 19130) (WHILE "while" 19140 . 19145) (semantic-list "(0)" 19146 . 19149)))
          ("CCL_EXECUTE_BUF_SIZE" . ((number "1024" 56710 . 56714)))
          ("CCL_Jump" . ((number "0x04" 4574 . 4578)))
          ("CCL_WriteRegisterJump" . ((number "0x06" 4961 . 4965)))
          ("MAX_MAP_SET_LEVEL" . ((number "30" 17558 . 17560)))
          ("CCL_AND" . ((number "0x05" 20160 . 20164)))
          ("CCL_EQ" . ((number "0x12" 20584 . 20588)))
          ("CCL_INVALID_CMD" . 
              ((DO "do" 21568 . 21570) (semantic-list "{				     	\\
    ccl->status = CCL_STAT_INVALID_CMD;	\\
    goto ccl_error_handler;	     	\\
  }" 21579 . 21673) (WHILE "while" 21680 . 21685) (semantic-list "(0)" 21686 . 21689)))
          ("GET_HASH_TABLE" (spp-arg-list ("id") 1820 . 1824) . ((semantic-list "(XHASH_TABLE (XCDR (AREF (Vtranslation_hash_table_vector, (id)))))" 1829 . 1895)))
          ("CCL_Call" . ((number "0x13" 8858 . 8862)))
          ("CCL_Extension" . ((number "0x1F" 12287 . 12291)))
          ("CCL_ReadMultibyteChar2" . ((number "0x00" 12770 . 12774)))
          ("CCL_LSH" . ((number "0x08" 20273 . 20277)))
          ("CCL_DIVMOD" . ((number "0x0C" 20455 . 20459)))
          ("CCL_SUSPEND" (spp-arg-list ("stat") 21307 . 21313) . 
              ((DO "do" 21316 . 21318) (semantic-list "{				\\
    ic--;			\\
    ccl->status = stat;		\\
    goto ccl_finish;		\\
  }" 21326 . 21401) (WHILE "while" 21407 . 21412) (semantic-list "(0)" 21413 . 21416)))
          ("CCL_WriteStringJump" . ((number "0x0A" 6108 . 6112)))
          ("CCL_WriteArrayReadJump" . ((number "0x0B" 6438 . 6442)))
          ("CCL_JumpCondExprConst" . ((number "0x1B" 10951 . 10955)))
          ("CCL_NE" . ((number "0x15" 20704 . 20708)))
          ("CCL_ENCODE_SJIS" . ((number "0x17" 20863 . 20867)))
          ("CCL_HEADER_MAIN" . ((number "2" 2640 . 2641)))
          ("CCL_WriteConstJump" . ((number "0x08" 5524 . 5528)))
          ("CCL_WriteConstReadJump" . ((number "0x09" 5722 . 5726)))
          ("CCL_ReadJump" . ((number "0x0C" 6948 . 6952)))
          ("CCL_Branch" . ((number "0x0D" 7113 . 7117)))
          ("CCL_TranslateCharacterConstTbl" . ((number "0x03" 13678 . 13682)))
          ("CCL_MapMultiple" . ((number "0x11" 17269 . 17273)))
          ("CCL_MapSingle" . ((number "0x12" 19174 . 19178)))
          ("CCL_LookupIntConstTbl" . ((number "0x13" 19483 . 19487)))
          ("CCL_MINUS" . ((number "0x01" 20008 . 20012)))
          ("CCL_XOR" . ((number "0x07" 20235 . 20239)))
          ("CCL_RSH" . ((number "0x09" 20312 . 20316)))
          ("CCL_RSH8" . ((number "0x0B" 20396 . 20400)))
          ("CCL_DECODE_SJIS" . ((number "0x16" 20753 . 20757)))
          ("CCL_JumpCond" . ((number "0x05" 4781 . 4785)))
          ("CCL_ReadBranch" . ((number "0x10" 7970 . 7974)))
          ("CCL_WriteConstString" . ((number "0x14" 9145 . 9149)))
          ("POP_MAPPING_STACK" (spp-arg-list ("restlen" "orig") 18118 . 18133) . 
              ((DO "do" 18137 . 18139) (semantic-list "{							\\
    mapping_stack_pointer--;				\\
    (restlen) = mapping_stack_pointer->rest_length;	\\
    (orig) = mapping_stack_pointer->orig_val;		\\
  }" 18150 . 18300) (WHILE "while" 18309 . 18314) (semantic-list "(0)" 18315 . 18318)))
          ("CCL_PLUS" . ((number "0x00" 19969 . 19973)))
          ("CCL_DIV" . ((number "0x03" 20084 . 20088)))
          ("ASCENDING_ORDER" (spp-arg-list ("lo" "med" "hi") 22044 . 22057) . ((semantic-list "(((lo) <= (med)) & ((med) <= (hi)))" 22058 . 22093)))
          ("CCL_WRITE_CHAR" (spp-arg-list ("ch") 22703 . 22707) . 
              ((DO "do" 22714 . 22716) (semantic-list "{						\\
    if (! dst)					\\
      CCL_INVALID_CMD;				\\
    else if (dst < dst_end)			\\
      *dst++ = (ch);				\\
    else					\\
      CCL_SUSPEND (CCL_STAT_SUSPEND_BY_DST);	\\
  }" 22717 . 22898) (WHILE "while" 22899 . 22904) (semantic-list "(0)" 22905 . 22908)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "charset.h"
      :fsize 19498
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "ccl.h"
      :fsize 3379
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [755 774])
            ("lisp.h" include nil nil [776 793])
            ("commands.h" include nil nil [794 815])
            ("character.h" include nil nil [816 838])
            ("buffer.h" include nil nil [839 858])
            ("syntax.h" include nil nil [859 878])
            ("keyboard.h" include nil nil [879 900])
            ("keymap.h" include nil nil [901 920])
            ("frame.h" include nil nil [921 939])
            ("internal_self_insert" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [974 978])
                    ("" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [979 989]))                  
                :type "int")
                nil [941 990])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fforward_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1017 1032])
                    ("" variable (:type ("Sforward_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1033 1048])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1065 1069]))                  
                :type "int")
                nil [993 1167])
            ("move_point" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("n" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1382 1396])
                    ("forward" variable (:type "bool") (reparse-symbol arg-sub-list) [1397 1410]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1351 2099])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fforward_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2124 2138])
                    ("" variable (:type ("Sforward_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2139 2153])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2173 2177]))                  
                :type "int")
                nil [2101 2589])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbackward_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2647 2662])
                    ("" variable (:type ("Sbackward_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2663 2678])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2698 2702]))                  
                :type "int")
                nil [2623 3121])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fforward_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3178 3192])
                    ("" variable (:type ("Sforward_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3193 3207])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3227 3231]))                  
                :type "int")
                nil [3155 3940])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fbeginning_of_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4431 4450])
                    ("" variable (:type ("Sbeginning_of_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4451 4470])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4490 4494]))                  
                :type "int")
                nil [4403 5166])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fend_of_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5328 5341])
                    ("" variable (:type ("Send_of_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5342 5355])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5375 5379]))                  
                :type "int")
                nil [5306 5943])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fdelete_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6633 6646])
                    ("" variable (:type ("Sdelete_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6647 6660])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6682 6686]))                  
                :type "int")
                nil [6611 7111])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fself_insert_command" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7688 7709])
                    ("" variable (:type ("Sself_insert_command" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7710 7731])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7750 7754]))                  
                :type "int")
                nil [7658 8305])
            ("internal_self_insert" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("c" variable (:type "int") (reparse-symbol arg-sub-list) [9206 9212])
                    ("n" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9213 9225]))                  
                :type "int")
                nil [9173 14943])
            ("syms_of_cmds" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [14994 14999]))                  
                :type "void")
                nil [14975 15950])
            ("keys_of_cmds" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [15971 15976]))                  
                :type "void")
                nil [15952 16617]))          
      :file "cmds.c"
      :pointmax 16618
      :fsize 16617
      :lastmodtime '(23150 33450 0 0)
      :unmatched-syntax '((semantic-list 8306 . 8921) (punctuation 7753 . 7754) (string 7738 . 7741) (number 7735 . 7736) (number 7732 . 7733) (string 7665 . 7686) (semantic-list 7112 . 7568) (punctuation 6685 . 6686) (string 6667 . 6673) (number 6664 . 6665) (number 6661 . 6662) (string 6618 . 6631) (semantic-list 5944 . 6609) (punctuation 5378 . 5379) (string 5362 . 5366) (number 5359 . 5360) (number 5356 . 5357) (string 5313 . 5326) (semantic-list 5167 . 5304) (punctuation 4493 . 4494) (string 4477 . 4481) (number 4474 . 4475) (number 4471 . 4472) (string 4410 . 4429) (semantic-list 3941 . 4401) (punctuation 3230 . 3231) (string 3214 . 3218) (number 3211 . 3212) (number 3208 . 3209) (string 3162 . 3176) (semantic-list 3122 . 3153) (punctuation 2701 . 2702) (string 2685 . 2689) (number 2682 . 2683) (number 2679 . 2680) (string 2630 . 2645) (semantic-list 2590 . 2621) (punctuation 2176 . 2177) (string 2160 . 2164) (number 2157 . 2158) (number 2154 . 2155) (string 2108 . 2122) (semantic-list 1168 . 1230) (punctuation 1068 . 1069) (number 1055 . 1056) (number 1052 . 1053) (number 1049 . 1050) (string 1000 . 1015)))
    (semanticdb-table "semanticdb-table"
      :file "syntax.h"
      :fsize 7762
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "keymap.h"
      :fsize 2302
      :lastmodtime '(23150 33450 0 0))
    (semanticdb-table "semanticdb-table"
      :file "frame.h"
      :fsize 55923
      :lastmodtime '(23150 33450 0 0)))
  :file "!home!workbench-lk!Emacs27!emacs27-master-src!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
