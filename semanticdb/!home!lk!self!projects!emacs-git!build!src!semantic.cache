;; Object semanticdb-project-database-file-17e66dc
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-17e66dc"
  :tables
  (list
    (semanticdb-table "semanticdb-table-17e66e8"
      :major-mode c-mode
      :tags 
        '( ("config.h" include (:system-flag t) nil [762 781])
            ("emacs-module.h" include nil nil [783 808])
            ("stdarg.h" include (:system-flag t) nil [810 829])
            ("stddef.h" include (:system-flag t) nil [830 849])
            ("stdint.h" include (:system-flag t) nil [850 869])
            ("stdio.h" include (:system-flag t) nil [870 888])
            ("lisp.h" include nil nil [890 907])
            ("dynlib.h" include nil nil [908 927])
            ("coding.h" include nil nil [928 947])
            ("keyboard.h" include nil nil [948 969])
            ("syssignal.h" include nil nil [970 992])
            ("thread.h" include nil nil [993 1012])
            ("intprops.h" include (:system-flag t) nil [1014 1035])
            ("verify.h" include (:system-flag t) nil [1036 1055])
            ("" type
               (:members 
                  ( ("plain_values" variable
                       (:constant-flag t
                        :default-value (2329 2460)
                        :type "int")
                        (reparse-symbol enumsubparts) [2308 2460]))                  
                :type "enum")
                nil [2295 2465])
            ("emacs_init_function" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_runtime" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2559 2582]))                  
                :type "int")
                nil [2531 2583])
            ("emacs_finalizer_function" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2902 2909]))                  
                :type "void")
                nil [2868 2910])
            ("emacs_env_private" type
               (:members 
                  ( ("pending_non_local_exit" variable (:type ("emacs_funcall_exit" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [3166 3213])
                    ("non_local_exit_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3371 3426])
                    ("non_local_exit_data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3371 3426])
                    ("values" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3583 3602]))                  
                :type "struct")
                nil [3137 3605])
            ("emacs_runtime_private" type
               (:members 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3730 3745]))                  
                :type "struct")
                nil [3697 3748])
            ("value_to_lisp" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3816 3828]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3782 3829])
            ("lisp_to_value" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3864 3876])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3877 3889]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [3830 3890])
            ("module_non_local_exit_check" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3951 3963]))                  
                :type ("emacs_funcall_exit" type (:type "enum") nil nil))
                nil [3891 3964])
            ("module_assert_thread" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3999 4004]))                  
                :type "void")
                nil [3965 4005])
            ("module_assert_runtime" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_runtime" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4041 4064]))                  
                :type "void")
                nil [4006 4065])
            ("module_assert_env" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4097 4109]))                  
                :type "void")
                nil [4066 4110])
            ("ATTRIBUTE_FORMAT_PRINTF" function
               (:prototype-flag t
                :type "int")
                nil [4174 4204])
            ("initialize_environment" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4247 4259])
                    ("" variable
                       (:pointer 1
                        :type ("emacs_env_private" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4267 4294]))                  
                :type ("emacs_env" type (:type "class") nil nil))
                nil [4205 4295])
            ("finalize_environment" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4330 4342]))                  
                :type "void")
                nil [4296 4343])
            ("finalize_environment_unwind" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4385 4392]))                  
                :type "void")
                nil [4344 4393])
            ("finalize_runtime_unwind" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4431 4438]))                  
                :type "void")
                nil [4394 4439])
            ("module_handle_signal" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4474 4486])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4487 4499]))                  
                :type "void")
                nil [4440 4500])
            ("module_handle_throw" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4534 4546])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4547 4559]))                  
                :type "void")
                nil [4501 4560])
            ("module_non_local_exit_signal_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4605 4617])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4627 4639])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4640 4652]))                  
                :type "void")
                nil [4561 4653])
            ("module_non_local_exit_throw_1" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4697 4709])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4718 4730])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4731 4743]))                  
                :type "void")
                nil [4654 4744])
            ("module_out_of_memory" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4779 4791]))                  
                :type "void")
                nil [4745 4792])
            ("module_reset_handlerlist" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4831 4849]))                  
                :type "void")
                nil [4793 4850])
            ("verify" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NIL_IS_ZERO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5104 5116]))                  
                :type "int")
                nil [5096 5117])
            ("module_nil" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("emacs_value" type (:type "class") nil nil))
                nil [5118 5158])
            ("module_assertions" variable
               (:typemodifiers ("static")
                :default-value "false"
                :type "bool")
                nil [5160 5198])
            ("global_env" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("emacs_env" type (:type "class") nil nil))
                nil [5199 5228])
            ("global_env_private" variable
               (:typemodifiers ("static")
                :type ("emacs_env_private" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [5229 5280])
            ("MODULE_HANDLE_NONLOCAL_EXIT" variable (:constant-flag t) nil [6396 6423])
            ("MODULE_SETJMP" variable (:constant-flag t) nil [6588 6601])
            ("MODULE_SETJMP_1" variable (:constant-flag t) nil [7478 7493])
            ("MODULE_FUNCTION_BEGIN_NO_CATCH" variable (:constant-flag t) nil [9904 9934])
            ("MODULE_FUNCTION_BEGIN" variable (:constant-flag t) nil [10540 10561])
            ("CHECK_USER_PTR" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("obj" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10708 10724]))                  
                :type "void")
                nil [10680 10777])
            ("module_get_environment" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("ert" variable
                       (:pointer 1
                        :type ("emacs_runtime" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10991 11017]))                  
                :type ("emacs_env" type (:type "class") nil nil))
                nil [10948 11115])
            ("module_make_global_ref" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11283 11298])
                    ("ref" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11299 11315]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [11240 11972])
            ("module_free_global_ref" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12010 12025])
                    ("ref" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12026 12042]))                  
                :type "void")
                nil [11974 13377])
            ("module_non_local_exit_check" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13439 13454]))                  
                :type ("emacs_funcall_exit" type (:type "enum") nil nil))
                nil [13379 13567])
            ("module_non_local_exit_clear" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13610 13625]))                  
                :type "void")
                nil [13569 13759])
            ("module_non_local_exit_get" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13819 13834])
                    ("sym" variable
                       (:pointer 1
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13835 13852])
                    ("data" variable
                       (:pointer 1
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13853 13871]))                  
                :type ("emacs_funcall_exit" type (:type "enum") nil nil))
                nil [13761 14268])
            ("module_non_local_exit_signal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14359 14374])
                    ("sym" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14375 14391])
                    ("data" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14392 14409]))                  
                :type "void")
                nil [14317 14630])
            ("module_non_local_exit_throw" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14673 14688])
                    ("tag" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14689 14705])
                    ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14706 14724]))                  
                :type "void")
                nil [14632 14944])
            ("allocate_module_function" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [15009 15014]))                  
                :type ("Lisp_Module_Function" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [14946 15145])
            ("XSET_MODULE_FUNCTION" variable (:constant-flag t) nil [15155 15175])
            ("module_make_function" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15393 15408])
                    ("min_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15409 15429])
                    ("max_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15430 15450])
                    ("subr" variable (:type ("emacs_subr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15459 15475])
                    ("documentation" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15476 15502])
                    ("data" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [15511 15522]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [15352 16364])
            ("module_funcall" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16401 16416])
                    ("fun" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16417 16433])
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16434 16450])
                    ("args" variable
                       (:dereference 1
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16453 16472]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [16366 17040])
            ("module_intern" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17076 17091])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17092 17109]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [17042 17196])
            ("module_type_of" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17233 17248])
                    ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17249 17267]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [17198 17373])
            ("module_is_not_nil" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17406 17421])
                    ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17422 17440]))                  
                :type "bool")
                nil [17375 17527])
            ("module_eq" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17552 17567])
                    ("a" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17568 17582])
                    ("b" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17583 17597]))                  
                :type "bool")
                nil [17529 17695])
            ("module_extract_integer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17737 17752])
                    ("n" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17753 17767]))                  
                :type ("intmax_t" type (:type "class") nil nil))
                nil [17697 18039])
            ("module_make_integer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18081 18096])
                    ("n" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18097 18108]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [18041 18403])
            ("module_extract_float" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18441 18456])
                    ("f" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18457 18471]))                  
                :type "double")
                nil [18405 18618])
            ("module_make_float" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18658 18673])
                    ("d" variable (:type "double") (reparse-symbol arg-sub-list) [18674 18683]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [18620 18771])
            ("module_copy_string_contents" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18814 18829])
                    ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18830 18848])
                    ("buffer" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [18849 18862])
                    ("length" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18871 18889]))                  
                :type "bool")
                nil [18773 19463])
            ("module_make_string" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19504 19519])
                    ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [19520 19536])
                    ("length" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19537 19554]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [19465 19942])
            ("module_make_user_ptr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19985 20000])
                    ("fin" variable (:type ("emacs_finalizer_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20001 20030])
                    ("ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [20031 20041]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [19944 20139])
            ("module_get_user_ptr" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20176 20191])
                    ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20192 20209]))                  
                :type "void")
                nil [20141 20343])
            ("module_set_user_ptr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20378 20393])
                    ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20394 20411])
                    ("ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [20412 20422]))                  
                :type "void")
                nil [20345 20551])
            ("module_get_user_finalizer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20612 20627])
                    ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20628 20645]))                  
                :type ("emacs_finalizer_function" type (:type "class") nil nil))
                nil [20553 20787])
            ("module_set_user_finalizer" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20828 20843])
                    ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20844 20861])
                    ("fin" variable (:type ("emacs_finalizer_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20868 20897]))                  
                :type "void")
                nil [20789 21034])
            ("check_vec_index" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("lvec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21065 21082])
                    ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21083 21095]))                  
                :type "void")
                nil [21036 21265])
            ("module_vec_set" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21295 21310])
                    ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21311 21327])
                    ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21328 21340])
                    ("val" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21341 21357]))                  
                :type "void")
                nil [21267 21499])
            ("module_vec_get" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21536 21551])
                    ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21552 21568])
                    ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21569 21581]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [21501 21740])
            ("module_vec_size" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21776 21791])
                    ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21792 21808]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [21742 21929])
            ("module_should_quit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22051 22066]))                  
                :type "bool")
                nil [22019 22187])
            ("module_signal_or_throw" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env_private" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22248 22278]))                  
                :type "void")
                nil [22212 22629])
            ("DEFUN" function
               (:arguments 
                  ( ("" variable (:type ("Fmodule_load" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22653 22666])
                    ("" variable (:type ("Smodule_load" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22667 22680])
                    ("" variable (:type ("doc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22697 22701]))                  
                :type "int")
                nil [22631 22748])
            ("funcall_module" function
               (:arguments 
                  ( ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24514 24535])
                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24536 24552])
                    ("arglist" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24553 24574]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [24486 25884])
            ("module_function_arity" function
               (:arguments 
                  ( ("function" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Lisp_Module_Function" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [25921 25971]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [25886 26152])
            ("module_assert_thread" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [26216 26221]))                  
                :type "void")
                nil [26182 26488])
            ("module_assert_runtime" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ert" variable
                       (:pointer 1
                        :type ("emacs_runtime" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26525 26551]))                  
                :type "void")
                nil [26490 26866])
            ("module_assert_env" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26899 26914]))                  
                :type "void")
                nil [26868 27262])
            ("module_non_local_exit_signal_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27308 27323])
                    ("sym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27324 27340])
                    ("data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27345 27362]))                  
                :type "void")
                nil [27264 27630])
            ("module_non_local_exit_throw_1" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27675 27690])
                    ("tag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27691 27707])
                    ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27718 27736]))                  
                :type "void")
                nil [27632 28004])
            ("module_out_of_memory" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28096 28111]))                  
                :type "void")
                nil [28062 28312])
            ("ltv_mark" variable
               (:typemodifiers ("static")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29031 29059])
            ("value_to_lisp_bits" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("v" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29213 29227]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29174 30104])
            ("value_to_lisp" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("v" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30254 30268]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30220 31369])
            ("lisp_to_value_bits" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("o" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31607 31621]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [31568 32002])
            ("lisp_to_value" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32178 32193])
                    ("o" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32194 32208]))                  
                :type ("emacs_value" type (:type "class") nil nil))
                nil [32144 33165])
            ("initialize_environment" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [33611 33626])
                    ("priv" variable
                       (:pointer 1
                        :type ("emacs_env_private" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [33627 33658]))                  
                :type ("emacs_env" type (:type "class") nil nil))
                nil [33568 35266])
            ("finalize_environment" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35379 35394]))                  
                :type "void")
                nil [35345 35645])
            ("finalize_environment_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [35688 35698]))                  
                :type "void")
                nil [35647 35732])
            ("finalize_runtime_unwind" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("raw_ert" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [35771 35785]))                  
                :type "void")
                nil [35734 35986])
            ("mark_modules" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [36007 36012]))                  
                :type "void")
                nil [35988 36360])
            ("module_reset_handlerlist" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("phandlerlist" variable
                       (:pointer 2
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [36761 36791]))                  
                :type "void")
                nil [36723 36872])
            ("module_handle_signal" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37046 37061])
                    ("err" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37062 37078]))                  
                :type "void")
                nil [37012 37146])
            ("module_handle_throw" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("env" variable
                       (:pointer 1
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37320 37335])
                    ("tag_val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37336 37356]))                  
                :type "void")
                nil [37287 37431])
            ("init_module_assertions" function
               (:arguments 
                  ( ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [37495 37507]))                  
                :type "void")
                nil [37466 37753])
            ("module_abort" function
               (:arguments 
                  ( ("format" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [37821 37840])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [37841 37845]))                  
                :type "int")
                nil [37807 38048])
            ("syms_of_module" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [38102 38107]))                  
                :type "void")
                nil [38081 41333]))          
      :file "emacs-module.c"
      :pointmax 41334
      :fsize 41333
      :lastmodtime '(23408 44231 536224 511000)
      :unmatched-syntax '((semantic-list 37800 . 37806) (symbol 37777 . 37800) (number 37804 . 37805) (number 37801 . 37802) (VOID 37772 . 37776) (number 37804 . 37805) (number 37801 . 37802) (STATIC 37755 . 37761) (number 37804 . 37805) (number 37801 . 37802) (semantic-list 22749 . 24484) (punctuation 22700 . 22701) (number 22687 . 22688) (number 22684 . 22685) (number 22681 . 22682) (string 22638 . 22651) (string 6836 . 6903) (symbol 6830 . 6835) (punctuation 6829 . 6830) (number 4201 . 4202) (number 4198 . 4199) (semantic-list 4146 . 4171) (symbol 4133 . 4145) (VOID 4128 . 4132) (STATIC 4111 . 4117) (TYPEDEF 2860 . 2867) (TYPEDEF 2523 . 2530))
      :lexical-table 
        '(("MODULE_FUNCTION_BEGIN_NO_CATCH" (spp-arg-list ("error_retval") 9934 . 9948) . 
              ((DO "do" 9972 . 9974) (semantic-list "{                                                                  \\
    module_assert_thread ();                                            \\
    module_assert_env (env);                                            \\
    if (module_non_local_exit_check (env) != emacs_funcall_exit_return) \\
      return error_retval;                                              \\
  }" 9975 . 10343) (WHILE "while" 10344 . 10349) (semantic-list "(false)" 10350 . 10357)))
          ("MODULE_HANDLE_NONLOCAL_EXIT" (spp-arg-list ("retval") 6423 . 6431) . 
              ((symbol "MODULE_SETJMP" 6456 . 6469) (semantic-list "(CONDITION_CASE, module_handle_signal, retval)" 6470 . 6516) (punctuation ";" 6516 . 6517) (symbol "MODULE_SETJMP" 6522 . 6535) (semantic-list "(CATCHER_ALL, module_handle_throw, retval)" 6536 . 6578)))
          ("MODULE_FUNCTION_BEGIN" (spp-arg-list ("error_retval") 10561 . 10575) . 
              ((symbol "MODULE_FUNCTION_BEGIN_NO_CATCH" 10585 . 10615) (semantic-list "(error_retval)" 10616 . 10630) (punctuation ";" 10630 . 10631) (symbol "MODULE_HANDLE_NONLOCAL_EXIT" 10636 . 10663) (semantic-list "(error_retval)" 10664 . 10678)))
          ("XSET_MODULE_FUNCTION" (spp-arg-list ("var" "ptr") 15175 . 15185) . ((symbol "XSETPSEUDOVECTOR" 15190 . 15206) (semantic-list "(var, ptr, PVEC_MODULE_FUNCTION)" 15207 . 15239)))
          ("MODULE_SETJMP" (spp-arg-list ("handlertype" "handlerfunc" "retval") 6601 . 6635) . ((symbol "MODULE_SETJMP_1" 6649 . 6664) (semantic-list "(handlertype, handlerfunc, retval,			       \\
		   internal_handler_##handlertype,			       \\
		   internal_cleanup_##handlertype)" 6665 . 6795)))
          ("MODULE_SETJMP_1" (spp-arg-list ("handlertype" "handlerfunc" "retval" "c0" "c") 7493 . 7534) . 
              ((IF "if" 7539 . 7541) (semantic-list "(module_non_local_exit_check (env) != emacs_funcall_exit_return)" 7542 . 7606) (RETURN "return" 7613 . 7619) (symbol "retval" 7620 . 7626) (punctuation ";" 7626 . 7627) (STRUCT "struct" 7638 . 7644) (symbol "handler" 7645 . 7652) (punctuation "*" 7653 . 7654) (symbol "c0" 7654 . 7656) (punctuation "=" 7657 . 7658) (symbol "push_handler_nosignal" 7659 . 7680) (semantic-list "(Qt, handlertype)" 7681 . 7698) (punctuation ";" 7698 . 7699) (IF "if" 7705 . 7707) (semantic-list "(!c0)" 7708 . 7713) (semantic-list "{									\\
      module_out_of_memory (env);					\\
      return retval;							\\
    }" 7727 . 7813) (STRUCT "struct" 7826 . 7832) (symbol "handler" 7833 . 7840) (punctuation "*" 7841 . 7842) (symbol "c" 7842 . 7843) (symbol "__attribute__" 7844 . 7857) (semantic-list "((cleanup (module_reset_handlerlist)))" 7858 . 7896) (punctuation "=" 7903 . 7904) (symbol "c0" 7905 . 7907) (punctuation ";" 7907 . 7908) (IF "if" 7920 . 7922) (semantic-list "(sys_setjmp (c->jmp))" 7923 . 7944) (semantic-list "{									\\
      (handlerfunc) (env, c->val);					\\
      return retval;							\\
    }" 7956 . 8043) (DO "do" 8056 . 8058) (semantic-list "{ }" 8059 . 8062) (WHILE "while" 8063 . 8068) (semantic-list "(false)" 8069 . 8076)))
          )
)
    (semanticdb-table "semanticdb-table-19c046c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_CONFIG_H" variable (:constant-flag t) nil [1131 1145])
            ("AMPERSAND_FULL_NAME" variable (:constant-flag t) nil [1341 1360])
            ("COPYRIGHT" variable (:constant-flag t) nil [2275 2284])
            ("DEFAULT_SOUND_DEVICE" variable (:constant-flag t) nil [2760 2780])
            ("DIRECTORY_SEP" variable (:constant-flag t) nil [2932 2945])
            ("DIR_TO_FD" variable (:constant-flag t) nil [3133 3142])
            ("EMACS_CONFIGURATION" variable (:constant-flag t) nil [3730 3749])
            ("EMACS_CONFIG_FEATURES" variable (:constant-flag t) nil [3846 3867])
            ("EMACS_CONFIG_OPTIONS" variable (:constant-flag t) nil [4126 4146])
            ("FLEXIBLE_ARRAY_MEMBER" variable (:constant-flag t) nil [5064 5085])
            ("GC_SETJMP_WORKS" variable (:constant-flag t) nil [6440 6455])
            ("GDK_DISABLE_DEPRECATION_WARNINGS" variable (:constant-flag t) nil [6527 6559])
            ("GETGROUPS_T" variable (:constant-flag t) nil [6685 6696])
            ("GETTIMEOFDAY_TIMEZONE" variable (:constant-flag t) nil [7062 7083])
            ("GLIB_DISABLE_DEPRECATION_WARNINGS" variable (:constant-flag t) nil [7165 7198])
            ("GNULIB_CLOSE_STREAM" variable (:constant-flag t) nil [7438 7457])
            ("GNULIB_FACCESSAT" variable (:constant-flag t) nil [7617 7633])
            ("GNULIB_FDOPENDIR" variable (:constant-flag t) nil [7793 7809])
            ("GNULIB_FSCANF" variable (:constant-flag t) nil [7966 7979])
            ("GNULIB_MKOSTEMP" variable (:constant-flag t) nil [8138 8153])
            ("GNULIB_SCANF" variable (:constant-flag t) nil [8818 8830])
            ("GNU_LINUX" variable (:constant-flag t) nil [8899 8908])
            ("HAVE_ACCEPT4" variable (:constant-flag t) nil [9065 9077])
            ("HAVE_ACL_DELETE_DEF_FILE" variable (:constant-flag t) nil [9690 9714])
            ("HAVE_ACL_ENTRIES" variable (:constant-flag t) nil [9986 10002])
            ("HAVE_ACL_EXTENDED_FILE" variable (:constant-flag t) nil [10078 10100])
            ("HAVE_ACL_FIRST_ENTRY" variable (:constant-flag t) nil [10170 10190])
            ("HAVE_ACL_FREE" variable (:constant-flag t) nil [10257 10270])
            ("HAVE_ACL_FROM_MODE" variable (:constant-flag t) nil [10435 10453])
            ("HAVE_ACL_FROM_TEXT" variable (:constant-flag t) nil [10525 10543])
            ("HAVE_ACL_GET_FD" variable (:constant-flag t) nil [10612 10627])
            ("HAVE_ACL_GET_FILE" variable (:constant-flag t) nil [10698 10715])
            ("HAVE_ACL_LIBACL_H" variable (:constant-flag t) nil [10789 10806])
            ("HAVE_ACL_SET_FD" variable (:constant-flag t) nil [10875 10890])
            ("HAVE_ACL_SET_FILE" variable (:constant-flag t) nil [10961 10978])
            ("HAVE_ALIGNED_ALLOC" variable (:constant-flag t) nil [11337 11355])
            ("HAVE_ALLOCA" variable (:constant-flag t) nil [11489 11500])
            ("HAVE_ALLOCA_H" variable (:constant-flag t) nil [11595 11608])
            ("HAVE_ALSA" variable (:constant-flag t) nil [11660 11669])
            ("HAVE_BYTESWAP_H" variable (:constant-flag t) nil [11741 11756])
            ("HAVE_C99_STRTOLD" variable (:constant-flag t) nil [11814 11830])
            ("HAVE_CFMAKERAW" variable (:constant-flag t) nil [11898 11912])
            ("HAVE_CFSETSPEED" variable (:constant-flag t) nil [11981 11996])
            ("HAVE_CLOCK_GETTIME" variable (:constant-flag t) nil [12068 12086])
            ("HAVE_CLOCK_SETTIME" variable (:constant-flag t) nil [12158 12176])
            ("HAVE_C_VARARRAYS" variable (:constant-flag t) nil [12414 12430])
            ("HAVE_DBUS" variable (:constant-flag t) nil [12595 12604])
            ("HAVE_DBUS_TYPE_IS_VALID" variable (:constant-flag t) nil [12681 12704])
            ("HAVE_DBUS_VALIDATE_BUS_NAME" variable (:constant-flag t) nil [12785 12812])
            ("HAVE_DBUS_VALIDATE_INTERFACE" variable (:constant-flag t) nil [12894 12922])
            ("HAVE_DBUS_VALIDATE_MEMBER" variable (:constant-flag t) nil [13001 13026])
            ("HAVE_DBUS_VALIDATE_PATH" variable (:constant-flag t) nil [13103 13126])
            ("HAVE_DBUS_WATCH_GET_UNIX_FD" variable (:constant-flag t) nil [13207 13234])
            ("HAVE_DECL_ALARM" variable (:constant-flag t) nil [13330 13345])
            ("HAVE_DECL_ALIGNED_ALLOC" variable (:constant-flag t) nil [13449 13472])
            ("HAVE_DECL_CLEARERR_UNLOCKED" variable (:constant-flag t) nil [13580 13607])
            ("HAVE_DECL_FDATASYNC" variable (:constant-flag t) nil [13821 13840])
            ("HAVE_DECL_FDOPENDIR" variable (:constant-flag t) nil [13940 13959])
            ("HAVE_DECL_FEOF_UNLOCKED" variable (:constant-flag t) nil [14063 14086])
            ("HAVE_DECL_FERROR_UNLOCKED" variable (:constant-flag t) nil [14192 14217])
            ("HAVE_DECL_FFLUSH_UNLOCKED" variable (:constant-flag t) nil [14323 14348])
            ("HAVE_DECL_FGETS_UNLOCKED" variable (:constant-flag t) nil [14453 14477])
            ("HAVE_DECL_FPUTC_UNLOCKED" variable (:constant-flag t) nil [14582 14606])
            ("HAVE_DECL_FPUTS_UNLOCKED" variable (:constant-flag t) nil [14711 14735])
            ("HAVE_DECL_FREAD_UNLOCKED" variable (:constant-flag t) nil [14840 14864])
            ("HAVE_DECL_FWRITE_UNLOCKED" variable (:constant-flag t) nil [14970 14995])
            ("HAVE_DECL_GETCHAR_UNLOCKED" variable (:constant-flag t) nil [15102 15128])
            ("HAVE_DECL_GETC_UNLOCKED" variable (:constant-flag t) nil [15232 15255])
            ("HAVE_DECL_GETDTABLESIZE" variable (:constant-flag t) nil [15359 15382])
            ("HAVE_DECL_LOCALTIME_R" variable (:constant-flag t) nil [15602 15623])
            ("HAVE_DECL_MEMRCHR" variable (:constant-flag t) nil [15721 15738])
            ("HAVE_DECL_PUTCHAR_UNLOCKED" variable (:constant-flag t) nil [15845 15871])
            ("HAVE_DECL_PUTC_UNLOCKED" variable (:constant-flag t) nil [15975 15998])
            ("HAVE_DECL_STRMODE" variable (:constant-flag t) nil [16096 16113])
            ("HAVE_DECL_STRTOIMAX" variable (:constant-flag t) nil [16213 16232])
            ("HAVE_DECL_SYS_SIGLIST" variable (:constant-flag t) nil [16452 16473])
            ("HAVE_DECL___FPENDING" variable (:constant-flag t) nil [16808 16828])
            ("HAVE_DIRENT_H" variable (:constant-flag t) nil [17028 17041])
            ("HAVE_DLADDR" variable (:constant-flag t) nil [17183 17194])
            ("HAVE_DUP2" variable (:constant-flag t) nil [17336 17345])
            ("HAVE_ENDGRENT" variable (:constant-flag t) nil [17579 17592])
            ("HAVE_ENDPWENT" variable (:constant-flag t) nil [17659 17672])
            ("HAVE_ENVIRON_DECL" variable (:constant-flag t) nil [17737 17754])
            ("HAVE_EXECINFO_H" variable (:constant-flag t) nil [17913 17928])
            ("HAVE_EXPLICIT_BZERO" variable (:constant-flag t) nil [18001 18020])
            ("HAVE_FACCESSAT" variable (:constant-flag t) nil [18185 18199])
            ("HAVE_FCHDIR" variable (:constant-flag t) nil [18339 18350])
            ("HAVE_FCHMOD" variable (:constant-flag t) nil [18415 18426])
            ("HAVE_FCNTL" variable (:constant-flag t) nil [18490 18500])
            ("HAVE_FDOPENDIR" variable (:constant-flag t) nil [18653 18667])
            ("HAVE_FORK" variable (:constant-flag t) nil [18730 18739])
            ("HAVE_FREEIFADDRS" variable (:constant-flag t) nil [18809 18825])
            ("HAVE_FREETYPE" variable (:constant-flag t) nil [18903 18916])
            ("HAVE_FSEEKO" variable (:constant-flag t) nil [19004 19015])
            ("HAVE_FSTATAT" variable (:constant-flag t) nil [19081 19093])
            ("HAVE_FSYNC" variable (:constant-flag t) nil [19157 19167])
            ("HAVE_FUTIMENS" variable (:constant-flag t) nil [19234 19247])
            ("HAVE_FUTIMES" variable (:constant-flag t) nil [19313 19325])
            ("HAVE_FUTIMESAT" variable (:constant-flag t) nil [19393 19407])
            ("HAVE_GAI_STRERROR" variable (:constant-flag t) nil [19478 19495])
            ("HAVE_GETADDRINFO_A" variable (:constant-flag t) nil [19722 19740])
            ("HAVE_GETDTABLESIZE" variable (:constant-flag t) nil [19812 19830])
            ("HAVE_GETGRENT" variable (:constant-flag t) nil [19897 19910])
            ("HAVE_GETHOSTNAME" variable (:constant-flag t) nil [20078 20094])
            ("HAVE_GETIFADDRS" variable (:constant-flag t) nil [20163 20178])
            ("HAVE_GETOPT_H" variable (:constant-flag t) nil [20248 20261])
            ("HAVE_GETOPT_LONG_ONLY" variable (:constant-flag t) nil [20336 20357])
            ("HAVE_GETPAGESIZE" variable (:constant-flag t) nil [20427 20443])
            ("HAVE_GETPT" variable (:constant-flag t) nil [20507 20517])
            ("HAVE_GETPWENT" variable (:constant-flag t) nil [20584 20597])
            ("HAVE_GETRLIMIT" variable (:constant-flag t) nil [20665 20679])
            ("HAVE_GETRUSAGE" variable (:constant-flag t) nil [20747 20761])
            ("HAVE_GETSOCKNAME" variable (:constant-flag t) nil [20831 20847])
            ("HAVE_GETTIMEOFDAY" variable (:constant-flag t) nil [20918 20935])
            ("HAVE_GET_CURRENT_DIR_NAME" variable (:constant-flag t) nil [21014 21039])
            ("HAVE_GIF" variable (:constant-flag t) nil [21172 21180])
            ("HAVE_GLIB" variable (:constant-flag t) nil [21232 21241])
            ("HAVE_GMP" variable (:constant-flag t) nil [21302 21310])
            ("HAVE_GMP_H" variable (:constant-flag t) nil [21377 21387])
            ("HAVE_GNUTLS" variable (:constant-flag t) nil [21429 21440])
            ("HAVE_GPM" variable (:constant-flag t) nil [21507 21515])
            ("HAVE_GRANTPT" variable (:constant-flag t) nil [21581 21593])
            ("HAVE_GSETTINGS" variable (:constant-flag t) nil [21643 21657])
            ("HAVE_GTK3" variable (:constant-flag t) nil [21712 21721])
            ("HAVE_GTK_ADJUSTMENT_GET_PAGE_SIZE" variable (:constant-flag t) nil [21808 21841])
            ("HAVE_GTK_DIALOG_GET_ACTION_AREA" variable (:constant-flag t) nil [21926 21957])
            ("HAVE_GTK_HANDLE_BOX_NEW" variable (:constant-flag t) nil [22145 22168])
            ("HAVE_GTK_ORIENTABLE_SET_ORIENTATION" variable (:constant-flag t) nil [22257 22292])
            ("HAVE_GTK_TEAROFF_MENU_ITEM_NEW" variable (:constant-flag t) nil [22376 22406])
            ("HAVE_GTK_WIDGET_GET_MAPPED" variable (:constant-flag t) nil [22486 22512])
            ("HAVE_GTK_WIDGET_GET_SENSITIVE" variable (:constant-flag t) nil [22595 22624])
            ("HAVE_GTK_WIDGET_GET_WINDOW" variable (:constant-flag t) nil [22704 22730])
            ("HAVE_GTK_WIDGET_SET_HAS_WINDOW" variable (:constant-flag t) nil [22814 22844])
            ("HAVE_GTK_WINDOW_SET_HAS_RESIZE_GRIP" variable (:constant-flag t) nil [22933 22968])
            ("HAVE_IEEE754_H" variable (:constant-flag t) nil [23039 23053])
            ("HAVE_IFADDRS_H" variable (:constant-flag t) nil [23124 23138])
            ("HAVE_INET_SOCKETS" variable (:constant-flag t) nil [23265 23282])
            ("HAVE_INOTIFY" variable (:constant-flag t) nil [23328 23340])
            ("HAVE_INTTYPES_H" variable (:constant-flag t) nil [23412 23427])
            ("HAVE_ISBLANK" variable (:constant-flag t) nil [23493 23505])
            ("HAVE_ISWCTYPE" variable (:constant-flag t) nil [23572 23585])
            ("HAVE_JPEG" variable (:constant-flag t) nil [23664 23673])
            ("HAVE_JSON" variable (:constant-flag t) nil [23716 23725])
            ("HAVE_LANGINFO_CODESET" variable (:constant-flag t) nil [24410 24431])
            ("HAVE_LCMS2" variable (:constant-flag t) nil [24502 24512])
            ("HAVE_LIBOTF" variable (:constant-flag t) nil [25089 25100])
            ("HAVE_LIBSYSTEMD" variable (:constant-flag t) nil [25310 25325])
            ("HAVE_LIBXML2" variable (:constant-flag t) nil [25396 25408])
            ("HAVE_LIMITS_H" variable (:constant-flag t) nil [25478 25491])
            ("HAVE_LINUX_FS_H" variable (:constant-flag t) nil [25563 25578])
            ("HAVE_LINUX_SYSINFO" variable (:constant-flag t) nil [25644 25662])
            ("HAVE_LOCALTIME_R" variable (:constant-flag t) nil [25856 25872])
            ("HAVE_LOG2" variable (:constant-flag t) nil [25935 25944])
            ("HAVE_LONG_LONG_INT" variable (:constant-flag t) nil [26018 26036])
            ("HAVE_LRAND48" variable (:constant-flag t) nil [26102 26114])
            ("HAVE_LSTAT" variable (:constant-flag t) nil [26178 26188])
            ("HAVE_LUTIMES" variable (:constant-flag t) nil [26254 26266])
            ("HAVE_M17N_FLT" variable (:constant-flag t) nil [26318 26331])
            ("HAVE_MALLOC_H" variable (:constant-flag t) nil [27135 27148])
            ("HAVE_MBSTATE_T" variable (:constant-flag t) nil [27311 27325])
            ("HAVE_MEMORY_H" variable (:constant-flag t) nil [27395 27408])
            ("HAVE_MEMRCHR" variable (:constant-flag t) nil [27474 27486])
            ("HAVE_MINMAX_IN_SYS_PARAM_H" variable (:constant-flag t) nil [27667 27693])
            ("HAVE_MKOSTEMP" variable (:constant-flag t) nil [27760 27773])
            ("HAVE_MMAP" variable (:constant-flag t) nil [27845 27854])
            ("HAVE_MODULES" variable (:constant-flag t) nil [28005 28017])
            ("HAVE_NET_IF_H" variable (:constant-flag t) nil [28262 28275])
            ("HAVE_NEWLOCALE" variable (:constant-flag t) nil [28343 28357])
            ("HAVE_OTF_GET_VARIATION_GLYPHS" variable (:constant-flag t) nil [28691 28720])
            ("HAVE_PERSONALITY_ADDR_NO_RANDOMIZE" variable (:constant-flag t) nil [28905 28939])
            ("HAVE_PIPE2" variable (:constant-flag t) nil [29003 29013])
            ("HAVE_PNG" variable (:constant-flag t) nil [29072 29080])
            ("HAVE_POSIX_OPENPT" variable (:constant-flag t) nil [29246 29263])
            ("HAVE_PRCTL" variable (:constant-flag t) nil [29327 29337])
            ("HAVE_PROCFS" variable (:constant-flag t) nil [29396 29407])
            ("HAVE_PSELECT" variable (:constant-flag t) nil [29473 29485])
            ("HAVE_PTHREAD" variable (:constant-flag t) nil [29641 29653])
            ("HAVE_PTHREAD_H" variable (:constant-flag t) nil [29724 29738])
            ("HAVE_PTHREAD_SIGMASK" variable (:constant-flag t) nil [29828 29848])
            ("HAVE_PTYS" variable (:constant-flag t) nil [29909 29918])
            ("HAVE_PTY_H" variable (:constant-flag t) nil [29985 29995])
            ("HAVE_PUTENV" variable (:constant-flag t) nil [30060 30071])
            ("HAVE_PWD_H" variable (:constant-flag t) nil [30138 30148])
            ("HAVE_RANDOM" variable (:constant-flag t) nil [30213 30224])
            ("HAVE_READLINK" variable (:constant-flag t) nil [30291 30304])
            ("HAVE_READLINKAT" variable (:constant-flag t) nil [30373 30388])
            ("HAVE_RECVFROM" variable (:constant-flag t) nil [30455 30468])
            ("HAVE_RINT" variable (:constant-flag t) nil [30531 30540])
            ("HAVE_RSVG" variable (:constant-flag t) nil [30588 30597])
            ("HAVE_SBRK" variable (:constant-flag t) nil [30660 30669])
            ("HAVE_SELECT" variable (:constant-flag t) nil [30734 30745])
            ("HAVE_SENDTO" variable (:constant-flag t) nil [30810 30821])
            ("HAVE_SETITIMER" variable (:constant-flag t) nil [30982 30996])
            ("HAVE_SETLOCALE" variable (:constant-flag t) nil [31064 31078])
            ("HAVE_SETRLIMIT" variable (:constant-flag t) nil [31146 31160])
            ("HAVE_SHUTDOWN" variable (:constant-flag t) nil [31227 31240])
            ("HAVE_SIGSETJMP" variable (:constant-flag t) nil [31666 31680])
            ("HAVE_SIGSET_T" variable (:constant-flag t) nil [31749 31762])
            ("HAVE_SNPRINTF" variable (:constant-flag t) nil [31829 31842])
            ("HAVE_SOCKETS" variable (:constant-flag t) nil [31914 31926])
            ("HAVE_SOUND" variable (:constant-flag t) nil [31983 31993])
            ("HAVE_STACK_OVERFLOW_HANDLING" variable (:constant-flag t) nil [32165 32193])
            ("HAVE_STDINT_H" variable (:constant-flag t) nil [32344 32357])
            ("HAVE_STDIO_EXT_H" variable (:constant-flag t) nil [32430 32446])
            ("HAVE_STDLIB_H" variable (:constant-flag t) nil [32516 32529])
            ("HAVE_STPCPY" variable (:constant-flag t) nil [32594 32605])
            ("HAVE_STRINGS_H" variable (:constant-flag t) nil [32676 32690])
            ("HAVE_STRING_H" variable (:constant-flag t) nil [32760 32773])
            ("HAVE_STRSIGNAL" variable (:constant-flag t) nil [32841 32855])
            ("HAVE_STRTOIMAX" variable (:constant-flag t) nil [32923 32937])
            ("HAVE_STRUCT_DIRENT_D_TYPE" variable (:constant-flag t) nil [33124 33149])
            ("HAVE_STRUCT_IFREQ_IFR_ADDR" variable (:constant-flag t) nil [33224 33250])
            ("HAVE_STRUCT_IFREQ_IFR_BROADADDR" variable (:constant-flag t) nil [33448 33479])
            ("HAVE_STRUCT_IFREQ_IFR_FLAGS" variable (:constant-flag t) nil [33555 33582])
            ("HAVE_STRUCT_IFREQ_IFR_HWADDR" variable (:constant-flag t) nil [33659 33687])
            ("HAVE_STRUCT_IFREQ_IFR_NETMASK" variable (:constant-flag t) nil [33765 33794])
            ("HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC" variable (:constant-flag t) nil [34353 34385])
            ("HAVE_STRUCT_TM_TM_ZONE" variable (:constant-flag t) nil [34832 34854])
            ("HAVE_STRUCT_UNIPAIR_UNICODE" variable (:constant-flag t) nil [34930 34957])
            ("HAVE_SYMLINK" variable (:constant-flag t) nil [35107 35119])
            ("HAVE_SYNC" variable (:constant-flag t) nil [35182 35191])
            ("HAVE_SYS_ACL_H" variable (:constant-flag t) nil [35262 35276])
            ("HAVE_SYS_CDEFS_H" variable (:constant-flag t) nil [35445 35461])
            ("HAVE_SYS_MOUNT_H" variable (:constant-flag t) nil [35928 35944])
            ("HAVE_SYS_PARAM_H" variable (:constant-flag t) nil [36017 36033])
            ("HAVE_SYS_PRCTL_H" variable (:constant-flag t) nil [36106 36122])
            ("HAVE_SYS_RESOURCE_H" variable (:constant-flag t) nil [36198 36217])
            ("HAVE_SYS_SELECT_H" variable (:constant-flag t) nil [36291 36308])
            ("HAVE_SYS_SOCKET_H" variable (:constant-flag t) nil [36382 36399])
            ("HAVE_SYS_SOUNDCARD_H" variable (:constant-flag t) nil [36476 36496])
            ("HAVE_SYS_STATFS_H" variable (:constant-flag t) nil [36570 36587])
            ("HAVE_SYS_STAT_H" variable (:constant-flag t) nil [36659 36674])
            ("HAVE_SYS_SYSINFO_H" variable (:constant-flag t) nil [36749 36767])
            ("HAVE_SYS_TIME_H" variable (:constant-flag t) nil [36941 36956])
            ("HAVE_SYS_TYPES_H" variable (:constant-flag t) nil [37029 37045])
            ("HAVE_SYS_UN_H" variable (:constant-flag t) nil [37115 37128])
            ("HAVE_SYS_UTSNAME_H" variable (:constant-flag t) nil [37203 37221])
            ("HAVE_SYS_VFS_H" variable (:constant-flag t) nil [37292 37306])
            ("HAVE_SYS_WAIT_H" variable (:constant-flag t) nil [37483 37498])
            ("HAVE_TERM_H" variable (:constant-flag t) nil [37566 37577])
            ("HAVE_TIFF" variable (:constant-flag t) nil [37646 37655])
            ("HAVE_TIMEGM" variable (:constant-flag t) nil [37720 37731])
            ("HAVE_TIMERFD" variable (:constant-flag t) nil [37813 37825])
            ("HAVE_TIMER_SETTIME" variable (:constant-flag t) nil [37897 37915])
            ("HAVE_TM_GMTOFF" variable (:constant-flag t) nil [38068 38082])
            ("HAVE_TM_ZONE" variable (:constant-flag t) nil [38200 38212])
            ("HAVE_TRUNC" variable (:constant-flag t) nil [38361 38371])
            ("HAVE_TZSET" variable (:constant-flag t) nil [38551 38561])
            ("HAVE_UNISTD_H" variable (:constant-flag t) nil [38631 38644])
            ("HAVE_UNSIGNED_LONG_LONG_INT" variable (:constant-flag t) nil [38727 38754])
            ("HAVE_UTIMENSAT" variable (:constant-flag t) nil [38904 38918])
            ("HAVE_UTMP_H" variable (:constant-flag t) nil [38986 38997])
            ("HAVE_VFORK" variable (:constant-flag t) nil [39169 39179])
            ("HAVE_WCHAR_H" variable (:constant-flag t) nil [39397 39409])
            ("HAVE_WCHAR_T" variable (:constant-flag t) nil [39466 39478])
            ("HAVE_WINDOW_SYSTEM" variable (:constant-flag t) nil [39532 39550])
            ("HAVE_WORKING_FORK" variable (:constant-flag t) nil [39687 39704])
            ("HAVE_WORKING_UTIMES" variable (:constant-flag t) nil [39890 39909])
            ("HAVE_WORKING_VFORK" variable (:constant-flag t) nil [39957 39975])
            ("HAVE_X11" variable (:constant-flag t) nil [40139 40147])
            ("HAVE_X11R6" variable (:constant-flag t) nil [40225 40235])
            ("HAVE_X11R6_XIM" variable (:constant-flag t) nil [40304 40318])
            ("HAVE_XDBE" variable (:constant-flag t) nil [40555 40564])
            ("HAVE_XFIXES" variable (:constant-flag t) nil [40628 40639])
            ("HAVE_XFT" variable (:constant-flag t) nil [40698 40706])
            ("HAVE_XIM" variable (:constant-flag t) nil [40756 40764])
            ("HAVE_XINERAMA" variable (:constant-flag t) nil [40830 40843])
            ("HAVE_XKB" variable (:constant-flag t) nil [40904 40912])
            ("HAVE_XPM" variable (:constant-flag t) nil [40979 40987])
            ("HAVE_XRANDR" variable (:constant-flag t) nil [41051 41062])
            ("HAVE_XRMSETDATABASE" variable (:constant-flag t) nil [41135 41154])
            ("HAVE_XSCREENNUMBEROFSCREEN" variable (:constant-flag t) nil [41234 41260])
            ("HAVE_XSCREENRESOURCESTRING" variable (:constant-flag t) nil [41340 41366])
            ("HAVE_XWIDGETS" variable (:constant-flag t) nil [41426 41439])
            ("HAVE_X_I18N" variable (:constant-flag t) nil [41497 41508])
            ("HAVE_X_SM" variable (:constant-flag t) nil [41573 41582])
            ("HAVE_X_WINDOWS" variable (:constant-flag t) nil [41652 41666])
            ("HAVE_ZLIB" variable (:constant-flag t) nil [41732 41741])
            ("HAVE__SETJMP" variable (:constant-flag t) nil [41801 41813])
            ("__builtin_expect" variable (:constant-flag t) nil [41987 42003])
            ("HAVE___BUILTIN_FRAME_ADDRESS" variable (:constant-flag t) nil [42161 42189])
            ("HAVE___BUILTIN_UNWIND_INIT" variable (:constant-flag t) nil [42269 42295])
            ("HAVE___EXECUTABLE_START" variable (:constant-flag t) nil [42372 42395])
            ("HYBRID_MALLOC" variable (:constant-flag t) nil [42627 42640])
            ("INTERRUPT_INPUT" variable (:constant-flag t) nil [42776 42791])
            ("IS_ANY_SEP" variable (:constant-flag t) nil [42861 42871])
            ("IS_DEVICE_SEP" variable (:constant-flag t) nil [42966 42979])
            ("IS_DIRECTORY_SEP" variable (:constant-flag t) nil [43054 43070])
            ("LINUX_SYSINFO_UNIT" variable (:constant-flag t) nil [43355 43373])
            ("LSTAT_FOLLOWS_SLASHED_SYMLINK" variable (:constant-flag t) nil [43473 43502])
            ("MALLOC_0_IS_NONNULL" variable (:constant-flag t) nil [44022 44041])
            ("__USE_MINGW_ANSI_STDIO" variable (:constant-flag t) nil [44124 44146])
            ("MODULES_SUFFIX" variable (:constant-flag t) nil [44211 44225])
            ("NARROWPROTO" variable (:constant-flag t) nil [44390 44401])
            ("NULL_DEVICE" variable (:constant-flag t) nil [45317 45328])
            ("PACKAGE_BUGREPORT" variable (:constant-flag t) nil [45619 45636])
            ("PACKAGE_NAME" variable (:constant-flag t) nil [45717 45729])
            ("PACKAGE_STRING" variable (:constant-flag t) nil [45810 45824])
            ("PACKAGE_TARNAME" variable (:constant-flag t) nil [45913 45928])
            ("PACKAGE_URL" variable (:constant-flag t) nil [45994 46005])
            ("PACKAGE_VERSION" variable (:constant-flag t) nil [46098 46113])
            ("POLL_FOR_INPUT" variable (:constant-flag t) nil [46377 46391])
            ("PROMOTED_MODE_T" variable (:constant-flag t) nil [46497 46512])
            ("PTY_ITERATION" variable (:constant-flag t) nil [47038 47051])
            ("PTY_NAME_SPRINTF" variable (:constant-flag t) nil [47171 47187])
            ("PTY_OPEN" variable (:constant-flag t) nil [47244 47252])
            ("PTY_TTY_NAME_SPRINTF" variable (:constant-flag t) nil [47475 47495])
            ("SEPCHAR" variable (:constant-flag t) nil [48302 48309])
            ("SIGNALS_VIA_CHARACTERS" variable (:constant-flag t) nil [48476 48498])
            ("STAT_STATFS2_FRSIZE" variable (:constant-flag t) nil [49843 49862])
            ("STAT_STATVFS" variable (:constant-flag t) nil [50399 50411])
            ("STDC_HEADERS" variable (:constant-flag t) nil [50567 50579])
            ("SYSTEM_TYPE" variable (:constant-flag t) nil [50838 50849])
            ("TERMINFO" variable (:constant-flag t) nil [51009 51017])
            ("TERM_HEADER" variable (:constant-flag t) nil [51088 51099])
            ("THREADS_ENABLED" variable (:constant-flag t) nil [51173 51188])
            ("TIME_T_IS_SIGNED" variable (:constant-flag t) nil [51239 51255])
            ("TIME_WITH_SYS_TIME" variable (:constant-flag t) nil [51343 51361])
            ("TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC" variable (:constant-flag t) nil [51617 51662])
            ("UNIX98_PTYS" variable (:constant-flag t) nil [51897 51908])
            ("USABLE_FIONREAD" variable (:constant-flag t) nil [51961 51976])
            ("USABLE_SIGIO" variable (:constant-flag t) nil [52026 52038])
            ("USER_FULL_NAME" variable (:constant-flag t) nil [52087 52101])
            ("USE_ACL" variable (:constant-flag t) nil [52189 52196])
            ("USE_CAIRO" variable (:constant-flag t) nil [52242 52251])
            ("USE_FILE_NOTIFY" variable (:constant-flag t) nil [52310 52325])
            ("USE_GTK" variable (:constant-flag t) nil [52369 52376])
            ("_ALL_SOURCE" variable (:constant-flag t) nil [52746 52757])
            ("_DARWIN_C_SOURCE" variable (:constant-flag t) nil [52844 52860])
            ("_NETBSD_SOURCE" variable (:constant-flag t) nil [53051 53065])
            ("_OPENBSD_SOURCE" variable (:constant-flag t) nil [53152 53167])
            ("_POSIX_PTHREAD_SEMANTICS" variable (:constant-flag t) nil [53266 53290])
            ("__STDC_WANT_IEC_60559_ATTRIBS_EXT__" variable (:constant-flag t) nil [53416 53451])
            ("__STDC_WANT_IEC_60559_BFP_EXT__" variable (:constant-flag t) nil [53573 53604])
            ("__STDC_WANT_IEC_60559_DFP_EXT__" variable (:constant-flag t) nil [53726 53757])
            ("__STDC_WANT_IEC_60559_FUNCS_EXT__" variable (:constant-flag t) nil [53881 53914])
            ("__STDC_WANT_IEC_60559_TYPES_EXT__" variable (:constant-flag t) nil [54038 54071])
            ("__STDC_WANT_LIB_EXT2__" variable (:constant-flag t) nil [54184 54206])
            ("__STDC_WANT_MATH_SPEC_FUNCS__" variable (:constant-flag t) nil [54321 54350])
            ("_TANDEM_SOURCE" variable (:constant-flag t) nil [54432 54446])
            ("_HPUX_ALT_XOPEN_SOCKET_API" variable (:constant-flag t) nil [54850 54876])
            ("__EXTENSIONS__" variable (:constant-flag t) nil [54963 54977])
            ("USE_TOOLKIT_SCROLL_BARS" variable (:constant-flag t) nil [55053 55076])
            ("USE_UNLOCKED_IO" variable (:constant-flag t) nil [55269 55284])
            ("USE_XCB" variable (:constant-flag t) nil [55396 55403])
            ("USE_XIM" variable (:constant-flag t) nil [55475 55482])
            ("USG" variable (:constant-flag t) nil [55621 55624])
            ("XRegisterIMInstantiateCallback_arg6" variable (:constant-flag t) nil [56903 56938])
            ("_DARWIN_USE_64_BIT_INODE" variable (:constant-flag t) nil [57139 57163])
            ("_NETBSD_SOURCE" variable (:constant-flag t) nil [57751 57765])
            ("_USE_STD_STAT" variable (:constant-flag t) nil [59004 59017])
            ("_GL_INLINE" variable (:constant-flag t) nil [62926 62936])
            ("_GL_EXTERN_INLINE" variable (:constant-flag t) nil [62968 62985])
            ("_GL_EXTERN_INLINE_IN_USE" variable (:constant-flag t) nil [63002 63026])
            ("_GL_INLINE_HEADER_BEGIN" variable (:constant-flag t) nil [64045 64068])
            ("_GL_INLINE_HEADER_END" variable (:constant-flag t) nil [64078 64099])
            ("my_strftime" variable (:constant-flag t) nil [65200 65211])
            ("restrict" variable (:constant-flag t) nil [66948 66956])
            ("subprocesses" variable (:constant-flag t) nil [67642 67654])
            ("_GL_UNUSED" variable (:constant-flag t) nil [67891 67901])
            ("_UNUSED_PARAMETER_" variable (:constant-flag t) nil [68094 68112])
            ("_GL_UNUSED_LABEL" variable (:constant-flag t) nil [68415 68431])
            ("_GL_ATTRIBUTE_PURE" variable (:constant-flag t) nil [68605 68623])
            ("_GL_ATTRIBUTE_CONST" variable (:constant-flag t) nil [68828 68847])
            ("_GL_ATTRIBUTE_MALLOC" variable (:constant-flag t) nil [69010 69030])
            ("conf_post.h" include (:system-flag t) nil [69186 69208]))          
      :file "config.h"
      :pointmax 69276
      :fsize 69275
      :lastmodtime '(23408 44801 258281 536000)
      :unmatched-syntax '((close-paren 68404 . 68405) (number 68403 . 68404) (punctuation 68401 . 68402) (punctuation 68400 . 68401) (symbol "2" 68385 . 68399) (punctuation 68383 . 68384) (punctuation 68382 . 68383) (number 68380 . 68381) (punctuation 68378 . 68379) (punctuation 68377 . 68378) (symbol "8" 68368 . 68376) (open-paren 68367 . 68368) (punctuation 68365 . 68366) (punctuation 68364 . 68365) (close-paren 62725 . 62726) (symbol 62694 . 62725) (symbol 62686 . 62693) (punctuation 62685 . 62686) (punctuation 62683 . 62684) (punctuation 62682 . 62683))
      :lexical-table 
        '(("DIRECTORY_SEP" . ((string "'/'" 2946 . 2949)))
          ("GNU_LINUX")
          ("HAVE_DBUS_VALIDATE_BUS_NAME" . ((number "1" 12813 . 12814)))
          ("HAVE_DECL_FGETS_UNLOCKED" . ((number "1" 14478 . 14479)))
          ("HAVE_FCNTL" . ((number "1" 18501 . 18502)))
          ("HAVE_FSTATAT" . ((number "1" 19094 . 19095)))
          ("HAVE_FUTIMES" . ((number "1" 19326 . 19327)))
          ("HAVE_GTK3" . ((number "1" 21722 . 21723)))
          ("HAVE_GTK_WIDGET_SET_HAS_WINDOW" . ((number "1" 22845 . 22846)))
          ("HAVE_INOTIFY" . ((number "1" 23341 . 23342)))
          ("HAVE_LSTAT" . ((number "1" 26189 . 26190)))
          ("HAVE_MKOSTEMP" . ((number "1" 27774 . 27775)))
          ("HAVE_SOCKETS" . ((number "1" 31927 . 31928)))
          ("HAVE_STRUCT_IFREQ_IFR_ADDR" . ((number "1" 33251 . 33252)))
          ("HAVE_STRUCT_IFREQ_IFR_FLAGS" . ((number "1" 33583 . 33584)))
          ("HAVE_SYS_TYPES_H" . ((number "1" 37046 . 37047)))
          ("HAVE_WCHAR_T" . ((number "1" 39479 . 39480)))
          ("STAT_STATVFS" . ((number "1" 50412 . 50413)))
          ("STDC_HEADERS" . ((number "1" 50580 . 50581)))
          ("_USE_STD_STAT" . ((number "1" 59018 . 59019)))
          ("subprocesses" . ((number "1" 67655 . 67656)))
          ("AMPERSAND_FULL_NAME" . ((number "1" 1361 . 1362)))
          ("EMACS_CONFIG_OPTIONS" . ((string "\"--with-xwidgets --with-cairo --with-mailutils --with-modules 'CFLAGS=-O2 -march=native -pipe'\"" 4147 . 4242)))
          ("HAVE_ACCEPT4" . ((number "1" 9078 . 9079)))
          ("HAVE_ACL_FROM_TEXT" . ((number "1" 10544 . 10545)))
          ("HAVE_ACL_GET_FD" . ((number "1" 10628 . 10629)))
          ("HAVE_ACL_SET_FILE" . ((number "1" 10979 . 10980)))
          ("HAVE_DBUS" . ((number "1" 12605 . 12606)))
          ("HAVE_DECL_PUTCHAR_UNLOCKED" . ((number "1" 15872 . 15873)))
          ("HAVE_DIRENT_H" . ((number "1" 17042 . 17043)))
          ("HAVE_DLADDR" . ((number "1" 17195 . 17196)))
          ("HAVE_FCHDIR" . ((number "1" 18351 . 18352)))
          ("HAVE_GTK_TEAROFF_MENU_ITEM_NEW" . ((number "1" 22407 . 22408)))
          ("HAVE_GTK_WIDGET_GET_SENSITIVE" . ((number "1" 22625 . 22626)))
          ("HAVE_IFADDRS_H" . ((number "1" 23139 . 23140)))
          ("HAVE_ISBLANK" . ((number "1" 23506 . 23507)))
          ("HAVE_MBSTATE_T" . ((number "1" 27326 . 27327)))
          ("HAVE_SETLOCALE" . ((number "1" 31079 . 31080)))
          ("HAVE_STPCPY" . ((number "1" 32606 . 32607)))
          ("HAVE_STRUCT_UNIPAIR_UNICODE" . ((number "1" 34958 . 34959)))
          ("HAVE_SYMLINK" . ((number "1" 35120 . 35121)))
          ("HAVE_SYS_MOUNT_H" . ((number "1" 35945 . 35946)))
          ("HAVE_SYS_PARAM_H" . ((number "1" 36034 . 36035)))
          ("HAVE_SYS_STAT_H" . ((number "1" 36675 . 36676)))
          ("HAVE_SYS_SYSINFO_H" . ((number "1" 36768 . 36769)))
          ("HAVE_SYS_WAIT_H" . ((number "1" 37499 . 37500)))
          ("HAVE_VFORK" . ((number "1" 39180 . 39181)))
          ("HAVE_WCHAR_H" . ((number "1" 39410 . 39411)))
          ("HAVE_WINDOW_SYSTEM" . ((number "1" 39551 . 39552)))
          ("HAVE_WORKING_FORK" . ((number "1" 39705 . 39706)))
          ("HAVE_XIM" . ((number "1" 40765 . 40766)))
          ("HAVE___BUILTIN_UNWIND_INIT" . ((number "1" 42296 . 42297)))
          ("LSTAT_FOLLOWS_SLASHED_SYMLINK" . ((number "1" 43503 . 43504)))
          ("PACKAGE_TARNAME" . ((string "\"emacs\"" 45929 . 45936)))
          ("PACKAGE_VERSION" . ((string "\"27.0.50\"" 46114 . 46123)))
          ("POLL_FOR_INPUT" . ((number "1" 46392 . 46393)))
          ("PROMOTED_MODE_T" . ((symbol "mode_t" 46513 . 46519)))
          ("PTY_NAME_SPRINTF")
          ("TERMINFO" . ((number "1" 51018 . 51019)))
          ("USABLE_FIONREAD" . ((number "1" 51977 . 51978)))
          ("USE_CAIRO" . ((number "1" 52252 . 52253)))
          ("__STDC_WANT_LIB_EXT2__" . ((number "1" 54207 . 54208)))
          ("_DARWIN_USE_64_BIT_INODE" . ((number "1" 57164 . 57165)))
          ("_GL_ATTRIBUTE_PURE" . ((symbol "__attribute__" 68624 . 68637) (semantic-list "((__pure__))" 68638 . 68650)))
          ("COPYRIGHT" . ((string "\"Copyright (C) 2018 Free Software Foundation, Inc.\"" 2285 . 2336)))
          ("EMACS_CONFIGURATION" . ((string "\"x86_64-pc-linux-gnu\"" 3750 . 3771)))
          ("FLEXIBLE_ARRAY_MEMBER")
          ("GNULIB_FDOPENDIR" . ((number "1" 7810 . 7811)))
          ("GNULIB_FSCANF" . ((number "1" 7980 . 7981)))
          ("HAVE_DECL_GETDTABLESIZE" . ((number "1" 15383 . 15384)))
          ("HAVE_DECL___FPENDING" . ((number "1" 16829 . 16830)))
          ("HAVE_FDOPENDIR" . ((number "1" 18668 . 18669)))
          ("HAVE_GAI_STRERROR" . ((number "1" 19496 . 19497)))
          ("HAVE_GLIB" . ((number "1" 21242 . 21243)))
          ("HAVE_GNUTLS" . ((number "1" 21441 . 21442)))
          ("HAVE_GTK_DIALOG_GET_ACTION_AREA" . ((number "1" 21958 . 21959)))
          ("HAVE_IEEE754_H" . ((number "1" 23054 . 23055)))
          ("HAVE_LANGINFO_CODESET" . ((number "1" 24432 . 24433)))
          ("HAVE_LIBSYSTEMD" . ((number "1" 25326 . 25327)))
          ("HAVE_LIMITS_H" . ((number "1" 25492 . 25493)))
          ("HAVE_LRAND48" . ((number "1" 26115 . 26116)))
          ("HAVE_PWD_H" . ((number "1" 30149 . 30150)))
          ("HAVE_SIGSETJMP" . ((number "1" 31681 . 31682)))
          ("HAVE_STACK_OVERFLOW_HANDLING" . ((number "1" 32194 . 32195)))
          ("HAVE_STRSIGNAL" . ((number "1" 32856 . 32857)))
          ("HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC" . ((number "1" 34386 . 34387)))
          ("HAVE_STRUCT_TM_TM_ZONE" . ((number "1" 34855 . 34856)))
          ("HAVE_SYS_PRCTL_H" . ((number "1" 36123 . 36124)))
          ("HAVE_SYS_STATFS_H" . ((number "1" 36588 . 36589)))
          ("HAVE_TRUNC" . ((number "1" 38372 . 38373)))
          ("HAVE_XSCREENNUMBEROFSCREEN" . ((number "1" 41261 . 41262)))
          ("MODULES_SUFFIX" . ((string "\".so\"" 44226 . 44231)))
          ("PACKAGE_URL" . ((string "\"https://www.gnu.org/software/emacs/\"" 46006 . 46043)))
          ("USABLE_SIGIO" . ((number "1" 52039 . 52040)))
          ("_ALL_SOURCE" . ((number "1" 52758 . 52759)))
          ("_DARWIN_C_SOURCE" . ((number "1" 52861 . 52862)))
          ("__STDC_WANT_IEC_60559_BFP_EXT__" . ((number "1" 53605 . 53606)))
          ("_GL_UNUSED_LABEL" . ((symbol "_GL_UNUSED" 68432 . 68442)))
          ("GETTIMEOFDAY_TIMEZONE" . ((STRUCT "struct" 7084 . 7090) (symbol "timezone" 7091 . 7099)))
          ("HAVE_DBUS_VALIDATE_INTERFACE" . ((number "1" 12923 . 12924)))
          ("HAVE_DECL_ALIGNED_ALLOC" . ((number "1" 13473 . 13474)))
          ("HAVE_FUTIMENS" . ((number "1" 19248 . 19249)))
          ("HAVE_GETGRENT" . ((number "1" 19911 . 19912)))
          ("HAVE_GETPAGESIZE" . ((number "1" 20444 . 20445)))
          ("HAVE_GETPT" . ((number "1" 20518 . 20519)))
          ("HAVE_GTK_ADJUSTMENT_GET_PAGE_SIZE" . ((number "1" 21842 . 21843)))
          ("HAVE_ISWCTYPE" . ((number "1" 23586 . 23587)))
          ("HAVE_LIBXML2" . ((number "1" 25409 . 25410)))
          ("HAVE_LINUX_FS_H" . ((number "1" 25579 . 25580)))
          ("HAVE_LONG_LONG_INT" . ((number "1" 26037 . 26038)))
          ("HAVE_MEMRCHR" . ((number "1" 27487 . 27488)))
          ("HAVE_MINMAX_IN_SYS_PARAM_H" . ((number "1" 27694 . 27695)))
          ("HAVE_PNG" . ((number "1" 29081 . 29082)))
          ("HAVE_POSIX_OPENPT" . ((number "1" 29264 . 29265)))
          ("HAVE_PSELECT" . ((number "1" 29486 . 29487)))
          ("HAVE_PTHREAD_SIGMASK" . ((number "1" 29849 . 29850)))
          ("HAVE_PUTENV" . ((number "1" 30072 . 30073)))
          ("HAVE_RECVFROM" . ((number "1" 30469 . 30470)))
          ("HAVE_RSVG" . ((number "1" 30598 . 30599)))
          ("HAVE_STRUCT_IFREQ_IFR_HWADDR" . ((number "1" 33688 . 33689)))
          ("HAVE_TM_GMTOFF" . ((number "1" 38083 . 38084)))
          ("HAVE_XRANDR" . ((number "1" 41063 . 41064)))
          ("SYSTEM_TYPE" . ((string "\"gnu/linux\"" 50850 . 50861)))
          ("TIME_WITH_SYS_TIME" . ((number "1" 51362 . 51363)))
          ("_OPENBSD_SOURCE" . ((number "1" 53168 . 53169)))
          ("_TANDEM_SOURCE" . ((number "1" 54447 . 54448)))
          ("GC_SETJMP_WORKS" . ((number "1" 6456 . 6457)))
          ("HAVE_ACL_DELETE_DEF_FILE" . ((number "1" 9715 . 9716)))
          ("HAVE_ACL_GET_FILE" . ((number "1" 10716 . 10717)))
          ("HAVE_DECL_FERROR_UNLOCKED" . ((number "1" 14218 . 14219)))
          ("HAVE_DECL_FFLUSH_UNLOCKED" . ((number "1" 14349 . 14350)))
          ("HAVE_DECL_FREAD_UNLOCKED" . ((number "1" 14865 . 14866)))
          ("HAVE_GETHOSTNAME" . ((number "1" 20095 . 20096)))
          ("HAVE_GETOPT_H" . ((number "1" 20262 . 20263)))
          ("HAVE_MALLOC_H" . ((number "1" 27149 . 27150)))
          ("HAVE_READLINKAT" . ((number "1" 30389 . 30390)))
          ("HAVE_SELECT" . ((number "1" 30746 . 30747)))
          ("HAVE_SENDTO" . ((number "1" 30822 . 30823)))
          ("HAVE_SETITIMER" . ((number "1" 30997 . 30998)))
          ("HAVE_SNPRINTF" . ((number "1" 31843 . 31844)))
          ("HAVE_STRING_H" . ((number "1" 32774 . 32775)))
          ("HAVE_STRUCT_DIRENT_D_TYPE" . ((number "1" 33150 . 33151)))
          ("HAVE_SYNC" . ((number "1" 35192 . 35193)))
          ("HAVE_UNSIGNED_LONG_LONG_INT" . ((number "1" 38755 . 38756)))
          ("HAVE_XFIXES" . ((number "1" 40640 . 40641)))
          ("PACKAGE_BUGREPORT" . ((string "\"bug-gnu-emacs@gnu.org\"" 45637 . 45660)))
          ("__STDC_WANT_IEC_60559_ATTRIBS_EXT__" . ((number "1" 53452 . 53453)))
          ("__STDC_WANT_IEC_60559_FUNCS_EXT__" . ((number "1" 53915 . 53916)))
          ("_GL_INLINE_HEADER_BEGIN")
          ("_GL_UNUSED" . ((symbol "__attribute__" 67902 . 67915) (semantic-list "((__unused__))" 67916 . 67930)))
          ("EMACS_CONFIG_H")
          ("DEFAULT_SOUND_DEVICE" . ((string "\"/dev/dsp\"" 2781 . 2791)))
          ("GNULIB_CLOSE_STREAM" . ((number "1" 7458 . 7459)))
          ("HAVE_ACL_ENTRIES" . ((number "1" 10003 . 10004)))
          ("HAVE_ACL_SET_FD" . ((number "1" 10891 . 10892)))
          ("HAVE_DECL_FWRITE_UNLOCKED" . ((number "1" 14996 . 14997)))
          ("HAVE_DECL_STRTOIMAX" . ((number "1" 16233 . 16234)))
          ("HAVE_ENDGRENT" . ((number "1" 17593 . 17594)))
          ("HAVE_GETADDRINFO_A" . ((number "1" 19741 . 19742)))
          ("HAVE_GETRUSAGE" . ((number "1" 20762 . 20763)))
          ("HAVE_LIBOTF" . ((number "1" 25101 . 25102)))
          ("HAVE_NET_IF_H" . ((number "1" 28276 . 28277)))
          ("HAVE_PTHREAD" . ((number "1" 29654 . 29655)))
          ("HAVE_PTYS" . ((number "1" 29919 . 29920)))
          ("HAVE_RANDOM" . ((number "1" 30225 . 30226)))
          ("HAVE_SHUTDOWN" . ((number "1" 31241 . 31242)))
          ("HAVE_SIGSET_T" . ((number "1" 31763 . 31764)))
          ("HAVE_SYS_UTSNAME_H" . ((number "1" 37222 . 37223)))
          ("HAVE_TIMEGM" . ((number "1" 37732 . 37733)))
          ("HAVE_TIMERFD" . ((number "1" 37826 . 37827)))
          ("HAVE_UTIMENSAT" . ((number "1" 38919 . 38920)))
          ("HAVE_UTMP_H" . ((number "1" 38998 . 38999)))
          ("HAVE_X11" . ((number "1" 40148 . 40149)))
          ("HAVE_XINERAMA" . ((number "1" 40844 . 40845)))
          ("HYBRID_MALLOC" . ((number "1" 42641 . 42642)))
          ("IS_ANY_SEP" (spp-arg-list ("_c_") 42871 . 42876) . ((semantic-list "(IS_DIRECTORY_SEP (_c_))" 42877 . 42901)))
          ("IS_DIRECTORY_SEP" (spp-arg-list ("_c_") 43070 . 43075) . ((semantic-list "((_c_) == DIRECTORY_SEP)" 43076 . 43100)))
          ("__USE_MINGW_ANSI_STDIO" . ((number "1" 44147 . 44148)))
          ("PTY_ITERATION" . 
              ((INT "int" 47052 . 47055) (symbol "i" 47056 . 47057) (punctuation ";" 47057 . 47058) (FOR "for" 47059 . 47062) (semantic-list "(i = 0; i < 1; i++)" 47063 . 47082)))
          ("STAT_STATFS2_FRSIZE" . ((number "1" 49863 . 49864)))
          ("_NETBSD_SOURCE" . ((number "1" 57766 . 57767)))
          ("__EXTENSIONS__" . ((number "1" 54978 . 54979)))
          ("_GL_ATTRIBUTE_CONST" . ((symbol "__attribute__" 68848 . 68861) (semantic-list "((__const__))" 68862 . 68875)))
          ("_GL_ATTRIBUTE_MALLOC" . ((symbol "__attribute__" 69031 . 69044) (semantic-list "((__malloc__))" 69045 . 69059)))
          ("HAVE_C99_STRTOLD" . ((number "1" 11831 . 11832)))
          ("HAVE_DBUS_VALIDATE_PATH" . ((number "1" 13127 . 13128)))
          ("HAVE_DECL_GETCHAR_UNLOCKED" . ((number "1" 15129 . 15130)))
          ("HAVE_DECL_MEMRCHR" . ((number "1" 15739 . 15740)))
          ("HAVE_DECL_STRMODE" . ((number "0" 16114 . 16115)))
          ("HAVE_FREETYPE" . ((number "1" 18917 . 18918)))
          ("HAVE_FSEEKO" . ((number "1" 19016 . 19017)))
          ("HAVE_FUTIMESAT" . ((number "1" 19408 . 19409)))
          ("HAVE_GETIFADDRS" . ((number "1" 20179 . 20180)))
          ("HAVE_GETRLIMIT" . ((number "1" 20680 . 20681)))
          ("HAVE_GETTIMEOFDAY" . ((number "1" 20936 . 20937)))
          ("HAVE_GMP" . ((number "1" 21311 . 21312)))
          ("HAVE_GRANTPT" . ((number "1" 21594 . 21595)))
          ("HAVE_INET_SOCKETS" . ((number "1" 23283 . 23284)))
          ("HAVE_LCMS2" . ((number "1" 24513 . 24514)))
          ("HAVE_LUTIMES" . ((number "1" 26267 . 26268)))
          ("HAVE_MEMORY_H" . ((number "1" 27409 . 27410)))
          ("HAVE_PERSONALITY_ADDR_NO_RANDOMIZE" . ((number "1" 28940 . 28941)))
          ("HAVE_PTY_H" . ((number "1" 29996 . 29997)))
          ("HAVE_RINT" . ((number "1" 30541 . 30542)))
          ("HAVE_STDLIB_H" . ((number "1" 32530 . 32531)))
          ("HAVE_STRINGS_H" . ((number "1" 32691 . 32692)))
          ("HAVE__SETJMP" . ((number "1" 41814 . 41815)))
          ("_POSIX_PTHREAD_SEMANTICS" . ((number "1" 53291 . 53292)))
          ("USE_UNLOCKED_IO" . ((number "1" 55285 . 55286)))
          ("USG")
          ("_GL_EXTERN_INLINE_IN_USE")
          ("_GL_INLINE_HEADER_END")
          ("GDK_DISABLE_DEPRECATION_WARNINGS" . ((number "1" 6560 . 6561)))
          ("GNULIB_MKOSTEMP" . ((number "1" 8154 . 8155)))
          ("HAVE_ACL_FREE" . ((number "1" 10271 . 10272)))
          ("HAVE_DBUS_TYPE_IS_VALID" . ((number "1" 12705 . 12706)))
          ("HAVE_DBUS_VALIDATE_MEMBER" . ((number "1" 13027 . 13028)))
          ("HAVE_DECL_FPUTC_UNLOCKED" . ((number "1" 14607 . 14608)))
          ("HAVE_DECL_PUTC_UNLOCKED" . ((number "1" 15999 . 16000)))
          ("HAVE_DECL_SYS_SIGLIST" . ((number "1" 16474 . 16475)))
          ("HAVE_DUP2" . ((number "1" 17346 . 17347)))
          ("HAVE_EXECINFO_H" . ((number "1" 17929 . 17930)))
          ("HAVE_EXPLICIT_BZERO" . ((number "1" 18021 . 18022)))
          ("HAVE_JSON" . ((number "1" 23726 . 23727)))
          ("HAVE_MMAP" . ((number "1" 27855 . 27856)))
          ("HAVE_READLINK" . ((number "1" 30305 . 30306)))
          ("HAVE_STDIO_EXT_H" . ((number "1" 32447 . 32448)))
          ("HAVE_TERM_H" . ((number "1" 37578 . 37579)))
          ("HAVE_TIMER_SETTIME" . ((number "1" 37916 . 37917)))
          ("HAVE_X11R6" . ((number "1" 40236 . 40237)))
          ("HAVE_XDBE" . ((number "1" 40565 . 40566)))
          ("PTY_TTY_NAME_SPRINTF" . ((semantic-list "{ char *ptyname = 0; sigset_t blocked; sigemptyset (&blocked); sigaddset (&blocked, SIGCHLD); pthread_sigmask (SIG_BLOCK, &blocked, 0); if (grantpt (fd) != -1 && unlockpt (fd) != -1) ptyname = ptsname(fd); pthread_sigmask (SIG_UNBLOCK, &blocked, 0); if (!ptyname) { emacs_close (fd); return -1; } snprintf (pty_name, PTY_NAME_SIZE, \"%s\", ptyname); }" 47496 . 47845)))
          ("USER_FULL_NAME" . 
              ((symbol "pw" 52102 . 52104) (punctuation "-" 52104 . 52105) (punctuation ">" 52105 . 52106) (symbol "pw_gecos" 52106 . 52114)))
          ("USE_ACL" . ((number "1" 52197 . 52198)))
          ("USE_GTK" . ((number "1" 52377 . 52378)))
          ("__STDC_WANT_IEC_60559_DFP_EXT__" . ((number "1" 53758 . 53759)))
          ("_HPUX_ALT_XOPEN_SOCKET_API" . ((number "1" 54877 . 54878)))
          ("_GL_INLINE" . ((EXTERN "extern" 62937 . 62943) (INLINE "inline" 62944 . 62950)))
          ("DIR_TO_FD" (spp-arg-list ("Dir_p") 3142 . 3149) . ((punctuation "-" 3150 . 3151) (number "1" 3151 . 3152)))
          ("GNULIB_FACCESSAT" . ((number "1" 7634 . 7635)))
          ("HAVE_CFSETSPEED" . ((number "1" 11997 . 11998)))
          ("HAVE_C_VARARRAYS" . ((number "1" 12431 . 12432)))
          ("HAVE_DECL_FDATASYNC" . ((number "1" 13841 . 13842)))
          ("HAVE_DECL_LOCALTIME_R" . ((number "1" 15624 . 15625)))
          ("HAVE_FACCESSAT" . ((number "1" 18200 . 18201)))
          ("HAVE_FCHMOD" . ((number "1" 18427 . 18428)))
          ("HAVE_GMP_H" . ((number "1" 21388 . 21389)))
          ("HAVE_GTK_WIDGET_GET_MAPPED" . ((number "1" 22513 . 22514)))
          ("HAVE_JPEG" . ((number "1" 23674 . 23675)))
          ("HAVE_LOCALTIME_R" . ((number "1" 25873 . 25874)))
          ("HAVE_STDINT_H" . ((number "1" 32358 . 32359)))
          ("HAVE_STRTOIMAX" . ((number "1" 32938 . 32939)))
          ("HAVE_SYS_SELECT_H" . ((number "1" 36309 . 36310)))
          ("HAVE_TZSET" . ((number "1" 38562 . 38563)))
          ("HAVE_WORKING_VFORK" . ((number "1" 39976 . 39977)))
          ("HAVE_X11R6_XIM" . ((number "1" 40319 . 40320)))
          ("HAVE_XSCREENRESOURCESTRING" . ((number "1" 41367 . 41368)))
          ("HAVE_ZLIB" . ((number "1" 41742 . 41743)))
          ("__builtin_expect" (spp-arg-list ("e" "c") 42003 . 42009) . ((semantic-list "(e)" 42010 . 42013)))
          ("HAVE___BUILTIN_FRAME_ADDRESS" . ((number "1" 42190 . 42191)))
          ("IS_DEVICE_SEP" (spp-arg-list ("_c_") 42979 . 42984) . ((number "0" 42985 . 42986)))
          ("LINUX_SYSINFO_UNIT" . ((number "1" 43374 . 43375)))
          ("TERM_HEADER" . ((string "\"gtkutil.h\"" 51100 . 51111)))
          ("THREADS_ENABLED" . ((number "1" 51189 . 51190)))
          ("EMACS_CONFIG_FEATURES" . ((string "\"XPM JPEG TIFF GIF PNG RSVG CAIRO SOUND GPM DBUS GSETTINGS NOTIFY ACL GNUTLS LIBXML2 FREETYPE M17N_FLT LIBOTF XFT ZLIB TOOLKIT_SCROLL_BARS GTK3 X11 MODULES THREADS XWIDGETS LIBSYSTEMD JSON LCMS2 GMP\"" 3868 . 4067)))
          ("GNULIB_SCANF" . ((number "1" 8831 . 8832)))
          ("HAVE_ACL_FROM_MODE" . ((number "1" 10454 . 10455)))
          ("HAVE_DBUS_WATCH_GET_UNIX_FD" . ((number "1" 13235 . 13236)))
          ("HAVE_FREEIFADDRS" . ((number "1" 18826 . 18827)))
          ("HAVE_GETPWENT" . ((number "1" 20598 . 20599)))
          ("HAVE_GETSOCKNAME" . ((number "1" 20848 . 20849)))
          ("HAVE_GTK_WIDGET_GET_WINDOW" . ((number "1" 22731 . 22732)))
          ("HAVE_PIPE2" . ((number "1" 29014 . 29015)))
          ("HAVE_PROCFS" . ((number "1" 29408 . 29409)))
          ("HAVE_STRUCT_IFREQ_IFR_BROADADDR" . ((number "1" 33480 . 33481)))
          ("HAVE_STRUCT_IFREQ_IFR_NETMASK" . ((number "1" 33795 . 33796)))
          ("HAVE_SYS_CDEFS_H" . ((number "1" 35462 . 35463)))
          ("HAVE_SYS_SOCKET_H" . ((number "1" 36400 . 36401)))
          ("HAVE_SYS_VFS_H" . ((number "1" 37307 . 37308)))
          ("HAVE_TIFF" . ((number "1" 37656 . 37657)))
          ("HAVE_XKB" . ((number "1" 40913 . 40914)))
          ("HAVE_XPM" . ((number "1" 40988 . 40989)))
          ("HAVE_XWIDGETS" . ((number "1" 41440 . 41441)))
          ("HAVE_X_I18N" . ((number "1" 41509 . 41510)))
          ("PACKAGE_NAME" . ((string "\"GNU Emacs\"" 45730 . 45741)))
          ("PACKAGE_STRING" . ((string "\"GNU Emacs 27.0.50\"" 45825 . 45844)))
          ("SIGNALS_VIA_CHARACTERS" . ((number "1" 48499 . 48500)))
          ("TIME_T_IS_SIGNED" . ((number "1" 51256 . 51257)))
          ("__STDC_WANT_IEC_60559_TYPES_EXT__" . ((number "1" 54072 . 54073)))
          ("USE_XCB" . ((number "1" 55404 . 55405)))
          ("my_strftime" . ((symbol "nstrftime" 65212 . 65221)))
          ("restrict" . ((symbol "__restrict" 66957 . 66967)))
          ("GLIB_DISABLE_DEPRECATION_WARNINGS" . ((number "1" 7199 . 7200)))
          ("HAVE_ALLOCA_H" . ((number "1" 11609 . 11610)))
          ("HAVE_CLOCK_SETTIME" . ((number "1" 12177 . 12178)))
          ("HAVE_DECL_FEOF_UNLOCKED" . ((number "1" 14087 . 14088)))
          ("HAVE_DECL_FPUTS_UNLOCKED" . ((number "1" 14736 . 14737)))
          ("HAVE_DECL_GETC_UNLOCKED" . ((number "1" 15256 . 15257)))
          ("HAVE_FSYNC" . ((number "1" 19168 . 19169)))
          ("HAVE_GETDTABLESIZE" . ((number "1" 19831 . 19832)))
          ("HAVE_GET_CURRENT_DIR_NAME" . ((number "1" 21040 . 21041)))
          ("HAVE_GIF" . ((number "1" 21181 . 21182)))
          ("HAVE_GTK_WINDOW_SET_HAS_RESIZE_GRIP" . ((number "1" 22969 . 22970)))
          ("HAVE_OTF_GET_VARIATION_GLYPHS" . ((number "1" 28721 . 28722)))
          ("HAVE_SETRLIMIT" . ((number "1" 31161 . 31162)))
          ("HAVE_SOUND" . ((number "1" 31994 . 31995)))
          ("HAVE_SYS_ACL_H" . ((number "1" 35277 . 35278)))
          ("HAVE_SYS_RESOURCE_H" . ((number "1" 36218 . 36219)))
          ("HAVE_SYS_SOUNDCARD_H" . ((number "1" 36497 . 36498)))
          ("HAVE_SYS_TIME_H" . ((number "1" 36957 . 36958)))
          ("HAVE_TM_ZONE" . ((number "1" 38213 . 38214)))
          ("HAVE_UNISTD_H" . ((number "1" 38645 . 38646)))
          ("HAVE_X_SM" . ((number "1" 41583 . 41584)))
          ("MALLOC_0_IS_NONNULL" . ((number "1" 44042 . 44043)))
          ("TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC" . ((number "1" 51663 . 51664)))
          ("UNIX98_PTYS" . ((number "1" 51909 . 51910)))
          ("XRegisterIMInstantiateCallback_arg6" . ((symbol "XPointer" 56939 . 56947)))
          ("_UNUSED_PARAMETER_" . ((symbol "_GL_UNUSED" 68113 . 68123)))
          ("GETGROUPS_T" . ((symbol "gid_t" 6697 . 6702)))
          ("HAVE_ACL_LIBACL_H" . ((number "1" 10807 . 10808)))
          ("HAVE_ALIGNED_ALLOC" . ((number "1" 11356 . 11357)))
          ("HAVE_CLOCK_GETTIME" . ((number "1" 12087 . 12088)))
          ("HAVE_DECL_CLEARERR_UNLOCKED" . ((number "1" 13608 . 13609)))
          ("HAVE_ENDPWENT" . ((number "1" 17673 . 17674)))
          ("HAVE_ENVIRON_DECL" . ((number "1" 17755 . 17756)))
          ("HAVE_M17N_FLT" . ((number "1" 26332 . 26333)))
          ("HAVE_NEWLOCALE" . ((number "1" 28358 . 28359)))
          ("HAVE_PRCTL" . ((number "1" 29338 . 29339)))
          ("HAVE_SYS_UN_H" . ((number "1" 37129 . 37130)))
          ("HAVE_XRMSETDATABASE" . ((number "1" 41155 . 41156)))
          ("HAVE_X_WINDOWS" . ((number "1" 41667 . 41668)))
          ("INTERRUPT_INPUT" . ((number "1" 42792 . 42793)))
          ("PTY_OPEN" . 
              ((DO "do" 47253 . 47255) (semantic-list "{ fd = posix_openpt (O_RDWR | O_CLOEXEC | O_NOCTTY); if (fd < 0 && errno == EINVAL) fd = posix_openpt (O_RDWR | O_NOCTTY); }" 47256 . 47380) (WHILE "while" 47381 . 47386) (semantic-list "(false)" 47387 . 47394)))
          ("__STDC_WANT_MATH_SPEC_FUNCS__" . ((number "1" 54351 . 54352)))
          ("USE_TOOLKIT_SCROLL_BARS" . ((number "1" 55077 . 55078)))
          ("HAVE_ACL_EXTENDED_FILE" . ((number "1" 10101 . 10102)))
          ("HAVE_ACL_FIRST_ENTRY" . ((number "1" 10191 . 10192)))
          ("HAVE_ALLOCA" . ((number "1" 11501 . 11502)))
          ("HAVE_ALSA" . ((number "1" 11670 . 11671)))
          ("HAVE_BYTESWAP_H" . ((number "1" 11757 . 11758)))
          ("HAVE_CFMAKERAW" . ((number "1" 11913 . 11914)))
          ("HAVE_DECL_ALARM" . ((number "1" 13346 . 13347)))
          ("HAVE_DECL_FDOPENDIR" . ((number "1" 13960 . 13961)))
          ("HAVE_FORK" . ((number "1" 18740 . 18741)))
          ("HAVE_GETOPT_LONG_ONLY" . ((number "1" 20358 . 20359)))
          ("HAVE_GPM" . ((number "1" 21516 . 21517)))
          ("HAVE_GSETTINGS" . ((number "1" 21658 . 21659)))
          ("HAVE_GTK_HANDLE_BOX_NEW" . ((number "1" 22169 . 22170)))
          ("HAVE_GTK_ORIENTABLE_SET_ORIENTATION" . ((number "1" 22293 . 22294)))
          ("HAVE_INTTYPES_H" . ((number "1" 23428 . 23429)))
          ("HAVE_LINUX_SYSINFO" . ((number "1" 25663 . 25664)))
          ("HAVE_LOG2" . ((number "1" 25945 . 25946)))
          ("HAVE_MODULES" . ((number "1" 28018 . 28019)))
          ("HAVE_PTHREAD_H" . ((number "1" 29739 . 29740)))
          ("HAVE_SBRK" . ((number "1" 30670 . 30671)))
          ("HAVE_WORKING_UTIMES" . ((number "1" 39910 . 39911)))
          ("HAVE_XFT" . ((number "1" 40707 . 40708)))
          ("HAVE___EXECUTABLE_START" . ((number "1" 42396 . 42397)))
          ("NARROWPROTO" . ((number "1" 44402 . 44403)))
          ("NULL_DEVICE" . ((string "\"/dev/null\"" 45329 . 45340)))
          ("SEPCHAR" . ((string "':'" 48310 . 48313)))
          ("USE_FILE_NOTIFY" . ((number "1" 52326 . 52327)))
          ("USE_XIM" . ((number "1" 55483 . 55484)))
          ("_GL_EXTERN_INLINE" . ((EXTERN "extern" 62986 . 62992)))
          )
)
    (semanticdb-table "semanticdb-table-19c048c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_MODULE_H" variable (:constant-flag t) nil [773 787])
            ("stdint.h" include (:system-flag t) nil [789 808])
            ("stddef.h" include (:system-flag t) nil [809 828])
            ("EMACS_NOEXCEPT" variable (:constant-flag t) nil [977 991])
            ("EMACS_ATTRIBUTE_NONNULL" variable (:constant-flag t) nil [1191 1214])
            ("emacs_module_init" function
               (:type "int"
                :arguments 
                  ( ("ert" variable
                       (:pointer 1
                        :type ("emacs_runtime" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11272 11298]))                  
                :typemodifiers ("extern" "\"C\"" "extern")
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [11242 11345])
            ("emacs_env_26" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6725 6740])
                    ("private_members" variable
                       (:pointer 1
                        :type ("emacs_env_private" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [6796 6838])
                    ("make_global_ref" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6903 6918])
                            ("any_reference" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6925 6951]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6871 6983])
                    ("free_global_ref" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7012 7027])
                            ("global_reference" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7034 7063]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6987 7095])
                    ("non_local_exit_check" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7183 7198]))                          
                        :type ("emacs_funcall_exit" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7139 7230])
                    ("non_local_exit_clear" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7264 7279]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7234 7311])
                    ("non_local_exit_get" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7366 7381])
                            ("non_local_exit_symbol_out" variable
                               (:pointer 1
                                :type ("emacs_value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7387 7426])
                            ("non_local_exit_data_out" variable
                               (:pointer 1
                                :type ("emacs_value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7432 7469]))                          
                        :type ("emacs_funcall_exit" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7320 7507])
                    ("non_local_exit_signal" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7542 7557])
                            ("non_local_exit_symbol" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7563 7597])
                            ("non_local_exit_data" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7603 7635]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7511 7667])
                    ("non_local_exit_throw" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7701 7716])
                            ("tag" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7721 7737])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7742 7760]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7671 7792])
                    ("make_function" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7859 7874])
                            ("min_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7879 7899])
                            ("max_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7904 7924])
                            ("function" function
                               (:function-pointer t
                                :arguments 
                                  ( ("env" variable
                                       (:pointer 1
                                        :type ("emacs_env" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7954 7969])
                                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7978 7994])
                                    ("args" variable
                                       (:dereference 1
                                        :type ("emacs_value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8003 8022])
                                    ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [8031 8038]))                                  
                                :type ("emacs_value" type (:type "class") nil nil))
                                nil nil)
                            ("documentation" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [8126 8152])
                            ("data" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [8157 8168]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7829 8203])
                    ("funcall" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8231 8246])
                            ("function" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8273 8294])
                            ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8321 8337])
                            ("args" variable
                               (:dereference 1
                                :type ("emacs_value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8364 8383]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8207 8415])
                    ("intern" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8442 8457])
                            ("symbol_name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [8483 8507]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8419 8542])
                    ("type_of" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8597 8612])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8618 8636]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8573 8668])
                    ("is_not_nil" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8692 8707])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8708 8726]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [8672 8758])
                    ("eq" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8774 8789])
                            ("a" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8790 8804])
                            ("b" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8805 8819]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [8762 8851])
                    ("extract_integer" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8884 8899])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8900 8918]))                          
                        :type ("intmax_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8855 8950])
                    ("make_integer" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8983 8998])
                            ("value" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8999 9014]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8954 9046])
                    ("extract_float" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9075 9090])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9091 9109]))                          
                        :type "double")
                        (reparse-symbol classsubparts) [9050 9141])
                    ("make_float" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9172 9187])
                            ("value" variable (:type "double") (reparse-symbol arg-sub-list) [9188 9201]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9145 9233])
                    ("copy_string_contents" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9693 9708])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9741 9759])
                            ("buffer" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [9792 9805])
                            ("size_inout" variable
                               (:pointer 1
                                :type ("ptrdiff_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9838 9860]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [9663 9895])
                    ("make_string" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9985 10000])
                            ("contents" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [10010 10031])
                            ("length" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10032 10049]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9957 10084])
                    ("make_user_ptr" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10150 10165])
                            ("fin" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [10183 10190]))                                  
                                :type "void")
                                nil nil)
                            ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [10211 10221]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10120 10253])
                    ("get_user_ptr" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10280 10295])
                            ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10296 10313]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10257 10345])
                    ("set_user_ptr" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10370 10385])
                            ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10386 10403])
                            ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [10404 10414]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10348 10446])
                    ("set_user_finalizer" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10601 10616])
                            ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10626 10643])
                            ("fin" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [10666 10673]))                                  
                                :type "void")
                                nil nil))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10573 10721])
                    ("vec_get" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10776 10791])
                            ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10792 10808])
                            ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10809 10821]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10752 10853])
                    ("vec_set" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10874 10889])
                            ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10890 10906])
                            ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10907 10919])
                            ("val" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10925 10941]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10857 10973])
                    ("vec_size" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11000 11015])
                            ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11016 11032]))                          
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10977 11064])
                    ("should_quit" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11133 11148]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [11112 11180]))                  )
                (reparse-symbol extern-c-contents) [6653 11183])
            ("emacs_env_25" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2309 2324])
                    ("private_members" variable
                       (:pointer 1
                        :type ("emacs_env_private" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2380 2422])
                    ("make_global_ref" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2487 2502])
                            ("any_reference" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2509 2535]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2455 2567])
                    ("free_global_ref" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2596 2611])
                            ("global_reference" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2618 2647]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2571 2679])
                    ("non_local_exit_check" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2767 2782]))                          
                        :type ("emacs_funcall_exit" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2723 2814])
                    ("non_local_exit_clear" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2848 2863]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2818 2895])
                    ("non_local_exit_get" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2950 2965])
                            ("non_local_exit_symbol_out" variable
                               (:pointer 1
                                :type ("emacs_value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2971 3010])
                            ("non_local_exit_data_out" variable
                               (:pointer 1
                                :type ("emacs_value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3016 3053]))                          
                        :type ("emacs_funcall_exit" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2904 3091])
                    ("non_local_exit_signal" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3126 3141])
                            ("non_local_exit_symbol" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3147 3181])
                            ("non_local_exit_data" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3187 3219]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3095 3251])
                    ("non_local_exit_throw" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3285 3300])
                            ("tag" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3305 3321])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3326 3344]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3255 3376])
                    ("make_function" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3443 3458])
                            ("min_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3463 3483])
                            ("max_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3488 3508])
                            ("function" function
                               (:function-pointer t
                                :arguments 
                                  ( ("env" variable
                                       (:pointer 1
                                        :type ("emacs_env" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3538 3553])
                                    ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3562 3578])
                                    ("args" variable
                                       (:dereference 1
                                        :type ("emacs_value" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3587 3606])
                                    ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3615 3622]))                                  
                                :type ("emacs_value" type (:type "class") nil nil))
                                nil nil)
                            ("documentation" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3710 3736])
                            ("data" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3741 3752]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3413 3787])
                    ("funcall" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3815 3830])
                            ("function" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3857 3878])
                            ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3905 3921])
                            ("args" variable
                               (:dereference 1
                                :type ("emacs_value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3948 3967]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3791 3999])
                    ("intern" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4026 4041])
                            ("symbol_name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4067 4091]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4003 4126])
                    ("type_of" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4181 4196])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4202 4220]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4157 4252])
                    ("is_not_nil" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4276 4291])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4292 4310]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4256 4342])
                    ("eq" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4358 4373])
                            ("a" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4374 4388])
                            ("b" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4389 4403]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4346 4435])
                    ("extract_integer" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4468 4483])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4484 4502]))                          
                        :type ("intmax_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4439 4534])
                    ("make_integer" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4567 4582])
                            ("value" variable (:type ("intmax_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4583 4598]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4538 4630])
                    ("extract_float" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4659 4674])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4675 4693]))                          
                        :type "double")
                        (reparse-symbol classsubparts) [4634 4725])
                    ("make_float" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4756 4771])
                            ("value" variable (:type "double") (reparse-symbol arg-sub-list) [4772 4785]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4729 4817])
                    ("copy_string_contents" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5277 5292])
                            ("value" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5325 5343])
                            ("buffer" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [5376 5389])
                            ("size_inout" variable
                               (:pointer 1
                                :type ("ptrdiff_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5422 5444]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5247 5479])
                    ("make_string" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5569 5584])
                            ("contents" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [5594 5615])
                            ("length" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5616 5633]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5541 5668])
                    ("make_user_ptr" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5734 5749])
                            ("fin" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5767 5774]))                                  
                                :type "void")
                                nil nil)
                            ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [5795 5805]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5704 5837])
                    ("get_user_ptr" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5864 5879])
                            ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5880 5897]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5841 5929])
                    ("set_user_ptr" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5954 5969])
                            ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5970 5987])
                            ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [5988 5998]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5932 6030])
                    ("set_user_finalizer" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6185 6200])
                            ("uptr" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6210 6227])
                            ("fin" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [6250 6257]))                                  
                                :type "void")
                                nil nil))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6157 6305])
                    ("vec_get" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6360 6375])
                            ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6376 6392])
                            ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6393 6405]))                          
                        :type ("emacs_value" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6336 6437])
                    ("vec_set" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6458 6473])
                            ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6474 6490])
                            ("i" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6491 6503])
                            ("val" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6509 6525]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6441 6557])
                    ("vec_size" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("env" variable
                               (:pointer 1
                                :type ("emacs_env" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6584 6599])
                            ("vec" variable (:type ("emacs_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6600 6616]))                          
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6561 6648]))                  )
                (reparse-symbol extern-c-contents) [2237 6651])
            ("emacs_funcall_exit" type
               (:typemodifiers ("extern" "\"C\"")
                :type "enum"
                :members 
                  ( ("emacs_funcall_exit_return" variable
                       (:constant-flag t
                        :default-value (2066 2067)
                        :type "int")
                        (reparse-symbol enumsubparts) [2038 2067])
                    ("emacs_funcall_exit_signal" variable
                       (:constant-flag t
                        :default-value (2156 2157)
                        :type "int")
                        (reparse-symbol enumsubparts) [2128 2157])
                    ("emacs_funcall_exit_throw" variable
                       (:constant-flag t
                        :default-value (2231 2232)
                        :type "int")
                        (reparse-symbol enumsubparts) [2204 2232]))                  )
                (reparse-symbol extern-c-contents) [1969 2235])
            ("emacs_runtime" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1667 1682])
                    ("private_members" variable
                       (:pointer 1
                        :type ("emacs_runtime_private" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [1738 1784])
                    ("get_environment" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("ert" variable
                               (:pointer 1
                                :type ("emacs_runtime" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1859 1885]))                          
                        :type ("emacs_env" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1828 1917]))                  )
                (reparse-symbol extern-c-contents) [1594 1920])
            ("" type
               (:typemodifiers ("extern" "\"C\"")
                :type "enum"
                :members 
                  ( ("emacs_variadic_function" variable
                       (:constant-flag t
                        :default-value (1519 1521)
                        :type "int")
                        (reparse-symbol enumsubparts) [1493 1521]))                  )
                (reparse-symbol extern-c-contents) [1486 1524])
            ("emacs_value" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :pointer 1
                :typedef ("emacs_value_tag" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                (reparse-symbol extern-c-contents) [1440 1484])
            ("emacs_env" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("emacs_env_26" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                (reparse-symbol extern-c-contents) [1296 1334]))          
      :file "emacs-module.h"
      :pointmax 11404
      :fsize 11403
      :lastmodtime '(23408 44800 818283 787000)
      :unmatched-syntax '((punctuation 10569 . 10570) (semantic-list 10519 . 10527) (semantic-list 10455 . 10514) (VOID 10450 . 10454) (ENUM 7315 . 7319) (close-paren 7359 . 7360) (punctuation 7340 . 7341) (open-paren 7339 . 7340) (close-paren 7359 . 7360) (punctuation 7340 . 7341) (open-paren 7339 . 7340) (ENUM 7134 . 7138) (close-paren 7180 . 7181) (punctuation 7159 . 7160) (open-paren 7158 . 7159) (close-paren 7180 . 7181) (punctuation 7159 . 7160) (open-paren 7158 . 7159) (punctuation 6153 . 6154) (semantic-list 6103 . 6111) (semantic-list 6039 . 6098) (VOID 6034 . 6038) (ENUM 2899 . 2903) (close-paren 2943 . 2944) (punctuation 2924 . 2925) (open-paren 2923 . 2924) (close-paren 2943 . 2944) (punctuation 2924 . 2925) (open-paren 2923 . 2924) (ENUM 2718 . 2722) (close-paren 2764 . 2765) (punctuation 2743 . 2744) (open-paren 2742 . 2743) (close-paren 2764 . 2765) (punctuation 2743 . 2744) (open-paren 2742 . 2743))
      :lexical-table 
        '(("EMACS_MODULE_H")
          ("EMACS_NOEXCEPT")
          ("EMACS_ATTRIBUTE_NONNULL" (spp-arg-list ("...") 1214 . 1219))
          )
)
    (semanticdb-table "semanticdb-table-19e1a0c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_LISP_H" variable (:constant-flag t) nil [832 844])
            ("alloca.h" include (:system-flag t) nil [846 865])
            ("setjmp.h" include (:system-flag t) nil [866 885])
            ("stdalign.h" include (:system-flag t) nil [886 907])
            ("stdarg.h" include (:system-flag t) nil [908 927])
            ("stddef.h" include (:system-flag t) nil [928 947])
            ("string.h" include (:system-flag t) nil [948 967])
            ("float.h" include (:system-flag t) nil [968 986])
            ("inttypes.h" include (:system-flag t) nil [987 1008])
            ("limits.h" include (:system-flag t) nil [1009 1028])
            ("mini-gmp.h" include nil nil [1068 1089])
            ("intprops.h" include (:system-flag t) nil [1098 1119])
            ("verify.h" include (:system-flag t) nil [1120 1139])
            ("DECLARE_GDB_SYM" variable (:constant-flag t) nil [1561 1576])
            ("DEFINE_GDB_SYMBOL_BEGIN" variable (:constant-flag t) nil [1766 1789])
            ("DEFINE_GDB_SYMBOL_END" variable (:constant-flag t) nil [1843 1864])
            ("max" variable (:constant-flag t) nil [1952 1955])
            ("min" variable (:constant-flag t) nil [1994 1997])
            ("ARRAYELTS" variable (:constant-flag t) nil [2076 2085])
            ("GCTYPEBITS" variable (:constant-flag t) nil [2219 2229])
            ("EMACS_INT" type
               (:typedef ("int")
                :type "typedef")
                nil [2676 2698])
            ("EMACS_UINT" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [2699 2731])
            ("" type
               (:members 
                  ( ("EMACS_INT_WIDTH" variable
                       (:constant-flag t
                        :default-value (2757 2766)
                        :type "int")
                        (reparse-symbol enumsubparts) [2739 2766])
                    ("EMACS_UINT_WIDTH" variable
                       (:constant-flag t
                        :default-value (2787 2797)
                        :type "int")
                        (reparse-symbol enumsubparts) [2768 2797]))                  
                :type "enum")
                nil [2732 2800])
            ("EMACS_INT_MAX" variable (:constant-flag t) nil [2811 2824])
            ("pI" variable (:constant-flag t) nil [2843 2845])
            ("EMACS_INT" type
               (:typedef ("long int")
                :type "typedef")
                nil [2906 2933])
            ("EMACS_UINT" type
               (:typedef ("unsigned long")
                :type "typedef")
                nil [2934 2967])
            ("" type
               (:members 
                  ( ("EMACS_INT_WIDTH" variable
                       (:constant-flag t
                        :default-value (2993 3003)
                        :type "int")
                        (reparse-symbol enumsubparts) [2975 3003])
                    ("EMACS_UINT_WIDTH" variable
                       (:constant-flag t
                        :default-value (3024 3035)
                        :type "int")
                        (reparse-symbol enumsubparts) [3005 3035]))                  
                :type "enum")
                nil [2968 3038])
            ("EMACS_INT_MAX" variable (:constant-flag t) nil [3049 3062])
            ("pI" variable (:constant-flag t) nil [3082 3084])
            ("EMACS_INT" variable (:type "long int") nil [3133 3152])
            ("EMACS_UINT" variable (:type "long int") nil [3175 3195])
            ("" type
               (:members 
                  ( ("EMACS_INT_WIDTH" variable
                       (:constant-flag t
                        :default-value (3221 3232)
                        :type "int")
                        (reparse-symbol enumsubparts) [3203 3232])
                    ("EMACS_UINT_WIDTH" variable
                       (:constant-flag t
                        :default-value (3253 3265)
                        :type "int")
                        (reparse-symbol enumsubparts) [3234 3265]))                  
                :type "enum")
                nil [3196 3268])
            ("EMACS_INT_MAX" variable (:constant-flag t) nil [3279 3292])
            ("pI" variable (:constant-flag t) nil [3853 3855])
            ("" type
               (:members 
                  ( ("BOOL_VECTOR_BITS_PER_CHAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4077 4104]))                  
                :type "enum")
                nil [4069 4177])
            ("bits_word" type
               (:typedef ("size_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4463 4488])
            ("BITS_WORD_MAX" variable (:constant-flag t) nil [4498 4511])
            ("" type
               (:members 
                  ( ("BITS_PER_BITS_WORD" variable
                       (:constant-flag t
                        :default-value (4549 4559)
                        :type "int")
                        (reparse-symbol enumsubparts) [4528 4559]))                  
                :type "enum")
                nil [4521 4562])
            ("verify" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SIZE_MAX" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4737 4752]))                  
                :type "int")
                nil [4729 4785])
            ("printmax_t" type
               (:typedef ("EMACS_INT" type (:type "class") nil nil)
                :type "typedef")
                nil [5211 5240])
            ("uprintmax_t" type
               (:typedef ("EMACS_UINT" type (:type "class") nil nil)
                :type "typedef")
                nil [5241 5272])
            ("pMd" variable (:constant-flag t) nil [5282 5285])
            ("pMu" variable (:constant-flag t) nil [5301 5304])
            ("pD" variable (:constant-flag t) nil [5687 5689])
            ("pD" variable (:constant-flag t) nil [5732 5734])
            ("pD" variable (:constant-flag t) nil [5779 5781])
            ("eassert" variable (:constant-flag t) nil [7085 7092])
            ("eassume" variable (:constant-flag t) nil [7163 7170])
            ("Lisp_Bits" type
               (:members 
                  ( ("VALBITS" variable
                       (:constant-flag t
                        :default-value (8602 8630)
                        :type "int")
                        (reparse-symbol enumsubparts) [8592 8630])
                    ("INTTYPEBITS" variable
                       (:constant-flag t
                        :default-value (8699 8713)
                        :type "int")
                        (reparse-symbol enumsubparts) [8685 8713])
                    ("FIXNUM_BITS" variable
                       (:constant-flag t
                        :default-value (8806 8817)
                        :type "int")
                        (reparse-symbol enumsubparts) [8792 8817]))                  
                :type "enum")
                nil [8497 8822])
            ("VAL_MAX" variable (:constant-flag t) nil [9085 9092])
            ("USE_LSB_TAG" variable (:constant-flag t) nil [9535 9546])
            ("VALMASK" variable (:constant-flag t) nil [9739 9746])
            ("GCALIGNMENT" variable (:constant-flag t) nil [10442 10453])
            ("GCALIGNED_UNION" variable (:constant-flag t) nil [10472 10487])
            ("LISP_WORDS_ARE_POINTERS" variable (:constant-flag t) nil [10778 10801])
            ("Lisp_Word" type
               (:typedef ("EMACS_INT" type (:type "class") nil nil)
                :type "typedef")
                nil [10899 10927])
            ("lisp_h_XLI" variable (:constant-flag t) nil [12475 12485])
            ("lisp_h_XIL" variable (:constant-flag t) nil [12503 12513])
            ("lisp_h_XLP" variable (:constant-flag t) nil [12531 12541])
            ("lisp_h_XPL" variable (:constant-flag t) nil [12582 12592])
            ("lisp_h_CHECK_FIXNUM" variable (:constant-flag t) nil [13071 13090])
            ("lisp_h_CHECK_SYMBOL" variable (:constant-flag t) nil [13140 13159])
            ("lisp_h_CHECK_TYPE" variable (:constant-flag t) nil [13209 13226])
            ("lisp_h_CONSP" variable (:constant-flag t) nil [13313 13325])
            ("lisp_h_EQ" variable (:constant-flag t) nil [13362 13371])
            ("lisp_h_FLOATP" variable (:constant-flag t) nil [13407 13420])
            ("lisp_h_FIXNUMP" variable (:constant-flag t) nil [13458 13472])
            ("lisp_h_NILP" variable (:constant-flag t) nil [13538 13549])
            ("lisp_h_SET_SYMBOL_VAL" variable (:constant-flag t) nil [13574 13595])
            ("lisp_h_SYMBOL_CONSTANT_P" variable (:constant-flag t) nil [13702 13726])
            ("lisp_h_SYMBOL_TRAPPED_WRITE_P" variable (:constant-flag t) nil [13798 13827])
            ("lisp_h_SYMBOL_VAL" variable (:constant-flag t) nil [13876 13893])
            ("lisp_h_SYMBOLP" variable (:constant-flag t) nil [13985 13999])
            ("lisp_h_VECTORLIKEP" variable (:constant-flag t) nil [14038 14056])
            ("lisp_h_XCAR" variable (:constant-flag t) nil [14099 14110])
            ("lisp_h_XCDR" variable (:constant-flag t) nil [14141 14152])
            ("lisp_h_XCONS" variable (:constant-flag t) nil [14185 14197])
            ("lisp_h_XHASH" variable (:constant-flag t) nil [14277 14289])
            ("lisp_h_check_cons_list" variable (:constant-flag t) nil [14342 14364])
            ("DEFINE_KEY_OPS_AS_MACROS" variable (:constant-flag t) nil [15435 15459])
            ("INTMASK" variable (:constant-flag t) nil [17164 17171])
            ("case_Lisp_Int" variable (:constant-flag t) nil [17217 17230])
            ("ENUM_BF" variable (:constant-flag t) nil [17547 17554])
            ("Lisp_Object" type
               (:typedef ("Lisp_Word" type (:type "class") nil nil)
                :type "typedef")
                nil [21563 21593])
            ("LISP_INITIALLY" variable (:constant-flag t) nil [21603 21617])
            ("initialized" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [22338 22362])
            ("i" variable
               (:default-value "XLI (a)"
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [23104 23127])
            ("VALBITS" variable (:type "int") nil [23171 23179])
            ("XUNTAG" variable (:constant-flag t) nil [23429 23435])
            ("u" variable (:type ("" type
                 (:members 
                    ( ("s" variable (:type ("" type
                           (:members 
                              ( ("gcmarkbit" variable
                                   (:suffix ":1"
                                    :type ("bool_bf" type (:type "class") nil nil))
                                    (reparse-symbol classsubparts) [23955 23977])
                                ("redirect" variable
                                   (:suffix ":3"
                                    :type ("symbol_redirect" type (:type "enum") nil nil))
                                    (reparse-symbol classsubparts) [24286 24325])
                                ("trapped_write" variable
                                   (:suffix ":2"
                                    :type ("symbol_trapped_write" type (:type "enum") nil nil))
                                    (reparse-symbol classsubparts) [24480 24529])
                                ("interned" variable
                                   (:suffix ":2"
                                    :type "unsigned int")
                                    (reparse-symbol classsubparts) [24632 24654])
                                ("declared_special" variable
                                   (:suffix ":1"
                                    :type ("bool_bf" type (:type "class") nil nil))
                                    (reparse-symbol classsubparts) [24799 24828])
                                ("pinned" variable
                                   (:suffix ":1"
                                    :type ("bool_bf" type (:type "class") nil nil))
                                    (reparse-symbol classsubparts) [24908 24927])
                                ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24985 25002])
                                ("val" variable (:type ("" type
                                     (:members 
                                        ( ("value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25157 25175])
                                          ("alias" variable
                                             (:pointer 1
                                              :type ("Lisp_Symbol" type
                                                   (:prototype t
                                                    :type "struct")
                                                    nil nil))
                                              (reparse-symbol classsubparts) [25177 25203])
                                          ("blv" variable
                                             (:pointer 1
                                              :type ("Lisp_Buffer_Local_Value" type
                                                   (:prototype t
                                                    :type "struct")
                                                    nil nil))
                                              (reparse-symbol classsubparts) [25205 25241])
                                          ("fwd" variable
                                             (:pointer 1
                                              :type ("Lisp_Fwd" type (:type "union") nil nil))
                                              (reparse-symbol classsubparts) [25243 25263]))                                        
                                      :type "union")
                                      nil nil)) (reparse-symbol classsubparts) [25148 25276])
                                ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25350 25371])
                                ("plist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25420 25438])
                                ("next" variable
                                   (:pointer 1
                                    :type ("Lisp_Symbol" type
                                         (:prototype t
                                          :type "struct")
                                          nil nil))
                                    (reparse-symbol classsubparts) [25517 25542]))                              
                            :type "struct")
                            nil nil)) (reparse-symbol classsubparts) [23936 25551])
                      ("gcaligned" variable (:type "int") (reparse-symbol classsubparts) [25556 25571]))                    
                  :type "union")
                  nil nil)) nil [23922 25578])
            ("EXFUN" variable (:constant-flag t) nil [25895 25900])
            ("DEFUN_ARGS_MANY" variable (:constant-flag t) nil [26089 26104])
            ("DEFUN_ARGS_UNEVALLED" variable (:constant-flag t) nil [26141 26161])
            ("DEFUN_ARGS_0" variable (:constant-flag t) nil [26184 26196])
            ("DEFUN_ARGS_1" variable (:constant-flag t) nil [26212 26224])
            ("DEFUN_ARGS_2" variable (:constant-flag t) nil [26247 26259])
            ("DEFUN_ARGS_3" variable (:constant-flag t) nil [26295 26307])
            ("DEFUN_ARGS_4" variable (:constant-flag t) nil [26356 26368])
            ("DEFUN_ARGS_5" variable (:constant-flag t) nil [26430 26442])
            ("DEFUN_ARGS_6" variable (:constant-flag t) nil [26523 26535])
            ("DEFUN_ARGS_7" variable (:constant-flag t) nil [26629 26641])
            ("DEFUN_ARGS_8" variable (:constant-flag t) nil [26748 26760])
            ("untagged_ptr" type
               (:typedef ("uintptr_t" type (:type "class") nil nil)
                :type "typedef")
                nil [27514 27545])
            ("Lisp_Word_tag" type
               (:typedef ("EMACS_UINT" type (:type "class") nil nil)
                :type "typedef")
                nil [27546 27579])
            ("LISP_WORD_TAG" variable (:constant-flag t) nil [27660 27673])
            ("TAG_PTR" variable (:constant-flag t) nil [27821 27828])
            ("LISPSYM_INITIALLY" variable (:constant-flag t) nil [28065 28082])
            ("DEFINE_LISP_SYMBOL" variable (:constant-flag t) nil [28510 28528])
            ("SYMBOL_INDEX" variable (:constant-flag t) nil [28750 28762])
            ("DEFINE_NON_NIL_Q_SYMBOL_MACROS" variable (:constant-flag t) nil [29099 29129])
            ("globals.h" include nil nil [29143 29163])
            ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [30772 30787])
            ("align" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [30857 30875])
            ("gcaligned" variable (:type "int") nil [30880 30895])
            ("i" variable
               (:default-value "(intptr_t) XUNTAG (a, Lisp_Symbol, struct Lisp_Symbol)"
                :type ("intptr_t" type (:type "class") nil nil))
                nil [31203 31271])
            ("p" variable
               (:pointer 1
                :default-value "(char *) lispsym + i"
                :type "void")
                nil [31274 31305])
            ("p" variable (:type "int") nil [31521 31523])
            ("symoffset" variable
               (:pointer 1
                :default-value "(char *) ((char *) sym - (char *) lispsym)"
                :type "char")
                nil [32189 32250])
            ("a" variable
               (:default-value "TAG_PTR (Lisp_Symbol, symoffset)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [32260 32309])
            ("a" variable (:type "int") nil [32351 32353])
            ("make_lisp_symbol" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("lispsym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32438 32452]))                  
                :type "int")
                nil [32419 32454])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SYMBOLP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Qsymbolp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [32505 32529])
            ("ARRAY_MARK_FLAG" variable (:constant-flag t) nil [32676 32691])
            ("PSEUDOVECTOR_FLAG" variable (:constant-flag t) nil [32919 32936])
            ("MOST_POSITIVE_FIXNUM" variable (:constant-flag t) nil [35272 35292])
            ("MOST_NEGATIVE_FIXNUM" variable (:constant-flag t) nil [35332 35352])
            ("int0" variable
               (:default-value "Lisp_Int0"
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [36024 36051])
            ("XIL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("n" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36235 36237]))                  
                :type "int")
                nil [36230 36238])
            ("i" variable
               (:default-value "XLI (a)"
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [36333 36355])
            ("INTTYPEBITS" variable (:type "int") nil [36455 36467])
            ("int0" variable
               (:default-value "Lisp_Int0"
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [36690 36717])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [36793 36810])
            ("n" variable (:type "int") nil [36820 36822])
            ("i" variable
               (:default-value "XLI (a)"
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [36950 36973])
            ("XUFIXNUM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [37245 37262])
            ("int0" variable
               (:default-value "Lisp_Int0"
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [37451 37478])
            ("XIL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("n" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37525 37528]))                  
                :type "int")
                nil [37520 37548])
            ("FIXNUM_OVERFLOW_P" variable (:constant-flag t) nil [37770 37787])
            ("upper" variable (:type "int") nil [38011 38017])
            ("a" variable
               (:default-value "TAG_PTR (type, ptr)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [38149 38185])
            ("a" variable (:type "int") nil [38259 38261])
            ("XSETINT" variable (:constant-flag t) nil [38345 38352])
            ("XSETFASTINT" variable (:constant-flag t) nil [38391 38402])
            ("XSETCONS" variable (:constant-flag t) nil [38447 38455])
            ("XSETVECTOR" variable (:constant-flag t) nil [38507 38517])
            ("XSETSTRING" variable (:constant-flag t) nil [38575 38585])
            ("XSETSYMBOL" variable (:constant-flag t) nil [38639 38649])
            ("XSETFLOAT" variable (:constant-flag t) nil [38693 38702])
            ("XSETPVECTYPE" variable (:constant-flag t) nil [38784 38796])
            ("XSETPVECTYPESIZE" variable (:constant-flag t) nil [38900 38916])
            ("XSETPSEUDOVECTOR" variable (:constant-flag t) nil [39196 39212])
            ("XSETTYPED_PSEUDOVECTOR" variable (:constant-flag t) nil [39375 39397])
            ("XSETWINDOW_CONFIGURATION" variable (:constant-flag t) nil [39585 39609])
            ("XSETPROCESS" variable (:constant-flag t) nil [39681 39692])
            ("XSETWINDOW" variable (:constant-flag t) nil [39747 39757])
            ("XSETTERMINAL" variable (:constant-flag t) nil [39811 39823])
            ("XSETSUBR" variable (:constant-flag t) nil [39879 39887])
            ("XSETCOMPILED" variable (:constant-flag t) nil [39939 39951])
            ("XSETBUFFER" variable (:constant-flag t) nil [40007 40017])
            ("XSETCHAR_TABLE" variable (:constant-flag t) nil [40071 40085])
            ("XSETBOOL_VECTOR" variable (:constant-flag t) nil [40143 40158])
            ("XSETSUB_CHAR_TABLE" variable (:constant-flag t) nil [40217 40235])
            ("XSETTHREAD" variable (:constant-flag t) nil [40297 40307])
            ("XSETMUTEX" variable (:constant-flag t) nil [40361 40370])
            ("XSETCONDVAR" variable (:constant-flag t) nil [40423 40434])
            ("a" variable
               (:default-value "TAG_PTR (Lisp_Int0, p)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [40895 40934])
            ("a" variable (:type "int") nil [40992 40994])
            ("INTERVAL" type
               (:typedef ("interval" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [41037 41071])
            ("u" variable (:type ("" type
                 (:members 
                    ( ("s" variable (:type ("" type
                           (:members 
                              ( ("car" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41163 41179])
                                ("u" variable (:type ("" type
                                     (:members 
                                        ( ("cdr" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41233 41249])
                                          ("chain" variable
                                             (:pointer 1
                                              :type ("Lisp_Cons" type
                                                   (:prototype t
                                                    :type "struct")
                                                    nil nil))
                                              (reparse-symbol classsubparts) [41297 41321]))                                        
                                      :type "union")
                                      nil nil)) (reparse-symbol classsubparts) [41187 41332]))                              
                            :type "struct")
                            nil nil)) (reparse-symbol classsubparts) [41108 41341])
                      ("gcaligned" variable (:type "int") (reparse-symbol classsubparts) [41346 41361]))                    
                  :type "union")
                  nil nil)) nil [41094 41368])
            ("EQ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Qnil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [41475 41491])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("CONSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41618 41627])
                    ("" variable (:type ("Qconsp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41629 41636])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41637 41639]))                  
                :type "int")
                nil [41606 41640])
            ("car" variable (:type "int") nil [42257 42261])
            ("cdr" variable (:type "int") nil [42340 42344])
            ("car" variable (:type "int") nil [42437 42453])
            ("cdr" variable (:type "int") nil [42510 42526])
            ("n" variable (:type "int") nil [42770 42772])
            ("n" variable (:type "int") nil [42847 42849])
            ("XCAR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42993 42995]))                  
                :type "int")
                nil [42987 42996])
            ("wrong_type_argument" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Qlistp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43039 43046])
                    ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43047 43049]))                  
                :type "int")
                nil [43018 43050])
            ("Qnil" variable (:type "int") nil [43060 43065])
            ("XCDR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43143 43145]))                  
                :type "int")
                nil [43137 43146])
            ("wrong_type_argument" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Qlistp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43189 43196])
                    ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43197 43199]))                  
                :type "int")
                nil [43168 43200])
            ("Qnil" variable (:type "int") nil [43210 43215])
            ("Qnil" variable (:type "int") nil [43362 43367])
            ("Qnil" variable (:type "int") nil [43448 43453])
            ("u" variable (:type ("" type
                 (:members 
                    ( ("s" variable (:type ("" type
                           (:members 
                              ( ("size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43589 43604])
                                ("size_byte" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43611 43631])
                                ("intervals" variable (:type ("INTERVAL" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43638 43657])
                                ("data" variable
                                   (:pointer 1
                                    :type "unsigned char")
                                    (reparse-symbol classsubparts) [43703 43723]))                              
                            :type "struct")
                            nil nil)) (reparse-symbol classsubparts) [43570 43732])
                      ("next" variable
                         (:pointer 1
                          :type ("Lisp_String" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [43737 43762])
                      ("gcaligned" variable (:type "int") (reparse-symbol classsubparts) [43767 43782]))                    
                  :type "union")
                  nil nil)) nil [43556 43789])
            ("Lisp_String" variable (:type "int") nil [43912 43924])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("STRINGP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43985 43996])
                    ("" variable (:type ("Qstringp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43998 44007])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44008 44010]))                  
                :type "int")
                nil [43973 44011])
            ("size_byte" variable (:type "int") nil [44275 44285])
            ("STRING_BYTES_BOUND" variable (:constant-flag t) nil [45024 45042])
            ("STRING_SET_UNIBYTE" variable (:constant-flag t) nil [45168 45186])
            ("STRING_SET_MULTIBYTE" variable (:constant-flag t) nil [45483 45503])
            ("data" variable (:type "int") nil [45855 45860])
            ("SDATA" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45974 45981]))                  
                :type "int")
                nil [45967 45982])
            ("SDATA" function
               (:arguments 
                  ( ("" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46067 46074]))                  
                :type "int")
                nil [46060 46081])
            ("SDATA" function
               (:arguments 
                  ( ("" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46170 46177]))                  
                :type "int")
                nil [46163 46184])
            ("nchars" variable
               (:default-value "XSTRING (string)->u.s.size;"
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [46243 46289])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [46292 46314])
            ("nchars" variable (:type "int") nil [46324 46331])
            ("size_byte" variable (:type "int") nil [46620 46630])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [46640 46662])
            ("nbytes" variable (:type "int") nil [46672 46679])
            ("STRING_BYTES" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("XSTRING" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46753 46769]))                  
                :type "int")
                nil [46739 46771])
            ("size" variable
               (:default-value "newsize"
                :type "int")
                nil [47095 47110])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [47214 47245])
            ("contents" variable
               (:dereference 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [47250 47294])
            ("size" variable
               (:default-value "XVECTOR (array)->header.size;"
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [47572 47618])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [47621 47641])
            ("size" variable (:type "int") nil [47651 47656])
            ("PSEUDOVECTOR_SIZE_MASK" variable (:type "int") nil [47723 47748])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VECTORP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47913 47924])
                    ("" variable (:type ("Qvectorp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47926 47935])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47936 47938]))                  
                :type "int")
                nil [47901 47939])
            ("size" variable
               (:default-value "v->header.size;"
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [48088 48120])
            ("false" variable (:type "int") nil [48758 48764])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [49196 49227])
            ("size" variable (:type ("EMACS_INT" type (:type "class") nil nil)) nil [49269 49284])
            ("data" variable
               (:dereference 1
                :type ("bits_word" type (:type "class") nil nil))
                nil [49502 49540])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [50011 50083])
            ("BITS_PER_BITS_WORD" variable (:type "int") nil [50127 50146])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [50206 50278])
            ("BOOL_VECTOR_BITS_PER_CHAR" variable (:type "int") nil [50329 50355])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50427 50429])
                    ("" variable (:type ("PVEC_BOOL_VECTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50430 50447]))                  
                :type "int")
                nil [50412 50448])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("BOOL_VECTOR_P" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50514 50531])
                    ("" variable (:type ("Qbool_vector_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50533 50548])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50549 50551]))                  
                :type "int")
                nil [50502 50552])
            ("size" variable
               (:default-value "XBOOL_VECTOR (a)->size;"
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [50771 50811])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [50814 50834])
            ("size" variable (:type "int") nil [50844 50849])
            ("data" variable (:type "int") nil [50934 50939])
            ("bool_vector_data" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51052 51054]))                  
                :type "int")
                nil [51034 51055])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [51159 51204])
            ("Qnil" variable (:type "int") nil [51436 51441])
            ("addr" variable
               (:pointer 1
                :type "unsigned char")
                nil [51544 51564])
            ("assume" function
               (:prototype-flag t
                :type "int")
                nil [51568 51613])
            ("bool_vector_uchar_data" function
               (:arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51648 51650]))                  
                :type "int")
                nil [51624 51681])
            ("contents" variable
               (:dereference 1
                :type "int")
                nil [51947 51961])
            ("contents" variable
               (:dereference 1
                :type "int")
                nil [52061 52075])
            ("PTRDIFF_MIN" variable (:type "int") nil [52236 52252])
            ("contents" variable
               (:dereference 1
                :default-value "val"
                :type "int")
                nil [52391 52411])
            ("contents" variable
               (:dereference 1
                :default-value "val"
                :type "int")
                nil [52696 52716])
            ("verify" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NIL_IS_ZERO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53338 53350]))                  
                :type "int")
                nil [53330 53351])
            ("memset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53408 53410])
                    ("" variable (:type ("nbytes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53414 53421]))                  
                :type "int")
                nil [53400 53422])
            ("VECSIZE" variable (:constant-flag t) nil [53570 53577])
            ("PSEUDOVECSIZE" variable (:constant-flag t) nil [53855 53868])
            ("UNSIGNED_CMP" variable (:constant-flag t) nil [54288 54300])
            ("ASCII_CHAR_P" variable (:constant-flag t) nil [54542 54554])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [55732 55763])
            ("defalt" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [55881 55900])
            ("parent" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [56083 56102])
            ("purpose" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [56201 56221])
            ("ascii" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [56367 56385])
            ("contents" variable
               (:dereference 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [56391 56440])
            ("extras" variable
               (:dereference 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [56502 56544])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56618 56620])
                    ("" variable (:type ("PVEC_CHAR_TABLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56621 56637]))                  
                :type "int")
                nil [56603 56638])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [56969 57000])
            ("depth" variable (:type "int") nil [57391 57401])
            ("min_char" variable (:type "int") nil [57467 57480])
            ("contents" variable
               (:dereference 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [57542 57586])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57664 57666])
                    ("" variable (:type ("PVEC_SUB_CHAR_TABLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57667 57687]))                  
                :type "int")
                nil [57649 57688])
            ("tbl" variable
               (:pointer 1
                :default-value "NULL"
                :type ("Lisp_Char_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [57941 57976])
            ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [57979 57995])
            ("val" variable (:type "int") nil [58287 58291])
            ("set_sub_char_table_contents" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("XCHAR_TABLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58885 58901])
                    ("" variable (:type ("ascii" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58903 58909])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58910 58914])
                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58915 58919]))                  
                :type "int")
                nil [58856 58920])
            ("char_table_set" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ct" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58948 58951])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58952 58956])
                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58957 58961]))                  
                :type "int")
                nil [58932 58962])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [59129 59160])
            ("function" variable (:type ("" type
                 (:members 
                    ( ("a0" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [59198 59203]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59179 59204])
                      ("a1" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59230 59242]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59211 59243])
                      ("a2" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59269 59281])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59282 59294]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59250 59295])
                      ("a3" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59321 59333])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59334 59346])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59347 59359]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59302 59360])
                      ("a4" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59386 59398])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59399 59411])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59412 59424])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59425 59437]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59367 59438])
                      ("a5" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59464 59476])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59477 59489])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59490 59502])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59503 59515])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59516 59528]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59445 59529])
                      ("a6" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59555 59567])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59568 59580])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59581 59593])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59594 59606])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59607 59619])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59620 59632]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59536 59633])
                      ("a7" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59659 59671])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59672 59684])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59685 59697])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59698 59710])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59711 59723])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59724 59736])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59737 59749]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59640 59750])
                      ("a8" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59776 59788])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59789 59801])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59802 59814])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59815 59827])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59828 59840])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59841 59853])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59854 59866])
                              ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59867 59879]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59757 59880])
                      ("aUNEVALLED" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59914 59931]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59887 59932])
                      ("aMANY" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59961 59971])
                              ("" variable
                                 (:pointer 1
                                  :type ("Lisp_Object" type (:type "class") nil nil))
                                  (reparse-symbol arg-sub-list) [59972 59986]))                            
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [59939 59987]))                    
                  :type "union")
                  nil nil)) nil [59165 60003])
            ("min_args" variable (:type "short") nil [60008 60033])
            ("max_args" variable (:type "short") nil [60008 60033])
            ("symbol_name" variable
               (:pointer 1
                :constant-flag t
                :type "char")
                nil [60038 60062])
            ("intspec" variable
               (:pointer 1
                :constant-flag t
                :type "char")
                nil [60067 60087])
            ("doc" variable (:type ("EMACS_INT" type (:type "class") nil nil)) nil [60092 60106])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60173 60175])
                    ("" variable (:type ("PVEC_SUBR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60176 60186]))                  
                :type "int")
                nil [60158 60187])
            ("sys_jmp_buf" type
               (:typedef ("jmp_buf" type (:type "class") nil nil)
                :type "typedef")
                nil [61771 61799])
            ("sys_setjmp" variable (:constant-flag t) nil [61809 61819])
            ("sys_longjmp" variable (:constant-flag t) nil [61843 61854])
            ("thread.h" include nil nil [61884 61903])
            ("assume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [62272 62341])
            ("alias" variable (:type "int") nil [62364 62370])
            ("assume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [62454 62522])
            ("blv" variable (:type "int") nil [62545 62549])
            ("assume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [62617 62685])
            ("fwd" variable (:type "int") nil [62708 62712])
            ("assume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [62907 62959])
            ("alias" variable
               (:default-value "v"
                :type "int")
                nil [62975 62985])
            ("assume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [63080 63133])
            ("blv" variable
               (:default-value "v"
                :type "int")
                nil [63149 63157])
            ("assume" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [63236 63289])
            ("fwd" variable
               (:default-value "v"
                :type "int")
                nil [63305 63313])
            ("name" variable (:type "int") nil [63396 63401])
            ("SYMBOL_UNINTERNED" variable (:type "int") nil [63547 63565])
            ("SYMBOL_INTERNED_IN_INITIAL_OBARRAY" variable (:type "int") nil [63739 63774])
            ("DEFSYM" variable (:constant-flag t) nil [64481 64487])
            ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [64805 64822])
            ("user_hash_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [64872 64903])
            ("user_cmp_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [64963 64993])
            ("cmpfn" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("t" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [65053 65079])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65080 65092])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65093 65105]))                  
                :type "bool")
                nil [65038 65106])
            ("hashfn" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("t" variable
                       (:pointer 1
                        :type ("hash_table_test" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [65174 65200])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65201 65213]))                  
                :type ("EMACS_UINT" type (:type "class") nil nil))
                nil [65152 65214])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [65315 65346])
            ("weak" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [65448 65465])
            ("hash" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [65567 65584])
            ("next" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [65832 65849])
            ("index" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [66096 66114])
            ("count" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [66366 66382])
            ("next_free" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [66450 66470])
            ("pure" variable (:type "bool") nil [66566 66576])
            ("rehash_threshold" variable (:type "float") nil [66666 66689])
            ("rehash_size" variable (:type "float") nil [67025 67043])
            ("key_and_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [67226 67252])
            ("test" variable (:type ("hash_table_test" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [67300 67328])
            ("next_weak" variable
               (:pointer 1
                :type ("Lisp_Hash_Table" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [67443 67477])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67550 67552])
                    ("" variable (:type ("PVEC_HASH_TABLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67553 67569]))                  
                :type "int")
                nil [67535 67570])
            ("XSET_HASH_TABLE" variable (:constant-flag t) nil [67739 67754])
            ("AREF" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("h" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67967 67969])
                    ("" variable (:type ("key_and_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67970 67984])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67989 67993]))                  
                :type "int")
                nil [67961 67994])
            ("AREF" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("h" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68149 68151])
                    ("" variable (:type ("key_and_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68152 68166])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68171 68176]))                  
                :type "int")
                nil [68143 68180])
            ("AREF" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("h" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68343 68345])
                    ("" variable (:type ("hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68346 68351])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68352 68356]))                  
                :type "int")
                nil [68337 68357])
            ("ASIZE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("h" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68482 68484])
                    ("" variable (:type ("next" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68485 68490]))                  
                :type "int")
                nil [68475 68491])
            ("DEFAULT_REHASH_THRESHOLD" variable
               (:typemodifiers ("static")
                :default-value "0.8125"
                :type "float")
                nil [68770 68823])
            ("DEFAULT_REHASH_SIZE" variable
               (:typemodifiers ("static")
                :default-value "1.5 - 1"
                :type "float")
                nil [68904 68953])
            ("y" variable (:type "int") nil [69170 69172])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [69373 69404])
            ("buffer" variable
               (:pointer 1
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [69971 69993])
            ("need_adjustment" variable
               (:suffix ":1"
                :type ("bool_bf" type (:type "class") nil nil))
                nil [70165 70193])
            ("insertion_type" variable
               (:suffix ":1"
                :type ("bool_bf" type (:type "class") nil nil))
                nil [70306 70333])
            ("next" variable
               (:pointer 1
                :type ("Lisp_Marker" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [70795 70820])
            ("charpos" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [70883 70901])
            ("bytepos" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [71141 71159])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [71779 71810])
            ("start" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [71815 71833])
            ("end" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [71838 71854])
            ("plist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [71859 71877])
            ("next" variable
               (:pointer 1
                :type ("Lisp_Overlay" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [71882 71908])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [71944 71975])
            ("pointer" variable
               (:pointer 1
                :type "void")
                nil [71980 71994])
            ("val" variable
               (:default-value "TAG_PTR (Lisp_Int0, a)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [72947 72988])
            ("make_misc_ptr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73060 73062]))                  
                :type "int")
                nil [73045 73063])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73146 73148])
                    ("" variable (:type ("PVEC_MISC_PTR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73149 73163]))                  
                :type "int")
                nil [73131 73164])
            ("XFIXNUMPTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73283 73285]))                  
                :type "int")
                nil [73271 73286])
            ("pointer" variable (:type "int") nil [73347 73355])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [73547 73578])
            ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [73787 73808])
            ("prev" variable
               (:pointer 1
                :type ("Lisp_Finalizer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [73870 73898])
            ("next" variable
               (:pointer 1
                :type ("Lisp_Finalizer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [73903 73931])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74003 74005])
                    ("" variable (:type ("PVEC_FINALIZER" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74006 74021]))                  
                :type "int")
                nil [73988 74022])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74240 74242])
                    ("" variable (:type ("PVEC_MARKER" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74243 74255]))                  
                :type "int")
                nil [74225 74256])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74463 74465])
                    ("" variable (:type ("PVEC_OVERLAY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74466 74479]))                  
                :type "int")
                nil [74448 74480])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [74912 74943])
            ("value" variable (:type ("mpz_t" type (:type "class") nil nil)) nil [74946 74958])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75025 75027])
                    ("" variable (:type ("PVEC_BIGNUM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75028 75040]))                  
                :type "int")
                nil [75010 75041])
            ("BIGNUMP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75257 75259]))                  
                :type "int")
                nil [75248 75260])
            ("type" variable (:type ("Lisp_Fwd_Type" type (:type "enum") nil nil)) nil [75481 75505])
            ("intvar" variable
               (:pointer 1
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [75531 75549])
            ("type" variable (:type ("Lisp_Fwd_Type" type (:type "enum") nil nil)) nil [75776 75800])
            ("boolvar" variable
               (:pointer 1
                :type "bool")
                nil [75827 75841])
            ("type" variable (:type ("Lisp_Fwd_Type" type (:type "enum") nil nil)) nil [76066 76090])
            ("objvar" variable
               (:pointer 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [76116 76136])
            ("type" variable (:type ("Lisp_Fwd_Type" type (:type "enum") nil nil)) nil [76305 76329])
            ("offset" variable (:type "int") nil [76362 76373])
            ("predicate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [76453 76475])
            ("local_if_set" variable
               (:suffix ":1"
                :type ("bool_bf" type (:type "class") nil nil))
                nil [77705 77730])
            ("found" variable
               (:suffix ":1"
                :type ("bool_bf" type (:type "class") nil nil))
                nil [77848 77866])
            ("fwd" variable
               (:pointer 1
                :type ("Lisp_Fwd" type (:type "union") nil nil))
                nil [77950 77970])
            ("where" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [78084 78102])
            ("defcell" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [78210 78230])
            ("valcell" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [78511 78531])
            ("type" variable (:type ("Lisp_Fwd_Type" type (:type "enum") nil nil)) nil [78656 78680])
            ("offset" variable (:type "int") nil [78713 78724])
            ("u_intfwd" variable (:type ("Lisp_Intfwd" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [78754 78782])
            ("u_boolfwd" variable (:type ("Lisp_Boolfwd" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [78787 78817])
            ("u_objfwd" variable (:type ("Lisp_Objfwd" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [78822 78850])
            ("u_buffer_objfwd" variable (:type ("Lisp_Buffer_Objfwd" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [78855 78897])
            ("u_kboard_objfwd" variable (:type ("Lisp_Kboard_Objfwd" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [78902 78944])
            ("type" variable (:type "int") nil [79029 79034])
            ("Lisp_Fwd_Buffer_Obj" variable (:type "int") nil [79112 79132])
            ("u_buffer_objfwd" variable (:type "int") nil [79253 79269])
            ("u" variable (:type ("" type
                 (:members 
                    ( ("data" variable (:type "double") (reparse-symbol classsubparts) [79351 79363])
                      ("chain" variable
                         (:pointer 1
                          :type ("Lisp_Float" type
                               (:prototype t
                                :type "struct")
                                nil nil))
                          (reparse-symbol classsubparts) [79370 79395]))                    
                  :type "union")
                  nil nil)) nil [79333 79404])
            ("data" variable (:type "int") nil [79679 79684])
            ("IEEE_FLOATING_POINT" variable (:constant-flag t) nil [80140 80159])
            ("_UCHAR_T" variable (:constant-flag t) nil [80462 80470])
            ("UCHAR" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [80471 80499])
            ("FLOATP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81533 81535]))                  
                :type "int")
                nil [81525 81536])
            ("XFIXNUM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81615 81617]))                  
                :type "int")
                nil [81606 81618])
            ("XFIXNUM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81762 81764]))                  
                :type "int")
                nil [81753 81765])
            ("FLOATP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81839 81841]))                  
                :type "int")
                nil [81831 81842])
            ("hi" variable (:type "int") nil [81977 81980])
            ("TYPE_RANGED_FIXNUMP" variable (:constant-flag t) nil [81992 82011])
            ("EQ" variable (:type "int") nil [82236 82263])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82390 82392])
                    ("" variable (:type ("PVEC_WINDOW_CONFIGURATION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82393 82419]))                  
                :type "int")
                nil [82375 82420])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82488 82490])
                    ("" variable (:type ("PVEC_COMPILED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82491 82505]))                  
                :type "int")
                nil [82473 82506])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82571 82573])
                    ("" variable (:type ("PVEC_FRAME" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82574 82585]))                  
                :type "int")
                nil [82556 82586])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82652 82654])
                    ("" variable (:type ("PVEC_RECORD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82655 82667]))                  
                :type "int")
                nil [82637 82668])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("RECORDP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82729 82740])
                    ("" variable (:type ("Qrecordp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82742 82751])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82752 82754]))                  
                :type "int")
                nil [82717 82755])
            ("EQ" variable (:type "int") nil [82853 82877])
            ("BOOL_VECTOR_P" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83012 83014]))                  
                :type "int")
                nil [82997 83015])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("CONSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83075 83084])
                    ("" variable (:type ("NILP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83088 83096])
                    ("" variable (:type ("Qlistp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83098 83105])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83106 83108]))                  
                :type "int")
                nil [83063 83109])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NILP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83187 83195])
                    ("" variable (:type ("Qlistp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83197 83204])
                    ("" variable (:type ("y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83205 83207]))                  
                :type "int")
                nil [83175 83208])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("FIXNUMP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("Qfixnump" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [83259 83283])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("STRINGP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83348 83366])
                    ("" variable (:type ("Qstringp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83368 83377])
                    ("" variable (:type ("XCAR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83378 83386]))                  
                :type "int")
                nil [83336 83388])
            ("ASIZE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83555 83557]))                  
                :type "int")
                nil [83548 83558])
            ("SCHARS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83597 83599]))                  
                :type "int")
                nil [83589 83600])
            ("wrong_type_argument" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Qarrayp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83624 83632])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83633 83635]))                  
                :type "int")
                nil [83603 83636])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ARRAYP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83718 83728])
                    ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83730 83740])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83741 83743]))                  
                :type "int")
                nil [83706 83744])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("FIXNATP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83804 83815])
                    ("" variable (:type ("Qwholenump" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83817 83828])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83829 83831]))                  
                :type "int")
                nil [83792 83832])
            ("CHECK_RANGED_INTEGER" variable (:constant-flag t) nil [83844 83864])
            ("CHECK_TYPE_RANGED_INTEGER" variable (:constant-flag t) nil [84233 84258])
            ("CHECK_FIXNUM_COERCE_MARKER" variable (:constant-flag t) nil [84503 84529])
            ("mpz_get_d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("XBIGNUM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84816 84827])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84829 84835]))                  
                :type "int")
                nil [84805 84836])
            ("XFIXNUM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("n" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84886 84888]))                  
                :type "int")
                nil [84877 84889])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("FIXED_OR_FLOATP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84959 84978])
                    ("" variable (:type ("Qnumberp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84980 84989])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84990 84992]))                  
                :type "int")
                nil [84947 84993])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("NUMBERP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85054 85065])
                    ("" variable (:type ("Qnumberp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85067 85076])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85077 85079]))                  
                :type "int")
                nil [85042 85080])
            ("CHECK_TYPE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("INTEGERP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85142 85154])
                    ("" variable (:type ("Qnumberp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85156 85165])
                    ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85166 85168]))                  
                :type "int")
                nil [85130 85169])
            ("CHECK_FIXNUM_OR_FLOAT_COERCE_MARKER" variable (:constant-flag t) nil [85181 85216])
            ("CHECK_NUMBER_COERCE_MARKER" variable (:constant-flag t) nil [85432 85458])
            ("CHECK_INTEGER_COERCE_MARKER" variable (:constant-flag t) nil [85668 85695])
            ("tmp" variable
               (:default-value "XCAR (x)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86087 86114])
            ("CHECK_FIXNUM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("tmp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86131 86135]))                  
                :type "int")
                nil [86117 86136])
            ("XSETCAR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86148 86150])
                    ("" variable (:type ("tmp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86151 86155]))                  
                :type "int")
                nil [86139 86156])
            ("tmp" variable
               (:default-value "XCDR (x)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [86209 86236])
            ("CHECK_FIXNUM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("tmp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86253 86257]))                  
                :type "int")
                nil [86239 86258])
            ("XSETCDR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86270 86272])
                    ("" variable (:type ("tmp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86273 86277]))                  
                :type "int")
                nil [86261 86278])
            ("DEFUN" variable (:constant-flag t) nil [87759 87764])
            ("CALLMANY" variable (:constant-flag t) nil [88307 88315])
            ("CALLN" variable (:constant-flag t) nil [88660 88665])
            ("DEFVAR_LISP" variable (:constant-flag t) nil [89865 89876])
            ("DEFVAR_LISP_NOPRO" variable (:constant-flag t) nil [90037 90054])
            ("DEFVAR_BOOL" variable (:constant-flag t) nil [90219 90230])
            ("DEFVAR_INT" variable (:constant-flag t) nil [90392 90402])
            ("DEFVAR_KBOARD" variable (:constant-flag t) nil [90563 90576])
            ("CHAR_BIT" variable (:type "int") nil [92572 92581])
            ("unwind" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [92631 92640])
                      ("func" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [92661 92673]))                            
                          :type "void")
                          (reparse-symbol classsubparts) [92647 92674])
                      ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [92681 92697]))                    
                  :type "struct")
                  nil nil)) nil [92586 92711])
            ("unwind_array" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [92761 92770])
                      ("nelts" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [92777 92793])
                      ("array" variable
                         (:pointer 1
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [92800 92819]))                    
                  :type "struct")
                  nil nil)) nil [92716 92839])
            ("unwind_ptr" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [92889 92898])
                      ("func" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable
                                 (:pointer 1
                                  :type "void")
                                  (reparse-symbol arg-sub-list) [92919 92926]))                            
                          :type "void")
                          (reparse-symbol classsubparts) [92905 92927])
                      ("arg" variable
                         (:pointer 1
                          :type "void")
                          (reparse-symbol classsubparts) [92934 92944]))                    
                  :type "struct")
                  nil nil)) nil [92844 92962])
            ("unwind_int" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [93012 93021])
                      ("func" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [93042 93046]))                            
                          :type "void")
                          (reparse-symbol classsubparts) [93028 93047])
                      ("arg" variable (:type "int") (reparse-symbol classsubparts) [93054 93062]))                    
                  :type "struct")
                  nil nil)) nil [92967 93080])
            ("unwind_excursion" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [93130 93139])
                      ("marker" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93146 93173])
                      ("window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93146 93173]))                    
                  :type "struct")
                  nil nil)) nil [93085 93197])
            ("unwind_void" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [93247 93256])
                      ("func" function
                         (:prototype-flag t
                          :function-pointer t
                          :arguments 
                            ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [93277 93282]))                            
                          :type "void")
                          (reparse-symbol classsubparts) [93263 93283]))                    
                  :type "struct")
                  nil nil)) nil [93202 93302])
            ("let" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [93352 93361])
                      ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93429 93466])
                      ("old_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93429 93466])
                      ("where" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93429 93466])
                      ("saved_value" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93587 93611]))                    
                  :type "struct")
                  nil nil)) nil [93307 93622])
            ("bt" variable (:type ("" type
                 (:members 
                    ( ("CHAR_BIT" variable (:type "int") (reparse-symbol classsubparts) [93672 93681])
                      ("debug_on_exit" variable
                         (:suffix ":1"
                          :type ("bool_bf" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [93688 93714])
                      ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93721 93742])
                      ("args" variable
                         (:pointer 1
                          :type ("Lisp_Object" type (:type "class") nil nil))
                          (reparse-symbol classsubparts) [93749 93767])
                      ("nargs" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [93774 93790]))                    
                  :type "struct")
                  nil nil)) nil [93627 93800])
            ("specpdl" variable (:type "int") nil [94044 94052])
            ("type" variable (:type ("handlertype" type (:type "enum") nil nil)) nil [95260 95282])
            ("tag_or_ch" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [95285 95307])
            ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [95310 95326])
            ("next" variable
               (:pointer 1
                :type ("handler" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [95329 95350])
            ("nextfree" variable
               (:pointer 1
                :type ("handler" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [95353 95378])
            ("bytecode_top" variable
               (:pointer 1
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [95711 95737])
            ("bytecode_dest" variable (:type "int") nil [95740 95758])
            ("jmp" variable (:type ("sys_jmp_buf" type (:type "class") nil nil)) nil [95903 95919])
            ("f_lisp_eval_depth" variable (:type ("EMACS_INT" type (:type "class") nil nil)) nil [95922 95950])
            ("pdlcount" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [95953 95972])
            ("poll_suppress_count" variable (:type "int") nil [95975 95999])
            ("interrupt_input_blocked" variable (:type "int") nil [96002 96030])
            ("memory_signal_data" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96035 96073])
            ("QUITP" variable (:constant-flag t) nil [96150 96155])
            ("maybe_quit" function
               (:prototype-flag t
                :type "int")
                nil [96441 96455])
            ("Vascii_downcase_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96460 96501])
            ("Vascii_canon_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [96502 96540])
            ("window" type
               (:prototype t
                :type "struct")
                nil [96685 96699])
            ("frame" type
               (:prototype t
                :type "struct")
                nil [96700 96713])
            ("memcpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("XVECTOR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96966 96977])
                    ("" variable (:type ("contents" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96979 96989])
                    ("" variable (:type ("offset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96990 96997])
                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96998 97003])
                    ("" variable
                       (:pointer 1
                        :type ("count" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [97004 97018])
                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97020 97025]))                  
                :type "int")
                nil [96958 97026])
            ("gc_aset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("h" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97174 97176])
                    ("" variable (:type ("key_and_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97177 97191])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97196 97200])
                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97201 97205]))                  
                :type "int")
                nil [97165 97206])
            ("gc_aset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("h" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97315 97317])
                    ("" variable (:type ("key_and_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97318 97332])
                    ("" variable (:type ("idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97337 97342])
                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97346 97350]))                  
                :type "int")
                nil [97306 97351])
            ("function" variable
               (:default-value "function"
                :type "int")
                nil [97540 97560])
            ("plist" variable
               (:default-value "plist"
                :type "int")
                nil [97653 97667])
            ("next" variable
               (:default-value "next"
                :type "int")
                nil [97766 97778])
            ("trapped_write" variable
               (:default-value "SYMBOL_NOWRITE"
                :type "int")
                nil [97856 97887])
            ("found" variable (:type "int") nil [98074 98080])
            ("plist" variable
               (:default-value "plist"
                :type "int")
                nil [98216 98230])
            ("intervals" variable (:type "int") nil [98345 98355])
            ("intervals" variable
               (:default-value "i"
                :type "int")
                nil [98480 98494])
            ("defalt" variable
               (:default-value "val"
                :type "int")
                nil [98700 98713])
            ("purpose" variable
               (:default-value "val"
                :type "int")
                nil [98813 98827])
            ("extras" variable
               (:dereference 1
                :default-value "val"
                :type "int")
                nil [99072 99090])
            ("contents" variable
               (:dereference 1
                :default-value "val"
                :type "int")
                nil [99265 99285])
            ("contents" variable
               (:dereference 1
                :default-value "val"
                :type "int")
                nil [99410 99430])
            ("INTEGER_TO_CONS" variable (:constant-flag t) nil [100195 100210])
            ("CONS_TO_INTEGER" variable (:constant-flag t) nil [100666 100681])
            ("charset" type
               (:prototype t
                :type "struct")
                nil [102564 102579])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [102793 102809])
            ("hashtest_eq" variable
               (:typemodifiers ("extern")
                :type ("hash_table_test" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [103433 103511])
            ("hashtest_eql" variable
               (:typemodifiers ("extern")
                :type ("hash_table_test" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [103433 103511])
            ("hashtest_equal" variable
               (:typemodifiers ("extern")
                :type ("hash_table_test" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [103433 103511])
            ("Vwindow_system" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [107786 107820])
            ("noninteractive_need_newline" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [107902 107942])
            ("pending_malloc_warning" variable
               (:pointer 1
                :typemodifiers ("extern")
                :constant-flag t
                :type "char")
                nil [110283 110325])
            ("zero_vector" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [110326 110357])
            ("consing_since_gc" variable
               (:typemodifiers ("extern")
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [110358 110392])
            ("gc_relative_threshold" variable
               (:typemodifiers ("extern")
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [110393 110432])
            ("memory_full_cons_threshold" variable
               (:typemodifiers ("extern")
                :type ("EMACS_INT" type (:type "class") nil nil))
                nil [110433 110477])
            ("mpz_set_intmax_slow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111456 111463])
                    ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111464 111466]))                  
                :type "int")
                nil [111435 111467])
            ("mpz_set_si" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111491 111498])
                    ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111499 111501]))                  
                :type "int")
                nil [111479 111502])
            ("mpz_set_uintmax_slow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111829 111836])
                    ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111837 111839]))                  
                :type "int")
                nil [111807 111840])
            ("mpz_set_ui" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111864 111871])
                    ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111872 111874]))                  
                :type "int")
                nil [111852 111875])
            ("list2" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112003 112018])
                    ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112020 112035]))                  
                :type "int")
                nil [111996 112037])
            ("list3" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112125 112140])
                    ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112142 112157])
                    ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112159 112174]))                  
                :type "int")
                nil [112118 112176])
            ("list4" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112277 112292])
                    ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112294 112309])
                    ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112313 112328])
                    ("" variable (:type ("make_fixnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112330 112345]))                  
                :type "int")
                nil [112270 112347])
            ("make_unibyte_string" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112906 112910])
                    ("" variable (:type ("strlen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112911 112923]))                  
                :type "int")
                nil [112885 112925])
            ("make_pure_c_string" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113672 113676])
                    ("" variable (:type ("strlen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113677 113689]))                  
                :type "int")
                nil [113652 113691])
            ("make_string" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113863 113867])
                    ("" variable (:type ("strlen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113868 113880]))                  
                :type "int")
                nil [113850 113882])
            ("v" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [114419 114433])
            ("p" variable
               (:pointer 1
                :type ("Lisp_Vector" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [114436 114458])
            ("p" variable
               (:default-value "allocate_vector (size)"
                :type "int")
                nil [114462 114489])
            ("v" variable (:type "int") nil [114520 114522])
            ("slots" variable
               (:default-value "SUB_CHAR_TABLE_OFFSET + chartab_size[depth]"
                :type "int")
                nil [114655 114711])
            ("v" variable
               (:default-value "make_uninit_vector (slots)"
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [114714 114757])
            ("depth" variable
               (:default-value "depth"
                :type "int")
                nil [114833 114847])
            ("min_char" variable
               (:default-value "min_char"
                :type "int")
                nil [114871 114891])
            ("v" variable (:type "int") nil [114901 114903])
            ("ALLOCATE_PSEUDOVECTOR" variable (:constant-flag t) nil [115150 115171])
            ("ALLOCATE_ZEROED_PSEUDOVECTOR" variable (:constant-flag t) nil [115486 115514])
            ("gc_in_progress" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [115679 115706])
            ("__malloc_extra_blocks" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [116408 116444])
            ("Vprin1_to_string_buffer" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [117676 117719])
            ("EXTERNALLY_VISIBLE" variable (:type "int") nil [117758 117777])
            ("print_level" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [117831 117854])
            ("Lisp_Object" function (:type "int") nil [118025 118054])
            ("FLOAT_TO_STRING_BUFSIZE" variable (:constant-flag t) nil [118078 118101])
            ("Vcurrent_load_list" variable
               (:default-value "Fcons (x, Vcurrent_load_list)"
                :type "int")
                nil [119165 119216])
            ("intern_1" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119756 119760])
                    ("" variable (:type ("strlen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119761 119773]))                  
                :type "int")
                nil [119746 119775])
            ("intern_c_string_1" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119862 119866])
                    ("" variable (:type ("strlen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119867 119879]))                  
                :type "int")
                nil [119843 119881])
            ("Vautoload_queue" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [119911 119946])
            ("Vrun_hooks" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [119947 119977])
            ("Vsignaling_function" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [119978 120017])
            ("inhibit_lisp_code" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [120018 120055])
            ("Lisp_Object" function
               (:arguments 
                  ( ("" variable (:type ("funcall" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [120472 120480]))                  
                :type "int")
                nil [120458 120528])
            ("Fsignal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("error_symbol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [120651 120664])
                    ("" variable (:type ("data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [120665 120670]))                  
                :type "int")
                nil [120642 120671])
            ("Lisp_Object" function (:type "int") nil [122121 122150])
            ("Lisp_Object" function (:type "int") nil [122299 122321])
            ("Lisp_Object" function (:type "int") nil [122336 122365])
            ("Lisp_Object" function (:type "int") nil [122414 122443])
            ("Lisp_Object" function (:type "int") nil [122471 122500])
            ("Lisp_Object" function (:type "int") nil [122549 122591])
            ("Lisp_Object" function (:type "int") nil [122632 122661])
            ("Lisp_Object" function (:type "int") nil [122714 122756])
            ("Lisp_Object" function (:type "int") nil [122802 122857])
            ("Lisp_Object" function (:type "int") nil [122899 122923])
            ("Lisp_Object" function (:type "int") nil [122933 122962])
            ("emacs-module.h" include nil nil [125193 125218])
            ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) nil [125680 125711])
            ("documentation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [125768 125794])
            ("min_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [125829 125860])
            ("max_arity" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) nil [125829 125860])
            ("subr" variable (:type ("emacs_subr" type (:type "class") nil nil)) nil [125863 125879])
            ("data" variable
               (:pointer 1
                :type "void")
                nil [125882 125893])
            ("PSEUDOVECTORP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125969 125971])
                    ("" variable (:type ("PVEC_MODULE_FUNCTION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125972 125993]))                  
                :type "int")
                nil [125954 125994])
            ("fast_string_match_internal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("regexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130290 130297])
                    ("" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130298 130305])
                    ("" variable (:type ("Qnil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130306 130311]))                  
                :type "int")
                nil [130262 130312])
            ("fast_string_match_internal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("regexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130443 130450])
                    ("" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130451 130458])
                    ("" variable (:type ("Vascii_canon_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130459 130478]))                  
                :type "int")
                nil [130415 130479])
            ("Vminibuffer_list" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [131331 131367])
            ("last_minibuf_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [131368 131407])
            ("echo_message_buffer" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [131845 131884])
            ("echo_kboard" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("kboard" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [131885 131919])
            ("input_pending" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [131955 131981])
            ("pending_funcalls" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [132282 132318])
            ("initial_argv" variable
               (:pointer 2
                :typemodifiers ("extern")
                :type "char")
                nil [133528 133555])
            ("initial_argc" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [133556 133580])
            ("empty_unibyte_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [133734 133798])
            ("empty_multibyte_string" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [133734 133798])
            ("noninteractive" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [134372 134399])
            ("no_site_lisp" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [134464 134489])
            ("build_details" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [134551 134577])
            ("daemon_type" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [134662 134685])
            ("IS_DAEMON" variable (:constant-flag t) nil [134694 134703])
            ("DAEMON_RUNNING" variable (:constant-flag t) nil [134731 134745])
            ("fatal_error_in_progress" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [134985 135021])
            ("inhibit_window_system" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [135091 135125])
            ("running_asynch_code" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [135184 135216])
            ("Lisp_Process" type
               (:prototype t
                :type "struct")
                nil [135247 135267])
            ("WAIT_READING_MAX" variable (:constant-flag t) nil [135778 135794])
            ("CHILD_SETUP_TYPE" variable (:constant-flag t) nil [136281 136297])
            ("tty_display_info" type
               (:prototype t
                :type "struct")
                nil [138153 138177])
            ("false" variable (:type "int") nil [138363 138369])
            ("NO_INLINE" variable (:type "int") nil [139205 139215])
            ("char_ins_del_vector" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "int")
                nil [140612 140644])
            ("Vface_alternative_font_family_alist" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141633 141688])
            ("Vface_alternative_font_registry_alist" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [141689 141746])
            ("profiler_memory_running" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [142710 142746])
            ("my_endbss_static" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type "char")
                nil [143005 143035])
            ("ATTRIBUTE_MALLOC" variable (:type "int") nil [143526 143543])
            ("ATTRIBUTE_MALLOC" variable (:type "int") nil [143583 143600])
            ("len" variable
               (:default-value "SBYTES (string)"
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [143866 143898])
            ("memcpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("dest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143909 143914])
                    ("" variable (:type ("SDATA" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143915 143929])
                    ("" variable (:type ("len" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143931 143936]))                  
                :type "int")
                nil [143901 143940])
            ("len" variable (:type "int") nil [143957 143961])
            ("egetenv_internal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("var" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144198 144202])
                    ("" variable (:type ("strlen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144203 144215]))                  
                :type "int")
                nil [144180 144217])
            ("eabs" variable (:constant-flag t) nil [144578 144582])
            ("make_fixnum_or_float" variable (:constant-flag t) nil [144723 144743])
            ("USE_SAFE_ALLOCA" variable (:constant-flag t) nil [145085 145100])
            ("AVAIL_ALLOCA" variable (:constant-flag t) nil [145191 145203])
            ("SAFE_ALLOCA" variable (:constant-flag t) nil [145302 145313])
            ("SAFE_NALLOCA" variable (:constant-flag t) nil [145620 145632])
            ("SAFE_ALLOCA_STRING" variable (:constant-flag t) nil [146067 146085])
            ("SAFE_FREE" variable (:constant-flag t) nil [146307 146316])
            ("SAFE_FREE_UNBIND_TO" variable (:constant-flag t) nil [147032 147051])
            ("unbind_to" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("count" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147259 147265])
                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147266 147270]))                  
                :type "int")
                nil [147248 147271])
            ("SAFE_ALLOCA_LISP_EXTRA" variable (:constant-flag t) nil [147398 147420])
            ("SAFE_ALLOCA_LISP" variable (:constant-flag t) nil [148083 148099])
            ("USE_STACK_LISP_OBJECTS" variable (:constant-flag t) nil [148898 148920])
            ("STACK_CONS" variable (:constant-flag t) nil [149753 149763])
            ("AUTO_CONS_EXPR" variable (:constant-flag t) nil [149844 149858])
            ("AUTO_CONS" variable (:constant-flag t) nil [150207 150216])
            ("AUTO_LIST1" variable (:constant-flag t) nil [150278 150288])
            ("AUTO_LIST2" variable (:constant-flag t) nil [150386 150396])
            ("AUTO_LIST3" variable (:constant-flag t) nil [150541 150551])
            ("AUTO_LIST4" variable (:constant-flag t) nil [150716 150726])
            ("AUTO_STRING" variable (:constant-flag t) nil [151283 151294])
            ("AUTO_STRING_WITH_LEN" variable (:constant-flag t) nil [151735 151755])
            ("FOR_EACH_TAIL" variable (:constant-flag t) nil [152391 152404])
            ("FOR_EACH_TAIL_SAFE" variable (:constant-flag t) nil [152611 152629])
            ("tortoise" variable (:type ("Lisp_Object" type (:type "class") nil nil)) nil [152805 152826])
            ("n" variable (:type "int") nil [152843 152845])
            ("q" variable (:type "unsigned short int") nil [152848 152869])
            ("FOR_EACH_TAIL_INTERNAL" variable (:constant-flag t) nil [153569 153591])
            ("FOR_EACH_ALIST_VALUE" variable (:constant-flag t) nil [154049 154069]))          
      :file "lisp.h"
      :pointmax 154600
      :fsize 154609
      :lastmodtime '(23408 44231 552891 309000)
      :unmatched-syntax '((symbol 154555 . 154572) (close-paren 154552 . 154553) (punctuation 154550 . 154551) (close-paren 154549 . 154550) (open-paren 154548 . 154549) (symbol 154531 . 154547) (close-paren 154525 . 154526) (semantic-list 154451 . 154525) (punctuation 154449 . 154450) (punctuation 154448 . 154449) (semantic-list 154352 . 154441) (open-paren 154351 . 154352) (IF 154348 . 154350) (open-paren 154344 . 154345) (close-paren 154342 . 154343) (VOID 154338 . 154342) (open-paren 154337 . 154338) (symbol 154328 . 154336) (VOID 154323 . 154327) (symbol 154316 . 154322) (punctuation 152871 . 152872) (close-paren 152870 . 152871) (semantic-list #("((a) > (b) ? (a) : (b))" 0 1 (macros (("b") ("a")))) 152838 . 152842) (symbol 152829 . 152837) (open-paren 152801 . 152802) (symbol 152778 . 152800) (STRUCT 152771 . 152777) (punctuation 149544 . 149545) (close-paren 149543 . 149544) (close-paren 149539 . 149540) (symbol 149510 . 149539) (punctuation 149509 . 149510) (punctuation 149507 . 149508) (punctuation 149506 . 149507) (symbol 149488 . 149502) (open-paren 149487 . 149488) (punctuation 149485 . 149486) (symbol 149468 . 149484) (punctuation 149462 . 149463) (symbol "false" 149440 . 149462) (punctuation 149438 . 149439) (symbol 149423 . 149437) (open-paren 149417 . 149418) (ENUM 149410 . 149414) (punctuation 149138 . 149139) (close-paren 149137 . 149138) (symbol 149131 . 149136) (punctuation 149129 . 149130) (symbol 149099 . 149128) (open-paren 149097 . 149098) (ENUM 149092 . 149096) (close-paren 148809 . 148810) (close-paren 148808 . 148809) (number 148807 . 148808) (punctuation 148805 . 148806) (number 148804 . 148805) (punctuation 148802 . 148803) (number 148801 . 148802) (open-paren 148800 . 148801) (symbol 148788 . 148799) (punctuation 148786 . 148787) (punctuation 148784 . 148785) (punctuation 148783 . 148784) (symbol 148773 . 148782) (symbol 148765 . 148772) (punctuation 148764 . 148765) (punctuation 148762 . 148763) (punctuation 148761 . 148762) (symbol "8" 148752 . 148760) (symbol 148744 . 148751) (punctuation 148742 . 148743) (punctuation 148741 . 148742) (close-paren 147272 . 147273) (RETURN 147241 . 147247) (punctuation 147237 . 147238) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "count" 147219 . 147224)))) 147210 . 147237) (open-paren 147206 . 147207) (close-paren 147204 . 147205) (symbol 147201 . 147204) (symbol 147189 . 147200) (punctuation 147187 . 147188) (symbol 147179 . 147187) (symbol 147169 . 147178) (punctuation 147167 . 147168) (symbol 147162 . 147167) (symbol 147152 . 147161) (open-paren 147151 . 147152) (symbol 147131 . 147150) (symbol 147119 . 147130) (symbol 147112 . 147118) (close-paren 146729 . 146730) (semantic-list 146434 . 146728) (semantic-list 146394 . 146429) (WHILE 146388 . 146393) (open-paren 146384 . 146385) (close-paren 146382 . 146383) (symbol 146374 . 146382) (symbol 146364 . 146373) (open-paren 146363 . 146364) (symbol 146353 . 146362) (VOID 146348 . 146352) (symbol 146341 . 146347) (punctuation 145074 . 145075) (close-paren 145073 . 145074) (semantic-list 145070 . 145073) (open-paren 145069 . 145070) (symbol 145048 . 145068) (close-paren 145046 . 145047) (symbol 145040 . 145046) (open-paren 145039 . 145040) (symbol 145024 . 145038) (punctuation 145023 . 145024) (VOID 145018 . 145022) (EXTERN 145011 . 145017) (punctuation 145008 . 145009) (close-paren 145007 . 145008) (number 145002 . 145006) (punctuation 145000 . 145001) (number 144997 . 144999) (punctuation 144995 . 144996) (symbol 144984 . 144994) (open-paren 144982 . 144983) (symbol 144971 . 144981) (ENUM 144966 . 144970) (punctuation 144312 . 144313) (close-paren 144311 . 144312) (VOID 144307 . 144311) (open-paren 144306 . 144307) (symbol 144289 . 144305) (VOID 144284 . 144288) (EXTERN 144277 . 144283) (close-paren 144218 . 144219) (semantic-list 144210 . 144215) (RETURN 144173 . 144179) (open-paren 144100 . 144101) (close-paren 144098 . 144099) (symbol 144095 . 144098) (punctuation 144094 . 144095) (CHAR 144089 . 144093) (CONST 144083 . 144088) (open-paren 144082 . 144083) (symbol 144074 . 144081) (punctuation 144072 . 144073) (CHAR 144067 . 144071) (symbol 144060 . 144066) (punctuation 144057 . 144058) (close-paren 144056 . 144057) (symbol 144047 . 144056) (punctuation 144045 . 144046) (punctuation 144044 . 144045) (CHAR 144039 . 144043) (CONST 144033 . 144038) (open-paren 144032 . 144033) (symbol 144015 . 144031) (punctuation 144014 . 144015) (CHAR 144009 . 144013) (EXTERN 144002 . 144008) (punctuation 143999 . 144000) (close-paren 143998 . 143999) (punctuation 143997 . 143998) (CHAR 143992 . 143996) (CONST 143986 . 143991) (open-paren 143985 . 143986) (symbol 143977 . 143984) (VOID 143972 . 143976) (EXTERN 143965 . 143971) (close-paren 143962 . 143963) (punctuation 143955 . 143956) (symbol 143950 . 143954) (RETURN 143943 . 143949) (number 143937 . 143938) (punctuation 143935 . 143936) (semantic-list 143921 . 143929) (open-paren 143862 . 143863) (close-paren 143860 . 143861) (symbol 143854 . 143860) (symbol 143842 . 143853) (punctuation 143840 . 143841) (symbol 143836 . 143840) (punctuation 143835 . 143836) (CHAR 143830 . 143834) (open-paren 143829 . 143830) (symbol 143818 . 143828) (punctuation 143816 . 143817) (CHAR 143811 . 143815) (symbol 143804 . 143810) (punctuation 143646 . 143647) (close-paren 143645 . 143646) (punctuation 143644 . 143645) (CONST 143638 . 143643) (CHAR 143633 . 143637) (punctuation 143631 . 143632) (punctuation 143630 . 143631) (punctuation 143629 . 143630) (CHAR 143624 . 143628) (open-paren 143623 . 143624) (symbol 143613 . 143622) (VOID 143608 . 143612) (EXTERN 143601 . 143607) (close-paren 143581 . 143582) (symbol 143570 . 143581) (open-paren 143569 . 143570) (symbol 143557 . 143568) (punctuation 143556 . 143557) (CHAR 143551 . 143555) (EXTERN 143544 . 143550) (close-paren 143524 . 143525) (punctuation 143523 . 143524) (CHAR 143518 . 143522) (CONST 143512 . 143517) (open-paren 143511 . 143512) (symbol 143503 . 143510) (punctuation 143502 . 143503) (CHAR 143497 . 143501) (EXTERN 143490 . 143496) (punctuation 143487 . 143488) (close-paren 143486 . 143487) (symbol 143477 . 143486) (punctuation 143475 . 143476) (symbol 143466 . 143475) (punctuation 143464 . 143465) (symbol 143455 . 143464) (punctuation 143453 . 143454) (punctuation 143452 . 143453) (symbol 143442 . 143451) (punctuation 143440 . 143441) (punctuation 143439 . 143440) (VOID 143434 . 143438) (open-paren 143433 . 143434) (symbol 143425 . 143432) (punctuation 143424 . 143425) (VOID 143419 . 143423) (EXTERN 143412 . 143418) (punctuation 143410 . 143411) (close-paren 143409 . 143410) (semantic-list 143404 . 143409) (open-paren 143403 . 143404) (symbol 143382 . 143402) (close-paren 143378 . 143379) (symbol 143369 . 143378) (punctuation 143367 . 143368) (symbol 143358 . 143367) (punctuation 143356 . 143357) (punctuation 143355 . 143356) (VOID 143350 . 143354) (open-paren 143349 . 143350) (symbol 143339 . 143348) (punctuation 143338 . 143339) (VOID 143333 . 143337) (EXTERN 143326 . 143332) (punctuation 143324 . 143325) (close-paren 143323 . 143324) (semantic-list 143318 . 143323) (open-paren 143317 . 143318) (symbol 143295 . 143316) (close-paren 143293 . 143294) (symbol 143284 . 143293) (punctuation 143282 . 143283) (symbol 143273 . 143282) (open-paren 143272 . 143273) (symbol 143263 . 143271) (punctuation 143262 . 143263) (VOID 143257 . 143261) (EXTERN 143250 . 143256) (punctuation 143248 . 143249) (close-paren 143247 . 143248) (punctuation 143246 . 143247) (VOID 143241 . 143245) (open-paren 143240 . 143241) (symbol 143234 . 143239) (VOID 143229 . 143233) (EXTERN 143222 . 143228) (punctuation 143220 . 143221) (close-paren 143219 . 143220) (semantic-list 143216 . 143219) (open-paren 143215 . 143216) (symbol 143194 . 143214) (close-paren 143192 . 143193) (symbol 143186 . 143192) (punctuation 143184 . 143185) (punctuation 143183 . 143184) (VOID 143178 . 143182) (open-paren 143177 . 143178) (symbol 143168 . 143176) (punctuation 143167 . 143168) (VOID 143162 . 143166) (EXTERN 143155 . 143161) (punctuation 143153 . 143154) (close-paren 143152 . 143153) (semantic-list 143149 . 143152) (open-paren 143148 . 143149) (symbol 143126 . 143147) (close-paren 143124 . 143125) (symbol 143118 . 143124) (open-paren 143117 . 143118) (symbol 143109 . 143116) (punctuation 143108 . 143109) (VOID 143103 . 143107) (EXTERN 143096 . 143102) (punctuation 143094 . 143095) (close-paren 143093 . 143094) (semantic-list 143090 . 143093) (open-paren 143089 . 143090) (symbol 143067 . 143088) (close-paren 143065 . 143066) (symbol 143059 . 143065) (open-paren 143058 . 143059) (symbol 143050 . 143057) (punctuation 143049 . 143050) (VOID 143044 . 143048) (EXTERN 143037 . 143043) (punctuation 143003 . 143004) (close-paren 143002 . 143003) (open-paren 143001 . 143002) (symbol 142992 . 143001) (CHAR 142987 . 142991) (EXTERN 142980 . 142986) (punctuation 142978 . 142979) (close-paren 142977 . 142978) (open-paren 142976 . 142977) (symbol 142968 . 142976) (CHAR 142963 . 142967) (EXTERN 142956 . 142962) (punctuation 142817 . 142818) (close-paren 142816 . 142817) (VOID 142812 . 142816) (open-paren 142811 . 142812) (symbol 142794 . 142810) (VOID 142789 . 142793) (EXTERN 142782 . 142788) (punctuation 142780 . 142781) (close-paren 142779 . 142780) (symbol 142773 . 142779) (open-paren 142772 . 142773) (symbol 142759 . 142771) (VOID 142754 . 142758) (EXTERN 142747 . 142753) (punctuation 142316 . 142317) (close-paren 142315 . 142316) (VOID 142311 . 142315) (open-paren 142310 . 142311) (symbol 142298 . 142309) (VOID 142293 . 142297) (EXTERN 142286 . 142292) (punctuation 141780 . 141781) (close-paren 141779 . 141780) (VOID 141775 . 141779) (open-paren 141774 . 141775) (symbol 141759 . 141773) (VOID 141754 . 141758) (EXTERN 141747 . 141753) (punctuation 140921 . 140922) (close-paren 140920 . 140921) (VOID 140916 . 140920) (open-paren 140915 . 140916) (symbol 140905 . 140914) (VOID 140900 . 140904) (EXTERN 140893 . 140899) (punctuation 140891 . 140892) (close-paren 140890 . 140891) (VOID 140886 . 140890) (open-paren 140885 . 140886) (symbol 140872 . 140884) (VOID 140867 . 140871) (EXTERN 140860 . 140866) (punctuation 140831 . 140832) (close-paren 140830 . 140831) (VOID 140826 . 140830) (open-paren 140825 . 140826) (symbol 140808 . 140824) (VOID 140803 . 140807) (EXTERN 140796 . 140802) (punctuation 140763 . 140764) (close-paren 140762 . 140763) (number 140761 . 140762) (punctuation 140759 . 140760) (number 140758 . 140759) (open-paren 140757 . 140758) (symbol 140733 . 140756) (close-paren 140729 . 140730) (punctuation 140728 . 140729) (punctuation 140727 . 140728) (punctuation 140726 . 140727) (punctuation 140724 . 140725) (symbol 140719 . 140724) (punctuation 140718 . 140719) (CHAR 140713 . 140717) (CONST 140707 . 140712) (open-paren 140706 . 140707) (symbol 140700 . 140705) (VOID 140695 . 140699) (EXTERN 140678 . 140684) (punctuation 140676 . 140677) (close-paren 140675 . 140676) (VOID 140671 . 140675) (open-paren 140670 . 140671) (symbol 140657 . 140669) (VOID 140652 . 140656) (EXTERN 140645 . 140651) (punctuation 140583 . 140584) (close-paren 140582 . 140583) (symbol 140571 . 140582) (punctuation 140569 . 140570) (BOOL 140565 . 140569) (punctuation 140518 . 140519) (symbol 140507 . 140518) (punctuation 140505 . 140506) (symbol 140494 . 140505) (punctuation 140447 . 140448) (symbol 140436 . 140447) (punctuation 140434 . 140435) (symbol 140423 . 140434) (open-paren 140422 . 140423) (symbol 140397 . 140421) (symbol 140385 . 140396) (EXTERN 140378 . 140384) (punctuation 140376 . 140377) (close-paren 140375 . 140376) (VOID 140371 . 140375) (open-paren 140370 . 140371) (symbol 140356 . 140369) (VOID 140351 . 140355) (EXTERN 140344 . 140350) (punctuation 140314 . 140315) (close-paren 140313 . 140314) (VOID 140309 . 140313) (open-paren 140308 . 140309) (symbol 140296 . 140307) (VOID 140291 . 140295) (EXTERN 140284 . 140290) (punctuation 140256 . 140257) (close-paren 140255 . 140256) (VOID 140251 . 140255) (open-paren 140250 . 140251) (symbol 140233 . 140249) (VOID 140228 . 140232) (EXTERN 140221 . 140227) (punctuation 140219 . 140220) (close-paren 140218 . 140219) (INT 140215 . 140218) (open-paren 140214 . 140215) (symbol 140196 . 140213) (symbol 140184 . 140195) (EXTERN 140177 . 140183) (punctuation 140175 . 140176) (close-paren 140174 . 140175) (VOID 140170 . 140174) (open-paren 140169 . 140170) (symbol 140150 . 140168) (VOID 140145 . 140149) (EXTERN 140138 . 140144) (punctuation 140105 . 140106) (close-paren 140104 . 140105) (VOID 140100 . 140104) (open-paren 140099 . 140100) (symbol 140085 . 140098) (VOID 140080 . 140084) (EXTERN 140073 . 140079) (punctuation 140043 . 140044) (close-paren 140042 . 140043) (VOID 140038 . 140042) (open-paren 140037 . 140038) (symbol 140020 . 140036) (VOID 140015 . 140019) (EXTERN 140008 . 140014) (punctuation 140006 . 140007) (close-paren 140005 . 140006) (punctuation 140004 . 140005) (symbol 139997 . 140003) (STRUCT 139990 . 139996) (open-paren 139989 . 139990) (symbol 139975 . 139988) (VOID 139970 . 139974) (EXTERN 139963 . 139969) (punctuation 139961 . 139962) (close-paren 139960 . 139961) (VOID 139956 . 139960) (open-paren 139955 . 139956) (symbol 139938 . 139954) (VOID 139933 . 139937) (EXTERN 139926 . 139932) (punctuation 139924 . 139925) (close-paren 139923 . 139924) (symbol 139912 . 139923) (open-paren 139911 . 139912) (symbol 139899 . 139910) (VOID 139894 . 139898) (EXTERN 139887 . 139893) (punctuation 139885 . 139886) (close-paren 139884 . 139885) (symbol 139873 . 139884) (open-paren 139872 . 139873) (symbol 139862 . 139871) (VOID 139857 . 139861) (EXTERN 139850 . 139856) (punctuation 139817 . 139818) (close-paren 139816 . 139817) (symbol 139805 . 139816) (punctuation 139803 . 139804) (symbol 139792 . 139803) (punctuation 139790 . 139791) (symbol 139779 . 139790) (punctuation 139777 . 139778) (symbol 139766 . 139777) (open-paren 139765 . 139766) (symbol 139753 . 139764) (INT 139749 . 139752) (EXTERN 139742 . 139748) (punctuation 139740 . 139741) (close-paren 139739 . 139740) (punctuation 139738 . 139739) (CONST 139732 . 139737) (CHAR 139727 . 139731) (punctuation 139725 . 139726) (INT 139722 . 139725) (punctuation 139720 . 139721) (punctuation 139719 . 139720) (CONST 139713 . 139718) (CHAR 139708 . 139712) (punctuation 139706 . 139707) (INT 139703 . 139706) (open-paren 139702 . 139703) (symbol 139683 . 139701) (INT 139679 . 139682) (EXTERN 139672 . 139678) (punctuation 139670 . 139671) (close-paren 139669 . 139670) (punctuation 139668 . 139669) (CONST 139662 . 139667) (CHAR 139657 . 139661) (open-paren 139656 . 139657) (symbol 139643 . 139655) (VOID 139638 . 139642) (EXTERN 139631 . 139637) (punctuation 139629 . 139630) (close-paren 139628 . 139629) (symbol 139619 . 139628) (punctuation 139617 . 139618) (punctuation 139616 . 139617) (CONST 139610 . 139615) (VOID 139605 . 139609) (punctuation 139603 . 139604) (INT 139600 . 139603) (open-paren 139599 . 139600) (symbol 139582 . 139598) (symbol 139572 . 139581) (EXTERN 139565 . 139571) (punctuation 139563 . 139564) (close-paren 139562 . 139563) (symbol 139553 . 139562) (punctuation 139551 . 139552) (punctuation 139550 . 139551) (CONST 139544 . 139549) (VOID 139539 . 139543) (punctuation 139537 . 139538) (INT 139534 . 139537) (open-paren 139533 . 139534) (symbol 139517 . 139532) (symbol 139507 . 139516) (EXTERN 139500 . 139506) (punctuation 139498 . 139499) (close-paren 139497 . 139498) (symbol 139488 . 139497) (punctuation 139486 . 139487) (punctuation 139485 . 139486) (CONST 139479 . 139484) (VOID 139474 . 139478) (punctuation 139472 . 139473) (INT 139469 . 139472) (open-paren 139468 . 139469) (symbol 139456 . 139467) (symbol 139446 . 139455) (EXTERN 139439 . 139445) (punctuation 139437 . 139438) (close-paren 139436 . 139437) (symbol 139427 . 139436) (punctuation 139425 . 139426) (punctuation 139424 . 139425) (VOID 139419 . 139423) (punctuation 139417 . 139418) (INT 139414 . 139417) (open-paren 139413 . 139414) (symbol 139397 . 139412) (symbol 139387 . 139396) (EXTERN 139380 . 139386) (punctuation 139378 . 139379) (close-paren 139377 . 139378) (symbol 139368 . 139377) (punctuation 139366 . 139367) (punctuation 139365 . 139366) (VOID 139360 . 139364) (punctuation 139358 . 139359) (INT 139355 . 139358) (open-paren 139354 . 139355) (symbol 139343 . 139353) (symbol 139333 . 139342) (EXTERN 139326 . 139332) (punctuation 139324 . 139325) (close-paren 139323 . 139324) (INT 139320 . 139323) (open-paren 139319 . 139320) (symbol 139307 . 139318) (INT 139303 . 139306) (EXTERN 139296 . 139302) (punctuation 139294 . 139295) (close-paren 139293 . 139294) (semantic-list 139290 . 139293) (INT 139287 . 139290) (open-paren 139286 . 139287) (symbol 139275 . 139285) (INT 139271 . 139274) (EXTERN 139264 . 139270) (punctuation 139262 . 139263) (close-paren 139261 . 139262) (INT 139258 . 139261) (punctuation 139256 . 139257) (INT 139253 . 139256) (punctuation 139251 . 139252) (punctuation 139250 . 139251) (CHAR 139245 . 139249) (CONST 139239 . 139244) (open-paren 139238 . 139239) (symbol 139227 . 139237) (INT 139223 . 139226) (EXTERN 139216 . 139222) (close-paren 139203 . 139204) (VOID 139199 . 139203) (open-paren 139198 . 139199) (symbol 139186 . 139197) (VOID 139181 . 139185) (EXTERN 139164 . 139170) (punctuation 139162 . 139163) (close-paren 139161 . 139162) (INT 139158 . 139161) (open-paren 139157 . 139158) (symbol 139141 . 139156) (VOID 139136 . 139140) (EXTERN 139129 . 139135) (punctuation 139127 . 139128) (close-paren 139126 . 139127) (VOID 139122 . 139126) (open-paren 139121 . 139122) (symbol 139109 . 139120) (VOID 139104 . 139108) (EXTERN 139097 . 139103) (punctuation 139095 . 139096) (close-paren 139094 . 139095) (symbol 139085 . 139094) (punctuation 139083 . 139084) (punctuation 139082 . 139083) (VOID 139077 . 139081) (open-paren 139076 . 139077) (symbol 139064 . 139075) (VOID 139059 . 139063) (EXTERN 139052 . 139058) (punctuation 139050 . 139051) (close-paren 139049 . 139050) (VOID 139045 . 139049) (open-paren 139044 . 139045) (symbol 139033 . 139043) (symbol 139023 . 139032) (EXTERN 139016 . 139022) (punctuation 139014 . 139015) (close-paren 139013 . 139014) (INT 139010 . 139013) (punctuation 139008 . 139009) (INT 139005 . 139008) (punctuation 139003 . 139004) (INT 139000 . 139003) (open-paren 138999 . 139000) (symbol 138983 . 138998) (INT 138979 . 138982) (EXTERN 138972 . 138978) (punctuation 138970 . 138971) (close-paren 138969 . 138970) (INT 138966 . 138969) (open-paren 138965 . 138966) (symbol 138955 . 138964) (VOID 138950 . 138954) (EXTERN 138943 . 138949) (punctuation 138941 . 138942) (close-paren 138940 . 138941) (INT 138937 . 138940) (open-paren 138936 . 138937) (symbol 138920 . 138935) (VOID 138915 . 138919) (EXTERN 138908 . 138914) (punctuation 138906 . 138907) (close-paren 138905 . 138906) (VOID 138901 . 138905) (open-paren 138900 . 138901) (symbol 138880 . 138899) (VOID 138875 . 138879) (EXTERN 138868 . 138874) (punctuation 138866 . 138867) (close-paren 138865 . 138866) (VOID 138861 . 138865) (open-paren 138860 . 138861) (symbol 138841 . 138859) (VOID 138836 . 138840) (EXTERN 138829 . 138835) (punctuation 138827 . 138828) (close-paren 138826 . 138827) (punctuation 138825 . 138826) (symbol 138808 . 138824) (STRUCT 138801 . 138807) (open-paren 138800 . 138801) (symbol 138784 . 138799) (VOID 138779 . 138783) (EXTERN 138772 . 138778) (punctuation 138770 . 138771) (close-paren 138769 . 138770) (punctuation 138768 . 138769) (symbol 138751 . 138767) (STRUCT 138744 . 138750) (open-paren 138743 . 138744) (symbol 138728 . 138742) (VOID 138723 . 138727) (EXTERN 138716 . 138722) (punctuation 138714 . 138715) (close-paren 138713 . 138714) (VOID 138709 . 138713) (open-paren 138708 . 138709) (symbol 138690 . 138707) (VOID 138685 . 138689) (EXTERN 138678 . 138684) (punctuation 138676 . 138677) (close-paren 138675 . 138676) (VOID 138671 . 138675) (open-paren 138670 . 138671) (symbol 138658 . 138669) (VOID 138653 . 138657) (EXTERN 138646 . 138652) (punctuation 138644 . 138645) (close-paren 138643 . 138644) (VOID 138639 . 138643) (open-paren 138638 . 138639) (symbol 138625 . 138637) (VOID 138620 . 138624) (EXTERN 138613 . 138619) (punctuation 138611 . 138612) (close-paren 138610 . 138611) (VOID 138606 . 138610) (open-paren 138605 . 138606) (symbol 138583 . 138604) (VOID 138578 . 138582) (EXTERN 138571 . 138577) (punctuation 138569 . 138570) (close-paren 138568 . 138569) (symbol 138567 . 138568) (CHAR 138562 . 138566) (open-paren 138561 . 138562) (symbol 138550 . 138560) (VOID 138545 . 138549) (EXTERN 138538 . 138544) (punctuation 138536 . 138537) (close-paren 138535 . 138536) (VOID 138531 . 138535) (open-paren 138530 . 138531) (symbol 138503 . 138529) (punctuation 138502 . 138503) (CHAR 138497 . 138501) (EXTERN 138490 . 138496) (punctuation 138488 . 138489) (close-paren 138487 . 138488) (VOID 138483 . 138487) (open-paren 138482 . 138483) (symbol 138464 . 138481) (VOID 138459 . 138463) (EXTERN 138452 . 138458) (punctuation 138450 . 138451) (close-paren 138449 . 138450) (punctuation 138448 . 138449) (CONST 138442 . 138447) (punctuation 138441 . 138442) (CHAR 138436 . 138440) (punctuation 138434 . 138435) (punctuation 138433 . 138434) (CONST 138427 . 138432) (punctuation 138426 . 138427) (CHAR 138421 . 138425) (punctuation 138419 . 138420) (punctuation 138418 . 138419) (CONST 138412 . 138417) (CHAR 138407 . 138411) (open-paren 138406 . 138407) (symbol 138390 . 138405) (INT 138386 . 138389) (EXTERN 138379 . 138385) (close-paren 138370 . 138371) (RETURN 138356 . 138362) (open-paren 138354 . 138355) (close-paren 138352 . 138353) (VOID 138348 . 138352) (open-paren 138347 . 138348) (symbol 138317 . 138346) (BOOL 138312 . 138316) (symbol 138305 . 138311) (punctuation 138120 . 138121) (close-paren 138119 . 138120) (VOID 138115 . 138119) (open-paren 138114 . 138115) (symbol 138100 . 138113) (VOID 138095 . 138099) (EXTERN 138088 . 138094) (punctuation 138058 . 138059) (close-paren 138057 . 138058) (VOID 138053 . 138057) (open-paren 138052 . 138053) (symbol 138039 . 138051) (VOID 138034 . 138038) (EXTERN 138027 . 138033) (punctuation 137998 . 137999) (close-paren 137997 . 137998) (symbol 137986 . 137997) (punctuation 137984 . 137985) (symbol 137973 . 137984) (open-paren 137972 . 137973) (symbol 137943 . 137971) (VOID 137938 . 137942) (EXTERN 137931 . 137937) (punctuation 137898 . 137899) (close-paren 137897 . 137898) (VOID 137893 . 137897) (open-paren 137892 . 137893) (symbol 137879 . 137891) (VOID 137874 . 137878) (EXTERN 137867 . 137873) (punctuation 137865 . 137866) (close-paren 137864 . 137865) (symbol 137853 . 137864) (punctuation 137815 . 137816) (symbol 137804 . 137815) (punctuation 137802 . 137803) (symbol 137791 . 137802) (punctuation 137781 . 137782) (symbol 137772 . 137781) (punctuation 137770 . 137771) (symbol 137761 . 137770) (open-paren 137760 . 137761) (symbol 137737 . 137759) (VOID 137732 . 137736) (EXTERN 137725 . 137731) (punctuation 137723 . 137724) (close-paren 137722 . 137723) (symbol 137713 . 137722) (punctuation 137711 . 137712) (symbol 137702 . 137711) (open-paren 137701 . 137702) (symbol 137687 . 137700) (VOID 137682 . 137686) (EXTERN 137675 . 137681) (punctuation 137673 . 137674) (close-paren 137672 . 137673) (VOID 137668 . 137672) (open-paren 137667 . 137668) (symbol 137647 . 137666) (VOID 137642 . 137646) (EXTERN 137635 . 137641) (punctuation 137633 . 137634) (close-paren 137632 . 137633) (BOOL 137628 . 137632) (punctuation 137626 . 137627) (symbol 137615 . 137626) (punctuation 137613 . 137614) (symbol 137604 . 137613) (open-paren 137603 . 137604) (symbol 137589 . 137602) (VOID 137584 . 137588) (EXTERN 137577 . 137583) (punctuation 137575 . 137576) (close-paren 137574 . 137575) (symbol 137565 . 137574) (punctuation 137563 . 137564) (symbol 137554 . 137563) (open-paren 137553 . 137554) (symbol 137539 . 137552) (VOID 137534 . 137538) (EXTERN 137527 . 137533) (punctuation 137525 . 137526) (close-paren 137524 . 137525) (punctuation 137523 . 137524) (symbol 137516 . 137522) (STRUCT 137509 . 137515) (open-paren 137508 . 137509) (symbol 137489 . 137507) (VOID 137484 . 137488) (EXTERN 137477 . 137483) (punctuation 137448 . 137449) (close-paren 137447 . 137448) (VOID 137443 . 137447) (open-paren 137442 . 137443) (symbol 137427 . 137441) (VOID 137422 . 137426) (EXTERN 137415 . 137421) (punctuation 137413 . 137414) (close-paren 137412 . 137413) (VOID 137408 . 137412) (open-paren 137407 . 137408) (symbol 137395 . 137406) (VOID 137390 . 137394) (EXTERN 137383 . 137389) (punctuation 137352 . 137353) (close-paren 137351 . 137352) (symbol 137340 . 137351) (open-paren 137339 . 137340) (symbol 137319 . 137338) (symbol 137307 . 137318) (EXTERN 137300 . 137306) (punctuation 137298 . 137299) (close-paren 137297 . 137298) (punctuation 137296 . 137297) (symbol 137284 . 137295) (punctuation 137282 . 137283) (symbol 137273 . 137282) (punctuation 137271 . 137272) (symbol 137260 . 137271) (punctuation 137251 . 137252) (symbol 137240 . 137251) (punctuation 137238 . 137239) (symbol 137227 . 137238) (punctuation 137225 . 137226) (symbol 137214 . 137225) (open-paren 137213 . 137214) (symbol 137198 . 137212) (symbol 137186 . 137197) (EXTERN 137179 . 137185) (punctuation 137177 . 137178) (close-paren 137176 . 137177) (VOID 137172 . 137176) (open-paren 137171 . 137172) (symbol 137154 . 137170) (VOID 137149 . 137153) (EXTERN 137142 . 137148) (punctuation 137109 . 137110) (close-paren 137108 . 137109) (BOOL 137104 . 137108) (open-paren 137103 . 137104) (symbol 137084 . 137102) (INT 137080 . 137083) (EXTERN 137073 . 137079) (punctuation 137071 . 137072) (close-paren 137070 . 137071) (VOID 137066 . 137070) (open-paren 137065 . 137066) (symbol 137053 . 137064) (VOID 137048 . 137052) (EXTERN 137041 . 137047) (punctuation 137039 . 137040) (close-paren 137038 . 137039) (BOOL 137034 . 137038) (punctuation 137032 . 137033) (BOOL 137028 . 137032) (punctuation 137026 . 137027) (symbol 137015 . 137026) (open-paren 137014 . 137015) (symbol 136999 . 137013) (symbol 136987 . 136998) (EXTERN 136980 . 136986) (punctuation 136978 . 136979) (close-paren 136977 . 136978) (symbol 136966 . 136977) (open-paren 136965 . 136966) (symbol 136949 . 136964) (symbol 136937 . 136948) (EXTERN 136930 . 136936) (punctuation 136928 . 136929) (close-paren 136927 . 136928) (VOID 136923 . 136927) (open-paren 136922 . 136923) (symbol 136903 . 136921) (symbol 136884 . 136902) (ENUM 136879 . 136883) (EXTERN 136872 . 136878) (punctuation 136870 . 136871) (close-paren 136869 . 136870) (symbol 136844 . 136866) (punctuation 136797 . 136798) (symbol 136778 . 136797) (punctuation 136714 . 136715) (symbol 136695 . 136714) (open-paren 136640 . 136641) (symbol 136619 . 136637) (ENUM 136614 . 136618) (punctuation 136586 . 136587) (close-paren 136585 . 136586) (VOID 136581 . 136585) (open-paren 136580 . 136581) (symbol 136563 . 136579) (VOID 136558 . 136562) (EXTERN 136551 . 136557) (punctuation 136549 . 136550) (close-paren 136548 . 136549) (VOID 136544 . 136548) (open-paren 136543 . 136544) (symbol 136519 . 136542) (VOID 136514 . 136518) (EXTERN 136507 . 136513) (punctuation 136505 . 136506) (close-paren 136504 . 136505) (VOID 136500 . 136504) (open-paren 136499 . 136500) (symbol 136485 . 136498) (VOID 136480 . 136484) (EXTERN 136473 . 136479) (punctuation 136471 . 136472) (close-paren 136470 . 136471) (VOID 136466 . 136470) (open-paren 136465 . 136466) (symbol 136449 . 136464) (VOID 136444 . 136448) (EXTERN 136437 . 136443) (punctuation 136435 . 136436) (close-paren 136434 . 136435) (symbol 136423 . 136434) (punctuation 136421 . 136422) (BOOL 136417 . 136421) (punctuation 136415 . 136416) (punctuation 136414 . 136415) (punctuation 136413 . 136414) (CHAR 136408 . 136412) (punctuation 136406 . 136407) (INT 136403 . 136406) (punctuation 136401 . 136402) (INT 136398 . 136401) (punctuation 136396 . 136397) (INT 136393 . 136396) (open-paren 136392 . 136393) (symbol 136380 . 136391) (VOID "void" 136363 . 136379) (EXTERN 136356 . 136362) (punctuation 136224 . 136225) (close-paren 136223 . 136224) (symbol 136212 . 136223) (open-paren 136211 . 136212) (symbol 136182 . 136210) (VOID 136177 . 136181) (EXTERN 136170 . 136176) (punctuation 136168 . 136169) (close-paren 136167 . 136168) (VOID 136163 . 136167) (open-paren 136162 . 136163) (symbol 136146 . 136161) (VOID 136141 . 136145) (EXTERN 136134 . 136140) (punctuation 136132 . 136133) (close-paren 136131 . 136132) (INT 136128 . 136131) (open-paren 136127 . 136128) (symbol 136108 . 136126) (VOID 136103 . 136107) (EXTERN 136096 . 136102) (punctuation 135982 . 135983) (close-paren 135981 . 135982) (INT 135978 . 135981) (open-paren 135977 . 135978) (symbol 135945 . 135976) (VOID 135940 . 135944) (EXTERN 135933 . 135939) (punctuation 135931 . 135932) (close-paren 135930 . 135931) (INT 135927 . 135930) (open-paren 135926 . 135927) (symbol 135897 . 135925) (VOID 135892 . 135896) (EXTERN 135885 . 135891) (punctuation 135428 . 135429) (close-paren 135427 . 135428) (INT 135424 . 135427) (punctuation 135422 . 135423) (punctuation 135421 . 135422) (symbol 135408 . 135420) (STRUCT 135401 . 135407) (punctuation 135394 . 135395) (symbol 135383 . 135394) (punctuation 135381 . 135382) (BOOL 135377 . 135381) (punctuation 135375 . 135376) (INT 135372 . 135375) (punctuation 135370 . 135371) (INT 135367 . 135370) (punctuation 135365 . 135366) (symbol 135357 . 135365) (open-paren 135356 . 135357) (symbol 135328 . 135355) (INT 135324 . 135327) (EXTERN 135317 . 135323) (punctuation 135315 . 135316) (close-paren 135314 . 135315) (symbol 135303 . 135314) (open-paren 135302 . 135303) (symbol 135280 . 135301) (VOID 135275 . 135279) (EXTERN 135268 . 135274) (punctuation 134292 . 134293) (close-paren 134291 . 134292) (symbol 134280 . 134291) (punctuation 134278 . 134279) (INT 134275 . 134278) (open-paren 134274 . 134275) (symbol 134258 . 134273) (VOID 134253 . 134257) (EXTERN 134246 . 134252) (punctuation 134244 . 134245) (close-paren 134243 . 134244) (INT 134240 . 134243) (open-paren 134239 . 134240) (symbol 134224 . 134238) (punctuation 134223 . 134224) (CHAR 134218 . 134222) (EXTERN 134211 . 134217) (close-paren 134202 . 134203) (open-paren 134201 . 134202) (close-paren 134199 . 134200) (VOID 134195 . 134199) (open-paren 134194 . 134195) (symbol 134163 . 134193) (VOID 134158 . 134162) (symbol 134151 . 134157) (close-paren 134149 . 134150) (open-paren 134148 . 134149) (close-paren 134146 . 134147) (VOID 134142 . 134146) (open-paren 134141 . 134142) (symbol 134106 . 134140) (VOID 134101 . 134105) (symbol 134094 . 134100) (close-paren 134092 . 134093) (open-paren 134091 . 134092) (close-paren 134089 . 134090) (VOID 134085 . 134089) (open-paren 134084 . 134085) (symbol 134071 . 134083) (VOID 134066 . 134070) (symbol 134059 . 134065) (punctuation 133855 . 133856) (close-paren 133854 . 133855) (INT 133851 . 133854) (punctuation 133849 . 133850) (INT 133846 . 133849) (open-paren 133845 . 133846) (symbol 133821 . 133844) (VOID 133816 . 133820) (EXTERN 133799 . 133805) (punctuation 133732 . 133733) (close-paren 133731 . 133732) (BOOL 133727 . 133731) (punctuation 133725 . 133726) (punctuation 133724 . 133725) (CHAR 133719 . 133723) (CONST 133713 . 133718) (punctuation 133711 . 133712) (punctuation 133710 . 133711) (CHAR 133705 . 133709) (CONST 133699 . 133704) (open-paren 133698 . 133699) (symbol 133682 . 133697) (symbol 133670 . 133681) (EXTERN 133663 . 133669) (punctuation 133498 . 133499) (close-paren 133497 . 133498) (VOID 133493 . 133497) (open-paren 133492 . 133493) (symbol 133478 . 133491) (VOID 133473 . 133477) (EXTERN 133466 . 133472) (punctuation 133464 . 133465) (close-paren 133463 . 133464) (symbol 133452 . 133463) (open-paren 133451 . 133452) (symbol 133429 . 133450) (VOID 133424 . 133428) (EXTERN 133417 . 133423) (punctuation 133415 . 133416) (close-paren 133414 . 133415) (symbol 133403 . 133414) (punctuation 133401 . 133402) (punctuation 133400 . 133401) (symbol 133394 . 133399) (STRUCT 133387 . 133393) (open-paren 133386 . 133387) (symbol 133370 . 133385) (symbol 133358 . 133369) (EXTERN 133351 . 133357) (punctuation 133349 . 133350) (close-paren 133348 . 133349) (symbol 133337 . 133348) (punctuation 133335 . 133336) (INT 133332 . 133335) (punctuation 133330 . 133331) (INT 133327 . 133330) (punctuation 133325 . 133326) (symbol 133314 . 133325) (open-paren 133313 . 133314) (symbol 133297 . 133312) (symbol 133285 . 133296) (EXTERN 133278 . 133284) (punctuation 133276 . 133277) (close-paren 133275 . 133276) (symbol 133264 . 133275) (punctuation 133262 . 133263) (symbol 133251 . 133262) (punctuation 133249 . 133250) (punctuation 133248 . 133249) (symbol 133236 . 133247) (open-paren 133235 . 133236) (symbol 133220 . 133234) (VOID 133215 . 133219) (EXTERN 133208 . 133214) (punctuation 133206 . 133207) (close-paren 133205 . 133206) (symbol 133194 . 133205) (punctuation 133192 . 133193) (symbol 133181 . 133192) (punctuation 133179 . 133180) (punctuation 133178 . 133179) (symbol 133172 . 133177) (STRUCT 133165 . 133171) (open-paren 133164 . 133165) (symbol 133146 . 133163) (VOID 133141 . 133145) (EXTERN 133134 . 133140) (punctuation 133104 . 133105) (close-paren 133103 . 133104) (VOID 133099 . 133103) (open-paren 133098 . 133099) (symbol 133083 . 133097) (VOID 133078 . 133082) (EXTERN 133071 . 133077) (punctuation 133069 . 133070) (close-paren 133068 . 133069) (symbol 133059 . 133068) (punctuation 133057 . 133058) (symbol 133048 . 133057) (punctuation 133046 . 133047) (symbol 133037 . 133046) (open-paren 133036 . 133037) (symbol 133018 . 133035) (BOOL 133013 . 133017) (EXTERN 133006 . 133012) (punctuation 133004 . 133005) (close-paren 133003 . 133004) (VOID 132999 . 133003) (open-paren 132998 . 132999) (symbol 132972 . 132997) (VOID 132967 . 132971) (EXTERN 132960 . 132966) (punctuation 132958 . 132959) (close-paren 132957 . 132958) (VOID 132953 . 132957) (open-paren 132952 . 132953) (symbol 132937 . 132951) (symbol 132927 . 132936) (EXTERN 132920 . 132926) (punctuation 132889 . 132890) (close-paren 132888 . 132889) (VOID 132884 . 132888) (open-paren 132883 . 132884) (symbol 132866 . 132882) (VOID 132861 . 132865) (EXTERN 132854 . 132860) (punctuation 132852 . 132853) (close-paren 132851 . 132852) (VOID 132847 . 132851) (open-paren 132846 . 132847) (symbol 132829 . 132845) (VOID 132824 . 132828) (EXTERN 132817 . 132823) (punctuation 132815 . 132816) (close-paren 132814 . 132815) (VOID 132810 . 132814) (open-paren 132809 . 132810) (symbol 132795 . 132808) (VOID 132790 . 132794) (EXTERN 132783 . 132789) (punctuation 132781 . 132782) (close-paren 132780 . 132781) (VOID 132776 . 132780) (open-paren 132775 . 132776) (symbol 132754 . 132774) (VOID 132749 . 132753) (EXTERN 132742 . 132748) (punctuation 132740 . 132741) (close-paren 132739 . 132740) (VOID 132735 . 132739) (open-paren 132734 . 132735) (symbol 132717 . 132733) (VOID 132712 . 132716) (EXTERN 132705 . 132711) (punctuation 132703 . 132704) (close-paren 132702 . 132703) (VOID 132698 . 132702) (open-paren 132697 . 132698) (symbol 132680 . 132696) (symbol 132668 . 132679) (EXTERN 132661 . 132667) (punctuation 132659 . 132660) (close-paren 132658 . 132659) (VOID 132654 . 132658) (open-paren 132653 . 132654) (symbol 132635 . 132652) (symbol 132623 . 132634) (EXTERN 132616 . 132622) (punctuation 132614 . 132615) (close-paren 132613 . 132614) (VOID 132609 . 132613) (open-paren 132608 . 132609) (symbol 132593 . 132607) (symbol 132581 . 132592) (EXTERN 132574 . 132580) (punctuation 132572 . 132573) (close-paren 132571 . 132572) (punctuation 132570 . 132571) (CHAR 132565 . 132569) (CONST 132559 . 132564) (punctuation 132557 . 132558) (symbol 132546 . 132557) (open-paren 132545 . 132546) (symbol 132526 . 132544) (VOID 132521 . 132525) (EXTERN 132514 . 132520) (punctuation 132512 . 132513) (close-paren 132511 . 132512) (symbol 132500 . 132511) (open-paren 132499 . 132500) (symbol 132484 . 132498) (VOID 132479 . 132483) (EXTERN 132472 . 132478) (punctuation 132470 . 132471) (close-paren 132469 . 132470) (BOOL 132465 . 132469) (open-paren 132464 . 132465) (symbol 132432 . 132463) (BOOL 132427 . 132431) (EXTERN 132420 . 132426) (punctuation 132418 . 132419) (close-paren 132417 . 132418) (VOID 132413 . 132417) (open-paren 132412 . 132413) (symbol 132372 . 132411) (BOOL 132367 . 132371) (EXTERN 132360 . 132366) (punctuation 132358 . 132359) (close-paren 132357 . 132358) (VOID 132353 . 132357) (open-paren 132352 . 132353) (symbol 132331 . 132351) (BOOL 132326 . 132330) (EXTERN 132319 . 132325) (punctuation 132211 . 132212) (close-paren 132210 . 132211) (VOID 132206 . 132210) (open-paren 132205 . 132206) (symbol 132184 . 132204) (VOID 132179 . 132183) (EXTERN 132172 . 132178) (punctuation 132170 . 132171) (close-paren 132169 . 132170) (punctuation 132168 . 132169) (INT 132164 . 132167) (punctuation 132162 . 132163) (symbol 132151 . 132162) (open-paren 132150 . 132151) (symbol 132135 . 132149) (symbol 132123 . 132134) (EXTERN 132116 . 132122) (punctuation 132114 . 132115) (close-paren 132113 . 132114) (symbol 132102 . 132113) (open-paren 132101 . 132102) (symbol 132086 . 132100) (symbol 132074 . 132085) (EXTERN 132067 . 132073) (punctuation 131953 . 131954) (close-paren 131952 . 131953) (VOID 131948 . 131952) (open-paren 131947 . 131948) (symbol 131932 . 131946) (VOID 131927 . 131931) (EXTERN 131920 . 131926) (punctuation 131811 . 131812) (close-paren 131810 . 131811) (VOID 131806 . 131810) (open-paren 131805 . 131806) (symbol 131789 . 131804) (VOID 131784 . 131788) (EXTERN 131777 . 131783) (punctuation 131775 . 131776) (close-paren 131774 . 131775) (VOID 131770 . 131774) (open-paren 131769 . 131770) (symbol 131751 . 131768) (VOID 131746 . 131750) (EXTERN 131739 . 131745) (punctuation 131706 . 131707) (close-paren 131705 . 131706) (VOID 131701 . 131705) (open-paren 131700 . 131701) (symbol 131681 . 131699) (VOID 131676 . 131680) (EXTERN 131669 . 131675) (punctuation 131667 . 131668) (close-paren 131666 . 131667) (VOID 131662 . 131666) (open-paren 131661 . 131662) (symbol 131642 . 131660) (VOID 131637 . 131641) (EXTERN 131630 . 131636) (punctuation 131594 . 131595) (close-paren 131593 . 131594) (VOID 131589 . 131593) (open-paren 131588 . 131589) (symbol 131572 . 131587) (VOID 131567 . 131571) (EXTERN 131560 . 131566) (punctuation 131527 . 131528) (close-paren 131526 . 131527) (VOID 131522 . 131526) (open-paren 131521 . 131522) (symbol 131505 . 131520) (VOID 131500 . 131504) (EXTERN 131493 . 131499) (punctuation 131491 . 131492) (close-paren 131490 . 131491) (VOID 131486 . 131490) (open-paren 131485 . 131486) (symbol 131467 . 131484) (VOID 131462 . 131466) (EXTERN 131455 . 131461) (punctuation 131453 . 131454) (close-paren 131452 . 131453) (symbol 131443 . 131452) (open-paren 131442 . 131443) (symbol 131427 . 131441) (symbol 131415 . 131426) (EXTERN 131408 . 131414) (punctuation 131298 . 131299) (close-paren 131297 . 131298) (VOID 131293 . 131297) (open-paren 131292 . 131293) (symbol 131273 . 131291) (VOID 131268 . 131272) (EXTERN 131261 . 131267) (punctuation 131259 . 131260) (close-paren 131258 . 131259) (VOID 131254 . 131258) (open-paren 131253 . 131254) (symbol 131238 . 131252) (VOID 131233 . 131237) (EXTERN 131226 . 131232) (punctuation 131224 . 131225) (close-paren 131223 . 131224) (punctuation 131222 . 131223) (symbol 131212 . 131221) (punctuation 131210 . 131211) (symbol 131201 . 131210) (punctuation 131191 . 131192) (symbol 131182 . 131191) (punctuation 131180 . 131181) (symbol 131171 . 131180) (open-paren 131170 . 131171) (symbol 131145 . 131169) (symbol 131135 . 131144) (EXTERN 131128 . 131134) (punctuation 131126 . 131127) (close-paren 131125 . 131126) (punctuation 131124 . 131125) (symbol 131114 . 131123) (punctuation 131112 . 131113) (symbol 131103 . 131112) (punctuation 131090 . 131091) (symbol 131081 . 131090) (punctuation 131079 . 131080) (symbol 131070 . 131079) (open-paren 131069 . 131070) (symbol 131048 . 131068) (symbol 131038 . 131047) (EXTERN 131031 . 131037) (punctuation 131029 . 131030) (close-paren 131028 . 131029) (punctuation 131027 . 131028) (symbol 131017 . 131026) (punctuation 131015 . 131016) (punctuation 131014 . 131015) (symbol 131004 . 131013) (punctuation 131002 . 131003) (symbol 130993 . 131002) (open-paren 130992 . 130993) (symbol 130968 . 130991) (symbol 130958 . 130967) (EXTERN 130951 . 130957) (punctuation 130949 . 130950) (close-paren 130948 . 130949) (BOOL 130944 . 130948) (punctuation 130942 . 130943) (symbol 130933 . 130942) (punctuation 130921 . 130922) (symbol 130912 . 130921) (punctuation 130910 . 130911) (symbol 130901 . 130910) (punctuation 130899 . 130900) (symbol 130890 . 130899) (punctuation 130888 . 130889) (symbol 130879 . 130888) (open-paren 130878 . 130879) (symbol 130865 . 130877) (symbol 130855 . 130864) (EXTERN 130848 . 130854) (punctuation 130846 . 130847) (close-paren 130845 . 130846) (BOOL 130841 . 130845) (punctuation 130839 . 130840) (punctuation 130838 . 130839) (symbol 130828 . 130837) (punctuation 130826 . 130827) (punctuation 130825 . 130826) (symbol 130815 . 130824) (punctuation 130813 . 130814) (symbol 130804 . 130813) (punctuation 130792 . 130793) (symbol 130783 . 130792) (punctuation 130781 . 130782) (symbol 130772 . 130781) (punctuation 130770 . 130771) (symbol 130761 . 130770) (punctuation 130759 . 130760) (symbol 130750 . 130759) (open-paren 130749 . 130750) (symbol 130736 . 130748) (symbol 130726 . 130735) (EXTERN 130719 . 130725) (punctuation 130717 . 130718) (close-paren 130716 . 130717) (symbol 130705 . 130716) (punctuation 130703 . 130704) (symbol 130694 . 130703) (punctuation 130692 . 130693) (symbol 130683 . 130692) (punctuation 130647 . 130648) (symbol 130638 . 130647) (punctuation 130636 . 130637) (symbol 130627 . 130636) (punctuation 130625 . 130626) (symbol 130614 . 130625) (open-paren 130613 . 130614) (symbol 130597 . 130612) (symbol 130587 . 130596) (EXTERN 130580 . 130586) (punctuation 130578 . 130579) (close-paren 130577 . 130578) (symbol 130568 . 130577) (punctuation 130558 . 130559) (punctuation 130557 . 130558) (CHAR 130552 . 130556) (CONST 130546 . 130551) (punctuation 130544 . 130545) (symbol 130533 . 130544) (open-paren 130532 . 130533) (symbol 130500 . 130531) (symbol 130490 . 130499) (EXTERN 130483 . 130489) (close-paren 130480 . 130481) (RETURN 130408 . 130414) (open-paren 130404 . 130405) (close-paren 130402 . 130403) (symbol 130396 . 130402) (symbol 130384 . 130395) (punctuation 130382 . 130383) (symbol 130376 . 130382) (symbol 130364 . 130375) (open-paren 130363 . 130364) (symbol 130333 . 130362) (symbol 130323 . 130332) (symbol 130316 . 130322) (close-paren 130313 . 130314) (RETURN 130255 . 130261) (open-paren 130251 . 130252) (close-paren 130249 . 130250) (symbol 130243 . 130249) (symbol 130231 . 130242) (punctuation 130229 . 130230) (symbol 130223 . 130229) (symbol 130211 . 130222) (open-paren 130210 . 130211) (symbol 130192 . 130209) (symbol 130182 . 130191) (symbol 130175 . 130181) (punctuation 130172 . 130173) (close-paren 130171 . 130172) (symbol 130160 . 130171) (punctuation 130148 . 130149) (symbol 130137 . 130148) (punctuation 130135 . 130136) (symbol 130124 . 130135) (open-paren 130123 . 130124) (symbol 130096 . 130122) (symbol 130086 . 130095) (EXTERN 130079 . 130085) (punctuation 130077 . 130078) (close-paren 130076 . 130077) (VOID 130072 . 130076) (open-paren 130071 . 130072) (symbol 130041 . 130070) (VOID 130036 . 130040) (EXTERN 130029 . 130035) (punctuation 130027 . 130028) (close-paren 130026 . 130027) (symbol 130020 . 130026) (symbol 130010 . 130019) (punctuation 130008 . 130009) (symbol 130002 . 130008) (symbol 129992 . 130001) (punctuation 129958 . 129959) (symbol 129950 . 129958) (symbol 129940 . 129949) (open-paren 129939 . 129940) (symbol 129920 . 129938) (VOID 129915 . 129919) (EXTERN 129908 . 129914) (punctuation 129906 . 129907) (close-paren 129905 . 129906) (VOID 129901 . 129905) (open-paren 129900 . 129901) (symbol 129880 . 129899) (VOID 129875 . 129879) (EXTERN 129868 . 129874) (punctuation 129866 . 129867) (close-paren 129865 . 129866) (VOID 129861 . 129865) (open-paren 129860 . 129861) (symbol 129840 . 129859) (VOID 129835 . 129839) (EXTERN 129828 . 129834) (punctuation 129797 . 129798) (close-paren 129796 . 129797) (VOID 129792 . 129796) (open-paren 129791 . 129792) (symbol 129776 . 129790) (VOID 129771 . 129775) (EXTERN 129764 . 129770) (punctuation 129762 . 129763) (close-paren 129761 . 129762) (VOID 129757 . 129761) (open-paren 129756 . 129757) (symbol 129744 . 129755) (VOID 129739 . 129743) (EXTERN 129732 . 129738) (punctuation 129730 . 129731) (close-paren 129729 . 129730) (symbol 129718 . 129729) (open-paren 129717 . 129718) (symbol 129689 . 129716) (BOOL 129684 . 129688) (EXTERN 129677 . 129683) (punctuation 129675 . 129676) (close-paren 129674 . 129675) (symbol 129663 . 129674) (open-paren 129662 . 129663) (symbol 129645 . 129661) (BOOL 129640 . 129644) (EXTERN 129633 . 129639) (punctuation 129631 . 129632) (close-paren 129630 . 129631) (punctuation 129629 . 129630) (CHAR 129624 . 129628) (CONST 129618 . 129623) (punctuation 129616 . 129617) (INT 129613 . 129616) (open-paren 129612 . 129613) (symbol 129595 . 129611) (symbol 129583 . 129594) (EXTERN 129576 . 129582) (punctuation 129574 . 129575) (close-paren 129573 . 129574) (symbol 129562 . 129573) (open-paren 129561 . 129562) (symbol 129540 . 129560) (BOOL 129535 . 129539) (EXTERN 129528 . 129534) (punctuation 129526 . 129527) (close-paren 129525 . 129526) (symbol 129514 . 129525) (punctuation 129512 . 129513) (punctuation 129511 . 129512) (CHAR 129506 . 129510) (CONST 129500 . 129505) (open-paren 129499 . 129500) (symbol 129474 . 129498) (VOID 129469 . 129473) (EXTERN 129452 . 129458) (punctuation 129450 . 129451) (close-paren 129449 . 129450) (symbol 129438 . 129449) (punctuation 129436 . 129437) (punctuation 129435 . 129436) (CHAR 129430 . 129434) (CONST 129424 . 129429) (open-paren 129423 . 129424) (symbol 129405 . 129422) (VOID 129400 . 129404) (EXTERN 129383 . 129389) (punctuation 129381 . 129382) (close-paren 129380 . 129381) (INT 129377 . 129380) (punctuation 129375 . 129376) (symbol 129364 . 129375) (punctuation 129362 . 129363) (punctuation 129361 . 129362) (CHAR 129356 . 129360) (CONST 129350 . 129355) (open-paren 129349 . 129350) (symbol 129331 . 129348) (VOID 129326 . 129330) (EXTERN 129309 . 129315) (punctuation 129307 . 129308) (close-paren 129306 . 129307) (INT 129303 . 129306) (punctuation 129301 . 129302) (symbol 129290 . 129301) (punctuation 129288 . 129289) (punctuation 129287 . 129288) (CHAR 129282 . 129286) (CONST 129276 . 129281) (open-paren 129275 . 129276) (symbol 129255 . 129274) (symbol 129243 . 129254) (EXTERN 129236 . 129242) (punctuation 129234 . 129235) (close-paren 129233 . 129234) (symbol 129222 . 129233) (open-paren 129221 . 129222) (symbol 129200 . 129220) (VOID 129195 . 129199) (EXTERN 129188 . 129194) (punctuation 129186 . 129187) (close-paren 129185 . 129186) (punctuation 129184 . 129185) (VOID 129179 . 129183) (open-paren 129178 . 129179) (symbol 129164 . 129177) (VOID 129159 . 129163) (EXTERN 129152 . 129158) (punctuation 129150 . 129151) (close-paren 129149 . 129150) (INT 129146 . 129149) (open-paren 129145 . 129146) (symbol 129127 . 129144) (VOID 129122 . 129126) (EXTERN 129115 . 129121) (punctuation 129113 . 129114) (close-paren 129112 . 129113) (INT 129109 . 129112) (punctuation 129107 . 129108) (symbol 129096 . 129107) (punctuation 129089 . 129090) (symbol 129078 . 129089) (punctuation 129076 . 129077) (symbol 129065 . 129076) (punctuation 129063 . 129064) (symbol 129052 . 129063) (punctuation 129045 . 129046) (symbol 129034 . 129045) (punctuation 129032 . 129033) (symbol 129021 . 129032) (punctuation 129019 . 129020) (symbol 129008 . 129019) (open-paren 129007 . 129008) (symbol 128994 . 129006) (symbol 128982 . 128993) (EXTERN 128975 . 128981) (punctuation 128973 . 128974) (close-paren 128972 . 128973) (symbol 128961 . 128972) (open-paren 128960 . 128961) (symbol 128937 . 128959) (symbol 128925 . 128936) (EXTERN 128918 . 128924) (punctuation 128886 . 128887) (close-paren 128885 . 128886) (VOID 128881 . 128885) (open-paren 128880 . 128881) (symbol 128865 . 128879) (VOID 128860 . 128864) (EXTERN 128853 . 128859) (punctuation 128851 . 128852) (close-paren 128850 . 128851) (symbol 128841 . 128850) (punctuation 128839 . 128840) (symbol 128830 . 128839) (punctuation 128828 . 128829) (punctuation 128827 . 128828) (symbol 128820 . 128826) (STRUCT 128813 . 128819) (open-paren 128812 . 128813) (symbol 128799 . 128811) (symbol 128787 . 128798) (EXTERN 128780 . 128786) (punctuation 128778 . 128779) (close-paren 128777 . 128778) (symbol 128768 . 128777) (punctuation 128766 . 128767) (symbol 128757 . 128766) (punctuation 128708 . 128709) (symbol 128697 . 128708) (punctuation 128695 . 128696) (symbol 128684 . 128695) (open-paren 128683 . 128684) (symbol 128656 . 128682) (symbol 128644 . 128655) (EXTERN 128637 . 128643) (punctuation 128635 . 128636) (close-paren 128634 . 128635) (symbol 128625 . 128634) (punctuation 128623 . 128624) (symbol 128614 . 128623) (punctuation 128612 . 128613) (symbol 128601 . 128612) (punctuation 128599 . 128600) (symbol 128588 . 128599) (open-paren 128587 . 128588) (symbol 128571 . 128586) (symbol 128559 . 128570) (EXTERN 128552 . 128558) (punctuation 128550 . 128551) (close-paren 128549 . 128550) (symbol 128538 . 128549) (punctuation 128536 . 128537) (symbol 128525 . 128536) (punctuation 128523 . 128524) (symbol 128512 . 128523) (open-paren 128511 . 128512) (symbol 128489 . 128510) (symbol 128477 . 128488) (EXTERN 128470 . 128476) (punctuation 128468 . 128469) (close-paren 128467 . 128468) (punctuation 128466 . 128467) (symbol 128454 . 128465) (STRUCT 128447 . 128453) (open-paren 128446 . 128447) (symbol 128431 . 128445) (VOID 128426 . 128430) (EXTERN 128419 . 128425) (punctuation 128417 . 128418) (close-paren 128416 . 128417) (symbol 128405 . 128416) (open-paren 128404 . 128405) (symbol 128390 . 128403) (VOID 128385 . 128389) (EXTERN 128378 . 128384) (punctuation 128376 . 128377) (close-paren 128375 . 128376) (symbol 128366 . 128375) (punctuation 128364 . 128365) (punctuation 128363 . 128364) (symbol 128356 . 128362) (STRUCT 128349 . 128355) (open-paren 128348 . 128349) (symbol 128325 . 128347) (symbol 128315 . 128324) (EXTERN 128308 . 128314) (punctuation 128306 . 128307) (close-paren 128305 . 128306) (symbol 128296 . 128305) (punctuation 128294 . 128295) (punctuation 128293 . 128294) (symbol 128286 . 128292) (STRUCT 128279 . 128285) (open-paren 128278 . 128279) (symbol 128255 . 128277) (symbol 128245 . 128254) (EXTERN 128238 . 128244) (punctuation 128236 . 128237) (close-paren 128235 . 128236) (punctuation 128234 . 128235) (symbol 128227 . 128233) (STRUCT 128220 . 128226) (open-paren 128219 . 128220) (symbol 128199 . 128218) (VOID 128194 . 128198) (EXTERN 128187 . 128193) (punctuation 128185 . 128186) (close-paren 128184 . 128185) (symbol 128173 . 128184) (open-paren 128172 . 128173) (symbol 128151 . 128171) (symbol 128141 . 128150) (EXTERN 128134 . 128140) (punctuation 128132 . 128133) (close-paren 128131 . 128132) (symbol 128120 . 128131) (open-paren 128119 . 128120) (symbol 128103 . 128118) (symbol 128093 . 128102) (EXTERN 128086 . 128092) (punctuation 128054 . 128055) (close-paren 128053 . 128054) (VOID 128049 . 128053) (open-paren 128048 . 128049) (symbol 128033 . 128047) (VOID 128028 . 128032) (EXTERN 128021 . 128027) (punctuation 128019 . 128020) (close-paren 128018 . 128019) (VOID 128014 . 128018) (open-paren 128013 . 128014) (symbol 127998 . 128012) (VOID 127993 . 127997) (EXTERN 127986 . 127992) (punctuation 127984 . 127985) (close-paren 127983 . 127984) (INT 127980 . 127983) (open-paren 127979 . 127980) (symbol 127967 . 127978) (VOID 127962 . 127966) (EXTERN 127955 . 127961) (punctuation 127953 . 127954) (close-paren 127952 . 127953) (VOID 127948 . 127952) (open-paren 127947 . 127948) (symbol 127930 . 127946) (VOID 127925 . 127929) (EXTERN 127918 . 127924) (punctuation 127916 . 127917) (close-paren 127915 . 127916) (symbol 127904 . 127915) (open-paren 127903 . 127904) (symbol 127883 . 127902) (symbol 127871 . 127882) (EXTERN 127864 . 127870) (punctuation 127862 . 127863) (close-paren 127861 . 127862) (symbol 127850 . 127861) (open-paren 127849 . 127850) (symbol 127829 . 127848) (symbol 127817 . 127828) (EXTERN 127810 . 127816) (punctuation 127808 . 127809) (close-paren 127807 . 127808) (symbol 127798 . 127807) (open-paren 127797 . 127798) (symbol 127779 . 127796) (BOOL 127774 . 127778) (EXTERN 127767 . 127773) (punctuation 127765 . 127766) (close-paren 127764 . 127765) (symbol 127753 . 127764) (punctuation 127751 . 127752) (symbol 127740 . 127751) (punctuation 127738 . 127739) (symbol 127727 . 127738) (punctuation 127684 . 127685) (BOOL 127680 . 127684) (punctuation 127678 . 127679) (symbol 127667 . 127678) (punctuation 127665 . 127666) (symbol 127654 . 127665) (open-paren 127653 . 127654) (symbol 127625 . 127652) (VOID 127620 . 127624) (EXTERN 127613 . 127619) (punctuation 127611 . 127612) (close-paren 127610 . 127611) (symbol 127601 . 127610) (punctuation 127599 . 127600) (symbol 127590 . 127599) (open-paren 127589 . 127590) (symbol 127563 . 127588) (VOID 127558 . 127562) (EXTERN 127551 . 127557) (punctuation 127549 . 127550) (close-paren 127548 . 127549) (symbol 127539 . 127548) (punctuation 127537 . 127538) (symbol 127528 . 127537) (open-paren 127527 . 127528) (symbol 127500 . 127526) (VOID 127495 . 127499) (EXTERN 127488 . 127494) (punctuation 127486 . 127487) (close-paren 127485 . 127486) (symbol 127476 . 127485) (punctuation 127474 . 127475) (symbol 127465 . 127474) (open-paren 127464 . 127465) (symbol 127437 . 127463) (VOID 127432 . 127436) (EXTERN 127425 . 127431) (punctuation 127423 . 127424) (close-paren 127422 . 127423) (symbol 127411 . 127422) (open-paren 127410 . 127411) (symbol 127401 . 127409) (VOID 127396 . 127400) (EXTERN 127379 . 127385) (punctuation 127377 . 127378) (close-paren 127376 . 127377) (VOID 127372 . 127376) (open-paren 127371 . 127372) (symbol 127335 . 127370) (symbol 127323 . 127334) (EXTERN 127316 . 127322) (punctuation 127314 . 127315) (close-paren 127313 . 127314) (symbol 127302 . 127313) (open-paren 127301 . 127302) (symbol 127273 . 127300) (BOOL 127268 . 127272) (EXTERN 127261 . 127267) (punctuation 127230 . 127231) (close-paren 127229 . 127230) (VOID 127225 . 127229) (open-paren 127224 . 127225) (symbol 127208 . 127223) (VOID 127203 . 127207) (EXTERN 127196 . 127202) (punctuation 127194 . 127195) (close-paren 127193 . 127194) (BOOL 127189 . 127193) (open-paren 127188 . 127189) (symbol 127175 . 127187) (VOID 127170 . 127174) (EXTERN 127163 . 127169) (punctuation 127161 . 127162) (close-paren 127160 . 127161) (BOOL 127156 . 127160) (punctuation 127154 . 127155) (symbol 127145 . 127154) (punctuation 127134 . 127135) (symbol 127125 . 127134) (punctuation 127123 . 127124) (symbol 127114 . 127123) (punctuation 127112 . 127113) (symbol 127103 . 127112) (open-paren 127102 . 127103) (symbol 127078 . 127101) (symbol 127066 . 127077) (EXTERN 127059 . 127065) (punctuation 127057 . 127058) (close-paren 127056 . 127057) (BOOL 127052 . 127056) (punctuation 127050 . 127051) (symbol 127041 . 127050) (punctuation 127039 . 127040) (symbol 127030 . 127039) (open-paren 127029 . 127030) (symbol 127010 . 127028) (symbol 126998 . 127009) (EXTERN 126991 . 126997) (punctuation 126989 . 126990) (close-paren 126988 . 126989) (VOID 126984 . 126988) (open-paren 126983 . 126984) (symbol 126969 . 126982) (VOID 126964 . 126968) (EXTERN 126947 . 126953) (punctuation 126945 . 126946) (close-paren 126944 . 126945) (symbol 126933 . 126944) (open-paren 126932 . 126933) (symbol 126907 . 126931) (VOID 126902 . 126906) (EXTERN 126895 . 126901) (punctuation 126893 . 126894) (close-paren 126892 . 126893) (VOID 126888 . 126892) (open-paren 126887 . 126888) (symbol 126865 . 126886) (symbol 126853 . 126864) (EXTERN 126846 . 126852) (punctuation 126844 . 126845) (close-paren 126843 . 126844) (symbol 126832 . 126843) (punctuation 126830 . 126831) (symbol 126819 . 126830) (open-paren 126818 . 126819) (symbol 126795 . 126817) (VOID 126790 . 126794) (EXTERN 126783 . 126789) (punctuation 126781 . 126782) (close-paren 126780 . 126781) (punctuation 126779 . 126780) (symbol 126767 . 126778) (UNION 126761 . 126766) (open-paren 126760 . 126761) (symbol 126740 . 126759) (VOID 126735 . 126739) (EXTERN 126728 . 126734) (punctuation 126726 . 126727) (close-paren 126725 . 126726) (symbol 126714 . 126725) (open-paren 126713 . 126714) (symbol 126705 . 126712) (VOID 126700 . 126704) (EXTERN 126693 . 126699) (punctuation 126661 . 126662) (close-paren 126660 . 126661) (VOID 126656 . 126660) (open-paren 126655 . 126656) (symbol 126642 . 126654) (VOID 126637 . 126641) (EXTERN 126630 . 126636) (close-paren 126171 . 126172) (punctuation 126169 . 126170) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 126141 . 126147) ("type" symbol "Lisp_Vectorlike" 126124 . 126139) ("a" symbol "o" 126121 . 126122)))) 126113 . 126169) (RETURN 126106 . 126112) (punctuation 126102 . 126103) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "MODULE_FUNCTIONP" 126081 . 126097)))) 126072 . 126102) (open-paren 126068 . 126069) (close-paren 126066 . 126067) (symbol 126065 . 126066) (symbol 126053 . 126064) (open-paren 126052 . 126053) (symbol 126035 . 126051) (punctuation 126033 . 126034) (symbol 126012 . 126032) (STRUCT 126005 . 126011) (symbol 125998 . 126004) (close-paren 125995 . 125996) (RETURN 125947 . 125953) (open-paren 125943 . 125944) (close-paren 125941 . 125942) (symbol 125940 . 125941) (symbol 125928 . 125939) (open-paren 125927 . 125928) (symbol 125910 . 125926) (BOOL 125905 . 125909) (symbol 125898 . 125904) (punctuation 125895 . 125896) (close-paren 125894 . 125895) (open-paren 125676 . 125677) (symbol 125655 . 125675) (STRUCT 125648 . 125654) (punctuation 125366 . 125367) (close-paren 125365 . 125366) (punctuation 125364 . 125365) (VOID 125359 . 125363) (punctuation 125357 . 125358) (semantic-list 125355 . 125357) (symbol 125343 . 125354) (punctuation 125334 . 125335) (symbol 125325 . 125334) (punctuation 125323 . 125324) (punctuation 125322 . 125323) (symbol 125312 . 125321) (open-paren 125311 . 125312) (close-paren 125309 . 125310) (symbol 125299 . 125309) (punctuation 125298 . 125299) (open-paren 125297 . 125298) (symbol 125285 . 125296) (TYPEDEF 125277 . 125284) (punctuation 124944 . 124945) (close-paren 124943 . 124944) (symbol 124937 . 124943) (punctuation 124936 . 124937) (symbol 124924 . 124935) (STRUCT 124917 . 124923) (open-paren 124916 . 124917) (symbol 124887 . 124915) (BOOL 124882 . 124886) (EXTERN 124875 . 124881) (punctuation 124873 . 124874) (close-paren 124872 . 124873) (VOID 124868 . 124872) (open-paren 124867 . 124868) (symbol 124844 . 124866) (symbol 124832 . 124843) (punctuation 124830 . 124831) (close-paren 124829 . 124830) (symbol 124824 . 124829) (symbol 124812 . 124823) (open-paren 124811 . 124812) (symbol 124797 . 124810) (VOID 124792 . 124796) (EXTERN 124785 . 124791) (punctuation 124783 . 124784) (close-paren 124782 . 124783) (symbol 124779 . 124782) (punctuation 124778 . 124779) (symbol 124766 . 124777) (UNION 124760 . 124765) (punctuation 124758 . 124759) (symbol 124753 . 124758) (punctuation 124752 . 124753) (symbol 124740 . 124751) (UNION 124734 . 124739) (open-paren 124733 . 124734) (symbol 124720 . 124732) (VOID 124715 . 124719) (EXTERN 124708 . 124714) (punctuation 124706 . 124707) (close-paren 124705 . 124706) (symbol 124696 . 124705) (punctuation 124694 . 124695) (punctuation 124693 . 124694) (symbol 124681 . 124692) (punctuation 124679 . 124680) (symbol 124668 . 124679) (open-paren 124667 . 124668) (symbol 124647 . 124666) (symbol 124637 . 124646) (EXTERN 124630 . 124636) (punctuation 124628 . 124629) (close-paren 124627 . 124628) (symbol 124616 . 124627) (open-paren 124615 . 124616) (symbol 124603 . 124614) (VOID 124598 . 124602) (EXTERN 124591 . 124597) (punctuation 124589 . 124590) (close-paren 124588 . 124589) (VOID 124584 . 124588) (open-paren 124583 . 124584) (symbol 124570 . 124582) (VOID 124565 . 124569) (EXTERN 124558 . 124564) (punctuation 124556 . 124557) (close-paren 124555 . 124556) (VOID 124551 . 124555) (open-paren 124550 . 124551) (symbol 124540 . 124549) (VOID 124535 . 124539) (EXTERN 124528 . 124534) (punctuation 124526 . 124527) (close-paren 124525 . 124526) (symbol 124514 . 124525) (punctuation 124512 . 124513) (symbol 124501 . 124512) (punctuation 124499 . 124500) (symbol 124488 . 124499) (open-paren 124487 . 124488) (symbol 124476 . 124486) (symbol 124464 . 124475) (EXTERN 124457 . 124463) (punctuation 124455 . 124456) (close-paren 124454 . 124455) (symbol 124443 . 124454) (punctuation 124441 . 124442) (symbol 124430 . 124441) (open-paren 124429 . 124430) (symbol 124418 . 124428) (symbol 124406 . 124417) (EXTERN 124399 . 124405) (punctuation 124397 . 124398) (close-paren 124396 . 124397) (punctuation 124395 . 124396) (punctuation 124394 . 124395) (punctuation 124393 . 124394) (punctuation 124391 . 124392) (symbol 124380 . 124391) (punctuation 124378 . 124379) (symbol 124369 . 124378) (open-paren 124368 . 124369) (symbol 124358 . 124367) (symbol 124346 . 124357) (EXTERN 124339 . 124345) (punctuation 124337 . 124338) (close-paren 124336 . 124337) (VOID 124332 . 124336) (open-paren 124331 . 124332) (symbol 124316 . 124330) (VOID 124311 . 124315) (EXTERN 124304 . 124310) (punctuation 124302 . 124303) (close-paren 124301 . 124302) (symbol 124298 . 124301) (symbol 124286 . 124297) (open-paren 124285 . 124286) (symbol 124271 . 124284) (symbol 124259 . 124270) (EXTERN 124252 . 124258) (punctuation 124250 . 124251) (close-paren 124249 . 124250) (symbol 124238 . 124249) (open-paren 124237 . 124238) (symbol 124225 . 124236) (VOID 124220 . 124224) (EXTERN 124213 . 124219) (punctuation 124211 . 124212) (close-paren 124210 . 124211) (number 124209 . 124210) (punctuation 124207 . 124208) (number 124206 . 124207) (open-paren 124205 . 124206) (symbol 124181 . 124204) (close-paren 124177 . 124178) (symbol 124170 . 124177) (punctuation 124168 . 124169) (punctuation 124167 . 124168) (CHAR 124162 . 124166) (CONST 124156 . 124161) (open-paren 124155 . 124156) (symbol 124140 . 124154) (symbol 124128 . 124139) (EXTERN 124121 . 124127) (punctuation 124119 . 124120) (close-paren 124118 . 124119) (number 124117 . 124118) (punctuation 124115 . 124116) (number 124114 . 124115) (open-paren 124113 . 124114) (symbol 124089 . 124112) (close-paren 124085 . 124086) (symbol 124078 . 124085) (punctuation 124076 . 124077) (punctuation 124075 . 124076) (CHAR 124070 . 124074) (CONST 124064 . 124069) (open-paren 124063 . 124064) (symbol 124056 . 124062) (VOID 124051 . 124055) (EXTERN 124034 . 124040) (punctuation 124032 . 124033) (close-paren 124031 . 124032) (number 124030 . 124031) (punctuation 124028 . 124029) (number 124027 . 124028) (open-paren 124026 . 124027) (symbol 124002 . 124025) (close-paren 124000 . 124001) (punctuation 123999 . 124000) (punctuation 123998 . 123999) (punctuation 123997 . 123998) (punctuation 123995 . 123996) (punctuation 123994 . 123995) (CHAR 123989 . 123993) (CONST 123983 . 123988) (open-paren 123982 . 123983) (symbol 123976 . 123981) (VOID 123971 . 123975) (EXTERN 123954 . 123960) (punctuation 123952 . 123953) (close-paren 123951 . 123952) (punctuation 123950 . 123951) (symbol 123937 . 123949) (STRUCT 123930 . 123936) (open-paren 123929 . 123930) (symbol 123904 . 123928) (VOID 123899 . 123903) (EXTERN 123892 . 123898) (punctuation 123890 . 123891) (close-paren 123889 . 123890) (VOID 123885 . 123889) (open-paren 123884 . 123885) (symbol 123859 . 123883) (VOID 123854 . 123858) (EXTERN 123847 . 123853) (punctuation 123845 . 123846) (close-paren 123844 . 123845) (symbol 123833 . 123844) (punctuation 123831 . 123832) (symbol 123822 . 123831) (open-paren 123821 . 123822) (symbol 123811 . 123820) (symbol 123799 . 123810) (EXTERN 123792 . 123798) (punctuation 123790 . 123791) (close-paren 123789 . 123790) (punctuation 123788 . 123789) (VOID 123783 . 123787) (punctuation 123781 . 123782) (semantic-list 123773 . 123781) (semantic-list 123769 . 123772) (VOID 123764 . 123768) (punctuation 123762 . 123763) (symbol 123753 . 123762) (open-paren 123752 . 123753) (symbol 123729 . 123751) (VOID 123724 . 123728) (EXTERN 123717 . 123723) (punctuation 123715 . 123716) (close-paren 123714 . 123715) (symbol 123703 . 123714) (punctuation 123701 . 123702) (semantic-list 123688 . 123701) (semantic-list 123684 . 123687) (VOID 123679 . 123683) (punctuation 123677 . 123678) (symbol 123668 . 123677) (open-paren 123667 . 123668) (symbol 123648 . 123666) (VOID 123643 . 123647) (EXTERN 123636 . 123642) (punctuation 123634 . 123635) (close-paren 123633 . 123634) (symbol 123624 . 123633) (open-paren 123623 . 123624) (symbol 123602 . 123622) (VOID 123597 . 123601) (EXTERN 123590 . 123596) (punctuation 123588 . 123589) (close-paren 123587 . 123588) (VOID 123583 . 123587) (open-paren 123582 . 123583) (symbol 123552 . 123581) (VOID 123547 . 123551) (EXTERN 123540 . 123546) (punctuation 123538 . 123539) (close-paren 123537 . 123538) (VOID 123533 . 123537) (open-paren 123532 . 123533) (symbol 123500 . 123531) (VOID 123495 . 123499) (EXTERN 123488 . 123494) (punctuation 123486 . 123487) (close-paren 123485 . 123486) (semantic-list 123479 . 123485) (semantic-list 123475 . 123478) (VOID 123470 . 123474) (open-paren 123469 . 123470) (symbol 123442 . 123468) (VOID 123437 . 123441) (EXTERN 123430 . 123436) (punctuation 123428 . 123429) (close-paren 123427 . 123428) (INT 123424 . 123427) (punctuation 123422 . 123423) (semantic-list 123417 . 123422) (semantic-list 123413 . 123416) (VOID 123408 . 123412) (open-paren 123407 . 123408) (symbol 123381 . 123406) (VOID 123376 . 123380) (EXTERN 123369 . 123375) (punctuation 123367 . 123368) (close-paren 123366 . 123367) (punctuation 123365 . 123366) (VOID 123360 . 123364) (punctuation 123358 . 123359) (semantic-list 123350 . 123358) (semantic-list 123346 . 123349) (VOID 123341 . 123345) (open-paren 123340 . 123341) (symbol 123314 . 123339) (VOID 123309 . 123313) (EXTERN 123302 . 123308) (punctuation 123300 . 123301) (close-paren 123299 . 123300) (symbol 123290 . 123299) (punctuation 123288 . 123289) (punctuation 123287 . 123288) (symbol 123275 . 123286) (open-paren 123274 . 123275) (symbol 123246 . 123273) (VOID 123241 . 123245) (EXTERN 123234 . 123240) (punctuation 123232 . 123233) (close-paren 123231 . 123232) (symbol 123220 . 123231) (punctuation 123218 . 123219) (semantic-list 123205 . 123218) (semantic-list 123201 . 123204) (VOID 123196 . 123200) (open-paren 123195 . 123196) (symbol 123173 . 123194) (VOID 123168 . 123172) (EXTERN 123161 . 123167) (punctuation 123159 . 123160) (close-paren 123158 . 123159) (symbol 123147 . 123158) (punctuation 123145 . 123146) (symbol 123134 . 123145) (open-paren 123133 . 123134) (symbol 123124 . 123132) (VOID 123119 . 123123) (EXTERN 123112 . 123118) (punctuation 123110 . 123111) (close-paren 123109 . 123110) (symbol 123098 . 123109) (ENUM 123093 . 123097) (punctuation 123091 . 123092) (symbol 123080 . 123091) (open-paren 123079 . 123080) (symbol 123057 . 123078) (punctuation 123056 . 123057) (symbol 123048 . 123055) (STRUCT 123041 . 123047) (EXTERN 123034 . 123040) (punctuation 123032 . 123033) (close-paren 123031 . 123032) (symbol 123020 . 123031) (ENUM 123015 . 123019) (punctuation 123013 . 123014) (symbol 123002 . 123013) (open-paren 123001 . 123002) (symbol 122988 . 123000) (punctuation 122987 . 122988) (symbol 122979 . 122986) (STRUCT 122972 . 122978) (EXTERN 122965 . 122971) (punctuation 122963 . 122964) (close-paren 122962 . 122963) (punctuation 122946 . 122947) (punctuation 122931 . 122932) (punctuation 122930 . 122931) (VOID 122925 . 122929) (punctuation 122923 . 122924) (punctuation 122912 . 122913) (open-paren 122898 . 122899) (symbol 122879 . 122897) (symbol 122867 . 122878) (EXTERN 122860 . 122866) (punctuation 122858 . 122859) (close-paren 122857 . 122858) (punctuation 122815 . 122816) (punctuation 122800 . 122801) (symbol 122789 . 122800) (punctuation 122782 . 122783) (punctuation 122781 . 122782) (symbol 122769 . 122780) (punctuation 122767 . 122768) (symbol 122758 . 122767) (punctuation 122756 . 122757) (punctuation 122727 . 122728) (open-paren 122713 . 122714) (symbol 122683 . 122708) (symbol 122671 . 122682) (EXTERN 122664 . 122670) (punctuation 122662 . 122663) (close-paren 122661 . 122662) (punctuation 122645 . 122646) (punctuation 122630 . 122631) (symbol 122619 . 122630) (punctuation 122617 . 122618) (symbol 122606 . 122617) (punctuation 122604 . 122605) (symbol 122593 . 122604) (punctuation 122591 . 122592) (punctuation 122562 . 122563) (open-paren 122548 . 122549) (symbol 122522 . 122547) (symbol 122510 . 122521) (EXTERN 122503 . 122509) (punctuation 122501 . 122502) (close-paren 122500 . 122501) (punctuation 122484 . 122485) (punctuation 122469 . 122470) (symbol 122458 . 122469) (punctuation 122456 . 122457) (symbol 122445 . 122456) (punctuation 122443 . 122444) (punctuation 122427 . 122428) (open-paren 122413 . 122414) (symbol 122387 . 122412) (symbol 122375 . 122386) (EXTERN 122368 . 122374) (punctuation 122366 . 122367) (close-paren 122365 . 122366) (punctuation 122349 . 122350) (punctuation 122334 . 122335) (symbol 122323 . 122334) (punctuation 122321 . 122322) (punctuation 122312 . 122313) (open-paren 122298 . 122299) (symbol 122274 . 122297) (symbol 122262 . 122273) (EXTERN 122255 . 122261) (punctuation 122253 . 122254) (close-paren 122252 . 122253) (symbol 122241 . 122252) (punctuation 122239 . 122240) (symbol 122228 . 122239) (punctuation 122226 . 122227) (symbol 122215 . 122226) (open-paren 122214 . 122215) (symbol 122185 . 122213) (symbol 122173 . 122184) (EXTERN 122166 . 122172) (punctuation 122164 . 122165) (close-paren 122163 . 122164) (symbol 122152 . 122163) (punctuation 122150 . 122151) (punctuation 122134 . 122135) (punctuation 122119 . 122120) (symbol 122108 . 122119) (open-paren 122107 . 122108) (symbol 122092 . 122106) (symbol 122080 . 122091) (EXTERN 122073 . 122079) (punctuation 122071 . 122072) (close-paren 122070 . 122071) (symbol 122059 . 122070) (punctuation 122057 . 122058) (symbol 122046 . 122057) (punctuation 122044 . 122045) (symbol 122033 . 122044) (punctuation 122031 . 122032) (symbol 122020 . 122031) (punctuation 122018 . 122019) (symbol 122007 . 122018) (punctuation 122005 . 122006) (symbol 121994 . 122005) (punctuation 121992 . 121993) (symbol 121981 . 121992) (punctuation 121979 . 121980) (symbol 121968 . 121979) (punctuation 121966 . 121967) (symbol 121955 . 121966) (open-paren 121954 . 121955) (symbol 121948 . 121953) (symbol 121936 . 121947) (EXTERN 121929 . 121935) (punctuation 121927 . 121928) (close-paren 121926 . 121927) (symbol 121915 . 121926) (punctuation 121913 . 121914) (symbol 121902 . 121913) (punctuation 121900 . 121901) (symbol 121889 . 121900) (punctuation 121887 . 121888) (symbol 121876 . 121887) (punctuation 121874 . 121875) (symbol 121863 . 121874) (punctuation 121861 . 121862) (symbol 121850 . 121861) (punctuation 121848 . 121849) (symbol 121837 . 121848) (punctuation 121835 . 121836) (symbol 121824 . 121835) (open-paren 121823 . 121824) (symbol 121817 . 121822) (symbol 121805 . 121816) (EXTERN 121798 . 121804) (punctuation 121796 . 121797) (close-paren 121795 . 121796) (symbol 121784 . 121795) (punctuation 121782 . 121783) (symbol 121771 . 121782) (punctuation 121769 . 121770) (symbol 121758 . 121769) (punctuation 121756 . 121757) (symbol 121745 . 121756) (punctuation 121743 . 121744) (symbol 121732 . 121743) (punctuation 121730 . 121731) (symbol 121719 . 121730) (punctuation 121717 . 121718) (symbol 121706 . 121717) (open-paren 121705 . 121706) (symbol 121699 . 121704) (symbol 121687 . 121698) (EXTERN 121680 . 121686) (punctuation 121678 . 121679) (close-paren 121677 . 121678) (symbol 121666 . 121677) (punctuation 121664 . 121665) (symbol 121653 . 121664) (punctuation 121651 . 121652) (symbol 121640 . 121651) (punctuation 121638 . 121639) (symbol 121627 . 121638) (punctuation 121625 . 121626) (symbol 121614 . 121625) (punctuation 121612 . 121613) (symbol 121601 . 121612) (open-paren 121600 . 121601) (symbol 121594 . 121599) (symbol 121582 . 121593) (EXTERN 121575 . 121581) (punctuation 121573 . 121574) (close-paren 121572 . 121573) (symbol 121561 . 121572) (punctuation 121559 . 121560) (symbol 121548 . 121559) (punctuation 121546 . 121547) (symbol 121535 . 121546) (punctuation 121533 . 121534) (symbol 121522 . 121533) (punctuation 121520 . 121521) (symbol 121509 . 121520) (open-paren 121508 . 121509) (symbol 121502 . 121507) (symbol 121490 . 121501) (EXTERN 121483 . 121489) (punctuation 121481 . 121482) (close-paren 121480 . 121481) (symbol 121469 . 121480) (punctuation 121467 . 121468) (symbol 121456 . 121467) (punctuation 121454 . 121455) (symbol 121443 . 121454) (punctuation 121441 . 121442) (symbol 121430 . 121441) (open-paren 121429 . 121430) (symbol 121423 . 121428) (symbol 121411 . 121422) (EXTERN 121404 . 121410) (punctuation 121402 . 121403) (close-paren 121401 . 121402) (symbol 121390 . 121401) (punctuation 121388 . 121389) (symbol 121377 . 121388) (punctuation 121375 . 121376) (symbol 121364 . 121375) (open-paren 121363 . 121364) (symbol 121357 . 121362) (symbol 121345 . 121356) (EXTERN 121338 . 121344) (punctuation 121336 . 121337) (close-paren 121335 . 121336) (symbol 121324 . 121335) (punctuation 121322 . 121323) (symbol 121311 . 121322) (open-paren 121310 . 121311) (symbol 121304 . 121309) (symbol 121292 . 121303) (EXTERN 121285 . 121291) (punctuation 121283 . 121284) (close-paren 121282 . 121283) (symbol 121271 . 121282) (open-paren 121270 . 121271) (symbol 121264 . 121269) (symbol 121252 . 121263) (EXTERN 121245 . 121251) (punctuation 121243 . 121244) (close-paren 121242 . 121243) (symbol 121231 . 121242) (punctuation 121229 . 121230) (symbol 121218 . 121229) (open-paren 121217 . 121218) (symbol 121210 . 121216) (symbol 121198 . 121209) (EXTERN 121191 . 121197) (punctuation 121189 . 121190) (close-paren 121188 . 121189) (symbol 121184 . 121188) (symbol 121172 . 121183) (open-paren 121171 . 121172) (symbol 121162 . 121170) (symbol 121150 . 121161) (EXTERN 121143 . 121149) (punctuation 121141 . 121142) (close-paren 121140 . 121141) (symbol 121130 . 121140) (punctuation 121129 . 121130) (symbol 121117 . 121128) (punctuation 121115 . 121116) (symbol 121108 . 121115) (symbol 121098 . 121107) (punctuation 121096 . 121097) (symbol 121092 . 121096) (punctuation 121091 . 121092) (symbol 121081 . 121090) (STRUCT 121074 . 121080) (open-paren 121073 . 121074) (symbol 121060 . 121072) (symbol 121048 . 121059) (EXTERN 121041 . 121047) (punctuation 121039 . 121040) (close-paren 121038 . 121039) (symbol 121027 . 121038) (open-paren 121026 . 121027) (symbol 121016 . 121025) (BOOL 121011 . 121015) (EXTERN 121004 . 121010) (punctuation 121002 . 121003) (close-paren 121001 . 121002) (symbol 120990 . 121001) (punctuation 120988 . 120989) (punctuation 120987 . 120988) (CHAR 120982 . 120986) (CONST 120976 . 120981) (open-paren 120975 . 120976) (symbol 120962 . 120974) (VOID 120957 . 120961) (EXTERN 120940 . 120946) (punctuation 120938 . 120939) (close-paren 120937 . 120938) (symbol 120926 . 120937) (punctuation 120920 . 120921) (symbol 120909 . 120920) (punctuation 120907 . 120908) (symbol 120896 . 120907) (punctuation 120894 . 120895) (symbol 120883 . 120894) (open-paren 120882 . 120883) (symbol 120873 . 120881) (VOID 120868 . 120872) (EXTERN 120851 . 120857) (punctuation 120849 . 120850) (close-paren 120848 . 120849) (symbol 120837 . 120848) (punctuation 120835 . 120836) (symbol 120824 . 120835) (punctuation 120822 . 120823) (symbol 120811 . 120822) (open-paren 120810 . 120811) (symbol 120801 . 120809) (VOID 120796 . 120800) (EXTERN 120779 . 120785) (punctuation 120777 . 120778) (close-paren 120776 . 120777) (symbol 120765 . 120776) (punctuation 120763 . 120764) (symbol 120752 . 120763) (open-paren 120751 . 120752) (symbol 120742 . 120750) (VOID 120737 . 120741) (EXTERN 120720 . 120726) (punctuation 120718 . 120719) (close-paren 120717 . 120718) (symbol 120706 . 120717) (open-paren 120705 . 120706) (symbol 120696 . 120704) (VOID 120691 . 120695) (EXTERN 120674 . 120680) (close-paren 120672 . 120673) (open-paren 120638 . 120639) (close-paren 120636 . 120637) (symbol 120632 . 120636) (symbol 120620 . 120631) (punctuation 120618 . 120619) (symbol 120606 . 120618) (symbol 120594 . 120605) (open-paren 120593 . 120594) (symbol 120585 . 120592) (VOID 120580 . 120584) (symbol 120563 . 120569) (punctuation 120561 . 120562) (close-paren 120560 . 120561) (VOID 120556 . 120560) (open-paren 120555 . 120556) (symbol 120550 . 120554) (symbol 120538 . 120549) (EXTERN 120531 . 120537) (punctuation 120529 . 120530) (close-paren 120528 . 120529) (punctuation 120471 . 120472) (punctuation 120445 . 120446) (symbol 120441 . 120445) (punctuation 120440 . 120441) (symbol 120428 . 120439) (punctuation 120426 . 120427) (symbol 120421 . 120426) (symbol 120411 . 120420) (open-paren 120410 . 120411) (symbol 120391 . 120409) (symbol 120379 . 120390) (EXTERN 120372 . 120378) (punctuation 120370 . 120371) (close-paren 120369 . 120370) (symbol 120358 . 120369) (punctuation 120356 . 120357) (symbol 120345 . 120356) (punctuation 120343 . 120344) (symbol 120332 . 120343) (open-paren 120331 . 120332) (symbol 120310 . 120330) (VOID 120305 . 120309) (EXTERN 120298 . 120304) (punctuation 120296 . 120297) (close-paren 120295 . 120296) (symbol 120284 . 120295) (open-paren 120283 . 120284) (symbol 120274 . 120282) (VOID 120269 . 120273) (EXTERN 120262 . 120268) (close-paren 119882 . 119883) (semantic-list 119874 . 119879) (RETURN 119836 . 119842) (open-paren 119832 . 119833) (close-paren 119830 . 119831) (symbol 119827 . 119830) (punctuation 119826 . 119827) (CHAR 119821 . 119825) (CONST 119815 . 119820) (open-paren 119814 . 119815) (symbol 119798 . 119813) (symbol 119786 . 119797) (symbol 119779 . 119785) (close-paren 119776 . 119777) (semantic-list 119768 . 119773) (RETURN 119739 . 119745) (open-paren 119735 . 119736) (close-paren 119733 . 119734) (symbol 119730 . 119733) (punctuation 119729 . 119730) (CHAR 119724 . 119728) (CONST 119718 . 119723) (open-paren 119717 . 119718) (symbol 119710 . 119716) (symbol 119698 . 119709) (symbol 119691 . 119697) (punctuation 119688 . 119689) (close-paren 119687 . 119688) (VOID 119683 . 119687) (open-paren 119682 . 119683) (symbol 119668 . 119681) (VOID 119663 . 119667) (EXTERN 119656 . 119662) (punctuation 119654 . 119655) (close-paren 119653 . 119654) (VOID 119649 . 119653) (open-paren 119648 . 119649) (symbol 119637 . 119647) (VOID 119632 . 119636) (EXTERN 119625 . 119631) (punctuation 119623 . 119624) (close-paren 119622 . 119623) (VOID 119618 . 119622) (open-paren 119617 . 119618) (symbol 119604 . 119616) (VOID 119599 . 119603) (EXTERN 119592 . 119598) (punctuation 119590 . 119591) (close-paren 119589 . 119590) (symbol 119578 . 119589) (punctuation 119576 . 119577) (punctuation 119575 . 119576) (CHAR 119570 . 119574) (CONST 119564 . 119569) (open-paren 119563 . 119564) (symbol 119551 . 119562) (VOID 119546 . 119550) (EXTERN 119539 . 119545) (punctuation 119537 . 119538) (close-paren 119536 . 119537) (symbol 119525 . 119536) (punctuation 119498 . 119499) (semantic-list 119472 . 119498) (semantic-list 119468 . 119471) (VOID 119463 . 119467) (punctuation 119461 . 119462) (symbol 119450 . 119461) (open-paren 119449 . 119450) (symbol 119437 . 119448) (VOID 119432 . 119436) (EXTERN 119425 . 119431) (punctuation 119423 . 119424) (close-paren 119422 . 119423) (INT 119419 . 119422) (punctuation 119417 . 119418) (INT 119414 . 119417) (punctuation 119412 . 119413) (punctuation 119411 . 119412) (CONST 119405 . 119410) (CHAR 119400 . 119404) (open-paren 119399 . 119400) (symbol 119382 . 119398) (symbol 119370 . 119381) (EXTERN 119363 . 119369) (punctuation 119361 . 119362) (close-paren 119360 . 119361) (number 119358 . 119359) (punctuation 119356 . 119357) (symbol 119336 . 119355) (open-paren 119334 . 119335) (ENUM 119329 . 119333) (punctuation 119327 . 119328) (close-paren 119326 . 119327) (BOOL 119322 . 119326) (punctuation 119320 . 119321) (symbol 119309 . 119320) (punctuation 119307 . 119308) (punctuation 119306 . 119307) (symbol 119294 . 119305) (punctuation 119274 . 119275) (symbol 119263 . 119274) (punctuation 119261 . 119262) (symbol 119250 . 119261) (punctuation 119248 . 119249) (symbol 119237 . 119248) (open-paren 119236 . 119237) (symbol 119230 . 119235) (INT 119226 . 119229) (EXTERN 119219 . 119225) (close-paren 119217 . 119218) (semantic-list 119147 . 119160) (IF 119144 . 119146) (open-paren 119140 . 119141) (close-paren 119138 . 119139) (symbol 119137 . 119138) (symbol 119125 . 119136) (open-paren 119124 . 119125) (symbol 119108 . 119123) (VOID 119103 . 119107) (symbol 119096 . 119102) (punctuation 119094 . 119095) (close-paren 119093 . 119094) (symbol 119084 . 119093) (punctuation 119082 . 119083) (symbol 119073 . 119082) (punctuation 119071 . 119072) (punctuation 119070 . 119071) (CHAR 119065 . 119069) (CONST 119059 . 119064) (punctuation 119057 . 119058) (symbol 119046 . 119057) (open-paren 119045 . 119046) (symbol 119036 . 119044) (symbol 119024 . 119035) (EXTERN 119017 . 119023) (punctuation 119015 . 119016) (close-paren 119014 . 119015) (symbol 119003 . 119014) (punctuation 119001 . 119002) (symbol 118990 . 119001) (open-paren 118989 . 118990) (symbol 118977 . 118988) (VOID 118972 . 118976) (EXTERN 118965 . 118971) (punctuation 118963 . 118964) (close-paren 118962 . 118963) (symbol 118951 . 118962) (punctuation 118949 . 118950) (symbol 118938 . 118949) (punctuation 118936 . 118937) (symbol 118925 . 118936) (open-paren 118924 . 118925) (symbol 118910 . 118923) (symbol 118898 . 118909) (EXTERN 118891 . 118897) (punctuation 118889 . 118890) (close-paren 118888 . 118889) (symbol 118879 . 118888) (punctuation 118877 . 118878) (punctuation 118876 . 118877) (CHAR 118871 . 118875) (CONST 118865 . 118870) (open-paren 118864 . 118865) (symbol 118846 . 118863) (symbol 118834 . 118845) (EXTERN 118827 . 118833) (punctuation 118825 . 118826) (close-paren 118824 . 118825) (symbol 118815 . 118824) (punctuation 118813 . 118814) (punctuation 118812 . 118813) (CHAR 118807 . 118811) (CONST 118801 . 118806) (open-paren 118800 . 118801) (symbol 118791 . 118799) (symbol 118779 . 118790) (EXTERN 118772 . 118778) (punctuation 118770 . 118771) (close-paren 118769 . 118770) (symbol 118758 . 118769) (open-paren 118757 . 118758) (symbol 118743 . 118756) (symbol 118731 . 118742) (EXTERN 118724 . 118730) (punctuation 118694 . 118695) (close-paren 118693 . 118694) (number 118692 . 118693) (punctuation 118690 . 118691) (number 118689 . 118690) (open-paren 118688 . 118689) (symbol 118664 . 118687) (close-paren 118660 . 118661) (symbol 118653 . 118660) (punctuation 118651 . 118652) (punctuation 118650 . 118651) (CONST 118644 . 118649) (CHAR 118639 . 118643) (punctuation 118630 . 118631) (symbol 118621 . 118630) (punctuation 118619 . 118620) (punctuation 118618 . 118619) (CONST 118612 . 118617) (CHAR 118607 . 118611) (punctuation 118605 . 118606) (punctuation 118604 . 118605) (symbol 118594 . 118603) (punctuation 118592 . 118593) (punctuation 118591 . 118592) (punctuation 118590 . 118591) (CHAR 118585 . 118589) (open-paren 118584 . 118585) (symbol 118574 . 118583) (symbol 118564 . 118573) (EXTERN 118557 . 118563) (punctuation 118555 . 118556) (close-paren 118554 . 118555) (number 118553 . 118554) (punctuation 118551 . 118552) (number 118550 . 118551) (open-paren 118549 . 118550) (symbol 118525 . 118548) (close-paren 118521 . 118522) (punctuation 118520 . 118521) (punctuation 118519 . 118520) (punctuation 118518 . 118519) (punctuation 118516 . 118517) (punctuation 118515 . 118516) (CONST 118509 . 118514) (CHAR 118504 . 118508) (punctuation 118496 . 118497) (symbol 118487 . 118496) (punctuation 118485 . 118486) (punctuation 118484 . 118485) (CONST 118478 . 118483) (CHAR 118473 . 118477) (punctuation 118471 . 118472) (punctuation 118470 . 118471) (symbol 118460 . 118469) (punctuation 118458 . 118459) (punctuation 118457 . 118458) (punctuation 118456 . 118457) (CHAR 118451 . 118455) (open-paren 118450 . 118451) (symbol 118441 . 118449) (symbol 118431 . 118440) (EXTERN 118424 . 118430) (punctuation 118422 . 118423) (close-paren 118421 . 118422) (number 118420 . 118421) (punctuation 118418 . 118419) (number 118417 . 118418) (open-paren 118416 . 118417) (symbol 118392 . 118415) (close-paren 118388 . 118389) (punctuation 118387 . 118388) (punctuation 118386 . 118387) (punctuation 118385 . 118386) (punctuation 118383 . 118384) (punctuation 118382 . 118383) (CONST 118376 . 118381) (CHAR 118371 . 118375) (punctuation 118369 . 118370) (punctuation 118368 . 118369) (CHAR 118363 . 118367) (open-paren 118362 . 118363) (symbol 118353 . 118361) (symbol 118343 . 118352) (EXTERN 118336 . 118342) (punctuation 118334 . 118335) (close-paren 118333 . 118334) (symbol 118326 . 118333) (punctuation 118320 . 118321) (punctuation 118319 . 118320) (CHAR 118314 . 118318) (CONST 118308 . 118313) (punctuation 118306 . 118307) (punctuation 118305 . 118306) (CHAR 118300 . 118304) (CONST 118294 . 118299) (punctuation 118292 . 118293) (symbol 118283 . 118292) (punctuation 118281 . 118282) (punctuation 118280 . 118281) (CHAR 118275 . 118279) (open-paren 118274 . 118275) (symbol 118267 . 118273) (symbol 118257 . 118266) (EXTERN 118250 . 118256) (punctuation 118219 . 118220) (close-paren 118218 . 118219) (VOID 118214 . 118218) (open-paren 118213 . 118214) (symbol 118199 . 118212) (VOID 118194 . 118198) (EXTERN 118187 . 118193) (punctuation 118185 . 118186) (close-paren 118184 . 118185) (VOID 118180 . 118184) (open-paren 118179 . 118180) (symbol 118163 . 118178) (VOID 118158 . 118162) (EXTERN 118151 . 118157) (punctuation 118149 . 118150) (close-paren 118148 . 118149) (DOUBLE 118142 . 118148) (punctuation 118140 . 118141) (punctuation 118139 . 118140) (CHAR 118134 . 118138) (open-paren 118133 . 118134) (symbol 118117 . 118132) (INT 118113 . 118116) (EXTERN 118106 . 118112) (punctuation 118068 . 118069) (close-paren 118067 . 118068) (symbol 118056 . 118067) (punctuation 118054 . 118055) (punctuation 118038 . 118039) (punctuation 118023 . 118024) (punctuation 118022 . 118023) (CHAR 118017 . 118021) (CONST 118011 . 118016) (open-paren 118010 . 118011) (symbol 117966 . 118001) (symbol 117954 . 117965) (EXTERN 117947 . 117953) (punctuation 117945 . 117946) (close-paren 117944 . 117945) (symbol 117933 . 117944) (punctuation 117926 . 117927) (punctuation 117925 . 117926) (CHAR 117920 . 117924) (CONST 117914 . 117919) (punctuation 117912 . 117913) (symbol 117901 . 117912) (punctuation 117899 . 117900) (symbol 117888 . 117899) (open-paren 117887 . 117888) (symbol 117867 . 117886) (VOID 117862 . 117866) (EXTERN 117855 . 117861) (punctuation 117829 . 117830) (close-paren 117828 . 117829) (punctuation 117827 . 117828) (CHAR 117822 . 117826) (CONST 117816 . 117821) (open-paren 117815 . 117816) (symbol 117790 . 117814) (VOID 117785 . 117789) (EXTERN 117778 . 117784) (close-paren 117756 . 117757) (symbol 117745 . 117756) (open-paren 117744 . 117745) (symbol 117732 . 117743) (VOID 117727 . 117731) (EXTERN 117720 . 117726) (punctuation 117646 . 117647) (close-paren 117645 . 117646) (VOID 117641 . 117645) (open-paren 117640 . 117641) (symbol 117624 . 117639) (VOID 117619 . 117623) (EXTERN 117612 . 117618) (punctuation 117610 . 117611) (close-paren 117609 . 117610) (symbol 117598 . 117609) (open-paren 117597 . 117598) (symbol 117583 . 117596) (symbol 117571 . 117582) (EXTERN 117564 . 117570) (punctuation 117562 . 117563) (close-paren 117561 . 117562) (UNSIGNED 117553 . 117561) (punctuation 117551 . 117552) (UNSIGNED 117543 . 117551) (punctuation 117536 . 117537) (punctuation 117535 . 117536) (symbol 117527 . 117534) (STRUCT 117520 . 117526) (punctuation 117518 . 117519) (symbol 117507 . 117518) (punctuation 117500 . 117501) (symbol 117489 . 117500) (punctuation 117487 . 117488) (symbol 117476 . 117487) (punctuation 117469 . 117470) (semantic-list 117443 . 117469) (semantic-list 117429 . 117442) (VOID 117424 . 117428) (open-paren 117423 . 117424) (symbol 117396 . 117422) (VOID 117391 . 117395) (EXTERN 117384 . 117390) (punctuation 117382 . 117383) (close-paren 117381 . 117382) (symbol 117370 . 117381) (punctuation 117368 . 117369) (symbol 117357 . 117368) (punctuation 117355 . 117356) (symbol 117344 . 117355) (punctuation 117314 . 117315) (semantic-list 117247 . 117314) (semantic-list 117243 . 117246) (VOID 117238 . 117242) (open-paren 117237 . 117238) (symbol 117222 . 117236) (VOID 117217 . 117221) (EXTERN 117210 . 117216) (punctuation 117208 . 117209) (close-paren 117207 . 117208) (symbol 117196 . 117207) (punctuation 117194 . 117195) (INT 117191 . 117194) (punctuation 117189 . 117190) (INT 117186 . 117189) (punctuation 117184 . 117185) (symbol 117173 . 117184) (open-paren 117172 . 117173) (symbol 117151 . 117171) (VOID 117146 . 117150) (EXTERN 117139 . 117145) (punctuation 117137 . 117138) (close-paren 117136 . 117137) (punctuation 117135 . 117136) (INT 117131 . 117134) (punctuation 117129 . 117130) (punctuation 117128 . 117129) (INT 117124 . 117127) (punctuation 117077 . 117078) (INT 117074 . 117077) (punctuation 117072 . 117073) (symbol 117061 . 117072) (open-paren 117060 . 117061) (symbol 117035 . 117059) (symbol 117023 . 117034) (EXTERN 117016 . 117022) (punctuation 117014 . 117015) (close-paren 117013 . 117014) (symbol 117002 . 117013) (open-paren 117001 . 117002) (symbol 116985 . 117000) (symbol 116973 . 116984) (EXTERN 116966 . 116972) (punctuation 116600 . 116601) (close-paren 116599 . 116600) (VOID 116595 . 116599) (open-paren 116594 . 116595) (symbol 116573 . 116593) (VOID 116568 . 116572) (EXTERN 116561 . 116567) (punctuation 116552 . 116553) (close-paren 116551 . 116552) (semantic-list 116548 . 116551) (open-paren 116547 . 116548) (symbol 116525 . 116546) (close-paren 116523 . 116524) (symbol 116517 . 116523) (punctuation 116515 . 116516) (symbol 116509 . 116515) (open-paren 116508 . 116509) (symbol 116494 . 116507) (punctuation 116493 . 116494) (VOID 116488 . 116492) (EXTERN 116481 . 116487) (close-paren 116288 . 116289) (punctuation 116286 . 116287) (semantic-list 116284 . 116286) (semantic-list "((void) 0)" 116261 . 116283) (spp-arg-list nil 116261 . 116283) (open-paren 116259 . 116260) (close-paren 116257 . 116258) (VOID 116253 . 116257) (open-paren 116252 . 116253) (close-paren 116250 . 116251) (symbol 116235 . 116250) (open-paren 116234 . 116235) (VOID 116229 . 116233) (symbol 116222 . 116228) (punctuation 116152 . 116153) (close-paren 116151 . 116152) (symbol 116140 . 116151) (open-paren 116139 . 116140) (symbol 116119 . 116138) (INT 116115 . 116118) (EXTERN 116108 . 116114) (punctuation 116106 . 116107) (close-paren 116105 . 116106) (VOID 116101 . 116105) (open-paren 116100 . 116101) (symbol 116084 . 116099) (punctuation 116082 . 116083) (symbol 116075 . 116081) (STRUCT 116068 . 116074) (EXTERN 116061 . 116067) (punctuation 116059 . 116060) (close-paren 116058 . 116059) (VOID 116054 . 116058) (open-paren 116053 . 116054) (symbol 116039 . 116052) (VOID 116034 . 116038) (EXTERN 116027 . 116033) (punctuation 116025 . 116026) (close-paren 116024 . 116025) (VOID 116020 . 116024) (open-paren 116019 . 116020) (symbol 116008 . 116018) (VOID 116003 . 116007) (EXTERN 115996 . 116002) (punctuation 115994 . 115995) (close-paren 115993 . 115994) (VOID 115989 . 115993) (open-paren 115988 . 115989) (symbol 115972 . 115987) (VOID 115967 . 115971) (EXTERN 115960 . 115966) (punctuation 115958 . 115959) (close-paren 115957 . 115958) (punctuation 115956 . 115957) (symbol 115946 . 115955) (STRUCT 115939 . 115945) (open-paren 115938 . 115939) (symbol 115928 . 115937) (VOID 115923 . 115927) (EXTERN 115916 . 115922) (punctuation 115914 . 115915) (close-paren 115913 . 115914) (symbol 115902 . 115913) (punctuation 115900 . 115901) (symbol 115889 . 115900) (punctuation 115887 . 115888) (symbol 115876 . 115887) (open-paren 115875 . 115876) (symbol 115861 . 115874) (symbol 115849 . 115860) (EXTERN 115842 . 115848) (punctuation 115840 . 115841) (close-paren 115839 . 115840) (VOID 115835 . 115839) (open-paren 115834 . 115835) (symbol 115807 . 115833) (symbol 115797 . 115806) (EXTERN 115790 . 115796) (punctuation 115788 . 115789) (close-paren 115787 . 115788) (VOID 115783 . 115787) (open-paren 115782 . 115783) (symbol 115759 . 115781) (VOID 115754 . 115758) (EXTERN 115747 . 115753) (punctuation 115745 . 115746) (close-paren 115744 . 115745) (DOUBLE 115738 . 115744) (open-paren 115737 . 115738) (symbol 115726 . 115736) (symbol 115714 . 115725) (EXTERN 115707 . 115713) (punctuation 114995 . 114996) (close-paren 114994 . 114995) (symbol 114985 . 114994) (ENUM 114980 . 114984) (punctuation 114970 . 114971) (INT 114967 . 114970) (punctuation 114965 . 114966) (INT 114962 . 114965) (punctuation 114960 . 114961) (INT 114957 . 114960) (open-paren 114956 . 114957) (symbol 114934 . 114955) (punctuation 114933 . 114934) (symbol 114921 . 114932) (STRUCT 114914 . 114920) (EXTERN 114907 . 114913) (close-paren 114904 . 114905) (RETURN 114894 . 114900) (punctuation 114870 . 114871) (punctuation 114869 . 114870) (semantic-list 114866 . 114869) (symbol 114850 . 114865) (punctuation 114832 . 114833) (punctuation 114831 . 114832) (semantic-list 114828 . 114831) (symbol 114812 . 114827) (punctuation 114808 . 114809) (semantic-list #("((v)->header.size |= PSEUDOVECTOR_FLAG | ((code) << PSEUDOVECTOR_AREA_BITS))" 0 1 (macros (("code" semantic-list "(v)" 114783 . 114786) ("v" symbol "XVECTOR" 114775 . 114782)))) 114761 . 114808) (open-paren 114651 . 114652) (close-paren 114649 . 114650) (symbol 114641 . 114649) (INT 114637 . 114640) (punctuation 114635 . 114636) (symbol 114630 . 114635) (INT 114626 . 114629) (open-paren 114625 . 114626) (symbol 114598 . 114624) (symbol 114586 . 114597) (symbol 114579 . 114585) (close-paren 114523 . 114524) (RETURN 114513 . 114519) (punctuation 114509 . 114510) (semantic-list #("((a) = make_lisp_ptr (b, Lisp_Vectorlike))" 0 1 (macros (("b" symbol "p" 114507 . 114508) ("a" symbol "v" 114504 . 114505)))) 114492 . 114509) (open-paren 114415 . 114416) (close-paren 114413 . 114414) (symbol 114409 . 114413) (symbol 114399 . 114408) (open-paren 114398 . 114399) (symbol 114379 . 114397) (symbol 114367 . 114378) (symbol 114360 . 114366) (punctuation 114048 . 114049) (close-paren 114047 . 114048) (symbol 114038 . 114047) (open-paren 114037 . 114038) (symbol 114021 . 114036) (punctuation 114020 . 114021) (symbol 114008 . 114019) (STRUCT 114001 . 114007) (EXTERN 113994 . 114000) (punctuation 113992 . 113993) (close-paren 113991 . 113992) (punctuation 113990 . 113991) (symbol 113978 . 113989) (STRUCT 113971 . 113977) (open-paren 113970 . 113971) (symbol 113955 . 113969) (VOID 113950 . 113954) (EXTERN 113943 . 113949) (punctuation 113941 . 113942) (close-paren 113940 . 113941) (symbol 113929 . 113940) (punctuation 113927 . 113928) (symbol 113916 . 113927) (open-paren 113915 . 113916) (symbol 113905 . 113914) (symbol 113893 . 113904) (EXTERN 113886 . 113892) (close-paren 113883 . 113884) (semantic-list 113875 . 113880) (RETURN 113843 . 113849) (open-paren 113839 . 113840) (close-paren 113837 . 113838) (symbol 113834 . 113837) (punctuation 113833 . 113834) (CHAR 113828 . 113832) (CONST 113822 . 113827) (open-paren 113821 . 113822) (symbol 113808 . 113820) (symbol 113796 . 113807) (symbol 113789 . 113795) (close-paren 113692 . 113693) (semantic-list 113684 . 113689) (RETURN 113645 . 113651) (open-paren 113641 . 113642) (close-paren 113639 . 113640) (symbol 113636 . 113639) (punctuation 113635 . 113636) (CHAR 113630 . 113634) (CONST 113624 . 113629) (open-paren 113623 . 113624) (symbol 113603 . 113622) (symbol 113591 . 113602) (symbol 113584 . 113590) (punctuation 113510 . 113511) (close-paren 113509 . 113510) (symbol 113500 . 113509) (punctuation 113498 . 113499) (punctuation 113497 . 113498) (CHAR 113492 . 113496) (CONST 113486 . 113491) (open-paren 113485 . 113486) (symbol 113466 . 113484) (symbol 113454 . 113465) (EXTERN 113447 . 113453) (punctuation 113445 . 113446) (close-paren 113444 . 113445) (BOOL 113440 . 113444) (punctuation 113438 . 113439) (symbol 113429 . 113438) (punctuation 113427 . 113428) (symbol 113418 . 113427) (punctuation 113416 . 113417) (punctuation 113415 . 113416) (CHAR 113410 . 113414) (CONST 113404 . 113409) (open-paren 113403 . 113404) (symbol 113386 . 113402) (symbol 113374 . 113385) (EXTERN 113367 . 113373) (punctuation 113365 . 113366) (close-paren 113364 . 113365) (BOOL 113360 . 113364) (punctuation 113358 . 113359) (symbol 113349 . 113358) (punctuation 113347 . 113348) (symbol 113338 . 113347) (punctuation 113329 . 113330) (punctuation 113328 . 113329) (CHAR 113323 . 113327) (CONST 113317 . 113322) (open-paren 113316 . 113317) (symbol 113294 . 113315) (symbol 113282 . 113293) (EXTERN 113275 . 113281) (punctuation 113273 . 113274) (close-paren 113272 . 113273) (symbol 113263 . 113272) (punctuation 113261 . 113262) (symbol 113252 . 113261) (punctuation 113250 . 113251) (punctuation 113249 . 113250) (CHAR 113244 . 113248) (CONST 113238 . 113243) (open-paren 113237 . 113238) (symbol 113214 . 113236) (symbol 113202 . 113213) (EXTERN 113195 . 113201) (punctuation 113193 . 113194) (close-paren 113192 . 113193) (symbol 113183 . 113192) (punctuation 113181 . 113182) (symbol 113172 . 113181) (open-paren 113171 . 113172) (symbol 113142 . 113170) (symbol 113130 . 113141) (EXTERN 113123 . 113129) (punctuation 113121 . 113122) (close-paren 113120 . 113121) (symbol 113111 . 113120) (open-paren 113110 . 113111) (symbol 113091 . 113109) (symbol 113079 . 113090) (EXTERN 113072 . 113078) (punctuation 113070 . 113071) (close-paren 113069 . 113070) (punctuation 113068 . 113069) (symbol 113056 . 113067) (punctuation 113054 . 113055) (symbol 113045 . 113054) (open-paren 113044 . 113045) (symbol 113027 . 113043) (symbol 113015 . 113026) (EXTERN 113008 . 113014) (punctuation 113006 . 113007) (close-paren 113005 . 113006) (symbol 112996 . 113005) (punctuation 112994 . 112995) (symbol 112985 . 112994) (punctuation 112983 . 112984) (punctuation 112982 . 112983) (CHAR 112977 . 112981) (CONST 112971 . 112976) (open-paren 112970 . 112971) (symbol 112948 . 112969) (symbol 112936 . 112947) (EXTERN 112929 . 112935) (close-paren 112926 . 112927) (semantic-list 112918 . 112923) (RETURN 112878 . 112884) (open-paren 112874 . 112875) (close-paren 112872 . 112873) (symbol 112869 . 112872) (punctuation 112868 . 112869) (CHAR 112863 . 112867) (CONST 112857 . 112862) (open-paren 112856 . 112857) (symbol 112835 . 112855) (symbol 112823 . 112834) (symbol 112816 . 112822) (punctuation 112742 . 112743) (close-paren 112741 . 112742) (symbol 112732 . 112741) (punctuation 112730 . 112731) (punctuation 112729 . 112730) (CHAR 112724 . 112728) (CONST 112718 . 112723) (open-paren 112717 . 112718) (symbol 112697 . 112716) (symbol 112685 . 112696) (EXTERN 112678 . 112684) (punctuation 112676 . 112677) (close-paren 112675 . 112676) (number 112674 . 112675) (punctuation 112672 . 112673) (number 112671 . 112672) (open-paren 112670 . 112671) (symbol 112646 . 112669) (close-paren 112642 . 112643) (punctuation 112641 . 112642) (punctuation 112640 . 112641) (punctuation 112639 . 112640) (punctuation 112637 . 112638) (punctuation 112636 . 112637) (CHAR 112631 . 112635) (CONST 112625 . 112630) (punctuation 112623 . 112624) (punctuation 112622 . 112623) (CHAR 112617 . 112621) (open-paren 112616 . 112617) (symbol 112594 . 112615) (symbol 112582 . 112593) (EXTERN 112575 . 112581) (punctuation 112573 . 112574) (close-paren 112572 . 112573) (symbol 112563 . 112572) (punctuation 112561 . 112562) (punctuation 112560 . 112561) (CHAR 112555 . 112559) (CONST 112549 . 112554) (open-paren 112548 . 112549) (symbol 112536 . 112547) (symbol 112524 . 112535) (EXTERN 112517 . 112523) (punctuation 112515 . 112516) (close-paren 112514 . 112515) (VOID 112510 . 112514) (open-paren 112509 . 112510) (symbol 112493 . 112508) (VOID 112488 . 112492) (EXTERN 112471 . 112477) (punctuation 112469 . 112470) (close-paren 112468 . 112469) (symbol 112457 . 112468) (punctuation 112455 . 112456) (symbol 112444 . 112455) (open-paren 112443 . 112444) (symbol 112426 . 112442) (symbol 112414 . 112425) (EXTERN 112407 . 112413) (punctuation 112405 . 112406) (close-paren 112404 . 112405) (symbol 112395 . 112404) (open-paren 112394 . 112395) (symbol 112370 . 112393) (symbol 112358 . 112369) (EXTERN 112351 . 112357) (close-paren 112348 . 112349) (semantic-list 112342 . 112345) (semantic-list 112325 . 112328) (semantic-list 112306 . 112309) (semantic-list 112289 . 112292) (RETURN 112263 . 112269) (open-paren 112259 . 112260) (close-paren 112257 . 112258) (symbol 112256 . 112257) (symbol 112246 . 112255) (punctuation 112244 . 112245) (symbol 112243 . 112244) (symbol 112233 . 112242) (punctuation 112231 . 112232) (symbol 112230 . 112231) (symbol 112220 . 112229) (punctuation 112218 . 112219) (symbol 112217 . 112218) (symbol 112207 . 112216) (open-paren 112206 . 112207) (symbol 112199 . 112205) (symbol 112187 . 112198) (symbol 112180 . 112186) (close-paren 112177 . 112178) (semantic-list 112171 . 112174) (semantic-list 112154 . 112157) (semantic-list 112137 . 112140) (RETURN 112111 . 112117) (open-paren 112107 . 112108) (close-paren 112105 . 112106) (symbol 112104 . 112105) (symbol 112094 . 112103) (punctuation 112092 . 112093) (symbol 112091 . 112092) (symbol 112081 . 112090) (punctuation 112079 . 112080) (symbol 112078 . 112079) (symbol 112068 . 112077) (open-paren 112067 . 112068) (symbol 112060 . 112066) (symbol 112048 . 112059) (symbol 112041 . 112047) (close-paren 112038 . 112039) (semantic-list 112032 . 112035) (semantic-list 112015 . 112018) (RETURN 111989 . 111995) (open-paren 111985 . 111986) (close-paren 111983 . 111984) (symbol 111982 . 111983) (symbol 111972 . 111981) (punctuation 111970 . 111971) (symbol 111969 . 111970) (symbol 111959 . 111968) (open-paren 111958 . 111959) (symbol 111951 . 111957) (symbol 111939 . 111950) (symbol 111932 . 111938) (close-paren 111876 . 111877) (ELSE 111843 . 111847) (semantic-list 111731 . 111802) (IF 111728 . 111730) (open-paren 111562 . 111563) (close-paren 111560 . 111561) (symbol 111559 . 111560) (symbol 111549 . 111558) (punctuation 111547 . 111548) (symbol 111541 . 111547) (symbol 111535 . 111540) (open-paren 111534 . 111535) (symbol 111518 . 111533) (VOID 111513 . 111517) (symbol 111506 . 111512) (close-paren 111503 . 111504) (ELSE 111470 . 111474) (semantic-list 111378 . 111430) (IF 111375 . 111377) (open-paren 111218 . 111219) (close-paren 111216 . 111217) (symbol 111215 . 111216) (symbol 111206 . 111214) (punctuation 111204 . 111205) (symbol 111198 . 111204) (symbol 111192 . 111197) (open-paren 111191 . 111192) (symbol 111176 . 111190) (VOID 111171 . 111175) (symbol 111164 . 111170) (punctuation 111161 . 111162) (close-paren 111160 . 111161) (symbol 111159 . 111160) (symbol 111149 . 111158) (punctuation 111147 . 111148) (symbol 111141 . 111147) (symbol 111135 . 111140) (open-paren 111134 . 111135) (symbol 111113 . 111133) (VOID 111108 . 111112) (EXTERN 111101 . 111107) (punctuation 111099 . 111100) (close-paren 111098 . 111099) (symbol 111097 . 111098) (symbol 111088 . 111096) (punctuation 111086 . 111087) (symbol 111080 . 111086) (symbol 111074 . 111079) (open-paren 111073 . 111074) (symbol 111053 . 111072) (VOID 111048 . 111052) (EXTERN 111041 . 111047) (punctuation 111039 . 111040) (close-paren 111038 . 111039) (symbol 111033 . 111038) (symbol 111027 . 111032) (open-paren 111026 . 111027) (symbol 111014 . 111025) (symbol 111002 . 111013) (EXTERN 110995 . 111001) (punctuation 110993 . 110994) (close-paren 110992 . 110993) (symbol 110988 . 110992) (INT 110984 . 110987) (punctuation 110982 . 110983) (symbol 110979 . 110982) (punctuation 110978 . 110979) (CHAR 110973 . 110977) (CONST 110967 . 110972) (open-paren 110966 . 110967) (symbol 110950 . 110965) (symbol 110938 . 110949) (EXTERN 110931 . 110937) (punctuation 110928 . 110929) (close-paren 110927 . 110928) (punctuation 110926 . 110927) (punctuation 110925 . 110926) (punctuation 110924 . 110925) (punctuation 110922 . 110923) (symbol 110911 . 110922) (punctuation 110909 . 110910) (symbol 110900 . 110909) (punctuation 110898 . 110899) (symbol 110890 . 110898) (ENUM 110885 . 110889) (open-paren 110884 . 110885) (symbol 110878 . 110883) (symbol 110866 . 110877) (EXTERN 110859 . 110865) (punctuation 110857 . 110858) (close-paren 110856 . 110857) (symbol 110843 . 110856) (punctuation 110841 . 110842) (symbol 110828 . 110841) (open-paren 110827 . 110828) (symbol 110818 . 110826) (ENUM 110813 . 110817) (punctuation 110811 . 110812) (close-paren 110810 . 110811) (symbol 110799 . 110810) (punctuation 110792 . 110793) (symbol 110781 . 110792) (punctuation 110779 . 110780) (symbol 110768 . 110779) (punctuation 110766 . 110767) (symbol 110755 . 110766) (punctuation 110753 . 110754) (symbol 110742 . 110753) (open-paren 110741 . 110742) (symbol 110735 . 110740) (symbol 110723 . 110734) (EXTERN 110716 . 110722) (punctuation 110714 . 110715) (close-paren 110713 . 110714) (symbol 110702 . 110713) (punctuation 110700 . 110701) (symbol 110689 . 110700) (punctuation 110687 . 110688) (symbol 110676 . 110687) (punctuation 110674 . 110675) (symbol 110663 . 110674) (open-paren 110662 . 110663) (symbol 110656 . 110661) (symbol 110644 . 110655) (EXTERN 110637 . 110643) (punctuation 110635 . 110636) (close-paren 110634 . 110635) (symbol 110623 . 110634) (punctuation 110621 . 110622) (symbol 110610 . 110621) (punctuation 110608 . 110609) (symbol 110597 . 110608) (open-paren 110596 . 110597) (symbol 110590 . 110595) (symbol 110578 . 110589) (EXTERN 110571 . 110577) (punctuation 110569 . 110570) (close-paren 110568 . 110569) (symbol 110557 . 110568) (punctuation 110555 . 110556) (symbol 110544 . 110555) (open-paren 110543 . 110544) (symbol 110537 . 110542) (symbol 110525 . 110536) (EXTERN 110518 . 110524) (punctuation 110516 . 110517) (close-paren 110515 . 110516) (symbol 110504 . 110515) (open-paren 110503 . 110504) (symbol 110497 . 110502) (symbol 110485 . 110496) (EXTERN 110478 . 110484) (punctuation 110281 . 110282) (close-paren 110280 . 110281) (symbol 110277 . 110280) (punctuation 110276 . 110277) (VOID 110271 . 110275) (punctuation 110269 . 110270) (semantic-list 110258 . 110269) (semantic-list 110250 . 110257) (VOID 110245 . 110249) (open-paren 110244 . 110245) (symbol 110222 . 110243) (VOID 110217 . 110221) (EXTERN 110210 . 110216) (punctuation 110208 . 110209) (close-paren 110207 . 110208) (punctuation 110206 . 110207) (CHAR 110201 . 110205) (punctuation 110199 . 110200) (punctuation 110198 . 110199) (CHAR 110193 . 110197) (open-paren 110192 . 110193) (symbol 110181 . 110191) (VOID 110176 . 110180) (EXTERN 110169 . 110175) (punctuation 110167 . 110168) (close-paren 110166 . 110167) (symbol 110157 . 110166) (punctuation 110155 . 110156) (punctuation 110154 . 110155) (symbol 110142 . 110153) (open-paren 110141 . 110142) (symbol 110122 . 110140) (VOID 110117 . 110121) (EXTERN 110110 . 110116) (punctuation 110108 . 110109) (close-paren 110107 . 110108) (VOID 110103 . 110107) (open-paren 110102 . 110103) (symbol 110084 . 110101) (VOID 110079 . 110083) (EXTERN 110072 . 110078) (punctuation 110070 . 110071) (close-paren 110069 . 110070) (VOID 110065 . 110069) (open-paren 110064 . 110065) (symbol 110047 . 110063) (VOID 110042 . 110046) (EXTERN 110035 . 110041) (punctuation 109910 . 109911) (close-paren 109909 . 109910) (symbol 109898 . 109909) (open-paren 109897 . 109898) (symbol 109885 . 109896) (VOID 109880 . 109884) (EXTERN 109873 . 109879) (punctuation 109871 . 109872) (close-paren 109870 . 109871) (symbol 109859 . 109870) (open-paren 109858 . 109859) (symbol 109844 . 109857) (BOOL 109839 . 109843) (EXTERN 109832 . 109838) (punctuation 109830 . 109831) (close-paren 109829 . 109830) (symbol 109820 . 109829) (open-paren 109819 . 109820) (symbol 109800 . 109818) (VOID 109795 . 109799) (EXTERN 109778 . 109784) (punctuation 109776 . 109777) (close-paren 109775 . 109776) (symbol 109769 . 109775) (open-paren 109768 . 109769) (symbol 109756 . 109767) (VOID 109751 . 109755) (EXTERN 109734 . 109740) (punctuation 109732 . 109733) (close-paren 109731 . 109732) (punctuation 109730 . 109731) (CHAR 109725 . 109729) (CONST 109719 . 109724) (open-paren 109718 . 109719) (symbol 109703 . 109717) (VOID 109698 . 109702) (EXTERN 109691 . 109697) (punctuation 109689 . 109690) (close-paren 109688 . 109689) (symbol 109679 . 109688) (punctuation 109677 . 109678) (symbol 109668 . 109677) (punctuation 109666 . 109667) (punctuation 109665 . 109666) (symbol 109653 . 109664) (STRUCT 109646 . 109652) (open-paren 109645 . 109646) (symbol 109624 . 109644) (VOID 109619 . 109623) (EXTERN 109612 . 109618) (punctuation 109610 . 109611) (close-paren 109609 . 109610) (VOID 109605 . 109609) (open-paren 109604 . 109605) (symbol 109588 . 109603) (VOID 109583 . 109587) (EXTERN 109576 . 109582) (punctuation 109574 . 109575) (close-paren 109573 . 109574) (VOID 109569 . 109573) (open-paren 109568 . 109569) (symbol 109554 . 109567) (punctuation 109553 . 109554) (VOID 109548 . 109552) (EXTERN 109541 . 109547) (punctuation 109511 . 109512) (close-paren 109510 . 109511) (punctuation 109509 . 109510) (symbol 109499 . 109508) (punctuation 109497 . 109498) (punctuation 109496 . 109497) (symbol 109486 . 109495) (punctuation 109476 . 109477) (symbol 109467 . 109476) (punctuation 109465 . 109466) (punctuation 109464 . 109465) (CHAR 109459 . 109463) (UNSIGNED 109450 . 109458) (CONST 109444 . 109449) (open-paren 109443 . 109444) (symbol 109420 . 109442) (VOID 109415 . 109419) (EXTERN 109408 . 109414) (punctuation 109374 . 109375) (close-paren 109373 . 109374) (semantic-list 109359 . 109373) (semantic-list 109348 . 109358) (VOID 109343 . 109347) (punctuation 109341 . 109342) (punctuation 109340 . 109341) (VOID 109335 . 109339) (open-paren 109334 . 109335) (symbol 109318 . 109333) (VOID 109313 . 109317) (EXTERN 109306 . 109312) (punctuation 109273 . 109274) (close-paren 109272 . 109273) (VOID 109268 . 109272) (open-paren 109267 . 109268) (symbol 109249 . 109266) (VOID 109244 . 109248) (EXTERN 109237 . 109243) (punctuation 109203 . 109204) (close-paren 109202 . 109203) (punctuation 109201 . 109202) (INT 109197 . 109200) (punctuation 109195 . 109196) (punctuation 109194 . 109195) (INT 109190 . 109193) (punctuation 109188 . 109189) (punctuation 109187 . 109188) (INT 109183 . 109186) (punctuation 109181 . 109182) (punctuation 109180 . 109181) (INT 109176 . 109179) (punctuation 109174 . 109175) (punctuation 109173 . 109174) (INT 109169 . 109172) (punctuation 109161 . 109162) (punctuation 109160 . 109161) (INT 109156 . 109159) (punctuation 109154 . 109155) (symbol 109145 . 109154) (punctuation 109143 . 109144) (punctuation 109142 . 109143) (symbol 109135 . 109141) (STRUCT 109128 . 109134) (open-paren 109127 . 109128) (symbol 109113 . 109126) (BOOL 109108 . 109112) (EXTERN 109101 . 109107) (punctuation 109099 . 109100) (close-paren 109098 . 109099) (symbol 109087 . 109098) (open-paren 109086 . 109087) (symbol 109076 . 109085) (symbol 109064 . 109075) (EXTERN 109057 . 109063) (punctuation 109055 . 109056) (close-paren 109054 . 109055) (VOID 109050 . 109054) (open-paren 109049 . 109050) (symbol 109038 . 109048) (VOID 109033 . 109037) (EXTERN 109026 . 109032) (punctuation 109024 . 109025) (close-paren 109023 . 109024) (VOID 109019 . 109023) (open-paren 109018 . 109019) (symbol 109004 . 109017) (VOID 108999 . 109003) (EXTERN 108992 . 108998) (punctuation 108990 . 108991) (close-paren 108989 . 108990) (symbol 108978 . 108989) (punctuation 108976 . 108977) (punctuation 108975 . 108976) (symbol 108969 . 108974) (STRUCT 108962 . 108968) (open-paren 108961 . 108962) (symbol 108938 . 108960) (VOID 108933 . 108937) (punctuation 108930 . 108931) (close-paren 108929 . 108930) (VOID 108925 . 108929) (open-paren 108924 . 108925) (symbol 108914 . 108923) (VOID 108909 . 108913) (EXTERN 108902 . 108908) (punctuation 108900 . 108901) (close-paren 108899 . 108900) (symbol 108890 . 108899) (open-paren 108889 . 108890) (symbol 108870 . 108888) (VOID 108865 . 108869) (EXTERN 108858 . 108864) (punctuation 108856 . 108857) (close-paren 108855 . 108856) (VOID 108851 . 108855) (open-paren 108850 . 108851) (symbol 108833 . 108849) (VOID 108828 . 108832) (EXTERN 108821 . 108827) (punctuation 108819 . 108820) (close-paren 108818 . 108819) (VOID 108814 . 108818) (open-paren 108813 . 108814) (symbol 108787 . 108812) (VOID 108782 . 108786) (EXTERN 108775 . 108781) (punctuation 108773 . 108774) (close-paren 108772 . 108773) (BOOL 108768 . 108772) (punctuation 108766 . 108767) (symbol 108755 . 108766) (punctuation 108753 . 108754) (punctuation 108752 . 108753) (CHAR 108747 . 108751) (CONST 108741 . 108746) (open-paren 108740 . 108741) (symbol 108720 . 108739) (VOID 108715 . 108719) (EXTERN 108708 . 108714) (punctuation 108706 . 108707) (close-paren 108705 . 108706) (BOOL 108701 . 108705) (punctuation 108699 . 108700) (BOOL 108695 . 108699) (punctuation 108693 . 108694) (symbol 108684 . 108693) (punctuation 108682 . 108683) (punctuation 108681 . 108682) (CHAR 108676 . 108680) (CONST 108670 . 108675) (open-paren 108669 . 108670) (symbol 108655 . 108668) (VOID 108650 . 108654) (EXTERN 108643 . 108649) (punctuation 108641 . 108642) (close-paren 108640 . 108641) (symbol 108629 . 108640) (open-paren 108628 . 108629) (symbol 108613 . 108627) (VOID 108608 . 108612) (EXTERN 108601 . 108607) (punctuation 108599 . 108600) (close-paren 108598 . 108599) (symbol 108587 . 108598) (open-paren 108586 . 108587) (symbol 108577 . 108585) (VOID 108572 . 108576) (EXTERN 108565 . 108571) (punctuation 108563 . 108564) (close-paren 108562 . 108563) (punctuation 108561 . 108562) (CHAR 108556 . 108560) (CONST 108550 . 108555) (open-paren 108549 . 108550) (symbol 108534 . 108548) (VOID 108529 . 108533) (EXTERN 108522 . 108528) (punctuation 108520 . 108521) (close-paren 108519 . 108520) (punctuation 108518 . 108519) (CHAR 108513 . 108517) (CONST 108507 . 108512) (open-paren 108506 . 108507) (symbol 108497 . 108505) (VOID 108492 . 108496) (EXTERN 108485 . 108491) (punctuation 108483 . 108484) (close-paren 108482 . 108483) (number 108481 . 108482) (punctuation 108479 . 108480) (number 108478 . 108479) (open-paren 108477 . 108478) (symbol 108453 . 108476) (close-paren 108451 . 108452) (punctuation 108450 . 108451) (punctuation 108449 . 108450) (punctuation 108448 . 108449) (punctuation 108446 . 108447) (punctuation 108445 . 108446) (CHAR 108440 . 108444) (CONST 108434 . 108439) (open-paren 108433 . 108434) (symbol 108425 . 108432) (VOID 108420 . 108424) (EXTERN 108413 . 108419) (punctuation 108411 . 108412) (close-paren 108410 . 108411) (BOOL 108406 . 108410) (punctuation 108404 . 108405) (BOOL 108400 . 108404) (open-paren 108399 . 108400) (symbol 108385 . 108398) (VOID 108380 . 108384) (EXTERN 108373 . 108379) (punctuation 108371 . 108372) (close-paren 108370 . 108371) (VOID 108366 . 108370) (open-paren 108365 . 108366) (symbol 108349 . 108364) (symbol 108337 . 108348) (EXTERN 108330 . 108336) (punctuation 108328 . 108329) (close-paren 108327 . 108328) (VOID 108323 . 108327) (open-paren 108322 . 108323) (symbol 108306 . 108321) (VOID 108301 . 108305) (EXTERN 108294 . 108300) (punctuation 108292 . 108293) (close-paren 108291 . 108292) (symbol 108280 . 108291) (open-paren 108279 . 108280) (symbol 108256 . 108278) (symbol 108244 . 108255) (EXTERN 108237 . 108243) (punctuation 108235 . 108236) (close-paren 108234 . 108235) (VOID 108230 . 108234) (open-paren 108229 . 108230) (symbol 108210 . 108228) (VOID 108205 . 108209) (EXTERN 108198 . 108204) (punctuation 108196 . 108197) (close-paren 108195 . 108196) (VOID 108191 . 108195) (open-paren 108190 . 108191) (symbol 108177 . 108189) (BOOL 108172 . 108176) (EXTERN 108165 . 108171) (punctuation 108163 . 108164) (close-paren 108162 . 108163) (BOOL 108158 . 108162) (open-paren 108157 . 108158) (symbol 108128 . 108156) (VOID 108123 . 108127) (EXTERN 108116 . 108122) (punctuation 108114 . 108115) (close-paren 108113 . 108114) (VOID 108109 . 108113) (open-paren 108108 . 108109) (symbol 108088 . 108107) (VOID 108083 . 108087) (EXTERN 108076 . 108082) (punctuation 108074 . 108075) (close-paren 108073 . 108074) (symbol 108066 . 108073) (punctuation 108064 . 108065) (punctuation 108063 . 108064) (CONST 108057 . 108062) (CHAR 108052 . 108056) (open-paren 108051 . 108052) (symbol 108039 . 108050) (VOID 108034 . 108038) (EXTERN 108027 . 108033) (punctuation 108025 . 108026) (close-paren 108024 . 108025) (punctuation 108023 . 108024) (punctuation 108022 . 108023) (punctuation 108021 . 108022) (punctuation 108019 . 108020) (punctuation 108018 . 108019) (CONST 108012 . 108017) (CHAR 108007 . 108011) (open-paren 108006 . 108007) (symbol 107995 . 108005) (VOID 107990 . 107994) (EXTERN 107983 . 107989) (punctuation 107981 . 107982) (close-paren 107980 . 107981) (number 107979 . 107980) (open-paren 107978 . 107979) (symbol 107962 . 107978) (symbol 107950 . 107961) (EXTERN 107943 . 107949) (punctuation 107872 . 107873) (close-paren 107871 . 107872) (INT 107868 . 107871) (punctuation 107866 . 107867) (BOOL 107862 . 107866) (punctuation 107860 . 107861) (symbol 107849 . 107860) (open-paren 107848 . 107849) (symbol 107840 . 107847) (symbol 107828 . 107839) (EXTERN 107821 . 107827) (punctuation 107688 . 107689) (close-paren 107687 . 107688) (VOID 107683 . 107687) (open-paren 107682 . 107683) (symbol 107667 . 107681) (VOID 107662 . 107666) (EXTERN 107655 . 107661) (punctuation 107653 . 107654) (close-paren 107652 . 107653) (BOOL 107648 . 107652) (punctuation 107646 . 107647) (symbol 107637 . 107646) (punctuation 107635 . 107636) (symbol 107626 . 107635) (punctuation 107624 . 107625) (punctuation 107623 . 107624) (CHAR 107618 . 107622) (CONST 107612 . 107617) (punctuation 107602 . 107603) (symbol 107593 . 107602) (punctuation 107591 . 107592) (symbol 107582 . 107591) (punctuation 107580 . 107581) (symbol 107571 . 107580) (punctuation 107569 . 107570) (symbol 107560 . 107569) (open-paren 107559 . 107560) (symbol 107543 . 107558) (VOID 107538 . 107542) (EXTERN 107531 . 107537) (punctuation 107529 . 107530) (close-paren 107528 . 107529) (BOOL 107524 . 107528) (punctuation 107522 . 107523) (BOOL 107518 . 107522) (punctuation 107516 . 107517) (BOOL 107512 . 107516) (punctuation 107510 . 107511) (BOOL 107506 . 107510) (punctuation 107504 . 107505) (symbol 107493 . 107504) (punctuation 107491 . 107492) (symbol 107482 . 107491) (punctuation 107480 . 107481) (symbol 107471 . 107480) (open-paren 107470 . 107471) (symbol 107456 . 107469) (VOID 107451 . 107455) (EXTERN 107444 . 107450) (punctuation 107442 . 107443) (close-paren 107441 . 107442) (INT 107438 . 107441) (punctuation 107436 . 107437) (symbol 107427 . 107436) (punctuation 107425 . 107426) (symbol 107416 . 107425) (punctuation 107406 . 107407) (symbol 107397 . 107406) (punctuation 107395 . 107396) (symbol 107386 . 107395) (open-paren 107385 . 107386) (symbol 107362 . 107384) (VOID 107357 . 107361) (EXTERN 107350 . 107356) (punctuation 107348 . 107349) (close-paren 107347 . 107348) (symbol 107338 . 107347) (punctuation 107336 . 107337) (symbol 107327 . 107336) (punctuation 107314 . 107315) (symbol 107305 . 107314) (punctuation 107303 . 107304) (symbol 107294 . 107303) (open-paren 107293 . 107294) (symbol 107267 . 107292) (VOID 107262 . 107266) (EXTERN 107255 . 107261) (punctuation 107253 . 107254) (close-paren 107252 . 107253) (symbol 107243 . 107252) (punctuation 107241 . 107242) (symbol 107232 . 107241) (punctuation 107225 . 107226) (symbol 107216 . 107225) (punctuation 107214 . 107215) (symbol 107205 . 107214) (punctuation 107203 . 107204) (symbol 107194 . 107203) (open-paren 107193 . 107194) (symbol 107173 . 107192) (VOID 107168 . 107172) (EXTERN 107161 . 107167) (punctuation 107159 . 107160) (close-paren 107158 . 107159) (symbol 107149 . 107158) (punctuation 107147 . 107148) (symbol 107138 . 107147) (punctuation 107136 . 107137) (symbol 107127 . 107136) (open-paren 107126 . 107127) (symbol 107106 . 107125) (VOID 107101 . 107105) (EXTERN 107094 . 107100) (punctuation 107092 . 107093) (close-paren 107091 . 107092) (symbol 107082 . 107091) (punctuation 107080 . 107081) (symbol 107071 . 107080) (punctuation 107069 . 107070) (punctuation 107068 . 107069) (symbol 107061 . 107067) (STRUCT 107054 . 107060) (open-paren 107053 . 107054) (symbol 107028 . 107052) (VOID 107023 . 107027) (EXTERN 107016 . 107022) (punctuation 107014 . 107015) (close-paren 107013 . 107014) (punctuation 107012 . 107013) (symbol 107002 . 107011) (punctuation 107000 . 107001) (symbol 106991 . 107000) (punctuation 106989 . 106990) (symbol 106980 . 106989) (open-paren 106979 . 106980) (symbol 106952 . 106978) (VOID 106947 . 106951) (EXTERN 106940 . 106946) (punctuation 106938 . 106939) (close-paren 106937 . 106938) (punctuation 106936 . 106937) (symbol 106926 . 106935) (punctuation 106924 . 106925) (symbol 106915 . 106924) (punctuation 106913 . 106914) (symbol 106904 . 106913) (open-paren 106903 . 106904) (symbol 106878 . 106902) (VOID 106873 . 106877) (EXTERN 106866 . 106872) (punctuation 106864 . 106865) (close-paren 106863 . 106864) (symbol 106854 . 106863) (punctuation 106852 . 106853) (symbol 106843 . 106852) (open-paren 106842 . 106843) (symbol 106830 . 106841) (VOID 106825 . 106829) (EXTERN 106818 . 106824) (punctuation 106816 . 106817) (close-paren 106815 . 106816) (BOOL 106811 . 106815) (punctuation 106809 . 106810) (symbol 106800 . 106809) (punctuation 106798 . 106799) (symbol 106789 . 106798) (punctuation 106783 . 106784) (symbol 106774 . 106783) (punctuation 106772 . 106773) (symbol 106763 . 106772) (open-paren 106762 . 106763) (symbol 106750 . 106761) (symbol 106738 . 106749) (EXTERN 106731 . 106737) (punctuation 106729 . 106730) (close-paren 106728 . 106729) (BOOL 106724 . 106728) (punctuation 106722 . 106723) (symbol 106713 . 106722) (punctuation 106711 . 106712) (symbol 106702 . 106711) (punctuation 106700 . 106701) (symbol 106691 . 106700) (punctuation 106689 . 106690) (symbol 106680 . 106689) (open-paren 106679 . 106680) (symbol 106664 . 106678) (VOID 106659 . 106663) (EXTERN 106652 . 106658) (punctuation 106650 . 106651) (close-paren 106649 . 106650) (symbol 106640 . 106649) (punctuation 106638 . 106639) (symbol 106629 . 106638) (open-paren 106628 . 106629) (symbol 106613 . 106627) (VOID 106608 . 106612) (EXTERN 106601 . 106607) (punctuation 106599 . 106600) (close-paren 106598 . 106599) (BOOL 106594 . 106598) (punctuation 106592 . 106593) (BOOL 106588 . 106592) (punctuation 106586 . 106587) (symbol 106577 . 106586) (punctuation 106575 . 106576) (symbol 106566 . 106575) (open-paren 106565 . 106566) (symbol 106553 . 106564) (symbol 106541 . 106552) (EXTERN 106534 . 106540) (punctuation 106532 . 106533) (close-paren 106531 . 106532) (symbol 106522 . 106531) (punctuation 106520 . 106521) (symbol 106511 . 106520) (open-paren 106510 . 106511) (symbol 106500 . 106509) (VOID 106495 . 106499) (EXTERN 106488 . 106494) (punctuation 106486 . 106487) (close-paren 106485 . 106486) (BOOL 106481 . 106485) (punctuation 106479 . 106480) (symbol 106470 . 106479) (punctuation 106456 . 106457) (symbol 106447 . 106456) (punctuation 106445 . 106446) (symbol 106436 . 106445) (punctuation 106422 . 106423) (symbol 106413 . 106422) (punctuation 106411 . 106412) (symbol 106400 . 106411) (open-paren 106399 . 106400) (symbol 106365 . 106398) (VOID 106360 . 106364) (EXTERN 106353 . 106359) (punctuation 106351 . 106352) (close-paren 106350 . 106351) (symbol 106341 . 106350) (punctuation 106339 . 106340) (punctuation 106338 . 106339) (CHAR 106333 . 106337) (CONST 106327 . 106332) (open-paren 106326 . 106327) (symbol 106292 . 106325) (VOID 106287 . 106291) (EXTERN 106280 . 106286) (punctuation 106278 . 106279) (close-paren 106277 . 106278) (symbol 106268 . 106277) (punctuation 106266 . 106267) (punctuation 106265 . 106266) (CHAR 106260 . 106264) (CONST 106254 . 106259) (open-paren 106253 . 106254) (symbol 106231 . 106252) (VOID 106226 . 106230) (EXTERN 106219 . 106225) (punctuation 106217 . 106218) (close-paren 106216 . 106217) (punctuation 106215 . 106216) (CHAR 106210 . 106214) (CONST 106204 . 106209) (open-paren 106203 . 106204) (symbol 106189 . 106202) (VOID 106184 . 106188) (EXTERN 106177 . 106183) (punctuation 106175 . 106176) (close-paren 106174 . 106175) (INT 106171 . 106174) (open-paren 106170 . 106171) (symbol 106158 . 106169) (VOID 106153 . 106157) (EXTERN 106146 . 106152) (punctuation 106144 . 106145) (close-paren 106143 . 106144) (BOOL 106139 . 106143) (punctuation 106137 . 106138) (symbol 106128 . 106137) (punctuation 106126 . 106127) (symbol 106117 . 106126) (punctuation 106115 . 106116) (punctuation 106114 . 106115) (symbol 106107 . 106113) (STRUCT 106100 . 106106) (open-paren 106099 . 106100) (symbol 106080 . 106098) (VOID 106075 . 106079) (EXTERN 106068 . 106074) (punctuation 106066 . 106067) (close-paren 106065 . 106066) (BOOL 106061 . 106065) (punctuation 106059 . 106060) (symbol 106050 . 106059) (punctuation 106048 . 106049) (symbol 106039 . 106048) (punctuation 106033 . 106034) (symbol 106024 . 106033) (punctuation 106022 . 106023) (symbol 106013 . 106022) (punctuation 106011 . 106012) (symbol 106000 . 106011) (open-paren 105999 . 106000) (symbol 105980 . 105998) (VOID 105975 . 105979) (EXTERN 105968 . 105974) (punctuation 105966 . 105967) (close-paren 105965 . 105966) (symbol 105949 . 105965) (BOOL 105944 . 105948) (punctuation 105942 . 105943) (symbol 105933 . 105942) (punctuation 105931 . 105932) (symbol 105922 . 105931) (open-paren 105921 . 105922) (symbol 105905 . 105920) (VOID 105900 . 105904) (EXTERN 105893 . 105899) (punctuation 105891 . 105892) (close-paren 105890 . 105891) (BOOL 105886 . 105890) (punctuation 105884 . 105885) (BOOL 105880 . 105884) (punctuation 105878 . 105879) (BOOL 105874 . 105878) (punctuation 105866 . 105867) (symbol 105857 . 105866) (punctuation 105855 . 105856) (symbol 105846 . 105855) (punctuation 105844 . 105845) (punctuation 105843 . 105844) (CHAR 105838 . 105842) (CONST 105832 . 105837) (open-paren 105831 . 105832) (symbol 105817 . 105830) (VOID 105812 . 105816) (EXTERN 105805 . 105811) (punctuation 105803 . 105804) (close-paren 105802 . 105803) (symbol 105793 . 105802) (punctuation 105791 . 105792) (punctuation 105790 . 105791) (CHAR 105785 . 105789) (CONST 105779 . 105784) (open-paren 105778 . 105779) (symbol 105759 . 105777) (VOID 105754 . 105758) (EXTERN 105747 . 105753) (punctuation 105745 . 105746) (close-paren 105744 . 105745) (symbol 105735 . 105744) (punctuation 105733 . 105734) (punctuation 105732 . 105733) (CHAR 105727 . 105731) (CONST 105721 . 105726) (open-paren 105720 . 105721) (symbol 105713 . 105719) (VOID 105708 . 105712) (EXTERN 105701 . 105707) (punctuation 105699 . 105700) (close-paren 105698 . 105699) (symbol 105689 . 105698) (punctuation 105687 . 105688) (symbol 105678 . 105687) (punctuation 105676 . 105677) (symbol 105667 . 105676) (punctuation 105659 . 105660) (punctuation 105658 . 105659) (CHAR 105653 . 105657) (UNSIGNED 105644 . 105652) (CONST 105638 . 105643) (open-paren 105637 . 105638) (symbol 105615 . 105636) (INT 105611 . 105614) (EXTERN 105604 . 105610) (punctuation 105602 . 105603) (close-paren 105601 . 105602) (symbol 105592 . 105601) (punctuation 105590 . 105591) (symbol 105581 . 105590) (punctuation 105579 . 105580) (symbol 105570 . 105579) (punctuation 105561 . 105562) (punctuation 105560 . 105561) (CHAR 105555 . 105559) (UNSIGNED 105546 . 105554) (CONST 105540 . 105545) (open-paren 105539 . 105540) (symbol 105516 . 105538) (INT 105512 . 105515) (EXTERN 105505 . 105511) (punctuation 105503 . 105504) (close-paren 105502 . 105503) (BOOL 105498 . 105502) (punctuation 105496 . 105497) (BOOL 105492 . 105496) (punctuation 105490 . 105491) (symbol 105481 . 105490) (punctuation 105472 . 105473) (punctuation 105471 . 105472) (CHAR 105466 . 105470) (UNSIGNED 105457 . 105465) (punctuation 105455 . 105456) (punctuation 105454 . 105455) (CHAR 105449 . 105453) (UNSIGNED 105440 . 105448) (CONST 105434 . 105439) (open-paren 105433 . 105434) (symbol 105423 . 105432) (symbol 105413 . 105422) (EXTERN 105406 . 105412) (punctuation 105404 . 105405) (close-paren 105403 . 105404) (symbol 105394 . 105403) (punctuation 105392 . 105393) (punctuation 105391 . 105392) (symbol 105384 . 105390) (STRUCT 105377 . 105383) (open-paren 105376 . 105377) (symbol 105365 . 105375) (VOID 105360 . 105364) (EXTERN 105353 . 105359) (punctuation 105351 . 105352) (close-paren 105350 . 105351) (symbol 105341 . 105350) (open-paren 105340 . 105341) (symbol 105331 . 105339) (VOID 105326 . 105330) (EXTERN 105319 . 105325) (punctuation 105317 . 105318) (close-paren 105316 . 105317) (VOID 105312 . 105316) (open-paren 105311 . 105312) (symbol 105295 . 105310) (VOID 105290 . 105294) (EXTERN 105273 . 105279) (punctuation 105271 . 105272) (close-paren 105270 . 105271) (symbol 105261 . 105270) (punctuation 105259 . 105260) (symbol 105250 . 105259) (open-paren 105249 . 105250) (symbol 105235 . 105248) (VOID 105230 . 105234) (EXTERN 105223 . 105229) (punctuation 105078 . 105079) (close-paren 105077 . 105078) (VOID 105073 . 105077) (open-paren 105072 . 105073) (symbol 105058 . 105071) (VOID 105053 . 105057) (EXTERN 105046 . 105052) (punctuation 105044 . 105045) (close-paren 105043 . 105044) (VOID 105039 . 105043) (open-paren 105038 . 105039) (symbol 105020 . 105037) (VOID 105015 . 105019) (EXTERN 105008 . 105014) (punctuation 105006 . 105007) (close-paren 105005 . 105006) (symbol 104996 . 105005) (punctuation 104994 . 104995) (punctuation 104993 . 104994) (symbol 104987 . 104992) (STRUCT 104980 . 104986) (open-paren 104979 . 104980) (symbol 104965 . 104978) (INT 104961 . 104964) (EXTERN 104954 . 104960) (punctuation 104792 . 104793) (close-paren 104791 . 104792) (VOID 104787 . 104791) (open-paren 104786 . 104787) (symbol 104774 . 104785) (VOID 104769 . 104773) (EXTERN 104762 . 104768) (punctuation 104760 . 104761) (close-paren 104759 . 104760) (VOID 104755 . 104759) (open-paren 104754 . 104755) (symbol 104739 . 104753) (VOID 104734 . 104738) (EXTERN 104727 . 104733) (punctuation 104696 . 104697) (close-paren 104695 . 104696) (VOID 104691 . 104695) (open-paren 104690 . 104691) (symbol 104673 . 104689) (VOID 104668 . 104672) (EXTERN 104661 . 104667) (punctuation 104659 . 104660) (close-paren 104658 . 104659) (symbol 104657 . 104658) (symbol 104645 . 104656) (punctuation 104643 . 104644) (symbol 104642 . 104643) (symbol 104630 . 104641) (open-paren 104629 . 104630) (symbol 104618 . 104628) (symbol 104606 . 104617) (EXTERN 104599 . 104605) (punctuation 104590 . 104591) (close-paren 104589 . 104590) (DOUBLE 104583 . 104589) (open-paren 104582 . 104583) (symbol 104576 . 104581) (DOUBLE 104569 . 104575) (EXTERN 104562 . 104568) (punctuation 104510 . 104511) (close-paren 104509 . 104510) (VOID 104505 . 104509) (open-paren 104504 . 104505) (symbol 104492 . 104503) (VOID 104487 . 104491) (EXTERN 104480 . 104486) (punctuation 104478 . 104479) (close-paren 104477 . 104478) (symbol 104466 . 104477) (open-paren 104465 . 104466) (symbol 104445 . 104464) (symbol 104433 . 104444) (EXTERN 104426 . 104432) (punctuation 104424 . 104425) (close-paren 104423 . 104424) (symbol 104412 . 104423) (open-paren 104411 . 104412) (symbol 104391 . 104410) (symbol 104379 . 104390) (EXTERN 104372 . 104378) (punctuation 104370 . 104371) (close-paren 104369 . 104370) (symbol 104360 . 104369) (punctuation 104358 . 104359) (symbol 104347 . 104358) (open-paren 104346 . 104347) (symbol 104326 . 104345) (symbol 104316 . 104325) (EXTERN 104309 . 104315) (punctuation 104307 . 104308) (close-paren 104306 . 104307) (symbol 104297 . 104306) (punctuation 104295 . 104296) (symbol 104284 . 104295) (open-paren 104283 . 104284) (symbol 104263 . 104282) (symbol 104253 . 104262) (EXTERN 104246 . 104252) (punctuation 104244 . 104245) (close-paren 104243 . 104244) (VOID 104239 . 104243) (open-paren 104238 . 104239) (symbol 104209 . 104237) (VOID 104204 . 104208) (EXTERN 104197 . 104203) (punctuation 104195 . 104196) (close-paren 104194 . 104195) (symbol 104183 . 104194) (punctuation 104181 . 104182) (symbol 104170 . 104181) (open-paren 104169 . 104170) (symbol 104155 . 104168) (symbol 104143 . 104154) (EXTERN 104136 . 104142) (punctuation 104134 . 104135) (close-paren 104133 . 104134) (symbol 104122 . 104133) (punctuation 104120 . 104121) (symbol 104109 . 104120) (open-paren 104108 . 104109) (symbol 104095 . 104107) (symbol 104083 . 104094) (EXTERN 104076 . 104082) (punctuation 104074 . 104075) (close-paren 104073 . 104074) (symbol 104062 . 104073) (punctuation 104060 . 104061) (symbol 104049 . 104060) (open-paren 104048 . 104049) (symbol 104041 . 104047) (symbol 104029 . 104040) (EXTERN 104022 . 104028) (punctuation 104020 . 104021) (close-paren 104019 . 104020) (symbol 104008 . 104019) (punctuation 104006 . 104007) (symbol 103995 . 104006) (open-paren 103994 . 103995) (symbol 103980 . 103993) (BOOL 103975 . 103979) (EXTERN 103968 . 103974) (punctuation 103966 . 103967) (close-paren 103965 . 103966) (symbol 103954 . 103965) (punctuation 103952 . 103953) (symbol 103941 . 103952) (punctuation 103939 . 103940) (symbol 103928 . 103939) (open-paren 103927 . 103928) (symbol 103919 . 103926) (symbol 103907 . 103918) (EXTERN 103900 . 103906) (punctuation 103898 . 103899) (close-paren 103897 . 103898) (symbol 103886 . 103897) (punctuation 103884 . 103885) (symbol 103873 . 103884) (open-paren 103872 . 103873) (symbol 103864 . 103871) (symbol 103852 . 103863) (EXTERN 103845 . 103851) (punctuation 103843 . 103844) (close-paren 103842 . 103843) (symbol 103831 . 103842) (open-paren 103830 . 103831) (symbol 103815 . 103829) (symbol 103803 . 103814) (EXTERN 103796 . 103802) (punctuation 103794 . 103795) (close-paren 103793 . 103794) (symbol 103782 . 103793) (punctuation 103780 . 103781) (symbol 103769 . 103780) (punctuation 103767 . 103768) (symbol 103756 . 103767) (open-paren 103755 . 103756) (symbol 103749 . 103754) (symbol 103737 . 103748) (EXTERN 103730 . 103736) (punctuation 103728 . 103729) (close-paren 103727 . 103728) (symbol 103718 . 103727) (punctuation 103716 . 103717) (symbol 103707 . 103716) (punctuation 103698 . 103699) (symbol 103689 . 103698) (punctuation 103687 . 103688) (symbol 103678 . 103687) (punctuation 103676 . 103677) (symbol 103665 . 103676) (open-paren 103664 . 103665) (symbol 103649 . 103663) (symbol 103637 . 103648) (EXTERN 103630 . 103636) (punctuation 103628 . 103629) (close-paren 103627 . 103628) (punctuation 103626 . 103627) (symbol 103616 . 103625) (punctuation 103614 . 103615) (punctuation 103613 . 103614) (symbol 103603 . 103612) (punctuation 103601 . 103602) (symbol 103592 . 103601) (punctuation 103580 . 103581) (symbol 103569 . 103580) (punctuation 103567 . 103568) (symbol 103556 . 103567) (punctuation 103554 . 103555) (symbol 103543 . 103554) (open-paren 103542 . 103543) (symbol 103524 . 103541) (VOID 103519 . 103523) (EXTERN 103512 . 103518) (punctuation 103431 . 103432) (close-paren 103430 . 103431) (symbol 103419 . 103430) (punctuation 103417 . 103418) (punctuation 103416 . 103417) (symbol 103400 . 103415) (STRUCT 103393 . 103399) (open-paren 103392 . 103393) (symbol 103369 . 103391) (VOID 103364 . 103368) (punctuation 103362 . 103363) (close-paren 103361 . 103362) (symbol 103351 . 103361) (punctuation 103343 . 103344) (symbol 103332 . 103343) (punctuation 103330 . 103331) (symbol 103319 . 103330) (punctuation 103317 . 103318) (punctuation 103316 . 103317) (symbol 103300 . 103315) (STRUCT 103293 . 103299) (open-paren 103292 . 103293) (symbol 103283 . 103291) (symbol 103273 . 103282) (punctuation 103271 . 103272) (close-paren 103270 . 103271) (punctuation 103269 . 103270) (symbol 103258 . 103268) (punctuation 103256 . 103257) (symbol 103245 . 103256) (punctuation 103243 . 103244) (punctuation 103242 . 103243) (symbol 103226 . 103241) (STRUCT 103219 . 103225) (open-paren 103218 . 103219) (symbol 103206 . 103217) (symbol 103196 . 103205) (punctuation 103194 . 103195) (close-paren 103193 . 103194) (BOOL 103189 . 103193) (punctuation 103187 . 103188) (symbol 103176 . 103187) (punctuation 103166 . 103167) (FLOAT 103161 . 103166) (punctuation 103159 . 103160) (FLOAT 103154 . 103159) (punctuation 103152 . 103153) (symbol 103143 . 103152) (punctuation 103141 . 103142) (symbol 103126 . 103141) (STRUCT 103119 . 103125) (open-paren 103118 . 103119) (symbol 103102 . 103117) (symbol 103090 . 103101) (punctuation 103088 . 103089) (close-paren 103087 . 103088) (INT 103084 . 103087) (punctuation 103082 . 103083) (symbol 103071 . 103082) (open-paren 103070 . 103071) (symbol 103063 . 103069) (symbol 103052 . 103062) (punctuation 103050 . 103051) (close-paren 103049 . 103050) (symbol 103040 . 103049) (punctuation 103038 . 103039) (punctuation 103037 . 103038) (CONST 103031 . 103036) (CHAR 103026 . 103030) (open-paren 103025 . 103026) (symbol 103013 . 103024) (symbol 103002 . 103012) (punctuation 103000 . 103001) (close-paren 102999 . 103000) (punctuation 102998 . 102999) (symbol 102988 . 102997) (punctuation 102986 . 102987) (punctuation 102985 . 102986) (symbol 102975 . 102984) (punctuation 102973 . 102974) (symbol 102962 . 102973) (open-paren 102961 . 102962) (symbol 102936 . 102960) (punctuation 102935 . 102936) (CHAR 102930 . 102934) (EXTERN 102923 . 102929) (punctuation 102921 . 102922) (close-paren 102920 . 102921) (VOID 102916 . 102920) (open-paren 102915 . 102916) (symbol 102892 . 102914) (VOID 102887 . 102891) (EXTERN 102880 . 102886) (punctuation 102878 . 102879) (close-paren 102877 . 102878) (symbol 102868 . 102877) (punctuation 102866 . 102867) (symbol 102857 . 102866) (punctuation 102855 . 102856) (symbol 102844 . 102855) (open-paren 102843 . 102844) (symbol 102829 . 102842) (symbol 102817 . 102828) (EXTERN 102810 . 102816) (close-paren 102791 . 102792) (symbol 102782 . 102791) (open-paren 102781 . 102782) (symbol 102763 . 102780) (symbol 102753 . 102762) (EXTERN 102746 . 102752) (punctuation 102744 . 102745) (close-paren 102743 . 102744) (number 102740 . 102742) (punctuation 102738 . 102739) (symbol 102714 . 102737) (open-paren 102712 . 102713) (ENUM 102707 . 102711) (punctuation 102679 . 102680) (close-paren 102678 . 102679) (VOID 102674 . 102678) (open-paren 102673 . 102674) (symbol 102658 . 102672) (VOID 102653 . 102657) (EXTERN 102646 . 102652) (punctuation 102644 . 102645) (close-paren 102643 . 102644) (VOID 102639 . 102643) (open-paren 102638 . 102639) (symbol 102621 . 102637) (VOID 102616 . 102620) (EXTERN 102609 . 102615) (punctuation 102523 . 102524) (close-paren 102522 . 102523) (VOID 102518 . 102522) (open-paren 102517 . 102518) (symbol 102501 . 102516) (VOID 102496 . 102500) (EXTERN 102489 . 102495) (punctuation 102487 . 102488) (close-paren 102486 . 102487) (VOID 102482 . 102486) (open-paren 102481 . 102482) (symbol 102463 . 102480) (VOID 102458 . 102462) (EXTERN 102451 . 102457) (punctuation 102449 . 102450) (close-paren 102448 . 102449) (VOID 102444 . 102448) (open-paren 102443 . 102444) (symbol 102430 . 102442) (VOID 102425 . 102429) (EXTERN 102418 . 102424) (punctuation 102386 . 102387) (close-paren 102385 . 102386) (VOID 102381 . 102385) (open-paren 102380 . 102381) (symbol 102362 . 102379) (VOID 102357 . 102361) (EXTERN 102350 . 102356) (punctuation 102348 . 102349) (close-paren 102347 . 102348) (symbol 102338 . 102347) (punctuation 102336 . 102337) (punctuation 102335 . 102336) (CHAR 102330 . 102334) (UNSIGNED 102321 . 102329) (CONST 102315 . 102320) (open-paren 102314 . 102315) (symbol 102290 . 102313) (symbol 102280 . 102289) (EXTERN 102273 . 102279) (punctuation 102271 . 102272) (close-paren 102270 . 102271) (symbol 102261 . 102270) (punctuation 102259 . 102260) (punctuation 102258 . 102259) (CHAR 102253 . 102257) (UNSIGNED 102244 . 102252) (CONST 102238 . 102243) (open-paren 102237 . 102238) (symbol 102223 . 102236) (symbol 102213 . 102222) (EXTERN 102206 . 102212) (punctuation 102172 . 102173) (close-paren 102171 . 102172) (VOID 102167 . 102171) (open-paren 102166 . 102167) (symbol 102151 . 102165) (VOID 102146 . 102150) (EXTERN 102139 . 102145) (punctuation 102137 . 102138) (close-paren 102136 . 102137) (VOID 102132 . 102136) (open-paren 102131 . 102132) (symbol 102114 . 102130) (VOID 102109 . 102113) (EXTERN 102102 . 102108) (punctuation 102100 . 102101) (close-paren 102099 . 102100) (VOID 102095 . 102099) (open-paren 102094 . 102095) (symbol 102082 . 102093) (VOID 102077 . 102081) (EXTERN 102070 . 102076) (punctuation 102068 . 102069) (close-paren 102067 . 102068) (symbol 102056 . 102067) (punctuation 102054 . 102055) (BOOL 102050 . 102054) (punctuation 102048 . 102049) (BOOL 102044 . 102048) (punctuation 102042 . 102043) (symbol 102033 . 102042) (punctuation 101990 . 101991) (symbol 101981 . 101990) (punctuation 101979 . 101980) (punctuation 101978 . 101979) (CHAR 101973 . 101977) (UNSIGNED 101964 . 101972) (CONST 101958 . 101963) (open-paren 101957 . 101958) (symbol 101936 . 101956) (symbol 101924 . 101935) (EXTERN 101917 . 101923) (punctuation 101886 . 101887) (close-paren 101885 . 101886) (VOID 101881 . 101885) (open-paren 101880 . 101881) (symbol 101867 . 101879) (VOID 101862 . 101866) (EXTERN 101855 . 101861) (punctuation 101853 . 101854) (close-paren 101852 . 101853) (VOID 101848 . 101852) (open-paren 101847 . 101848) (symbol 101834 . 101846) (VOID 101829 . 101833) (EXTERN 101822 . 101828) (punctuation 101795 . 101796) (close-paren 101794 . 101795) (punctuation 101793 . 101794) (symbol 101781 . 101792) (STRUCT 101774 . 101780) (open-paren 101773 . 101774) (symbol 101750 . 101772) (VOID 101745 . 101749) (EXTERN 101738 . 101744) (punctuation 101736 . 101737) (close-paren 101735 . 101736) (VOID 101731 . 101735) (open-paren 101730 . 101731) (symbol 101717 . 101729) (VOID 101712 . 101716) (EXTERN 101705 . 101711) (punctuation 101702 . 101703) (close-paren 101701 . 101702) (symbol 101693 . 101701) (symbol 101675 . 101692) (ENUM 101670 . 101674) (punctuation 101634 . 101635) (symbol 101623 . 101634) (punctuation 101621 . 101622) (symbol 101610 . 101621) (open-paren 101609 . 101610) (symbol 101588 . 101608) (VOID 101583 . 101587) (EXTERN 101576 . 101582) (punctuation 101574 . 101575) (close-paren 101573 . 101574) (symbol 101556 . 101573) (ENUM 101551 . 101555) (punctuation 101523 . 101524) (symbol 101512 . 101523) (punctuation 101510 . 101511) (symbol 101499 . 101510) (punctuation 101497 . 101498) (symbol 101486 . 101497) (open-paren 101485 . 101486) (symbol 101472 . 101484) (VOID 101467 . 101471) (EXTERN 101460 . 101466) (punctuation 101458 . 101459) (close-paren 101457 . 101458) (symbol 101430 . 101456) (punctuation 101426 . 101427) (symbol 101407 . 101426) (punctuation 101403 . 101404) (symbol 101386 . 101403) (punctuation 101382 . 101383) (symbol 101366 . 101382) (open-paren 101362 . 101363) (symbol 101344 . 101361) (ENUM 101339 . 101343) (punctuation 101337 . 101338) (close-paren 101336 . 101337) (punctuation 101335 . 101336) (symbol 101326 . 101334) (UNION 101320 . 101325) (open-paren 101319 . 101320) (symbol 101298 . 101318) (symbol 101286 . 101297) (EXTERN 101279 . 101285) (punctuation 101277 . 101278) (close-paren 101276 . 101277) (symbol 101265 . 101276) (open-paren 101264 . 101265) (symbol 101250 . 101263) (VOID 101245 . 101249) (EXTERN 101228 . 101234) (punctuation 101226 . 101227) (close-paren 101225 . 101226) (symbol 101214 . 101225) (punctuation 101204 . 101205) (symbol 101193 . 101204) (punctuation 101191 . 101192) (symbol 101180 . 101191) (open-paren 101179 . 101180) (symbol 101159 . 101178) (VOID 101154 . 101158) (EXTERN 101137 . 101143) (punctuation 101135 . 101136) (close-paren 101134 . 101135) (symbol 101123 . 101134) (punctuation 101121 . 101122) (symbol 101110 . 101121) (open-paren 101109 . 101110) (symbol 101091 . 101108) (VOID 101086 . 101090) (EXTERN 101069 . 101075) (punctuation 101067 . 101068) (close-paren 101066 . 101067) (punctuation 101065 . 101066) (symbol 101053 . 101064) (STRUCT 101046 . 101052) (open-paren 101045 . 101046) (symbol 101027 . 101044) (punctuation 101026 . 101027) (symbol 101014 . 101025) (STRUCT 101007 . 101013) (EXTERN 101000 . 101006) (punctuation 100997 . 100998) (close-paren 100996 . 100997) (symbol 100987 . 100996) (punctuation 100985 . 100986) (symbol 100974 . 100985) (open-paren 100973 . 100974) (symbol 100956 . 100972) (symbol 100946 . 100955) (EXTERN 100939 . 100945) (punctuation 100937 . 100938) (close-paren 100936 . 100937) (symbol 100928 . 100936) (punctuation 100926 . 100927) (symbol 100918 . 100926) (punctuation 100916 . 100917) (symbol 100905 . 100916) (open-paren 100904 . 100905) (symbol 100889 . 100903) (symbol 100880 . 100888) (EXTERN 100873 . 100879) (punctuation 100450 . 100451) (close-paren 100449 . 100450) (symbol 100440 . 100449) (open-paren 100439 . 100440) (symbol 100423 . 100438) (symbol 100411 . 100422) (EXTERN 100404 . 100410) (punctuation 100402 . 100403) (close-paren 100401 . 100402) (symbol 100393 . 100401) (open-paren 100392 . 100393) (symbol 100377 . 100391) (symbol 100365 . 100376) (EXTERN 100358 . 100364) (punctuation 99996 . 99997) (close-paren 99995 . 99996) (symbol 99985 . 99995) (symbol 99968 . 99984) (ENUM 99963 . 99967) (punctuation 99928 . 99929) (symbol 99924 . 99928) (symbol 99912 . 99923) (punctuation 99910 . 99911) (symbol 99906 . 99910) (symbol 99894 . 99905) (open-paren 99893 . 99894) (symbol 99880 . 99892) (symbol 99868 . 99879) (EXTERN 99861 . 99867) (punctuation 99859 . 99860) (close-paren 99858 . 99859) (symbol 99838 . 99857) (punctuation 99834 . 99835) (symbol 99815 . 99834) (punctuation 99811 . 99812) (symbol 99801 . 99811) (punctuation 99797 . 99798) (symbol 99787 . 99797) (punctuation 99783 . 99784) (symbol 99769 . 99783) (punctuation 99765 . 99766) (symbol 99754 . 99765) (open-paren 99750 . 99751) (symbol 99733 . 99749) (ENUM 99728 . 99732) (punctuation 99726 . 99727) (close-paren 99725 . 99726) (symbol 99714 . 99725) (open-paren 99713 . 99714) (symbol 99695 . 99712) (symbol 99683 . 99694) (EXTERN 99676 . 99682) (punctuation 99674 . 99675) (close-paren 99673 . 99674) (symbol 99662 . 99673) (open-paren 99661 . 99662) (symbol 99643 . 99660) (symbol 99631 . 99642) (EXTERN 99624 . 99630) (punctuation 99622 . 99623) (close-paren 99621 . 99622) (symbol 99610 . 99621) (punctuation 99608 . 99609) (symbol 99597 . 99608) (punctuation 99585 . 99586) (symbol 99574 . 99585) (punctuation 99572 . 99573) (symbol 99561 . 99572) (open-paren 99560 . 99561) (symbol 99535 . 99559) (VOID 99530 . 99534) (EXTERN 99523 . 99529) (punctuation 99521 . 99522) (close-paren 99520 . 99521) (symbol 99509 . 99520) (punctuation 99507 . 99508) (symbol 99496 . 99507) (open-paren 99495 . 99496) (symbol 99482 . 99494) (VOID 99477 . 99481) (EXTERN 99460 . 99466) (close-paren 99431 . 99432) (punctuation 99409 . 99410) (punctuation 99408 . 99409) (semantic-list 99401 . 99408) (symbol 99385 . 99400) (open-paren 99381 . 99382) (close-paren 99379 . 99380) (symbol 99376 . 99379) (symbol 99364 . 99375) (punctuation 99362 . 99363) (symbol 99359 . 99362) (symbol 99349 . 99358) (punctuation 99347 . 99348) (symbol 99342 . 99347) (symbol 99330 . 99341) (open-paren 99329 . 99330) (symbol 99301 . 99328) (VOID 99296 . 99300) (symbol 99289 . 99295) (close-paren 99286 . 99287) (punctuation 99264 . 99265) (punctuation 99263 . 99264) (semantic-list 99256 . 99263) (symbol 99244 . 99255) (punctuation 99240 . 99241) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 99195 . 99196)))) 99186 . 99240) (open-paren 99182 . 99183) (close-paren 99180 . 99181) (symbol 99177 . 99180) (symbol 99165 . 99176) (punctuation 99163 . 99164) (symbol 99160 . 99163) (symbol 99150 . 99159) (punctuation 99148 . 99149) (symbol 99143 . 99148) (symbol 99131 . 99142) (open-paren 99130 . 99131) (symbol 99106 . 99129) (VOID 99101 . 99105) (symbol 99094 . 99100) (close-paren 99091 . 99092) (punctuation 99071 . 99072) (punctuation 99070 . 99071) (semantic-list 99063 . 99070) (symbol 99051 . 99062) (punctuation 99047 . 99048) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 98984 . 98985)))) 98975 . 99047) (open-paren 98971 . 98972) (close-paren 98969 . 98970) (symbol 98966 . 98969) (symbol 98954 . 98965) (punctuation 98952 . 98953) (symbol 98949 . 98952) (symbol 98939 . 98948) (punctuation 98937 . 98938) (symbol 98932 . 98937) (symbol 98920 . 98931) (open-paren 98919 . 98920) (symbol 98897 . 98918) (VOID 98892 . 98896) (symbol 98885 . 98891) (close-paren 98828 . 98829) (punctuation 98812 . 98813) (punctuation 98811 . 98812) (semantic-list 98804 . 98811) (symbol 98792 . 98803) (open-paren 98788 . 98789) (close-paren 98786 . 98787) (symbol 98783 . 98786) (symbol 98771 . 98782) (punctuation 98769 . 98770) (symbol 98764 . 98769) (symbol 98752 . 98763) (open-paren 98751 . 98752) (symbol 98728 . 98750) (VOID 98723 . 98727) (symbol 98716 . 98722) (close-paren 98714 . 98715) (punctuation 98699 . 98700) (punctuation 98698 . 98699) (semantic-list 98691 . 98698) (symbol 98679 . 98690) (open-paren 98675 . 98676) (close-paren 98673 . 98674) (symbol 98670 . 98673) (symbol 98658 . 98669) (punctuation 98656 . 98657) (symbol 98651 . 98656) (symbol 98639 . 98650) (open-paren 98638 . 98639) (symbol 98616 . 98637) (VOID 98611 . 98615) (symbol 98604 . 98610) (close-paren 98495 . 98496) (punctuation 98479 . 98480) (symbol 98478 . 98479) (punctuation 98477 . 98478) (symbol 98476 . 98477) (punctuation 98475 . 98476) (punctuation 98474 . 98475) (semantic-list 98471 . 98474) (symbol 98463 . 98470) (open-paren 98459 . 98460) (close-paren 98457 . 98458) (symbol 98456 . 98457) (symbol 98447 . 98455) (punctuation 98445 . 98446) (symbol 98444 . 98445) (symbol 98432 . 98443) (open-paren 98431 . 98432) (symbol 98410 . 98430) (VOID 98405 . 98409) (symbol 98398 . 98404) (close-paren 98356 . 98357) (punctuation 98344 . 98345) (symbol 98343 . 98344) (punctuation 98342 . 98343) (symbol 98341 . 98342) (punctuation 98340 . 98341) (punctuation 98339 . 98340) (semantic-list 98336 . 98339) (symbol 98328 . 98335) (RETURN 98321 . 98327) (open-paren 98317 . 98318) (close-paren 98315 . 98316) (symbol 98314 . 98315) (symbol 98302 . 98313) (open-paren 98301 . 98302) (symbol 98284 . 98300) (symbol 98275 . 98283) (symbol 98268 . 98274) (close-paren 98231 . 98232) (punctuation 98215 . 98216) (punctuation 98214 . 98215) (semantic-list 98205 . 98214) (symbol 98196 . 98204) (open-paren 98192 . 98193) (close-paren 98190 . 98191) (symbol 98185 . 98190) (symbol 98173 . 98184) (punctuation 98171 . 98172) (symbol 98164 . 98171) (symbol 98152 . 98163) (open-paren 98151 . 98152) (symbol 98133 . 98150) (VOID 98128 . 98132) (symbol 98121 . 98127) (close-paren 98081 . 98082) (punctuation 98073 . 98074) (punctuation 98072 . 98073) (symbol 98069 . 98072) (RETURN 98062 . 98068) (punctuation 98058 . 98059) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "blv" 98011 . 98014)))) 98002 . 98058) (open-paren 97998 . 97999) (close-paren 97996 . 97997) (symbol 97993 . 97996) (punctuation 97992 . 97993) (symbol 97968 . 97991) (STRUCT 97961 . 97967) (open-paren 97960 . 97961) (symbol 97950 . 97959) (INT 97946 . 97949) (symbol 97939 . 97945) (close-paren 97888 . 97889) (punctuation 97855 . 97856) (symbol 97854 . 97855) (punctuation 97853 . 97854) (symbol 97852 . 97853) (punctuation 97851 . 97852) (punctuation 97850 . 97851) (semantic-list 97845 . 97850) (symbol 97837 . 97844) (open-paren 97833 . 97834) (close-paren 97831 . 97832) (symbol 97828 . 97831) (symbol 97816 . 97827) (open-paren 97815 . 97816) (symbol 97794 . 97814) (VOID 97789 . 97793) (symbol 97782 . 97788) (close-paren 97779 . 97780) (punctuation 97765 . 97766) (symbol 97764 . 97765) (punctuation 97763 . 97764) (symbol 97762 . 97763) (punctuation 97761 . 97762) (punctuation 97760 . 97761) (semantic-list 97755 . 97760) (symbol 97747 . 97754) (open-paren 97743 . 97744) (close-paren 97741 . 97742) (symbol 97737 . 97741) (punctuation 97736 . 97737) (symbol 97724 . 97735) (STRUCT 97717 . 97723) (punctuation 97715 . 97716) (symbol 97712 . 97715) (symbol 97700 . 97711) (open-paren 97699 . 97700) (symbol 97683 . 97698) (VOID 97678 . 97682) (symbol 97671 . 97677) (close-paren 97668 . 97669) (punctuation 97652 . 97653) (symbol 97651 . 97652) (punctuation 97650 . 97651) (symbol 97649 . 97650) (punctuation 97648 . 97649) (punctuation 97647 . 97648) (semantic-list 97642 . 97647) (symbol 97634 . 97641) (open-paren 97630 . 97631) (close-paren 97628 . 97629) (symbol 97623 . 97628) (symbol 97611 . 97622) (punctuation 97609 . 97610) (symbol 97606 . 97609) (symbol 97594 . 97605) (open-paren 97593 . 97594) (symbol 97576 . 97592) (VOID 97571 . 97575) (symbol 97564 . 97570) (close-paren 97561 . 97562) (punctuation 97539 . 97540) (symbol 97538 . 97539) (punctuation 97537 . 97538) (symbol 97536 . 97537) (punctuation 97535 . 97536) (punctuation 97534 . 97535) (semantic-list 97529 . 97534) (symbol 97521 . 97528) (open-paren 97517 . 97518) (close-paren 97515 . 97516) (symbol 97507 . 97515) (symbol 97495 . 97506) (punctuation 97493 . 97494) (symbol 97490 . 97493) (symbol 97478 . 97489) (open-paren 97477 . 97478) (symbol 97457 . 97476) (VOID 97452 . 97456) (symbol 97445 . 97451) (close-paren 97352 . 97353) (number 97343 . 97344) (punctuation 97341 . 97342) (punctuation 97335 . 97336) (number 97333 . 97334) (punctuation 97317 . 97318) (punctuation 97316 . 97317) (open-paren 97302 . 97303) (close-paren 97300 . 97301) (symbol 97297 . 97300) (symbol 97285 . 97296) (punctuation 97283 . 97284) (symbol 97280 . 97283) (symbol 97270 . 97279) (punctuation 97268 . 97269) (symbol 97267 . 97268) (punctuation 97266 . 97267) (symbol 97250 . 97265) (STRUCT 97243 . 97249) (open-paren 97242 . 97243) (symbol 97222 . 97241) (VOID 97217 . 97221) (symbol 97210 . 97216) (close-paren 97207 . 97208) (punctuation 97194 . 97195) (number 97192 . 97193) (punctuation 97176 . 97177) (punctuation 97175 . 97176) (open-paren 97161 . 97162) (close-paren 97159 . 97160) (symbol 97156 . 97159) (symbol 97144 . 97155) (punctuation 97142 . 97143) (symbol 97139 . 97142) (symbol 97129 . 97138) (punctuation 97127 . 97128) (symbol 97126 . 97127) (punctuation 97125 . 97126) (symbol 97109 . 97124) (STRUCT 97102 . 97108) (open-paren 97101 . 97102) (symbol 97083 . 97100) (VOID 97078 . 97082) (symbol 97071 . 97077) (close-paren 97027 . 97028) (punctuation 97019 . 97020) (SIZEOF 97012 . 97018) (punctuation 96988 . 96989) (punctuation 96978 . 96979) (punctuation 96977 . 96978) (semantic-list 96974 . 96977) (punctuation 96954 . 96955) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 96897 . 96898)))) 96888 . 96954) (open-paren 96884 . 96885) (close-paren 96882 . 96883) (symbol 96877 . 96882) (symbol 96867 . 96876) (punctuation 96865 . 96866) (symbol 96861 . 96865) (punctuation 96860 . 96861) (symbol 96848 . 96859) (punctuation 96846 . 96847) (symbol 96840 . 96846) (symbol 96830 . 96839) (punctuation 96828 . 96829) (symbol 96827 . 96828) (symbol 96815 . 96826) (open-paren 96814 . 96815) (symbol 96808 . 96813) (VOID 96803 . 96807) (symbol 96796 . 96802) (punctuation 96637 . 96638) (close-paren 96636 . 96637) (punctuation 96635 . 96636) (symbol 96623 . 96634) (open-paren 96622 . 96623) (symbol 96612 . 96621) (VOID 96607 . 96611) (close-paren 96456 . 96457) (semantic-list 96427 . 96436) (IF 96424 . 96426) (open-paren 96420 . 96421) (close-paren 96418 . 96419) (symbol 96413 . 96418) (INT 96409 . 96412) (SHORT 96403 . 96408) (UNSIGNED 96394 . 96402) (open-paren 96393 . 96394) (symbol 96381 . 96392) (VOID 96376 . 96380) (symbol 96369 . 96375) (punctuation 96104 . 96105) (close-paren 96103 . 96104) (VOID 96099 . 96103) (open-paren 96098 . 96099) (symbol 96087 . 96097) (VOID 96082 . 96086) (EXTERN 96075 . 96081) (punctuation 96032 . 96033) (close-paren 96031 . 96032) (open-paren 95256 . 95257) (symbol 95248 . 95255) (STRUCT 95241 . 95247) (punctuation 95238 . 95239) (close-paren 95237 . 95238) (symbol 95225 . 95236) (punctuation 95223 . 95224) (symbol 95209 . 95223) (punctuation 95207 . 95208) (symbol 95200 . 95207) (open-paren 95198 . 95199) (symbol 95186 . 95197) (ENUM 95181 . 95185) (close-paren 94053 . 94054) (punctuation 94042 . 94043) (symbol 94030 . 94041) (RETURN 94023 . 94029) (open-paren 94019 . 94020) (close-paren 94017 . 94018) (VOID 94013 . 94017) (open-paren 94012 . 94013) (symbol 93998 . 94011) (symbol 93988 . 93997) (symbol 93981 . 93987) (punctuation 93804 . 93805) (close-paren 93803 . 93804) (punctuation 93670 . 93671) (symbol 93665 . 93669) (symbol "specbind_tag" 93642 . 93664) (ENUM "enum" 93642 . 93664) (punctuation 93670 . 93671) (symbol 93665 . 93669) (symbol "specbind_tag" 93642 . 93664) (ENUM "enum" 93642 . 93664) (punctuation 93350 . 93351) (symbol 93345 . 93349) (symbol "specbind_tag" 93322 . 93344) (ENUM "enum" 93322 . 93344) (punctuation 93350 . 93351) (symbol 93345 . 93349) (symbol "specbind_tag" 93322 . 93344) (ENUM "enum" 93322 . 93344) (punctuation 93245 . 93246) (symbol 93240 . 93244) (symbol "specbind_tag" 93217 . 93239) (ENUM "enum" 93217 . 93239) (punctuation 93245 . 93246) (symbol 93240 . 93244) (symbol "specbind_tag" 93217 . 93239) (ENUM "enum" 93217 . 93239) (punctuation 93128 . 93129) (symbol 93123 . 93127) (symbol "specbind_tag" 93100 . 93122) (ENUM "enum" 93100 . 93122) (punctuation 93128 . 93129) (symbol 93123 . 93127) (symbol "specbind_tag" 93100 . 93122) (ENUM "enum" 93100 . 93122) (punctuation 93010 . 93011) (symbol 93005 . 93009) (symbol "specbind_tag" 92982 . 93004) (ENUM "enum" 92982 . 93004) (punctuation 93010 . 93011) (symbol 93005 . 93009) (symbol "specbind_tag" 92982 . 93004) (ENUM "enum" 92982 . 93004) (punctuation 92887 . 92888) (symbol 92882 . 92886) (symbol "specbind_tag" 92859 . 92881) (ENUM "enum" 92859 . 92881) (punctuation 92887 . 92888) (symbol 92882 . 92886) (symbol "specbind_tag" 92859 . 92881) (ENUM "enum" 92859 . 92881) (punctuation 92759 . 92760) (symbol 92754 . 92758) (symbol "specbind_tag" 92731 . 92753) (ENUM "enum" 92731 . 92753) (punctuation 92759 . 92760) (symbol 92754 . 92758) (symbol "specbind_tag" 92731 . 92753) (ENUM "enum" 92731 . 92753) (punctuation 92629 . 92630) (symbol 92624 . 92628) (symbol "specbind_tag" 92601 . 92623) (ENUM "enum" 92601 . 92623) (punctuation 92629 . 92630) (symbol 92624 . 92628) (symbol "specbind_tag" 92601 . 92623) (ENUM "enum" 92601 . 92623) (punctuation 92570 . 92571) (symbol 92565 . 92569) (symbol "specbind_tag" 92542 . 92564) (ENUM "enum" 92542 . 92564) (open-paren 92433 . 92434) (symbol 92419 . 92430) (UNION 92413 . 92418) (punctuation 92410 . 92411) (close-paren 92409 . 92410) (symbol 92343 . 92362) (punctuation 92303 . 92304) (symbol 92286 . 92303) (punctuation 92167 . 92168) (symbol 92156 . 92167) (punctuation 92115 . 92116) (symbol 92098 . 92115) (punctuation 92063 . 92064) (symbol 92044 . 92063) (punctuation 92005 . 92006) (symbol 91981 . 92005) (punctuation 91951 . 91952) (symbol 91933 . 91951) (punctuation 91900 . 91901) (symbol 91882 . 91900) (punctuation 91780 . 91781) (symbol 91760 . 91780) (punctuation 91705 . 91706) (symbol 91691 . 91705) (open-paren 91687 . 91688) (symbol 91674 . 91686) (ENUM 91669 . 91673) (punctuation 89101 . 89102) (close-paren 89100 . 89101) (INT 89097 . 89100) (punctuation 89095 . 89096) (punctuation 89094 . 89095) (CHAR 89089 . 89093) (CONST 89083 . 89088) (punctuation 89081 . 89082) (punctuation 89080 . 89081) (symbol 89061 . 89079) (STRUCT 89054 . 89060) (open-paren 89053 . 89054) (symbol 89039 . 89052) (VOID 89034 . 89038) (EXTERN 89027 . 89033) (punctuation 89025 . 89026) (close-paren 89024 . 89025) (punctuation 89023 . 89024) (symbol 89013 . 89022) (punctuation 89011 . 89012) (punctuation 89010 . 89011) (CHAR 89005 . 89009) (CONST 88999 . 89004) (punctuation 88997 . 88998) (punctuation 88996 . 88997) (symbol 88984 . 88995) (STRUCT 88977 . 88983) (open-paren 88976 . 88977) (symbol 88965 . 88975) (VOID 88960 . 88964) (EXTERN 88953 . 88959) (punctuation 88951 . 88952) (close-paren 88950 . 88951) (punctuation 88949 . 88950) (BOOL 88944 . 88948) (punctuation 88942 . 88943) (punctuation 88941 . 88942) (CHAR 88936 . 88940) (CONST 88930 . 88935) (punctuation 88928 . 88929) (punctuation 88927 . 88928) (symbol 88914 . 88926) (STRUCT 88907 . 88913) (open-paren 88906 . 88907) (symbol 88894 . 88905) (VOID 88889 . 88893) (EXTERN 88882 . 88888) (punctuation 88880 . 88881) (close-paren 88879 . 88880) (punctuation 88878 . 88879) (symbol 88866 . 88877) (punctuation 88864 . 88865) (punctuation 88863 . 88864) (CHAR 88858 . 88862) (CONST 88852 . 88857) (punctuation 88850 . 88851) (punctuation 88849 . 88850) (symbol 88837 . 88848) (STRUCT 88830 . 88836) (open-paren 88829 . 88830) (symbol 88811 . 88828) (VOID 88806 . 88810) (EXTERN 88799 . 88805) (punctuation 88797 . 88798) (close-paren 88796 . 88797) (punctuation 88795 . 88796) (symbol 88783 . 88794) (punctuation 88781 . 88782) (punctuation 88780 . 88781) (CHAR 88775 . 88779) (CONST 88769 . 88774) (punctuation 88767 . 88768) (punctuation 88766 . 88767) (symbol 88754 . 88765) (STRUCT 88747 . 88753) (open-paren 88746 . 88747) (symbol 88734 . 88745) (VOID 88729 . 88733) (EXTERN 88722 . 88728) (punctuation 88218 . 88219) (close-paren 88217 . 88218) (number 88213 . 88214) (punctuation 88212 . 88213) (punctuation 88210 . 88211) (symbol 88200 . 88209) (punctuation 88194 . 88195) (number 88193 . 88194) (punctuation 88192 . 88193) (punctuation 88190 . 88191) (symbol 88185 . 88189) (open-paren 88179 . 88180) (symbol 88169 . 88176) (ENUM 88164 . 88168) (punctuation 88161 . 88162) (close-paren 88160 . 88161) (punctuation 88159 . 88160) (symbol 88149 . 88158) (STRUCT 88142 . 88148) (open-paren 88141 . 88142) (symbol 88133 . 88140) (VOID 88128 . 88132) (EXTERN 88121 . 88127) (close-paren 86279 . 86280) (open-paren 86205 . 86206) (close-paren 86203 . 86204) (symbol 86202 . 86203) (symbol 86190 . 86201) (open-paren 86189 . 86190) (symbol 86172 . 86188) (VOID 86167 . 86171) (symbol 86160 . 86166) (close-paren 86157 . 86158) (open-paren 86083 . 86084) (close-paren 86081 . 86082) (symbol 86080 . 86081) (symbol 86068 . 86079) (open-paren 86067 . 86068) (symbol 86050 . 86066) (VOID 86045 . 86049) (symbol 86038 . 86044) (close-paren 85170 . 85171) (semantic-list 85151 . 85154) (open-paren 85126 . 85127) (close-paren 85124 . 85125) (symbol 85123 . 85124) (symbol 85111 . 85122) (open-paren 85110 . 85111) (symbol 85096 . 85109) (VOID 85091 . 85095) (symbol 85084 . 85090) (close-paren 85081 . 85082) (semantic-list 85062 . 85065) (open-paren 85038 . 85039) (close-paren 85036 . 85037) (symbol 85035 . 85036) (symbol 85023 . 85034) (open-paren 85022 . 85023) (symbol 85009 . 85021) (VOID 85004 . 85008) (symbol 84997 . 85003) (close-paren 84994 . 84995) (semantic-list 84975 . 84978) (open-paren 84943 . 84944) (close-paren 84941 . 84942) (symbol 84940 . 84941) (symbol 84928 . 84939) (open-paren 84927 . 84928) (symbol 84905 . 84926) (VOID 84900 . 84904) (symbol 84893 . 84899) (close-paren 84890 . 84891) (punctuation 84875 . 84876) (semantic-list 84871 . 84874) (symbol 84859 . 84870) (punctuation 84857 . 84858) (semantic-list 84853 . 84856) (symbol 84846 . 84852) (RETURN 84839 . 84845) (punctuation 84828 . 84829) (punctuation 84827 . 84828) (semantic-list 84824 . 84827) (RETURN 84798 . 84804) (semantic-list 84780 . 84793) (IF 84777 . 84779) (open-paren 84773 . 84774) (close-paren 84771 . 84772) (symbol 84770 . 84771) (symbol 84758 . 84769) (open-paren 84757 . 84758) (symbol 84747 . 84756) (DOUBLE 84740 . 84746) (symbol 84733 . 84739) (close-paren 83833 . 83834) (semantic-list 83812 . 83815) (open-paren 83788 . 83789) (close-paren 83786 . 83787) (symbol 83785 . 83786) (symbol 83773 . 83784) (open-paren 83772 . 83773) (symbol 83759 . 83771) (VOID 83754 . 83758) (symbol 83747 . 83753) (close-paren 83745 . 83746) (semantic-list 83725 . 83728) (open-paren 83702 . 83703) (close-paren 83700 . 83701) (symbol 83691 . 83700) (symbol 83679 . 83690) (punctuation 83677 . 83678) (symbol 83676 . 83677) (symbol 83664 . 83675) (open-paren 83663 . 83664) (symbol 83651 . 83662) (VOID 83646 . 83650) (symbol 83639 . 83645) (close-paren 83637 . 83638) (RETURN 83582 . 83588) (semantic-list 83564 . 83577) (IF 83561 . 83563) (RETURN 83541 . 83547) (semantic-list 83523 . 83536) (IF 83520 . 83522) (open-paren 83516 . 83517) (close-paren 83514 . 83515) (symbol 83513 . 83514) (symbol 83501 . 83512) (open-paren 83500 . 83501) (symbol 83477 . 83499) (symbol 83467 . 83476) (symbol 83460 . 83466) (close-paren 83389 . 83390) (semantic-list 83383 . 83386) (semantic-list 83356 . 83366) (open-paren 83332 . 83333) (close-paren 83330 . 83331) (symbol 83329 . 83330) (symbol 83317 . 83328) (open-paren 83316 . 83317) (symbol 83299 . 83315) (VOID 83294 . 83298) (symbol 83287 . 83293) (close-paren 83284 . 83285) (open-paren 83255 . 83256) (close-paren 83253 . 83254) (symbol 83252 . 83253) (symbol 83240 . 83251) (open-paren 83239 . 83240) (close-paren 83237 . 83238) (symbol 83225 . 83237) (open-paren 83224 . 83225) (VOID 83219 . 83223) (symbol 83212 . 83218) (close-paren 83209 . 83210) (semantic-list 83192 . 83195) (open-paren 83171 . 83172) (close-paren 83169 . 83170) (symbol 83168 . 83169) (symbol 83156 . 83167) (punctuation 83154 . 83155) (symbol 83153 . 83154) (symbol 83141 . 83152) (open-paren 83140 . 83141) (symbol 83125 . 83139) (VOID 83120 . 83124) (symbol 83113 . 83119) (close-paren 83110 . 83111) (semantic-list 83093 . 83096) (punctuation 83086 . 83087) (punctuation 83085 . 83086) (semantic-list 83081 . 83084) (open-paren 83059 . 83060) (close-paren 83057 . 83058) (symbol 83056 . 83057) (symbol 83044 . 83055) (open-paren 83043 . 83044) (symbol 83032 . 83042) (VOID 83027 . 83031) (symbol 83020 . 83026) (close-paren 83016 . 83017) (punctuation 82995 . 82996) (punctuation 82994 . 82995) (semantic-list 82990 . 82993) (symbol 82977 . 82989) (punctuation 82975 . 82976) (punctuation 82974 . 82975) (semantic-list 82970 . 82973) (symbol 82962 . 82969) (punctuation 82960 . 82961) (punctuation 82959 . 82960) (semantic-list 82955 . 82958) (symbol 82947 . 82954) (RETURN 82940 . 82946) (open-paren 82936 . 82937) (close-paren 82934 . 82935) (symbol 82933 . 82934) (symbol 82921 . 82932) (open-paren 82920 . 82921) (symbol 82913 . 82919) (BOOL 82908 . 82912) (symbol 82901 . 82907) (close-paren 82878 . 82879) (punctuation 82852 . 82853) (semantic-list 82848 . 82851) (symbol 82842 . 82847) (RETURN 82835 . 82841) (open-paren 82831 . 82832) (close-paren 82829 . 82830) (symbol 82828 . 82829) (symbol 82816 . 82827) (open-paren 82815 . 82816) (symbol 82808 . 82814) (BOOL 82803 . 82807) (symbol 82796 . 82802) (close-paren 82756 . 82757) (semantic-list 82737 . 82740) (open-paren 82713 . 82714) (close-paren 82711 . 82712) (symbol 82710 . 82711) (symbol 82698 . 82709) (open-paren 82697 . 82698) (symbol 82684 . 82696) (VOID 82679 . 82683) (symbol 82672 . 82678) (close-paren 82669 . 82670) (RETURN 82630 . 82636) (open-paren 82626 . 82627) (close-paren 82624 . 82625) (symbol 82623 . 82624) (symbol 82611 . 82622) (open-paren 82610 . 82611) (symbol 82602 . 82609) (BOOL 82597 . 82601) (symbol 82590 . 82596) (close-paren 82587 . 82588) (RETURN 82549 . 82555) (open-paren 82545 . 82546) (close-paren 82543 . 82544) (symbol 82542 . 82543) (symbol 82530 . 82541) (open-paren 82529 . 82530) (symbol 82522 . 82528) (BOOL 82517 . 82521) (symbol 82510 . 82516) (close-paren 82507 . 82508) (RETURN 82466 . 82472) (open-paren 82462 . 82463) (close-paren 82460 . 82461) (symbol 82459 . 82460) (symbol 82447 . 82458) (open-paren 82446 . 82447) (symbol 82436 . 82445) (BOOL 82431 . 82435) (symbol 82424 . 82430) (close-paren 82421 . 82422) (RETURN 82368 . 82374) (open-paren 82364 . 82365) (close-paren 82362 . 82363) (symbol 82361 . 82362) (symbol 82349 . 82360) (open-paren 82348 . 82349) (symbol 82326 . 82347) (BOOL 82321 . 82325) (symbol 82314 . 82320) (close-paren 82264 . 82265) (punctuation 82235 . 82236) (semantic-list 82231 . 82234) (symbol 82225 . 82230) (RETURN 82218 . 82224) (open-paren 82214 . 82215) (close-paren 82212 . 82213) (symbol 82211 . 82212) (symbol 82199 . 82210) (open-paren 82198 . 82199) (symbol 82188 . 82197) (BOOL 82183 . 82187) (symbol 82176 . 82182) (close-paren 81981 . 81982) (punctuation 81975 . 81976) (punctuation 81974 . 81975) (semantic-list 81970 . 81973) (symbol 81962 . 81969) (punctuation 81960 . 81961) (punctuation 81959 . 81960) (semantic-list 81955 . 81958) (symbol 81947 . 81954) (punctuation 81945 . 81946) (punctuation 81944 . 81945) (symbol 81941 . 81943) (punctuation 81939 . 81940) (punctuation 81938 . 81939) (semantic-list 81934 . 81937) (symbol 81926 . 81933) (RETURN 81919 . 81925) (open-paren 81915 . 81916) (close-paren 81913 . 81914) (symbol 81911 . 81913) (symbol 81902 . 81910) (punctuation 81900 . 81901) (symbol 81899 . 81900) (symbol 81887 . 81898) (punctuation 81885 . 81886) (symbol 81883 . 81885) (symbol 81874 . 81882) (open-paren 81873 . 81874) (symbol 81858 . 81872) (BOOL 81853 . 81857) (symbol 81846 . 81852) (close-paren 81843 . 81844) (punctuation 81829 . 81830) (punctuation 81828 . 81829) (semantic-list 81824 . 81827) (symbol 81815 . 81823) (RETURN 81808 . 81814) (open-paren 81804 . 81805) (close-paren 81802 . 81803) (symbol 81801 . 81802) (symbol 81789 . 81800) (open-paren 81788 . 81789) (symbol 81780 . 81787) (BOOL 81775 . 81779) (symbol 81768 . 81774) (close-paren 81766 . 81767) (punctuation 81751 . 81752) (punctuation 81750 . 81751) (number 81748 . 81749) (punctuation 81746 . 81747) (punctuation 81745 . 81746) (semantic-list 81741 . 81744) (symbol 81733 . 81740) (RETURN 81726 . 81732) (punctuation 81722 . 81723) (number 81721 . 81722) (punctuation 81719 . 81720) (punctuation 81718 . 81719) (semantic-list 81697 . 81717) (symbol 81689 . 81696) (punctuation 81710 . 81711) (punctuation 81709 . 81710) (semantic-list 81706 . 81709) (RETURN 81682 . 81688) (semantic-list 81664 . 81677) (IF 81661 . 81663) (open-paren 81657 . 81658) (close-paren 81655 . 81656) (symbol 81654 . 81655) (symbol 81642 . 81653) (open-paren 81641 . 81642) (symbol 81633 . 81640) (BOOL 81628 . 81632) (symbol 81621 . 81627) (close-paren 81619 . 81620) (punctuation 81604 . 81605) (punctuation 81603 . 81604) (number 81601 . 81602) (punctuation 81599 . 81600) (punctuation 81598 . 81599) (semantic-list 81594 . 81597) (symbol 81586 . 81593) (RETURN 81579 . 81585) (open-paren 81575 . 81576) (close-paren 81573 . 81574) (symbol 81572 . 81573) (symbol 81560 . 81571) (open-paren 81559 . 81560) (symbol 81551 . 81558) (BOOL 81546 . 81550) (symbol 81539 . 81545) (close-paren 81537 . 81538) (punctuation 81523 . 81524) (punctuation 81522 . 81523) (semantic-list 81518 . 81521) (symbol 81510 . 81517) (RETURN 81503 . 81509) (open-paren 81499 . 81500) (close-paren 81497 . 81498) (symbol 81496 . 81497) (symbol 81484 . 81495) (open-paren 81483 . 81484) (symbol 81467 . 81482) (BOOL 81462 . 81466) (symbol 81455 . 81461) (punctuation 81423 . 81424) (close-paren 81422 . 81423) (number 81417 . 81419) (punctuation 81415 . 81416) (symbol 81401 . 81414) (punctuation 81303 . 81304) (symbol 81294 . 81303) (punctuation 81292 . 81293) (symbol 81283 . 81291) (punctuation 81281 . 81282) (symbol 81270 . 81280) (punctuation 81268 . 81269) (symbol 81257 . 81267) (punctuation 81255 . 81256) (symbol 81244 . 81254) (punctuation 81242 . 81243) (symbol 81233 . 81241) (punctuation 81225 . 81226) (symbol 81206 . 81224) (punctuation 81199 . 81200) (number 81190 . 81199) (punctuation 81188 . 81189) (symbol 81178 . 81187) (punctuation 81172 . 81173) (number 81163 . 81172) (punctuation 81161 . 81162) (symbol 81152 . 81160) (punctuation 81146 . 81147) (number 81137 . 81146) (punctuation 81135 . 81136) (symbol 81124 . 81134) (punctuation 81118 . 81119) (number 81109 . 81118) (punctuation 81107 . 81108) (symbol 81096 . 81106) (punctuation 81090 . 81091) (number 81081 . 81090) (punctuation 81079 . 81080) (symbol 81068 . 81078) (punctuation 81062 . 81063) (number 81053 . 81062) (punctuation 81051 . 81052) (symbol 81042 . 81050) (open-paren 81036 . 81037) (symbol 81024 . 81033) (ENUM 81019 . 81023) (punctuation 80749 . 80750) (close-paren 80748 . 80749) (number 80744 . 80745) (punctuation 80742 . 80743) (symbol 80721 . 80741) (punctuation 80715 . 80716) (number 80714 . 80715) (punctuation 80712 . 80713) (symbol 80692 . 80711) (punctuation 80686 . 80687) (number 80685 . 80686) (punctuation 80683 . 80684) (symbol 80662 . 80682) (punctuation 80656 . 80657) (number 80655 . 80656) (punctuation 80653 . 80654) (symbol 80634 . 80652) (punctuation 80628 . 80629) (number 80627 . 80628) (punctuation 80625 . 80626) (symbol 80607 . 80624) (punctuation 80601 . 80602) (number 80600 . 80601) (punctuation 80598 . 80599) (symbol 80581 . 80597) (open-paren 80575 . 80576) (symbol 80559 . 80572) (ENUM 80554 . 80558) (close-paren 79685 . 79686) (punctuation 79678 . 79679) (symbol 79677 . 79678) (punctuation 79676 . 79677) (punctuation 79675 . 79676) (semantic-list 79672 . 79675) (symbol 79665 . 79671) (RETURN 79658 . 79664) (open-paren 79654 . 79655) (close-paren 79652 . 79653) (symbol 79651 . 79652) (symbol 79639 . 79650) (open-paren 79638 . 79639) (symbol 79626 . 79637) (DOUBLE 79619 . 79625) (symbol 79612 . 79618) (close-paren 79609 . 79610) (punctuation 79607 . 79608) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 79589 . 79595) ("type" symbol "Lisp_Float" 79577 . 79587) ("a" symbol "a" 79574 . 79575)))) 79566 . 79607) (RETURN 79559 . 79565) (punctuation 79555 . 79556) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "FLOATP" 79544 . 79550)))) 79535 . 79555) (open-paren 79531 . 79532) (close-paren 79529 . 79530) (symbol 79528 . 79529) (symbol 79516 . 79527) (open-paren 79515 . 79516) (symbol 79508 . 79514) (punctuation 79506 . 79507) (symbol 79495 . 79505) (STRUCT 79488 . 79494) (symbol 79481 . 79487) (close-paren 79478 . 79479) (punctuation 79476 . 79477) (semantic-list #("(XTYPE (x) == Lisp_Float)" 0 1 (macros (("x" symbol "x" 79474 . 79475)))) 79459 . 79476) (RETURN 79452 . 79458) (open-paren 79448 . 79449) (close-paren 79446 . 79447) (symbol 79445 . 79446) (symbol 79433 . 79444) (open-paren 79432 . 79433) (close-paren 79430 . 79431) (symbol 79424 . 79430) (open-paren 79423 . 79424) (BOOL 79418 . 79422) (symbol 79411 . 79417) (punctuation 79408 . 79409) (close-paren 79407 . 79408) (open-paren 79327 . 79328) (symbol 79314 . 79324) (STRUCT 79307 . 79313) (close-paren 79270 . 79271) (punctuation 79252 . 79253) (punctuation 79251 . 79252) (symbol 79250 . 79251) (punctuation 79249 . 79250) (RETURN 79242 . 79248) (punctuation 79238 . 79239) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "BUFFER_OBJFWDP" 79219 . 79233)))) 79210 . 79238) (open-paren 79206 . 79207) (close-paren 79204 . 79205) (symbol 79203 . 79204) (punctuation 79202 . 79203) (symbol 79193 . 79201) (UNION 79187 . 79192) (open-paren 79186 . 79187) (symbol 79171 . 79185) (punctuation 79169 . 79170) (symbol 79150 . 79168) (STRUCT 79143 . 79149) (symbol 79136 . 79142) (close-paren 79133 . 79134) (punctuation 79110 . 79111) (punctuation 79109 . 79110) (semantic-list 79105 . 79108) (symbol 79096 . 79104) (RETURN 79089 . 79095) (open-paren 79085 . 79086) (close-paren 79083 . 79084) (symbol 79082 . 79083) (punctuation 79081 . 79082) (symbol 79072 . 79080) (UNION 79066 . 79071) (open-paren 79065 . 79066) (symbol 79050 . 79064) (BOOL 79045 . 79049) (symbol 79038 . 79044) (close-paren 79035 . 79036) (punctuation 79028 . 79029) (symbol 79020 . 79028) (punctuation 79019 . 79020) (punctuation 79018 . 79019) (symbol 79017 . 79018) (RETURN 79010 . 79016) (open-paren 79006 . 79007) (close-paren 79004 . 79005) (symbol 79003 . 79004) (punctuation 79002 . 79003) (symbol 78993 . 79001) (UNION 78987 . 78992) (open-paren 78986 . 78987) (symbol 78977 . 78985) (symbol 78963 . 78976) (ENUM 78958 . 78962) (symbol 78951 . 78957) (punctuation 78948 . 78949) (close-paren 78947 . 78948) (open-paren 78748 . 78749) (symbol 78737 . 78745) (UNION 78731 . 78736) (punctuation 78728 . 78729) (close-paren 78727 . 78728) (open-paren 78650 . 78651) (symbol 78629 . 78647) (STRUCT 78622 . 78628) (punctuation 78535 . 78536) (close-paren 78534 . 78535) (open-paren 77589 . 77590) (symbol 77563 . 77586) (STRUCT 77556 . 77562) (punctuation 76479 . 76480) (close-paren 76478 . 76479) (open-paren 76299 . 76300) (symbol 76278 . 76296) (STRUCT 76271 . 76277) (punctuation 76140 . 76141) (close-paren 76139 . 76140) (open-paren 76060 . 76061) (symbol 76046 . 76057) (STRUCT 76039 . 76045) (punctuation 75845 . 75846) (close-paren 75844 . 75845) (open-paren 75770 . 75771) (symbol 75755 . 75767) (STRUCT 75748 . 75754) (punctuation 75553 . 75554) (close-paren 75552 . 75553) (open-paren 75475 . 75476) (symbol 75461 . 75472) (STRUCT 75454 . 75460) (close-paren 75261 . 75262) (punctuation 75246 . 75247) (punctuation 75245 . 75246) (semantic-list 75241 . 75244) (symbol 75233 . 75240) (RETURN 75226 . 75232) (open-paren 75222 . 75223) (close-paren 75220 . 75221) (symbol 75219 . 75220) (symbol 75207 . 75218) (open-paren 75206 . 75207) (symbol 75197 . 75205) (BOOL 75192 . 75196) (symbol 75185 . 75191) (close-paren 75182 . 75183) (punctuation 75180 . 75181) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 75161 . 75167) ("type" symbol "Lisp_Vectorlike" 75144 . 75159) ("a" symbol "a" 75141 . 75142)))) 75133 . 75180) (RETURN 75126 . 75132) (punctuation 75122 . 75123) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "BIGNUMP" 75110 . 75117)))) 75101 . 75122) (open-paren 75097 . 75098) (close-paren 75095 . 75096) (symbol 75094 . 75095) (symbol 75082 . 75093) (open-paren 75081 . 75082) (symbol 75073 . 75080) (punctuation 75071 . 75072) (symbol 75059 . 75070) (STRUCT 75052 . 75058) (symbol 75045 . 75051) (close-paren 75042 . 75043) (RETURN 75003 . 75009) (open-paren 74999 . 75000) (close-paren 74997 . 74998) (symbol 74996 . 74997) (symbol 74984 . 74995) (open-paren 74983 . 74984) (symbol 74975 . 74982) (BOOL 74970 . 74974) (symbol 74963 . 74969) (punctuation 74960 . 74961) (close-paren 74959 . 74960) (open-paren 74908 . 74909) (symbol 74896 . 74907) (STRUCT 74889 . 74895) (close-paren 74625 . 74626) (punctuation 74623 . 74624) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 74603 . 74609) ("type" symbol "Lisp_Vectorlike" 74586 . 74601) ("a" symbol "a" 74583 . 74584)))) 74575 . 74623) (RETURN 74568 . 74574) (punctuation 74564 . 74565) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "OVERLAYP" 74551 . 74559)))) 74542 . 74564) (open-paren 74538 . 74539) (close-paren 74536 . 74537) (symbol 74535 . 74536) (symbol 74523 . 74534) (open-paren 74522 . 74523) (symbol 74513 . 74521) (punctuation 74511 . 74512) (symbol 74498 . 74510) (STRUCT 74491 . 74497) (symbol 74484 . 74490) (close-paren 74481 . 74482) (RETURN 74441 . 74447) (open-paren 74437 . 74438) (close-paren 74435 . 74436) (symbol 74434 . 74435) (symbol 74422 . 74433) (open-paren 74421 . 74422) (symbol 74412 . 74420) (BOOL 74407 . 74411) (symbol 74400 . 74406) (close-paren 74397 . 74398) (punctuation 74395 . 74396) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 74376 . 74382) ("type" symbol "Lisp_Vectorlike" 74359 . 74374) ("a" symbol "a" 74356 . 74357)))) 74348 . 74395) (RETURN 74341 . 74347) (punctuation 74337 . 74338) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "MARKERP" 74325 . 74332)))) 74316 . 74337) (open-paren 74312 . 74313) (close-paren 74310 . 74311) (symbol 74309 . 74310) (symbol 74297 . 74308) (open-paren 74296 . 74297) (symbol 74288 . 74295) (punctuation 74286 . 74287) (symbol 74274 . 74285) (STRUCT 74267 . 74273) (symbol 74260 . 74266) (close-paren 74257 . 74258) (RETURN 74218 . 74224) (open-paren 74214 . 74215) (close-paren 74212 . 74213) (symbol 74211 . 74212) (symbol 74199 . 74210) (open-paren 74198 . 74199) (symbol 74190 . 74197) (BOOL 74185 . 74189) (symbol 74178 . 74184) (close-paren 74175 . 74176) (punctuation 74173 . 74174) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 74151 . 74157) ("type" symbol "Lisp_Vectorlike" 74134 . 74149) ("a" symbol "a" 74131 . 74132)))) 74123 . 74173) (RETURN 74116 . 74122) (punctuation 74112 . 74113) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "FINALIZERP" 74097 . 74107)))) 74088 . 74112) (open-paren 74084 . 74085) (close-paren 74082 . 74083) (symbol 74081 . 74082) (symbol 74069 . 74080) (open-paren 74068 . 74069) (symbol 74057 . 74067) (punctuation 74055 . 74056) (symbol 74040 . 74054) (STRUCT 74033 . 74039) (symbol 74026 . 74032) (close-paren 74023 . 74024) (RETURN 73981 . 73987) (open-paren 73977 . 73978) (close-paren 73975 . 73976) (symbol 73974 . 73975) (symbol 73962 . 73973) (open-paren 73961 . 73962) (symbol 73950 . 73960) (BOOL 73945 . 73949) (symbol 73938 . 73944) (punctuation 73935 . 73936) (close-paren 73934 . 73935) (open-paren 73541 . 73542) (symbol 73524 . 73538) (STRUCT 73517 . 73523) (close-paren 73356 . 73357) (punctuation 73346 . 73347) (punctuation 73345 . 73346) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 73324 . 73330) ("type" symbol "Lisp_Vectorlike" 73307 . 73322) ("a" symbol "a" 73304 . 73305)))) 73296 . 73345) (RETURN 73289 . 73295) (RETURN 73264 . 73270) (semantic-list 73246 . 73259) (IF 73243 . 73245) (punctuation 73239 . 73240) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "mint_ptrp" 73225 . 73234)))) 73216 . 73239) (open-paren 73212 . 73213) (close-paren 73210 . 73211) (symbol 73209 . 73210) (symbol 73197 . 73208) (open-paren 73196 . 73197) (symbol 73182 . 73195) (punctuation 73180 . 73181) (VOID 73175 . 73179) (symbol 73168 . 73174) (close-paren 73165 . 73166) (punctuation 73129 . 73130) (punctuation 73128 . 73129) (semantic-list 73124 . 73127) (symbol 73116 . 73123) (RETURN 73109 . 73115) (open-paren 73105 . 73106) (close-paren 73103 . 73104) (symbol 73102 . 73103) (symbol 73090 . 73101) (open-paren 73089 . 73090) (symbol 73079 . 73088) (BOOL 73074 . 73078) (symbol 73067 . 73073) (close-paren 73064 . 73065) (punctuation 73043 . 73044) (symbol 73039 . 73042) (punctuation 73037 . 73038) (symbol 73035 . 73036) (punctuation 73033 . 73034) (punctuation 73032 . 73033) (semantic-list 73026 . 73031) (symbol 73015 . 73025) (punctuation 73013 . 73014) (punctuation 73012 . 73013) (semantic-list 73006 . 73011) (symbol 72998 . 73005) (RETURN 72991 . 72997) (open-paren 72943 . 72944) (close-paren 72941 . 72942) (symbol 72940 . 72941) (punctuation 72939 . 72940) (VOID 72934 . 72938) (open-paren 72933 . 72934) (symbol 72919 . 72932) (symbol 72907 . 72918) (symbol 72900 . 72906) (punctuation 72042 . 72043) (close-paren 72041 . 72042) (punctuation 72040 . 72041) (VOID 72035 . 72039) (open-paren 72034 . 72035) (symbol 72020 . 72033) (symbol 72008 . 72019) (EXTERN 72001 . 72007) (punctuation 71998 . 71999) (close-paren 71997 . 71998) (open-paren 71938 . 71939) (symbol 71922 . 71935) (STRUCT 71915 . 71921) (punctuation 71912 . 71913) (close-paren 71911 . 71912) (open-paren 71773 . 71774) (symbol 71274 . 71286) (STRUCT 71267 . 71273) (punctuation 71161 . 71162) (close-paren 71160 . 71161) (open-paren 69369 . 69370) (symbol 69357 . 69368) (STRUCT 69350 . 69356) (close-paren 69347 . 69348) (punctuation 69345 . 69346) (semantic-list "(EMACS_INT_MAX >> (INTTYPEBITS - 1))" 69338 . 69345) (punctuation 69336 . 69337) (semantic-list 69293 . 69335) (RETURN 69286 . 69292) (open-paren 69282 . 69283) (close-paren 69280 . 69281) (symbol 69279 . 69280) (symbol 69268 . 69278) (open-paren 69267 . 69268) (symbol 69253 . 69266) (symbol 69242 . 69252) (symbol 69235 . 69241) (close-paren 69173 . 69174) (punctuation 69168 . 69169) (semantic-list 69139 . 69167) (punctuation 69137 . 69138) (semantic-list 69128 . 69136) (RETURN 69121 . 69127) (open-paren 69117 . 69118) (close-paren 69115 . 69116) (symbol 69114 . 69115) (symbol 69103 . 69113) (punctuation 69101 . 69102) (symbol 69100 . 69101) (symbol 69089 . 69099) (open-paren 69088 . 69089) (symbol 69073 . 69087) (symbol 69062 . 69072) (symbol 69055 . 69061) (punctuation 68599 . 68600) (close-paren 68598 . 68599) (number 68595 . 68597) (punctuation 68593 . 68594) (symbol 68575 . 68592) (open-paren 68573 . 68574) (symbol 68555 . 68572) (ENUM 68550 . 68554) (close-paren 68492 . 68493) (punctuation 68484 . 68485) (punctuation 68483 . 68484) (RETURN 68468 . 68474) (open-paren 68464 . 68465) (close-paren 68462 . 68463) (symbol 68461 . 68462) (punctuation 68460 . 68461) (symbol 68444 . 68459) (STRUCT 68437 . 68443) (open-paren 68436 . 68437) (symbol 68420 . 68435) (symbol 68410 . 68419) (symbol 68403 . 68409) (close-paren 68358 . 68359) (punctuation 68345 . 68346) (punctuation 68344 . 68345) (RETURN 68330 . 68336) (open-paren 68326 . 68327) (close-paren 68324 . 68325) (symbol 68321 . 68324) (symbol 68311 . 68320) (punctuation 68309 . 68310) (symbol 68308 . 68309) (punctuation 68307 . 68308) (symbol 68291 . 68306) (STRUCT 68284 . 68290) (open-paren 68283 . 68284) (symbol 68273 . 68282) (symbol 68261 . 68272) (symbol 68254 . 68260) (close-paren 68181 . 68182) (number 68177 . 68178) (punctuation 68175 . 68176) (punctuation 68169 . 68170) (number 68167 . 68168) (punctuation 68151 . 68152) (punctuation 68150 . 68151) (RETURN 68136 . 68142) (open-paren 68132 . 68133) (close-paren 68130 . 68131) (symbol 68127 . 68130) (symbol 68117 . 68126) (punctuation 68115 . 68116) (symbol 68114 . 68115) (punctuation 68113 . 68114) (symbol 68097 . 68112) (STRUCT 68090 . 68096) (open-paren 68089 . 68090) (symbol 68078 . 68088) (symbol 68066 . 68077) (symbol 68059 . 68065) (close-paren 67995 . 67996) (punctuation 67987 . 67988) (number 67985 . 67986) (punctuation 67969 . 67970) (punctuation 67968 . 67969) (RETURN 67954 . 67960) (open-paren 67950 . 67951) (close-paren 67948 . 67949) (symbol 67945 . 67948) (symbol 67935 . 67944) (punctuation 67933 . 67934) (symbol 67932 . 67933) (punctuation 67931 . 67932) (symbol 67915 . 67930) (STRUCT 67908 . 67914) (open-paren 67907 . 67908) (symbol 67898 . 67906) (symbol 67886 . 67897) (symbol 67879 . 67885) (close-paren 67728 . 67729) (punctuation 67726 . 67727) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 67703 . 67709) ("type" symbol "Lisp_Vectorlike" 67686 . 67701) ("a" symbol "a" 67683 . 67684)))) 67675 . 67726) (RETURN 67668 . 67674) (punctuation 67664 . 67665) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "HASH_TABLE_P" 67647 . 67659)))) 67638 . 67664) (open-paren 67634 . 67635) (close-paren 67632 . 67633) (symbol 67631 . 67632) (symbol 67619 . 67630) (open-paren 67618 . 67619) (symbol 67606 . 67617) (punctuation 67604 . 67605) (symbol 67588 . 67603) (STRUCT 67581 . 67587) (symbol 67574 . 67580) (close-paren 67571 . 67572) (RETURN 67528 . 67534) (open-paren 67524 . 67525) (close-paren 67522 . 67523) (symbol 67521 . 67522) (symbol 67509 . 67520) (open-paren 67508 . 67509) (symbol 67495 . 67507) (BOOL 67490 . 67494) (symbol 67483 . 67489) (punctuation 67479 . 67480) (close-paren 67478 . 67479) (open-paren 65242 . 65243) (symbol 65226 . 65241) (STRUCT 65219 . 65225) (punctuation 65216 . 65217) (close-paren 65215 . 65216) (open-paren 64749 . 64750) (symbol 64733 . 64748) (STRUCT 64726 . 64732) (close-paren 64360 . 64361) (punctuation 64358 . 64359) (semantic-list #("(XSYMBOL (sym)->u.s.trapped_write == SYMBOL_NOWRITE)" 0 1 (macros (("sym" symbol "sym" 64354 . 64357)))) 64328 . 64358) (RETURN 64321 . 64327) (open-paren 64317 . 64318) (close-paren 64315 . 64316) (symbol 64312 . 64315) (symbol 64300 . 64311) (open-paren 64299 . 64300) (close-paren 64297 . 64298) (symbol 64280 . 64297) (open-paren 64279 . 64280) (INT 64275 . 64278) (symbol 64268 . 64274) (close-paren 64044 . 64045) (punctuation 64042 . 64043) (semantic-list #("(XSYMBOL (sym)->u.s.trapped_write)" 0 1 (macros (("sym" symbol "sym" 64038 . 64041)))) 64007 . 64042) (RETURN 64000 . 64006) (open-paren 63996 . 63997) (close-paren 63994 . 63995) (symbol 63991 . 63994) (symbol 63979 . 63990) (open-paren 63978 . 63979) (close-paren 63976 . 63977) (symbol 63954 . 63976) (open-paren 63953 . 63954) (INT 63949 . 63952) (symbol 63942 . 63948) (close-paren 63775 . 63776) (punctuation 63737 . 63738) (punctuation 63736 . 63737) (symbol 63727 . 63735) (punctuation 63726 . 63727) (symbol 63725 . 63726) (punctuation 63724 . 63725) (symbol 63723 . 63724) (punctuation 63722 . 63723) (punctuation 63721 . 63722) (semantic-list 63716 . 63721) (symbol 63708 . 63715) (RETURN 63701 . 63707) (open-paren 63697 . 63698) (close-paren 63695 . 63696) (symbol 63692 . 63695) (symbol 63680 . 63691) (open-paren 63679 . 63680) (symbol 63642 . 63678) (BOOL 63637 . 63641) (symbol 63630 . 63636) (close-paren 63566 . 63567) (punctuation 63545 . 63546) (punctuation 63544 . 63545) (symbol 63535 . 63543) (punctuation 63534 . 63535) (symbol 63533 . 63534) (punctuation 63532 . 63533) (symbol 63531 . 63532) (punctuation 63530 . 63531) (punctuation 63529 . 63530) (semantic-list 63524 . 63529) (symbol 63516 . 63523) (RETURN 63509 . 63515) (open-paren 63505 . 63506) (close-paren 63503 . 63504) (symbol 63500 . 63503) (symbol 63488 . 63499) (open-paren 63487 . 63488) (symbol 63469 . 63486) (BOOL 63464 . 63468) (symbol 63457 . 63463) (close-paren 63402 . 63403) (punctuation 63395 . 63396) (symbol 63394 . 63395) (punctuation 63393 . 63394) (symbol 63392 . 63393) (punctuation 63391 . 63392) (punctuation 63390 . 63391) (semantic-list 63385 . 63390) (symbol 63377 . 63384) (RETURN 63370 . 63376) (open-paren 63366 . 63367) (close-paren 63364 . 63365) (symbol 63361 . 63364) (symbol 63349 . 63360) (open-paren 63348 . 63349) (symbol 63336 . 63347) (symbol 63324 . 63335) (symbol 63317 . 63323) (close-paren 63314 . 63315) (punctuation 63304 . 63305) (symbol 63301 . 63304) (punctuation 63300 . 63301) (symbol 63299 . 63300) (punctuation 63298 . 63299) (symbol 63297 . 63298) (punctuation 63296 . 63297) (punctuation 63295 . 63296) (symbol 63292 . 63295) (open-paren 63232 . 63233) (close-paren 63230 . 63231) (symbol 63229 . 63230) (punctuation 63228 . 63229) (symbol 63219 . 63227) (UNION 63213 . 63218) (punctuation 63211 . 63212) (symbol 63208 . 63211) (punctuation 63207 . 63208) (symbol 63195 . 63206) (STRUCT 63188 . 63194) (open-paren 63187 . 63188) (symbol 63172 . 63186) (VOID 63167 . 63171) (symbol 63160 . 63166) (close-paren 63158 . 63159) (punctuation 63148 . 63149) (symbol 63145 . 63148) (punctuation 63144 . 63145) (symbol 63143 . 63144) (punctuation 63142 . 63143) (symbol 63141 . 63142) (punctuation 63140 . 63141) (punctuation 63139 . 63140) (symbol 63136 . 63139) (open-paren 63076 . 63077) (close-paren 63074 . 63075) (symbol 63073 . 63074) (punctuation 63072 . 63073) (symbol 63048 . 63071) (STRUCT 63041 . 63047) (punctuation 63039 . 63040) (symbol 63036 . 63039) (punctuation 63035 . 63036) (symbol 63023 . 63034) (STRUCT 63016 . 63022) (open-paren 63015 . 63016) (symbol 63000 . 63014) (VOID 62995 . 62999) (symbol 62988 . 62994) (close-paren 62986 . 62987) (punctuation 62974 . 62975) (symbol 62971 . 62974) (punctuation 62970 . 62971) (symbol 62969 . 62970) (punctuation 62968 . 62969) (symbol 62967 . 62968) (punctuation 62966 . 62967) (punctuation 62965 . 62966) (symbol 62962 . 62965) (open-paren 62903 . 62904) (close-paren 62901 . 62902) (symbol 62900 . 62901) (punctuation 62899 . 62900) (symbol 62887 . 62898) (STRUCT 62880 . 62886) (punctuation 62878 . 62879) (symbol 62875 . 62878) (punctuation 62874 . 62875) (symbol 62862 . 62873) (STRUCT 62855 . 62861) (open-paren 62854 . 62855) (symbol 62837 . 62853) (VOID 62832 . 62836) (symbol 62825 . 62831) (close-paren 62822 . 62823) (punctuation 62820 . 62821) (semantic-list #("(eassert ((sym)->u.s.redirect == SYMBOL_PLAINVAL), \\
    (sym)->u.s.val.value = (v))" 0 1 (macros (("v" symbol "v" 62818 . 62819) ("sym" symbol "sym" 62813 . 62816)))) 62790 . 62820) (open-paren 62786 . 62787) (close-paren 62784 . 62785) (symbol 62783 . 62784) (symbol 62771 . 62782) (punctuation 62769 . 62770) (symbol 62766 . 62769) (punctuation 62765 . 62766) (symbol 62753 . 62764) (STRUCT 62746 . 62752) (open-paren 62745 . 62746) (close-paren 62743 . 62744) (symbol 62729 . 62743) (open-paren 62728 . 62729) (VOID 62723 . 62727) (symbol 62716 . 62722) (close-paren 62713 . 62714) (punctuation 62707 . 62708) (symbol 62704 . 62707) (punctuation 62703 . 62704) (symbol 62702 . 62703) (punctuation 62701 . 62702) (symbol 62700 . 62701) (punctuation 62699 . 62700) (punctuation 62698 . 62699) (symbol 62695 . 62698) (RETURN 62688 . 62694) (open-paren 62613 . 62614) (close-paren 62611 . 62612) (symbol 62608 . 62611) (punctuation 62607 . 62608) (symbol 62595 . 62606) (STRUCT 62588 . 62594) (open-paren 62587 . 62588) (symbol 62576 . 62586) (punctuation 62574 . 62575) (symbol 62565 . 62573) (UNION 62559 . 62564) (symbol 62552 . 62558) (close-paren 62550 . 62551) (punctuation 62544 . 62545) (symbol 62541 . 62544) (punctuation 62540 . 62541) (symbol 62539 . 62540) (punctuation 62538 . 62539) (symbol 62537 . 62538) (punctuation 62536 . 62537) (punctuation 62535 . 62536) (symbol 62532 . 62535) (RETURN 62525 . 62531) (open-paren 62450 . 62451) (close-paren 62448 . 62449) (symbol 62445 . 62448) (punctuation 62444 . 62445) (symbol 62432 . 62443) (STRUCT 62425 . 62431) (open-paren 62424 . 62425) (symbol 62413 . 62423) (punctuation 62411 . 62412) (symbol 62387 . 62410) (STRUCT 62380 . 62386) (symbol 62373 . 62379) (close-paren 62371 . 62372) (punctuation 62363 . 62364) (symbol 62360 . 62363) (punctuation 62359 . 62360) (symbol 62358 . 62359) (punctuation 62357 . 62358) (symbol 62356 . 62357) (punctuation 62355 . 62356) (punctuation 62354 . 62355) (symbol 62351 . 62354) (RETURN 62344 . 62350) (open-paren 62268 . 62269) (close-paren 62266 . 62267) (symbol 62263 . 62266) (punctuation 62262 . 62263) (symbol 62250 . 62261) (STRUCT 62243 . 62249) (open-paren 62242 . 62243) (symbol 62229 . 62241) (punctuation 62227 . 62228) (symbol 62215 . 62226) (STRUCT 62208 . 62214) (symbol 62201 . 62207) (close-paren 62198 . 62199) (punctuation 62196 . 62197) (semantic-list #("(eassert ((sym)->u.s.redirect == SYMBOL_PLAINVAL), (sym)->u.s.val.value)" 0 1 (macros (("sym" symbol "sym" 62192 . 62195)))) 62173 . 62196) (RETURN 62166 . 62172) (open-paren 62162 . 62163) (close-paren 62160 . 62161) (symbol 62157 . 62160) (punctuation 62156 . 62157) (symbol 62144 . 62155) (STRUCT 62137 . 62143) (open-paren 62136 . 62137) (close-paren 62134 . 62135) (symbol 62124 . 62134) (open-paren 62123 . 62124) (symbol 62111 . 62122) (symbol 62104 . 62110) (punctuation 61275 . 61276) (close-paren 61274 . 61275) (semantic-list 61181 . 61274) (punctuation 61179 . 61180) (punctuation 61178 . 61179) (semantic-list 61138 . 61176) (symbol 61129 . 61137) (open-paren 61128 . 61129) (symbol 61121 . 61127) (close-paren 61042 . 61043) (punctuation 61040 . 61041) (semantic-list 60965 . 61040) (RETURN 60958 . 60964) (open-paren 60954 . 60955) (close-paren 60952 . 60953) (symbol 60950 . 60952) (punctuation 60949 . 60950) (symbol 60933 . 60948) (STRUCT 60926 . 60932) (open-paren 60925 . 60926) (symbol 60902 . 60924) (INT 60898 . 60901) (symbol 60891 . 60897) (punctuation 60823 . 60824) (close-paren 60822 . 60823) (semantic-list #("((offsetof (type, nonlispfield) - header_size) / word_size)" 0 1 (macros (("nonlispfield" symbol "Lisp_Sub_Char_Table" 60789 . 60808) ("type" STRUCT "struct" 60782 . 60788)))) 60767 . 60819) (punctuation 60765 . 60766) (symbol 60743 . 60764) (punctuation 60596 . 60597) (semantic-list #("((offsetof (type, nonlispfield) - header_size) / word_size)" 0 1 (macros (("nonlispfield" symbol "Lisp_Char_Table" 60572 . 60587) ("type" STRUCT "struct" 60565 . 60571)))) 60550 . 60596) (punctuation 60548 . 60549) (symbol 60522 . 60547) (open-paren 60350 . 60351) (symbol 60328 . 60347) (ENUM 60323 . 60327) (close-paren 60320 . 60321) (punctuation 60318 . 60319) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 60301 . 60307) ("type" symbol "Lisp_Vectorlike" 60284 . 60299) ("a" symbol "a" 60281 . 60282)))) 60273 . 60318) (RETURN 60266 . 60272) (punctuation 60262 . 60263) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "SUBRP" 60252 . 60257)))) 60243 . 60262) (open-paren 60239 . 60240) (close-paren 60237 . 60238) (symbol 60236 . 60237) (symbol 60224 . 60235) (open-paren 60223 . 60224) (symbol 60217 . 60222) (punctuation 60215 . 60216) (symbol 60205 . 60214) (STRUCT 60198 . 60204) (symbol 60191 . 60197) (close-paren 60188 . 60189) (RETURN 60151 . 60157) (open-paren 60147 . 60148) (close-paren 60145 . 60146) (symbol 60144 . 60145) (symbol 60132 . 60143) (open-paren 60131 . 60132) (symbol 60125 . 60130) (BOOL 60120 . 60124) (symbol 60113 . 60119) (punctuation 60110 . 60111) (close-paren 60109 . 60110) (open-paren 59123 . 59124) (symbol 59111 . 59120) (STRUCT 59104 . 59110) (close-paren 58963 . 58964) (ELSE 58923 . 58927) (punctuation 58902 . 58903) (punctuation 58901 . 58902) (semantic-list 58897 . 58901) (semantic-list 58785 . 58851) (IF 58782 . 58784) (open-paren 58778 . 58779) (close-paren 58776 . 58777) (symbol 58773 . 58776) (symbol 58761 . 58772) (punctuation 58759 . 58760) (symbol 58756 . 58759) (INT 58752 . 58755) (punctuation 58750 . 58751) (symbol 58748 . 58750) (symbol 58736 . 58747) (open-paren 58735 . 58736) (symbol 58720 . 58734) (VOID 58715 . 58719) (symbol 58708 . 58714) (close-paren 58571 . 58572) (punctuation 58569 . 58570) (semantic-list 58483 . 58569) (RETURN 58476 . 58482) (open-paren 58472 . 58473) (close-paren 58470 . 58471) (symbol 58467 . 58470) (INT 58463 . 58466) (punctuation 58461 . 58462) (symbol 58459 . 58461) (symbol 58447 . 58458) (open-paren 58446 . 58447) (symbol 58431 . 58445) (symbol 58419 . 58430) (symbol 58412 . 58418) (close-paren 58292 . 58293) (RETURN 58280 . 58286) (punctuation 58275 . 58276) (semantic-list 58239 . 58275) (WHILE 58233 . 58238) (semantic-list 58005 . 58230) (DO 57998 . 58000) (open-paren 57937 . 57938) (close-paren 57935 . 57936) (symbol 57932 . 57935) (symbol 57922 . 57931) (punctuation 57920 . 57921) (symbol 57918 . 57920) (symbol 57906 . 57917) (open-paren 57905 . 57906) (symbol 57884 . 57904) (symbol 57872 . 57883) (symbol 57865 . 57871) (close-paren 57862 . 57863) (punctuation 57860 . 57861) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 57833 . 57839) ("type" symbol "Lisp_Vectorlike" 57816 . 57831) ("a" symbol "a" 57813 . 57814)))) 57805 . 57860) (RETURN 57798 . 57804) (punctuation 57794 . 57795) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "SUB_CHAR_TABLE_P" 57773 . 57789)))) 57764 . 57794) (open-paren 57760 . 57761) (close-paren 57758 . 57759) (symbol 57757 . 57758) (symbol 57745 . 57756) (open-paren 57744 . 57745) (symbol 57728 . 57743) (punctuation 57726 . 57727) (symbol 57706 . 57725) (STRUCT 57699 . 57705) (symbol 57692 . 57698) (close-paren 57689 . 57690) (RETURN 57642 . 57648) (open-paren 57638 . 57639) (close-paren 57636 . 57637) (symbol 57635 . 57636) (symbol 57623 . 57634) (open-paren 57622 . 57623) (symbol 57605 . 57621) (BOOL 57600 . 57604) (symbol 57593 . 57599) (punctuation 57590 . 57591) (close-paren 57589 . 57590) (open-paren 56828 . 56829) (symbol 56806 . 56825) (STRUCT 56799 . 56805) (close-paren 56796 . 56797) (punctuation 56794 . 56795) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 56771 . 56777) ("type" symbol "Lisp_Vectorlike" 56754 . 56769) ("a" symbol "a" 56751 . 56752)))) 56743 . 56794) (RETURN 56736 . 56742) (punctuation 56732 . 56733) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "CHAR_TABLE_P" 56715 . 56727)))) 56706 . 56732) (open-paren 56702 . 56703) (close-paren 56700 . 56701) (symbol 56699 . 56700) (symbol 56687 . 56698) (open-paren 56686 . 56687) (symbol 56674 . 56685) (punctuation 56672 . 56673) (symbol 56656 . 56671) (STRUCT 56649 . 56655) (symbol 56642 . 56648) (close-paren 56639 . 56640) (RETURN 56596 . 56602) (open-paren 56592 . 56593) (close-paren 56590 . 56591) (symbol 56589 . 56590) (symbol 56577 . 56588) (open-paren 56576 . 56577) (symbol 56563 . 56575) (BOOL 56558 . 56562) (symbol 56551 . 56557) (punctuation 56548 . 56549) (close-paren 56547 . 56548) (open-paren 55497 . 55498) (symbol 55479 . 55494) (STRUCT 55472 . 55478) (punctuation 55469 . 55470) (close-paren 55468 . 55469) (number 55467 . 55468) (open-paren 55466 . 55467) (symbol 55454 . 55466) (INT 55450 . 55453) (CONST 55444 . 55449) (EXTERN 55437 . 55443) (punctuation 55434 . 55435) (close-paren 55433 . 55434) (number 55429 . 55430) (punctuation 55427 . 55428) (symbol 55407 . 55426) (punctuation 55401 . 55402) (number 55400 . 55401) (punctuation 55398 . 55399) (symbol 55378 . 55397) (punctuation 55372 . 55373) (number 55371 . 55372) (punctuation 55369 . 55370) (symbol 55349 . 55368) (punctuation 55343 . 55344) (number 55342 . 55343) (punctuation 55340 . 55341) (symbol 55320 . 55339) (open-paren 55314 . 55315) (symbol 55294 . 55311) (ENUM 55289 . 55293) (close-paren 53423 . 53424) (number 53411 . 53412) (punctuation 53326 . 53327) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 53314 . 53315)))) 53305 . 53326) (open-paren 53301 . 53302) (close-paren 53299 . 53300) (symbol 53293 . 53299) (symbol 53283 . 53292) (punctuation 53281 . 53282) (symbol 53280 . 53281) (punctuation 53279 . 53280) (VOID 53274 . 53278) (open-paren 53273 . 53274) (symbol 53264 . 53272) (VOID 53259 . 53263) (symbol 53252 . 53258) (punctuation 53124 . 53125) (close-paren 53123 . 53124) (number 53121 . 53122) (punctuation 53119 . 53120) (punctuation 53118 . 53119) (symbol 53106 . 53117) (punctuation 53104 . 53105) (punctuation 53103 . 53104) (number 53101 . 53102) (punctuation 53099 . 53100) (punctuation 53098 . 53099) (symbol 53092 . 53097) (punctuation 53090 . 53091) (symbol 53078 . 53089) (open-paren 53076 . 53077) (ENUM 53071 . 53075) (close-paren 52717 . 52718) (punctuation 52695 . 52696) (punctuation 52694 . 52695) (semantic-list 52687 . 52694) (symbol 52679 . 52686) (punctuation 52675 . 52676) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 52640 . 52641)))) 52631 . 52675) (open-paren 52487 . 52488) (close-paren 52485 . 52486) (symbol 52482 . 52485) (symbol 52470 . 52481) (punctuation 52468 . 52469) (symbol 52465 . 52468) (symbol 52455 . 52464) (punctuation 52453 . 52454) (symbol 52448 . 52453) (symbol 52436 . 52447) (open-paren 52435 . 52436) (symbol 52427 . 52434) (VOID 52422 . 52426) (symbol 52415 . 52421) (close-paren 52412 . 52413) (punctuation 52390 . 52391) (punctuation 52389 . 52390) (semantic-list 52382 . 52389) (symbol 52374 . 52381) (punctuation 52370 . 52371) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 52338 . 52339)))) 52329 . 52370) (open-paren 52325 . 52326) (close-paren 52323 . 52324) (symbol 52320 . 52323) (symbol 52308 . 52319) (punctuation 52306 . 52307) (symbol 52303 . 52306) (symbol 52293 . 52302) (punctuation 52291 . 52292) (symbol 52286 . 52291) (symbol 52274 . 52285) (open-paren 52273 . 52274) (symbol 52268 . 52272) (VOID 52263 . 52267) (symbol 52256 . 52262) (close-paren 52253 . 52254) (punctuation 52235 . 52236) (punctuation 52233 . 52234) (symbol 52228 . 52232) (punctuation 52227 . 52228) (symbol 52221 . 52227) (punctuation 52220 . 52221) (punctuation 52219 . 52220) (semantic-list 52212 . 52219) (symbol 52204 . 52211) (RETURN 52197 . 52203) (open-paren 52125 . 52126) (close-paren 52123 . 52124) (symbol 52118 . 52123) (symbol 52106 . 52117) (open-paren 52105 . 52106) (symbol 52096 . 52104) (symbol 52086 . 52095) (symbol 52079 . 52085) (close-paren 52076 . 52077) (punctuation 52060 . 52061) (punctuation 52059 . 52060) (semantic-list 52052 . 52059) (symbol 52044 . 52051) (punctuation 52042 . 52043) (RETURN 52035 . 52041) (open-paren 52031 . 52032) (close-paren 52029 . 52030) (symbol 52026 . 52029) (symbol 52016 . 52025) (punctuation 52014 . 52015) (symbol 52009 . 52014) (symbol 51997 . 52008) (open-paren 51996 . 51997) (symbol 51986 . 51995) (punctuation 51984 . 51985) (symbol 51972 . 51983) (symbol 51965 . 51971) (close-paren 51962 . 51963) (punctuation 51946 . 51947) (punctuation 51945 . 51946) (semantic-list 51938 . 51945) (symbol 51930 . 51937) (RETURN 51923 . 51929) (open-paren 51919 . 51920) (close-paren 51917 . 51918) (symbol 51914 . 51917) (symbol 51904 . 51913) (punctuation 51902 . 51903) (symbol 51897 . 51902) (symbol 51885 . 51896) (open-paren 51884 . 51885) (symbol 51879 . 51883) (symbol 51867 . 51878) (symbol 51860 . 51866) (close-paren 51806 . 51807) (punctuation 51804 . 51805) (semantic-list 51766 . 51804) (punctuation 51764 . 51765) (punctuation 51762 . 51763) (punctuation 51761 . 51762) (symbol 51756 . 51760) (punctuation 51755 . 51756) (ELSE 51746 . 51750) (punctuation 51742 . 51743) (semantic-list 51711 . 51742) (punctuation 51709 . 51710) (punctuation 51708 . 51709) (number 51706 . 51707) (punctuation 51704 . 51705) (punctuation 51703 . 51704) (symbol 51698 . 51702) (punctuation 51697 . 51698) (semantic-list 51689 . 51692) (IF 51686 . 51688) (punctuation 51681 . 51682) (punctuation 51623 . 51624) (punctuation 51621 . 51622) (symbol 51616 . 51620) (open-paren 51540 . 51541) (close-paren 51538 . 51539) (symbol 51537 . 51538) (BOOL 51532 . 51536) (punctuation 51530 . 51531) (symbol 51529 . 51530) (symbol 51519 . 51528) (punctuation 51517 . 51518) (symbol 51516 . 51517) (symbol 51504 . 51515) (open-paren 51503 . 51504) (symbol 51487 . 51502) (VOID 51482 . 51486) (symbol 51475 . 51481) (close-paren 51442 . 51443) (punctuation 51434 . 51435) (symbol 51431 . 51433) (punctuation 51429 . 51430) (semantic-list 51422 . 51428) (symbol 51403 . 51421) (RETURN 51396 . 51402) (open-paren 51392 . 51393) (close-paren 51390 . 51391) (symbol 51389 . 51390) (symbol 51379 . 51388) (punctuation 51377 . 51378) (symbol 51376 . 51377) (symbol 51364 . 51375) (open-paren 51363 . 51364) (symbol 51347 . 51362) (symbol 51335 . 51346) (symbol 51328 . 51334) (close-paren 51325 . 51326) (punctuation 51323 . 51324) (semantic-list 51217 . 51323) (punctuation 51215 . 51216) (punctuation 51214 . 51215) (RETURN 51207 . 51213) (open-paren 51155 . 51156) (close-paren 51153 . 51154) (symbol 51152 . 51153) (symbol 51142 . 51151) (punctuation 51140 . 51141) (symbol 51139 . 51140) (symbol 51127 . 51138) (open-paren 51126 . 51127) (symbol 51107 . 51125) (BOOL 51102 . 51106) (symbol 51095 . 51101) (close-paren 51056 . 51057) (semantic-list 51016 . 51033) (RETURN 51009 . 51015) (open-paren 51005 . 51006) (close-paren 51003 . 51004) (symbol 51002 . 51003) (symbol 50990 . 51001) (open-paren 50989 . 50990) (symbol 50966 . 50988) (punctuation 50964 . 50965) (CHAR 50959 . 50963) (UNSIGNED 50950 . 50958) (symbol 50943 . 50949) (close-paren 50940 . 50941) (punctuation 50933 . 50934) (punctuation 50932 . 50933) (semantic-list 50929 . 50932) (symbol 50916 . 50928) (RETURN 50909 . 50915) (open-paren 50905 . 50906) (close-paren 50903 . 50904) (symbol 50902 . 50903) (symbol 50890 . 50901) (open-paren 50889 . 50890) (symbol 50872 . 50888) (punctuation 50870 . 50871) (symbol 50860 . 50869) (symbol 50853 . 50859) (close-paren 50850 . 50851) (RETURN 50837 . 50843) (open-paren 50767 . 50768) (close-paren 50765 . 50766) (symbol 50764 . 50765) (symbol 50752 . 50763) (open-paren 50751 . 50752) (symbol 50734 . 50750) (symbol 50724 . 50733) (symbol 50717 . 50723) (close-paren 50714 . 50715) (punctuation 50712 . 50713) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 50688 . 50694) ("type" symbol "Lisp_Vectorlike" 50671 . 50686) ("a" symbol "a" 50668 . 50669)))) 50660 . 50712) (RETURN 50653 . 50659) (punctuation 50649 . 50650) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "BOOL_VECTOR_P" 50631 . 50644)))) 50622 . 50649) (open-paren 50618 . 50619) (close-paren 50616 . 50617) (symbol 50615 . 50616) (symbol 50603 . 50614) (open-paren 50602 . 50603) (symbol 50589 . 50601) (punctuation 50587 . 50588) (symbol 50570 . 50586) (STRUCT 50563 . 50569) (symbol 50556 . 50562) (close-paren 50553 . 50554) (semantic-list 50528 . 50531) (open-paren 50498 . 50499) (close-paren 50496 . 50497) (symbol 50495 . 50496) (symbol 50483 . 50494) (open-paren 50482 . 50483) (symbol 50464 . 50481) (VOID 50459 . 50463) (symbol 50452 . 50458) (close-paren 50449 . 50450) (RETURN 50405 . 50411) (open-paren 50401 . 50402) (close-paren 50399 . 50400) (symbol 50398 . 50399) (symbol 50386 . 50397) (open-paren 50385 . 50386) (symbol 50371 . 50384) (BOOL 50366 . 50370) (symbol 50359 . 50365) (close-paren 50356 . 50357) (punctuation 50327 . 50328) (semantic-list 50288 . 50326) (RETURN 50281 . 50287) (open-paren 50202 . 50203) (close-paren 50200 . 50201) (symbol 50196 . 50200) (symbol 50186 . 50195) (open-paren 50185 . 50186) (symbol 50167 . 50184) (symbol 50157 . 50166) (symbol 50150 . 50156) (close-paren 50147 . 50148) (punctuation 50125 . 50126) (semantic-list 50093 . 50124) (RETURN 50086 . 50092) (open-paren 50007 . 50008) (close-paren 50005 . 50006) (symbol 50001 . 50005) (symbol 49991 . 50000) (open-paren 49990 . 49991) (symbol 49972 . 49989) (symbol 49962 . 49971) (symbol 49955 . 49961) (punctuation 49876 . 49877) (close-paren 49875 . 49876) (semantic-list 49850 . 49875) (SIZEOF 49843 . 49849) (punctuation 49841 . 49842) (punctuation 49840 . 49841) (symbol 49828 . 49839) (open-paren 49827 . 49828) (symbol 49820 . 49826) (punctuation 49818 . 49819) (close-paren 49817 . 49818) (semantic-list 49801 . 49814) (SIZEOF 49794 . 49800) (punctuation 49792 . 49793) (symbol 49782 . 49791) (punctuation 49776 . 49777) (semantic-list 49745 . 49776) (symbol 49736 . 49744) (punctuation 49734 . 49735) (symbol 49717 . 49733) (punctuation 49711 . 49712) (semantic-list 49681 . 49711) (symbol 49672 . 49680) (punctuation 49670 . 49671) (symbol 49658 . 49669) (open-paren 49652 . 49653) (ENUM 49645 . 49649) (punctuation 49544 . 49545) (close-paren 49543 . 49544) (open-paren 49070 . 49071) (symbol 49051 . 49067) (STRUCT 49044 . 49050) (close-paren 48966 . 48967) (semantic-list 48776 . 48965) (ELSE 48767 . 48771) (RETURN 48751 . 48757) (semantic-list 48727 . 48746) (IF 48724 . 48726) (open-paren 48720 . 48721) (close-paren 48718 . 48719) (symbol 48714 . 48718) (INT 48710 . 48713) (punctuation 48708 . 48709) (symbol 48707 . 48708) (symbol 48695 . 48706) (open-paren 48694 . 48695) (symbol 48680 . 48693) (BOOL 48675 . 48679) (symbol 48668 . 48674) (close-paren 48610 . 48611) (punctuation 48608 . 48609) (semantic-list 48497 . 48608) (RETURN 48490 . 48496) (open-paren 48381 . 48382) (close-paren 48379 . 48380) (symbol 48375 . 48379) (symbol 48365 . 48374) (ENUM 48360 . 48364) (punctuation 48358 . 48359) (symbol 48357 . 48358) (punctuation 48356 . 48357) (symbol 48338 . 48355) (UNION 48332 . 48337) (open-paren 48331 . 48332) (symbol 48312 . 48330) (BOOL 48307 . 48311) (symbol 48300 . 48306) (close-paren 48251 . 48252) (punctuation 48249 . 48250) (semantic-list 48130 . 48249) (RETURN 48123 . 48129) (open-paren 48084 . 48085) (close-paren 48082 . 48083) (symbol 48081 . 48082) (punctuation 48080 . 48081) (symbol 48068 . 48079) (STRUCT 48061 . 48067) (open-paren 48060 . 48061) (symbol 48042 . 48059) (symbol 48032 . 48041) (ENUM 48027 . 48031) (symbol 48020 . 48026) (close-paren 47940 . 47941) (semantic-list 47921 . 47924) (open-paren 47897 . 47898) (close-paren 47895 . 47896) (symbol 47894 . 47895) (symbol 47882 . 47893) (open-paren 47881 . 47882) (symbol 47868 . 47880) (VOID 47863 . 47867) (symbol 47856 . 47862) (close-paren 47853 . 47854) (punctuation 47851 . 47852) (semantic-list 47820 . 47851) (punctuation 47818 . 47819) (punctuation 47816 . 47817) (punctuation 47815 . 47816) (semantic-list 47811 . 47814) (symbol 47799 . 47810) (RETURN 47792 . 47798) (open-paren 47788 . 47789) (close-paren 47786 . 47787) (symbol 47785 . 47786) (symbol 47773 . 47784) (open-paren 47772 . 47773) (symbol 47764 . 47771) (BOOL 47759 . 47763) (symbol 47752 . 47758) (close-paren 47749 . 47750) (semantic-list 47718 . 47722) (symbol 47712 . 47717) (RETURN 47705 . 47711) (open-paren 47701 . 47702) (close-paren 47699 . 47700) (symbol 47697 . 47699) (symbol 47685 . 47696) (open-paren 47684 . 47685) (symbol 47677 . 47683) (symbol 47667 . 47676) (symbol 47660 . 47666) (close-paren 47657 . 47658) (RETURN 47644 . 47650) (open-paren 47568 . 47569) (close-paren 47566 . 47567) (symbol 47561 . 47566) (symbol 47549 . 47560) (open-paren 47548 . 47549) (symbol 47542 . 47547) (symbol 47532 . 47541) (symbol 47525 . 47531) (close-paren 47522 . 47523) (punctuation 47520 . 47521) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 47501 . 47507) ("type" symbol "Lisp_Vectorlike" 47484 . 47499) ("a" symbol "a" 47481 . 47482)))) 47473 . 47520) (RETURN 47466 . 47472) (punctuation 47462 . 47463) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "VECTORLIKEP" 47446 . 47457)))) 47437 . 47462) (open-paren 47433 . 47434) (close-paren 47431 . 47432) (symbol 47430 . 47431) (symbol 47418 . 47429) (open-paren 47417 . 47418) (symbol 47409 . 47416) (punctuation 47407 . 47408) (symbol 47395 . 47406) (STRUCT 47388 . 47394) (symbol 47381 . 47387) (close-paren 47378 . 47379) (punctuation 47376 . 47377) (semantic-list #("(XTYPE (x) == Lisp_Vectorlike)" 0 1 (macros (("x" symbol "x" 47374 . 47375)))) 47354 . 47376) (RETURN 47347 . 47353) (open-paren 47343 . 47344) (close-paren 47341 . 47342) (symbol 47340 . 47341) (symbol 47328 . 47339) (open-paren 47327 . 47328) (close-paren 47325 . 47326) (symbol 47314 . 47325) (open-paren 47313 . 47314) (BOOL 47308 . 47312) (symbol 47301 . 47307) (punctuation 47298 . 47299) (close-paren 47297 . 47298) (open-paren 47208 . 47209) (symbol 47194 . 47205) (STRUCT 47187 . 47193) (close-paren 47111 . 47112) (punctuation 47094 . 47095) (symbol 47093 . 47094) (punctuation 47092 . 47093) (symbol 47091 . 47092) (punctuation 47090 . 47091) (punctuation 47089 . 47090) (semantic-list 47081 . 47089) (symbol 47073 . 47080) (punctuation 47069 . 47070) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "STRING_MULTIBYTE" 46961 . 46977)))) 46952 . 47069) (open-paren 46843 . 46844) (close-paren 46841 . 46842) (symbol 46834 . 46841) (symbol 46824 . 46833) (punctuation 46822 . 46823) (symbol 46816 . 46822) (symbol 46804 . 46815) (open-paren 46803 . 46804) (symbol 46786 . 46802) (VOID 46781 . 46785) (symbol 46774 . 46780) (close-paren 46772 . 46773) (semantic-list 46761 . 46769) (RETURN 46732 . 46738) (open-paren 46728 . 46729) (close-paren 46726 . 46727) (symbol 46720 . 46726) (symbol 46708 . 46719) (open-paren 46707 . 46708) (symbol 46700 . 46706) (symbol 46690 . 46699) (symbol 46683 . 46689) (close-paren 46680 . 46681) (RETURN 46665 . 46671) (punctuation 46619 . 46620) (symbol 46618 . 46619) (punctuation 46617 . 46618) (symbol 46616 . 46617) (punctuation 46615 . 46616) (punctuation 46614 . 46615) (symbol 46613 . 46614) (punctuation 46611 . 46612) (symbol 46606 . 46610) (punctuation 46605 . 46606) (symbol 46604 . 46605) (punctuation 46603 . 46604) (symbol 46602 . 46603) (punctuation 46601 . 46602) (punctuation 46600 . 46601) (symbol 46599 . 46600) (punctuation 46597 . 46598) (number 46595 . 46596) (punctuation 46593 . 46594) (symbol 46583 . 46592) (punctuation 46582 . 46583) (symbol 46581 . 46582) (punctuation 46580 . 46581) (symbol 46579 . 46580) (punctuation 46578 . 46579) (punctuation 46577 . 46578) (symbol 46576 . 46577) (punctuation 46574 . 46575) (symbol 46567 . 46573) (symbol 46557 . 46566) (open-paren 46479 . 46480) (close-paren 46477 . 46478) (symbol 46476 . 46477) (punctuation 46475 . 46476) (symbol 46463 . 46474) (STRUCT 46456 . 46462) (open-paren 46455 . 46456) (symbol 46442 . 46454) (symbol 46432 . 46441) (symbol 46425 . 46431) (close-paren 46332 . 46333) (RETURN 46317 . 46323) (open-paren 46239 . 46240) (close-paren 46237 . 46238) (symbol 46231 . 46237) (symbol 46219 . 46230) (open-paren 46218 . 46219) (symbol 46211 . 46217) (symbol 46201 . 46210) (symbol 46194 . 46200) (close-paren 46192 . 46193) (punctuation 46190 . 46191) (NEW 46187 . 46190) (punctuation 46185 . 46186) (open-paren 46159 . 46160) (close-paren 46157 . 46158) (NEW 46154 . 46157) (CHAR 46149 . 46153) (UNSIGNED 46140 . 46148) (punctuation 46138 . 46139) (symbol 46133 . 46138) (symbol 46123 . 46132) (punctuation 46121 . 46122) (symbol 46115 . 46121) (symbol 46103 . 46114) (open-paren 46102 . 46103) (symbol 46097 . 46101) (VOID 46092 . 46096) (symbol 46085 . 46091) (close-paren 46083 . 46084) (punctuation 46081 . 46082) (RETURN 46053 . 46059) (open-paren 46049 . 46050) (close-paren 46047 . 46048) (symbol 46042 . 46047) (symbol 46032 . 46041) (punctuation 46030 . 46031) (symbol 46024 . 46030) (symbol 46012 . 46023) (open-paren 46011 . 46012) (symbol 46006 . 46010) (CHAR 46001 . 46005) (UNSIGNED 45992 . 46000) (symbol 45985 . 45991) (close-paren 45983 . 45984) (semantic-list 45958 . 45966) (RETURN 45951 . 45957) (open-paren 45905 . 45906) (close-paren 45903 . 45904) (symbol 45897 . 45903) (symbol 45885 . 45896) (open-paren 45884 . 45885) (symbol 45877 . 45883) (punctuation 45875 . 45876) (CHAR 45870 . 45874) (symbol 45863 . 45869) (close-paren 45861 . 45862) (punctuation 45854 . 45855) (symbol 45853 . 45854) (punctuation 45852 . 45853) (symbol 45851 . 45852) (punctuation 45850 . 45851) (punctuation 45849 . 45850) (semantic-list 45841 . 45849) (symbol 45833 . 45840) (RETURN 45826 . 45832) (open-paren 45822 . 45823) (close-paren 45820 . 45821) (symbol 45814 . 45820) (symbol 45802 . 45813) (open-paren 45801 . 45802) (symbol 45795 . 45800) (punctuation 45793 . 45794) (CHAR 45788 . 45792) (UNSIGNED 45779 . 45787) (symbol 45772 . 45778) (close-paren 44286 . 44287) (punctuation 44274 . 44275) (symbol 44273 . 44274) (punctuation 44272 . 44273) (symbol 44271 . 44272) (punctuation 44270 . 44271) (punctuation 44269 . 44270) (semantic-list 44264 . 44269) (symbol 44256 . 44263) (punctuation 44254 . 44255) (punctuation 44253 . 44254) (number 44251 . 44252) (RETURN 44244 . 44250) (open-paren 44240 . 44241) (close-paren 44238 . 44239) (symbol 44235 . 44238) (symbol 44223 . 44234) (open-paren 44222 . 44223) (symbol 44205 . 44221) (BOOL 44200 . 44204) (symbol 44193 . 44199) (close-paren 44148 . 44149) (punctuation 44146 . 44147) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" STRUCT "struct" 44127 . 44133) ("type" symbol "Lisp_String" 44114 . 44125) ("a" symbol "a" 44111 . 44112)))) 44103 . 44146) (RETURN 44096 . 44102) (punctuation 44092 . 44093) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "STRINGP" 44080 . 44087)))) 44071 . 44092) (open-paren 44067 . 44068) (close-paren 44065 . 44066) (symbol 44064 . 44065) (symbol 44052 . 44063) (open-paren 44051 . 44052) (symbol 44043 . 44050) (punctuation 44041 . 44042) (symbol 44029 . 44040) (STRUCT 44022 . 44028) (symbol 44015 . 44021) (close-paren 44012 . 44013) (semantic-list 43993 . 43996) (open-paren 43969 . 43970) (close-paren 43967 . 43968) (symbol 43966 . 43967) (symbol 43954 . 43965) (open-paren 43953 . 43954) (symbol 43940 . 43952) (VOID 43935 . 43939) (symbol 43928 . 43934) (close-paren 43925 . 43926) (punctuation 43910 . 43911) (punctuation 43909 . 43910) (semantic-list 43905 . 43908) (symbol 43899 . 43904) (RETURN 43892 . 43898) (open-paren 43888 . 43889) (close-paren 43886 . 43887) (symbol 43885 . 43886) (symbol 43873 . 43884) (open-paren 43872 . 43873) (symbol 43864 . 43871) (BOOL 43859 . 43863) (symbol 43852 . 43858) (punctuation 43849 . 43850) (close-paren 43848 . 43849) (number 43847 . 43848) (punctuation 43845 . 43846) (punctuation 43844 . 43845) (number "1" 43832 . 43843) (punctuation 43830 . 43831) (semantic-list 43809 . 43829) (symbol 43801 . 43808) (open-paren 43800 . 43801) (symbol 43793 . 43799) (punctuation 43791 . 43792) (close-paren 43790 . 43791) (semantic-list "(GCALIGNMENT)" 43767 . 43782) (symbol "alignas" 43767 . 43782) (CHAR "char" 43767 . 43782) (semantic-list "(GCALIGNMENT)" 43767 . 43782) (symbol "alignas" 43767 . 43782) (CHAR "char" 43767 . 43782) (open-paren 43552 . 43553) (symbol 43540 . 43551) (STRUCT 43533 . 43539) (close-paren 43454 . 43455) (punctuation 43446 . 43447) (semantic-list 43442 . 43445) (symbol 43437 . 43441) (punctuation 43435 . 43436) (semantic-list 43431 . 43434) (symbol 43425 . 43430) (RETURN 43418 . 43424) (open-paren 43414 . 43415) (close-paren 43412 . 43413) (symbol 43411 . 43412) (symbol 43399 . 43410) (open-paren 43398 . 43399) (symbol 43389 . 43397) (symbol 43377 . 43388) (symbol 43370 . 43376) (close-paren 43368 . 43369) (punctuation 43360 . 43361) (semantic-list 43356 . 43359) (symbol 43351 . 43355) (punctuation 43349 . 43350) (semantic-list 43345 . 43348) (symbol 43339 . 43344) (RETURN 43332 . 43338) (open-paren 43328 . 43329) (close-paren 43326 . 43327) (symbol 43325 . 43326) (symbol 43313 . 43324) (open-paren 43312 . 43313) (symbol 43303 . 43311) (symbol 43291 . 43302) (symbol 43284 . 43290) (close-paren 43216 . 43217) (RETURN 43203 . 43209) (semantic-list 43152 . 43163) (IF 43149 . 43151) (RETURN 43130 . 43136) (semantic-list 43114 . 43125) (IF 43111 . 43113) (open-paren 43107 . 43108) (close-paren 43105 . 43106) (symbol 43104 . 43105) (symbol 43092 . 43103) (open-paren 43091 . 43092) (symbol 43087 . 43090) (symbol 43075 . 43086) (symbol 43068 . 43074) (close-paren 43066 . 43067) (RETURN 43053 . 43059) (semantic-list 43002 . 43013) (IF 42999 . 43001) (RETURN 42980 . 42986) (semantic-list 42964 . 42975) (IF 42961 . 42963) (open-paren 42957 . 42958) (close-paren 42955 . 42956) (symbol 42954 . 42955) (symbol 42942 . 42953) (open-paren 42941 . 42942) (symbol 42937 . 42940) (symbol 42925 . 42936) (symbol 42918 . 42924) (close-paren 42850 . 42851) (punctuation 42845 . 42846) (semantic-list 42841 . 42844) (symbol 42831 . 42840) (punctuation 42830 . 42831) (open-paren 42826 . 42827) (close-paren 42824 . 42825) (symbol 42823 . 42824) (symbol 42811 . 42822) (punctuation 42809 . 42810) (symbol 42808 . 42809) (symbol 42796 . 42807) (open-paren 42795 . 42796) (symbol 42787 . 42794) (VOID 42782 . 42786) (symbol 42775 . 42781) (close-paren 42773 . 42774) (punctuation 42768 . 42769) (semantic-list 42764 . 42767) (symbol 42754 . 42763) (punctuation 42753 . 42754) (open-paren 42749 . 42750) (close-paren 42747 . 42748) (symbol 42746 . 42747) (symbol 42734 . 42745) (punctuation 42732 . 42733) (symbol 42731 . 42732) (symbol 42719 . 42730) (open-paren 42718 . 42719) (symbol 42710 . 42717) (VOID 42705 . 42709) (symbol 42698 . 42704) (close-paren 42527 . 42528) (punctuation "." 42510 . 42525) (symbol "u" 42510 . 42525) (punctuation "." 42510 . 42525) (symbol "s" 42510 . 42525) (punctuation "." 42510 . 42525) (symbol "u" 42510 . 42525) (punctuation ">" 42510 . 42525) (punctuation "-" 42510 . 42525) (semantic-list #("(c)" 0 1 (macros (("c" symbol "c" 42523 . 42524)))) 42510 . 42525) (symbol "XCONS" 42510 . 42525) (RETURN 42503 . 42509) (open-paren 42499 . 42500) (close-paren 42497 . 42498) (symbol 42496 . 42497) (symbol 42484 . 42495) (open-paren 42483 . 42484) (close-paren 42481 . 42482) (symbol 42477 . 42481) (open-paren 42476 . 42477) (symbol 42464 . 42475) (symbol 42457 . 42463) (close-paren 42454 . 42455) (punctuation "." 42437 . 42452) (symbol "s" 42437 . 42452) (punctuation "." 42437 . 42452) (symbol "u" 42437 . 42452) (punctuation ">" 42437 . 42452) (punctuation "-" 42437 . 42452) (semantic-list #("(c)" 0 1 (macros (("c" symbol "c" 42450 . 42451)))) 42437 . 42452) (symbol "XCONS" 42437 . 42452) (RETURN 42430 . 42436) (open-paren 42426 . 42427) (close-paren 42424 . 42425) (symbol 42423 . 42424) (symbol 42411 . 42422) (open-paren 42410 . 42411) (close-paren 42408 . 42409) (symbol 42404 . 42408) (open-paren 42403 . 42404) (symbol 42391 . 42402) (symbol 42384 . 42390) (close-paren 42345 . 42346) (punctuation 42339 . 42340) (symbol 42338 . 42339) (punctuation 42337 . 42338) (symbol 42336 . 42337) (punctuation 42335 . 42336) (symbol 42334 . 42335) (punctuation 42333 . 42334) (punctuation 42332 . 42333) (semantic-list 42329 . 42332) (symbol 42323 . 42328) (punctuation 42322 . 42323) (RETURN 42315 . 42321) (open-paren 42311 . 42312) (close-paren 42309 . 42310) (symbol 42308 . 42309) (symbol 42296 . 42307) (open-paren 42295 . 42296) (symbol 42285 . 42294) (punctuation 42283 . 42284) (symbol 42271 . 42282) (symbol 42264 . 42270) (close-paren 42262 . 42263) (punctuation 42256 . 42257) (symbol 42255 . 42256) (punctuation 42254 . 42255) (symbol 42253 . 42254) (punctuation 42252 . 42253) (punctuation 42251 . 42252) (semantic-list 42248 . 42251) (symbol 42242 . 42247) (punctuation 42241 . 42242) (RETURN 42234 . 42240) (open-paren 42230 . 42231) (close-paren 42228 . 42229) (symbol 42227 . 42228) (symbol 42215 . 42226) (open-paren 42214 . 42215) (symbol 42204 . 42213) (punctuation 42202 . 42203) (symbol 42190 . 42201) (symbol 42183 . 42189) (close-paren 41723 . 41724) (punctuation 41721 . 41722) (semantic-list #("(eassert (CONSP (a)), XUNTAG (a, Lisp_Cons, struct Lisp_Cons))" 0 1 (macros (("a" symbol "a" 41719 . 41720)))) 41705 . 41721) (RETURN 41698 . 41704) (open-paren 41694 . 41695) (close-paren 41692 . 41693) (symbol 41691 . 41692) (symbol 41679 . 41690) (open-paren 41678 . 41679) (close-paren 41676 . 41677) (symbol 41671 . 41676) (open-paren 41670 . 41671) (punctuation 41668 . 41669) (symbol 41658 . 41667) (STRUCT 41651 . 41657) (symbol 41644 . 41650) (close-paren 41641 . 41642) (semantic-list 41624 . 41627) (open-paren 41602 . 41603) (close-paren 41600 . 41601) (symbol 41599 . 41600) (symbol 41587 . 41598) (open-paren 41586 . 41587) (symbol 41575 . 41585) (VOID 41570 . 41574) (symbol 41563 . 41569) (close-paren 41560 . 41561) (punctuation 41558 . 41559) (semantic-list #("(XTYPE (x) == Lisp_Cons)" 0 1 (macros (("x" symbol "x" 41556 . 41557)))) 41542 . 41558) (RETURN 41535 . 41541) (open-paren 41531 . 41532) (close-paren 41529 . 41530) (symbol 41528 . 41529) (symbol 41516 . 41527) (open-paren 41515 . 41516) (close-paren 41513 . 41514) (symbol 41508 . 41513) (open-paren 41507 . 41508) (BOOL 41502 . 41506) (symbol 41495 . 41501) (close-paren 41492 . 41493) (RETURN 41468 . 41474) (open-paren 41464 . 41465) (close-paren 41462 . 41463) (symbol 41461 . 41462) (symbol 41449 . 41460) (open-paren 41448 . 41449) (close-paren 41446 . 41447) (symbol 41442 . 41446) (open-paren 41441 . 41442) (BOOL 41436 . 41440) (symbol 41429 . 41435) (punctuation 41426 . 41427) (close-paren 41425 . 41426) (number 41424 . 41425) (punctuation 41422 . 41423) (punctuation 41421 . 41422) (number "1" 41409 . 41420) (punctuation 41407 . 41408) (semantic-list 41388 . 41406) (symbol 41380 . 41387) (open-paren 41379 . 41380) (symbol 41372 . 41378) (punctuation 41370 . 41371) (close-paren 41369 . 41370) (semantic-list "(GCALIGNMENT)" 41346 . 41361) (symbol "alignas" 41346 . 41361) (CHAR "char" 41346 . 41361) (semantic-list "(GCALIGNMENT)" 41346 . 41361) (symbol "alignas" 41346 . 41361) (CHAR "char" 41346 . 41361) (open-paren 41090 . 41091) (symbol 41080 . 41089) (STRUCT 41073 . 41079) (close-paren 40995 . 40996) (RETURN 40985 . 40991) (punctuation 40981 . 40982) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "FIXNUMP" 40946 . 40953)))) 40937 . 40981) (open-paren 40891 . 40892) (close-paren 40889 . 40890) (symbol 40888 . 40889) (punctuation 40887 . 40888) (VOID 40882 . 40886) (open-paren 40881 . 40882) (symbol 40860 . 40880) (symbol 40848 . 40859) (symbol 40841 . 40847) (close-paren 40838 . 40839) (punctuation 40836 . 40837) (semantic-list #("((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 0 1 (macros (("ctype" CHAR "char" 40831 . 40835) ("type" symbol "Lisp_Int0" 40820 . 40829) ("a" symbol "a" 40817 . 40818)))) 40809 . 40836) (RETURN 40802 . 40808) (open-paren 40798 . 40799) (close-paren 40796 . 40797) (symbol 40795 . 40796) (symbol 40783 . 40794) (open-paren 40782 . 40783) (symbol 40771 . 40781) (punctuation 40769 . 40770) (VOID 40764 . 40768) (symbol 40757 . 40763) (close-paren 38334 . 38335) (punctuation 38332 . 38333) (semantic-list #("((XTYPE (x) & (Lisp_Int0 | ~Lisp_Int1)) == Lisp_Int0)" 0 1 (macros (("x" symbol "x" 38330 . 38331)))) 38314 . 38332) (RETURN 38307 . 38313) (open-paren 38303 . 38304) (close-paren 38301 . 38302) (symbol 38300 . 38301) (symbol 38288 . 38299) (open-paren 38287 . 38288) (close-paren 38285 . 38286) (symbol 38278 . 38285) (open-paren 38277 . 38278) (BOOL 38272 . 38276) (symbol 38265 . 38271) (close-paren 38262 . 38263) (RETURN 38252 . 38258) (punctuation 38248 . 38249) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "XTYPE" 38197 . 38202)))) 38188 . 38248) (open-paren 38145 . 38146) (close-paren 38143 . 38144) (symbol 38139 . 38143) (symbol 38129 . 38138) (ENUM 38124 . 38128) (punctuation 38122 . 38123) (symbol 38119 . 38122) (punctuation 38118 . 38119) (VOID 38113 . 38117) (open-paren 38112 . 38113) (symbol 38098 . 38111) (symbol 38086 . 38097) (symbol 38079 . 38085) (close-paren 38018 . 38019) (punctuation 38009 . 38010) (symbol 38005 . 38008) (punctuation 38003 . 38004) (symbol 37997 . 38002) (punctuation 37995 . 37996) (punctuation 37994 . 37995) (symbol 37990 . 37993) (punctuation 37988 . 37989) (symbol 37982 . 37987) (punctuation 37980 . 37981) (symbol 37974 . 37979) (punctuation 37972 . 37973) (symbol 37968 . 37971) (RETURN 37961 . 37967) (open-paren 37957 . 37958) (close-paren 37955 . 37956) (symbol 37950 . 37955) (symbol 37940 . 37949) (punctuation 37938 . 37939) (symbol 37935 . 37938) (symbol 37925 . 37934) (punctuation 37923 . 37924) (symbol 37918 . 37923) (symbol 37908 . 37917) (open-paren 37907 . 37908) (symbol 37892 . 37906) (symbol 37882 . 37891) (symbol 37875 . 37881) (close-paren 37681 . 37682) (punctuation 37679 . 37680) (semantic-list #("(XLI (x) == XLI (y))" 0 1 (macros (("y" symbol "y" 37677 . 37678) ("x" symbol "x" 37674 . 37675)))) 37663 . 37679) (RETURN 37656 . 37662) (open-paren 37652 . 37653) (close-paren 37650 . 37651) (symbol 37649 . 37650) (symbol 37637 . 37648) (punctuation 37635 . 37636) (symbol 37634 . 37635) (symbol 37622 . 37633) (open-paren 37621 . 37622) (close-paren 37619 . 37620) (symbol 37617 . 37619) (open-paren 37616 . 37617) (BOOL 37611 . 37615) (symbol 37604 . 37610) (close-paren 37549 . 37550) (semantic-list 37529 . 37546) (punctuation 37527 . 37528) (punctuation 37518 . 37519) (semantic-list 37514 . 37517) (symbol 37502 . 37513) (punctuation 37500 . 37501) (semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 37488 . 37499) (RETURN 37481 . 37487) (punctuation 37447 . 37448) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" number "0" 37411 . 37412)))) 37402 . 37447) (open-paren 37398 . 37399) (close-paren 37396 . 37397) (symbol 37395 . 37396) (symbol 37385 . 37394) (open-paren 37384 . 37385) (symbol 37366 . 37383) (symbol 37354 . 37365) (symbol 37347 . 37353) (close-paren 37263 . 37264) (RETURN 37238 . 37244) (open-paren 37234 . 37235) (close-paren 37232 . 37233) (symbol 37231 . 37232) (symbol 37219 . 37230) (open-paren 37218 . 37219) (close-paren 37216 . 37217) (symbol 37211 . 37216) (open-paren 37210 . 37211) (symbol 37200 . 37209) (symbol 37193 . 37199) (close-paren 37029 . 37030) (punctuation 37027 . 37028) (semantic-list "(EMACS_INT_MAX >> (INTTYPEBITS - 1))" 37020 . 37027) (punctuation 37018 . 37019) (symbol 37016 . 37017) (punctuation 37014 . 37015) (symbol 37002 . 37013) (punctuation 37000 . 37001) (punctuation 36999 . 37000) (symbol 36997 . 36998) (punctuation 36995 . 36996) (semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 36983 . 36994) (RETURN 36976 . 36982) (open-paren 36946 . 36947) (close-paren 36944 . 36945) (symbol 36943 . 36944) (symbol 36931 . 36942) (open-paren 36930 . 36931) (symbol 36921 . 36929) (symbol 36910 . 36920) (symbol 36903 . 36909) (close-paren 36823 . 36824) (RETURN 36813 . 36819) (punctuation 36789 . 36790) (semantic-list 36772 . 36789) (punctuation 36770 . 36771) (semantic-list 36766 . 36769) (symbol 36762 . 36765) (punctuation 36760 . 36761) (semantic-list 36756 . 36759) (symbol 36748 . 36755) (punctuation 36746 . 36747) (semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 36734 . 36745) (punctuation 36732 . 36733) (symbol 36730 . 36731) (symbol 36720 . 36729) (open-paren 36686 . 36687) (close-paren 36684 . 36685) (symbol 36683 . 36684) (symbol 36671 . 36682) (open-paren 36670 . 36671) (symbol 36662 . 36669) (symbol 36652 . 36661) (symbol 36645 . 36651) (close-paren 36468 . 36469) (punctuation 36453 . 36454) (punctuation 36452 . 36453) (symbol 36450 . 36451) (RETURN 36443 . 36449) (semantic-list 36381 . 36440) (semantic-list 36361 . 36376) (IF 36358 . 36360) (open-paren 36329 . 36330) (close-paren 36327 . 36328) (symbol 36326 . 36327) (symbol 36314 . 36325) (open-paren 36313 . 36314) (symbol 36305 . 36312) (symbol 36295 . 36304) (symbol 36288 . 36294) (close-paren 36239 . 36240) (RETURN 36223 . 36229) (semantic-list 36163 . 36220) (ELSE 36154 . 36158) (semantic-list 36075 . 36151) (semantic-list 36057 . 36070) (IF 36054 . 36056) (open-paren 36020 . 36021) (close-paren 36018 . 36019) (symbol 36017 . 36018) (symbol 36007 . 36016) (open-paren 36006 . 36007) (symbol 35994 . 36005) (symbol 35982 . 35993) (symbol 35975 . 35981) (punctuation 34903 . 34904) (close-paren 34902 . 34903) (symbol 34877 . 34899) (punctuation 34875 . 34876) (punctuation 34874 . 34875) (number 34869 . 34873) (punctuation 34867 . 34868) (symbol 34852 . 34866) (punctuation 34846 . 34847) (symbol 34824 . 34846) (punctuation 34822 . 34823) (symbol 34799 . 34821) (punctuation 34797 . 34798) (symbol 34774 . 34796) (punctuation 34706 . 34707) (semantic-list 34634 . 34706) (punctuation 34632 . 34633) (symbol 34609 . 34631) (punctuation 34603 . 34604) (number 34601 . 34603) (punctuation 34599 . 34600) (symbol 34576 . 34598) (punctuation 34424 . 34425) (number 34423 . 34424) (punctuation 34421 . 34422) (semantic-list 34391 . 34420) (punctuation 34389 . 34390) (symbol 34366 . 34388) (punctuation 34360 . 34361) (number 34358 . 34360) (punctuation 34356 . 34357) (symbol 34333 . 34355) (open-paren 33960 . 33961) (symbol 33943 . 33957) (ENUM 33938 . 33942) (punctuation 33935 . 33936) (close-paren 33934 . 33935) (symbol 33864 . 33873) (punctuation 33860 . 33861) (symbol 33849 . 33860) (punctuation 33845 . 33846) (symbol 33826 . 33845) (punctuation 33822 . 33823) (symbol 33807 . 33822) (punctuation 33803 . 33804) (symbol 33790 . 33803) (punctuation 33721 . 33722) (symbol 33701 . 33721) (punctuation 33697 . 33698) (symbol 33685 . 33697) (punctuation 33681 . 33682) (symbol 33671 . 33681) (punctuation 33667 . 33668) (symbol 33656 . 33667) (punctuation 33652 . 33653) (symbol 33635 . 33652) (punctuation 33631 . 33632) (symbol 33619 . 33631) (punctuation 33558 . 33559) (symbol 33548 . 33558) (punctuation 33544 . 33545) (symbol 33535 . 33544) (punctuation 33531 . 33532) (symbol 33506 . 33531) (punctuation 33502 . 33503) (symbol 33489 . 33502) (punctuation 33485 . 33486) (symbol 33470 . 33485) (punctuation 33466 . 33467) (symbol 33455 . 33466) (punctuation 33451 . 33452) (symbol 33435 . 33451) (punctuation 33431 . 33432) (symbol 33420 . 33431) (punctuation 33416 . 33417) (symbol 33406 . 33416) (punctuation 33402 . 33403) (symbol 33390 . 33402) (punctuation 33342 . 33343) (symbol 33329 . 33342) (punctuation 33325 . 33326) (symbol 33311 . 33325) (punctuation 33307 . 33308) (symbol 33295 . 33307) (punctuation 33291 . 33292) (symbol 33280 . 33291) (punctuation 33276 . 33277) (symbol 33265 . 33276) (punctuation 33261 . 33262) (symbol 33252 . 33261) (punctuation 33248 . 33249) (symbol 33230 . 33248) (open-paren 33226 . 33227) (symbol 33216 . 33225) (ENUM 33211 . 33215) (punctuation ";" 32969 . 33010) (symbol "EXTERNALLY_VISIBLE" 32855 . 32909) (symbol "PSEUDOVECTOR_FLAG" 32855 . 32909) (CONST "const" 32855 . 32909) (symbol "ptrdiff_t" 32855 . 32909) (EXTERN "extern" 32855 . 32909) (punctuation ";" 32704 . 32743) (symbol "EXTERNALLY_VISIBLE" 32614 . 32666) (symbol "ARRAY_MARK_FLAG" 32614 . 32666) (CONST "const" 32614 . 32666) (symbol "ptrdiff_t" 32614 . 32666) (EXTERN "extern" 32614 . 32666) (close-paren 32530 . 32531) (open-paren 32501 . 32502) (close-paren 32499 . 32500) (symbol 32498 . 32499) (symbol 32486 . 32497) (open-paren 32485 . 32486) (close-paren 32483 . 32484) (symbol 32471 . 32483) (open-paren 32470 . 32471) (VOID 32465 . 32469) (symbol 32458 . 32464) (close-paren 32455 . 32456) (semantic-list 32445 . 32452) (punctuation 32437 . 32438) (RETURN 32412 . 32418) (open-paren 32408 . 32409) (close-paren 32406 . 32407) (symbol 32401 . 32406) (INT 32397 . 32400) (open-paren 32396 . 32397) (symbol 32376 . 32395) (symbol 32364 . 32375) (symbol 32357 . 32363) (close-paren 32354 . 32355) (RETURN 32344 . 32350) (punctuation 32340 . 32341) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "XSYMBOL" 32321 . 32328)))) 32312 . 32340) (open-paren 31596 . 31597) (close-paren 31594 . 31595) (symbol 31591 . 31594) (punctuation 31590 . 31591) (symbol 31578 . 31589) (STRUCT 31571 . 31577) (open-paren 31570 . 31571) (symbol 31553 . 31569) (symbol 31541 . 31552) (symbol 31534 . 31540) (close-paren 31531 . 31532) (RETURN 31514 . 31520) (punctuation 31199 . 31200) (semantic-list #("((void) (false && (cond)))" 0 1 (macros (("cond" symbol "SYMBOLP" 31187 . 31194)))) 31178 . 31199) (open-paren 31123 . 31124) (close-paren 31121 . 31122) (symbol 31120 . 31121) (symbol 31108 . 31119) (open-paren 31107 . 31108) (close-paren 31105 . 31106) (symbol 31098 . 31105) (open-paren 31097 . 31098) (symbol 31065 . 31096) (punctuation 31063 . 31064) (symbol 31051 . 31062) (STRUCT 31044 . 31050) (symbol 31037 . 31043) (close-paren 31034 . 31035) (punctuation 31032 . 31033) (semantic-list #("(XTYPE (x) == Lisp_Symbol)" 0 1 (macros (("x" symbol "x" 31030 . 31031)))) 31014 . 31032) (RETURN 31007 . 31013) (open-paren 31003 . 31004) (close-paren 31001 . 31002) (symbol 31000 . 31001) (symbol 30988 . 30999) (open-paren 30987 . 30988) (close-paren 30985 . 30986) (symbol 30978 . 30985) (open-paren 30977 . 30978) (BOOL 30972 . 30976) (symbol 30965 . 30971) (punctuation 30962 . 30963) (close-paren 30961 . 30962) (number 30960 . 30961) (punctuation 30958 . 30959) (punctuation 30957 . 30958) (number "1" 30945 . 30956) (punctuation 30943 . 30944) (semantic-list 30917 . 30942) (symbol 30909 . 30916) (open-paren 30908 . 30909) (symbol 30901 . 30907) (punctuation 30899 . 30900) (close-paren 30898 . 30899) (semantic-list "(GCALIGNMENT)" 30880 . 30895) (symbol "alignas" 30880 . 30895) (CHAR "char" 30880 . 30895) (open-paren 29643 . 29644) (symbol 29623 . 29640) (UNION 29617 . 29622) (punctuation 25638 . 25639) (close-paren 25637 . 25638) (number 25636 . 25637) (punctuation 25634 . 25635) (punctuation 25633 . 25634) (number "1" 25621 . 25632) (punctuation 25619 . 25620) (semantic-list 25598 . 25618) (symbol 25590 . 25597) (open-paren 25589 . 25590) (symbol 25582 . 25588) (punctuation 25580 . 25581) (close-paren 25579 . 25580) (semantic-list "(GCALIGNMENT)" 25556 . 25571) (symbol "alignas" 25556 . 25571) (CHAR "char" 25556 . 25571) (semantic-list "(GCALIGNMENT)" 25556 . 25571) (symbol "alignas" 25556 . 25571) (CHAR "char" 25556 . 25571) (open-paren 23918 . 23919) (symbol 23906 . 23917) (STRUCT 23899 . 23905) (punctuation 23896 . 23897) (close-paren 23895 . 23896) (number 23893 . 23894) (punctuation 23891 . 23892) (symbol 23870 . 23890) (punctuation 23866 . 23867) (number 23865 . 23866) (punctuation 23863 . 23864) (symbol 23848 . 23862) (punctuation 23844 . 23845) (number 23843 . 23844) (punctuation 23841 . 23842) (symbol 23818 . 23840) (open-paren 23814 . 23815) (symbol 23793 . 23813) (ENUM 23788 . 23792) (punctuation 23785 . 23786) (close-paren 23784 . 23785) (number 23782 . 23783) (punctuation 23780 . 23781) (symbol 23763 . 23779) (punctuation 23759 . 23760) (number 23758 . 23759) (punctuation 23756 . 23757) (symbol 23739 . 23755) (punctuation 23735 . 23736) (number 23734 . 23735) (punctuation 23732 . 23733) (symbol 23715 . 23730) (punctuation 23711 . 23712) (number 23710 . 23711) (punctuation 23708 . 23709) (symbol 23691 . 23706) (open-paren 23687 . 23688) (symbol 23671 . 23686) (ENUM 23666 . 23670) (punctuation 23663 . 23664) (close-paren 23662 . 23663) (number 23660 . 23661) (punctuation 23658 . 23659) (symbol 23623 . 23657) (punctuation 23619 . 23620) (number 23618 . 23619) (punctuation 23616 . 23617) (symbol 23600 . 23615) (punctuation 23596 . 23597) (number 23595 . 23596) (punctuation 23593 . 23594) (symbol 23575 . 23592) (open-paren 23571 . 23572) (symbol 23555 . 23570) (ENUM 23550 . 23554) (close-paren 23304 . 23305) (punctuation 23302 . 23303) (semantic-list #("((ok) ? (void) 0 : wrong_type_argument (predicate, x))" 0 1 (macros (("x" symbol "x" 23300 . 23301) ("predicate" symbol "predicate" 23289 . 23298) ("ok" symbol "ok" 23285 . 23287)))) 23266 . 23302) (open-paren 23262 . 23263) (close-paren 23260 . 23261) (symbol 23259 . 23260) (symbol 23247 . 23258) (punctuation 23245 . 23246) (symbol 23236 . 23245) (symbol 23224 . 23235) (punctuation 23222 . 23223) (symbol 23220 . 23222) (INT 23216 . 23219) (open-paren 23215 . 23216) (close-paren 23213 . 23214) (symbol 23203 . 23213) (open-paren 23202 . 23203) (VOID 23197 . 23201) (symbol 23190 . 23196) (close-paren 23187 . 23188) (punctuation 23169 . 23170) (punctuation 23168 . 23169) (symbol 23166 . 23167) (punctuation 23164 . 23165) (semantic-list "(USE_LSB_TAG ? - (1 << GCTYPEBITS) : VAL_MAX)" 23156 . 23163) (punctuation 23155 . 23156) (punctuation 23153 . 23154) (symbol 23151 . 23152) (punctuation 23149 . 23150) (semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 23137 . 23148) (RETURN 23130 . 23136) (open-paren 23051 . 23052) (close-paren 23049 . 23050) (symbol 23048 . 23049) (symbol 23036 . 23047) (open-paren 23035 . 23036) (close-paren 23033 . 23034) (symbol 23028 . 23033) (open-paren 23027 . 23028) (symbol 23017 . 23026) (ENUM 23012 . 23016) (symbol 23005 . 23011) (close-paren 22976 . 22977) (punctuation 22974 . 22975) (semantic-list #("((Lisp_Object) (uintptr_t) (p))" 0 1 (macros (("p" symbol "p" 22972 . 22973)))) 22960 . 22974) (RETURN 22953 . 22959) (open-paren 22949 . 22950) (close-paren 22947 . 22948) (symbol 22946 . 22947) (punctuation 22945 . 22946) (VOID 22940 . 22944) (open-paren 22939 . 22940) (close-paren 22937 . 22938) (symbol 22934 . 22937) (open-paren 22933 . 22934) (symbol 22921 . 22932) (symbol 22914 . 22920) (close-paren 22911 . 22912) (punctuation 22909 . 22910) (semantic-list #("((void *) (uintptr_t) (o))" 0 1 (macros (("o" symbol "o" 22907 . 22908)))) 22895 . 22909) (RETURN 22888 . 22894) (open-paren 22884 . 22885) (close-paren 22882 . 22883) (symbol 22881 . 22882) (symbol 22869 . 22880) (open-paren 22868 . 22869) (close-paren 22866 . 22867) (symbol 22863 . 22866) (open-paren 22862 . 22863) (punctuation 22860 . 22861) (VOID 22855 . 22859) (symbol 22848 . 22854) (close-paren 22845 . 22846) (punctuation 22843 . 22844) (semantic-list #("(i)" 0 1 (macros (("i" symbol "i" 22841 . 22842)))) 22829 . 22843) (RETURN 22822 . 22828) (open-paren 22818 . 22819) (close-paren 22816 . 22817) (symbol 22815 . 22816) (symbol 22805 . 22814) (open-paren 22804 . 22805) (close-paren 22802 . 22803) (symbol 22799 . 22802) (open-paren 22798 . 22799) (symbol 22786 . 22797) (symbol 22779 . 22785) (close-paren 22776 . 22777) (punctuation 22774 . 22775) (semantic-list #("(o)" 0 1 (macros (("o" symbol "o" 22772 . 22773)))) 22760 . 22774) (RETURN 22753 . 22759) (open-paren 22749 . 22750) (close-paren 22747 . 22748) (symbol 22746 . 22747) (symbol 22734 . 22745) (open-paren 22733 . 22734) (close-paren 22731 . 22732) (symbol 22728 . 22731) (open-paren 22727 . 22728) (symbol 22717 . 22726) (symbol 22710 . 22716) (punctuation 22435 . 22436) (close-paren 22434 . 22435) (symbol 22423 . 22434) (open-paren 22422 . 22423) (symbol 22408 . 22421) (DOUBLE 22401 . 22407) (EXTERN 22394 . 22400) (punctuation 22086 . 22087) (close-paren 22085 . 22086) (symbol 22074 . 22085) (punctuation 22072 . 22073) (symbol 22061 . 22072) (open-paren 22060 . 22061) (symbol 22040 . 22059) (VOID 22035 . 22039) (EXTERN 22018 . 22024) (punctuation 21989 . 21990) (close-paren 21988 . 21989) (symbol 21977 . 21988) (punctuation 21975 . 21976) (INT 21972 . 21975) (punctuation 21970 . 21971) (symbol 21959 . 21970) (open-paren 21958 . 21959) (symbol 21943 . 21957) (VOID 21938 . 21942) (EXTERN 21931 . 21937) (punctuation 21929 . 21930) (close-paren 21928 . 21929) (INT 21925 . 21928) (punctuation 21923 . 21924) (symbol 21912 . 21923) (open-paren 21911 . 21912) (symbol 21896 . 21910) (symbol 21884 . 21895) (EXTERN 21877 . 21883) (punctuation 21845 . 21846) (close-paren 21844 . 21845) (symbol 21833 . 21844) (punctuation 21820 . 21821) (symbol 21811 . 21820) (punctuation 21809 . 21810) (symbol 21798 . 21809) (open-paren 21797 . 21798) (symbol 21769 . 21796) (VOID 21764 . 21768) (symbol 21757 . 21763) (punctuation 21687 . 21688) (close-paren 21686 . 21687) (symbol 21680 . 21685) (punctuation 21678 . 21679) (symbol 21655 . 21677) (open-paren 21653 . 21654) (symbol 21630 . 21652) (ENUM 21625 . 21629) (punctuation 18903 . 18904) (close-paren 18902 . 18903) (symbol 18833 . 18852) (punctuation 18781 . 18782) (symbol 18762 . 18781) (punctuation 18715 . 18716) (symbol 18703 . 18715) (punctuation 18665 . 18666) (symbol 18652 . 18665) (punctuation 18611 . 18612) (symbol 18599 . 18611) (open-paren 18593 . 18594) (symbol 18577 . 18590) (ENUM 18572 . 18576) (punctuation 18411 . 18412) (close-paren 18410 . 18411) (number 18406 . 18407) (punctuation 18404 . 18405) (symbol 18393 . 18403) (punctuation 18386 . 18387) (number 18385 . 18386) (punctuation 18383 . 18384) (number 18381 . 18382) (punctuation 18379 . 18380) (semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 18367 . 18378) (punctuation 18365 . 18366) (symbol 18355 . 18364) (punctuation 18285 . 18286) (number 18284 . 18285) (punctuation 18282 . 18283) (symbol 18266 . 18281) (punctuation 18002 . 18003) (number 18001 . 18002) (punctuation 17999 . 18000) (symbol 17987 . 17998) (punctuation 17840 . 17841) (number 17839 . 17840) (punctuation 17837 . 17838) (number 17835 . 17836) (punctuation 17833 . 17834) (semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 17821 . 17832) (punctuation 17819 . 17820) (symbol 17809 . 17818) (punctuation 17803 . 17804) (number 17802 . 17803) (punctuation 17800 . 17801) (symbol 17790 . 17799) (punctuation 17687 . 17688) (number 17686 . 17687) (punctuation 17684 . 17685) (symbol 17672 . 17683) (open-paren 17597 . 17598) (symbol 17585 . 17594) (ENUM 17580 . 17584) (close-paren 15424 . 15425) (semantic-list 15392 . 15424) (punctuation 15390 . 15391) (punctuation 15388 . 15389) (punctuation 15387 . 15388) (symbol 15362 . 15379) (symbol 15354 . 15361) (punctuation 15352 . 15353) (punctuation 15350 . 15351) (punctuation 15349 . 15350) (symbol 15336 . 15348) (symbol 15328 . 15335) (punctuation 15326 . 15327) (punctuation 15324 . 15325) (punctuation 15323 . 15324) (punctuation 10016 . 10017) (punctuation 10015 . 10016) (symbol 10009 . 10014) (string 9947 . 10008) (string 9878 . 9943) (symbol 9872 . 9877) (punctuation 9870 . 9871) (punctuation ";" 9793 . 9824) (symbol "EXTERNALLY_VISIBLE" 9685 . 9729) (symbol "VALMASK" 9685 . 9729) (CONST "const" 9685 . 9729) (symbol "EMACS_INT" 9685 . 9729) (EXTERN "extern" 9685 . 9729) (punctuation ";" 9574 . 9609) (symbol "EXTERNALLY_VISIBLE" 9483 . 9526) (CONST "const" 9483 . 9526) (symbol "USE_LSB_TAG" 9483 . 9526) (EXTERN "extern" 9483 . 9526) (number 4782 . 4783) (punctuation 4780 . 4781) (punctuation 4779 . 4780) (semantic-list 4754 . 4778) (punctuation 4752 . 4753) (punctuation 4751 . 4752) (number "8" 4149 . 4174) (spp-macro-def 4113 . 4138) (punctuation 4103 . 4104) (LONG 3170 . 3174) (UNSIGNED 3161 . 3169) (TYPEDEF 3153 . 3160) (LONG 3128 . 3132) (TYPEDEF 3120 . 3127) (string 2593 . 2619) (symbol 2587 . 2592) (punctuation 2584 . 2585) (punctuation ";" 2232 . 2266) (symbol "EXTERNALLY_VISIBLE" 2169 . 2210) (CONST "const" 2169 . 2210) (symbol "GCTYPEBITS" 2169 . 2210) (EXTERN "extern" 2169 . 2210) (symbol 1141 . 1160))
      :lexical-table 
        '(("pMd" . ((symbol "pI" 5286 . 5288) (string "\"d\"" 5288 . 5291)))
          ("VALMASK" . ((semantic-list "(USE_LSB_TAG ? - (1 << GCTYPEBITS) : VAL_MAX)" 9747 . 9792)))
          ("GCALIGNMENT" . ((number "1" 10454 . 10455)))
          ("DEFUN_ARGS_0" . ((semantic-list "(void)" 26197 . 26203)))
          ("LISP_WORD_TAG" (spp-arg-list ("tag") 27673 . 27678) . ((semantic-list "((Lisp_Word_tag) (tag) << (USE_LSB_TAG ? 0 : VALBITS))" 27683 . 27737)))
          ("LISPSYM_INITIALLY" (spp-arg-list ("name") 28082 . 28088) . ((symbol "TAG_PTR" 28093 . 28100) (semantic-list "(Lisp_Symbol, (char *) (intptr_t) ((i##name) * sizeof *lispsym))" 28101 . 28165)))
          ("ARRAY_MARK_FLAG" . ((symbol "PTRDIFF_MIN" 32692 . 32703)))
          ("XSETBUFFER" (spp-arg-list ("a" "b") 40017 . 40023) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_BUFFER))" 40024 . 40062)))
          ("sys_longjmp" (spp-arg-list ("j" "v") 61854 . 61860) . ((symbol "longjmp" 61861 . 61868) (semantic-list "(j, v)" 61869 . 61875)))
          ("CHECK_INTEGER_COERCE_MARKER" (spp-arg-list ("x") 85695 . 85698) . 
              ((DO "do" 85707 . 85709) (semantic-list "{									\\
    if (MARKERP (x))							\\
      XSETFASTINT (x, marker_position (x));				\\
    else								\\
      CHECK_TYPE (INTEGERP (x), Qnumber_or_marker_p, x);		\\
  }" 85710 . 85881) (WHILE "while" 85882 . 85887) (semantic-list "(false)" 85888 . 85895)))
          ("DEFVAR_INT" (spp-arg-list ("lname" "vname" "doc") 90402 . 90421) . 
              ((DO "do" 90427 . 90429) (semantic-list "{						\\
    static struct Lisp_Intfwd i_fwd;		\\
    defvar_int (&i_fwd, lname, &globals.f_ ## vname);		\\
  }" 90430 . 90539) (WHILE "while" 90540 . 90545) (semantic-list "(false)" 90546 . 90553)))
          ("AUTO_LIST3" (spp-arg-list ("name" "a" "b" "c") 150551 . 150566) . 
              ((symbol "Lisp_Object" 150575 . 150586) (symbol "name" 150587 . 150591) (punctuation "=" 150592 . 150593) (semantic-list "(USE_STACK_CONS					\\
		      ? STACK_CONS (a, STACK_CONS (b, STACK_CONS (c, Qnil))) \\
		      : list3 (a, b, c))" 150594 . 150707)))
          ("FOR_EACH_TAIL_INTERNAL" (spp-arg-list ("tail" "cycle" "check_quit") 153591 . 153616) . ((FOR "for" 153623 . 153626) (semantic-list "(struct for_each_tail_internal li = { tail, 2, 0, 2 };		\\
       CONSP (tail);							\\
       ((tail) = XCDR (tail),						\\
	((--li.q != 0							\\
	  || ((check_quit) ? maybe_quit () : (void) 0, 0 < --li.n)	\\
	  || (li.q = li.n = li.max <<= 1, li.n >>= USHRT_WIDTH,		\\
	      li.tortoise = (tail), false))				\\
	 && EQ (tail, li.tortoise))					\\
	? (cycle) : (void) 0))" 153627 . 153996)))
          ("EMACS_LISP_H")
          ("max" (spp-arg-list ("a" "b") 1955 . 1961) . ((semantic-list "((a) > (b) ? (a) : (b))" 1962 . 1985)))
          ("pD" . ((string "\"ll\"" 5782 . 5786)))
          ("case_Lisp_Int" . 
              ((CASE "case" 17231 . 17235) (symbol "Lisp_Int0" 17236 . 17245) (punctuation ":" 17245 . 17246) (CASE "case" 17247 . 17251) (symbol "Lisp_Int1" 17252 . 17261)))
          ("DEFUN_ARGS_MANY" . ((semantic-list "(ptrdiff_t, Lisp_Object *)" 26106 . 26132)))
          ("DEFUN_ARGS_1" . ((semantic-list "(Lisp_Object)" 26225 . 26238)))
          ("SYMBOL_INDEX" (spp-arg-list ("sym") 28762 . 28767) . ((spp-symbol-merge ((symbol "i" 28768 . 28769) (symbol "sym" 28771 . 28774)) 28768 . 28774)))
          ("XSETCONS" (spp-arg-list ("a" "b") 38455 . 38461) . ((semantic-list "((a) = make_lisp_ptr (b, Lisp_Cons))" 38462 . 38498)))
          ("DEFUN" (spp-arg-list ("lname" "fnname" "sname" "minargs" "maxargs" "intspec" "doc") 87764 . 87818) . 
              ((STATIC "static" 87824 . 87830) (STRUCT "struct" 87831 . 87837) (symbol "Lisp_Subr" 87838 . 87847) (symbol "sname" 87848 . 87853) (punctuation "=" 87854 . 87855) (semantic-list "{ { PVEC_SUBR << PSEUDOVECTOR_AREA_BITS },				\\
       { .a ## maxargs = fnname },					\\
       minargs, maxargs, lname, intspec, 0}" 87866 . 87998) (punctuation ";" 87998 . 87999) (symbol "Lisp_Object" 88008 . 88019) (symbol "fnname" 88020 . 88026)))
          ("SAFE_NALLOCA" (spp-arg-list ("buf" "multiplier" "nitems") 145632 . 145657) . 
              ((DO "do" 145665 . 145667) (semantic-list "{								 \\
    if ((nitems) <= sa_avail / sizeof *(buf) / (multiplier))	 \\
      (buf) = AVAIL_ALLOCA (sizeof *(buf) * (multiplier) * (nitems)); \\
    else							 \\
      {								 \\
	(buf) = xnmalloc (nitems, sizeof *(buf) * (multiplier)); \\
	record_unwind_protect_ptr (xfree, buf);			 \\
      }								 \\
  }" 145668 . 145979) (WHILE "while" 145980 . 145985) (semantic-list "(false)" 145986 . 145993)))
          ("AUTO_LIST4" (spp-arg-list ("name" "a" "b" "c" "d") 150726 . 150744) . 
              ((symbol "Lisp_Object" 150755 . 150766) (symbol "name" 150767 . 150771) (punctuation "=" 150786 . 150787) (semantic-list "(USE_STACK_CONS							\\
	 ? STACK_CONS (a, STACK_CONS (b, STACK_CONS (c,			\\
						     STACK_CONS (d, Qnil)))) \\
	 : list4 (a, b, c, d))" 150788 . 150925)))
          ("min" (spp-arg-list ("a" "b") 1997 . 2003) . ((semantic-list "((a) < (b) ? (a) : (b))" 2004 . 2027)))
          ("BITS_WORD_MAX" . ((symbol "SIZE_MAX" 4512 . 4520)))
          ("USE_LSB_TAG" . ((semantic-list "(VAL_MAX / 2 < INTPTR_MAX)" 9547 . 9573)))
          ("lisp_h_SYMBOL_TRAPPED_WRITE_P" (spp-arg-list ("sym") 13827 . 13832) . ((semantic-list "(XSYMBOL (sym)->u.s.trapped_write)" 13833 . 13867)))
          ("lisp_h_XCAR" (spp-arg-list ("c") 14110 . 14113) . 
              ((symbol "XCONS" 14114 . 14119) (semantic-list "(c)" 14120 . 14123) (punctuation "-" 14123 . 14124) (punctuation ">" 14124 . 14125) (symbol "u" 14125 . 14126) (punctuation "." 14126 . 14127) (symbol "s" 14127 . 14128) (punctuation "." 14128 . 14129) (symbol "car" 14129 . 14132)))
          ("lisp_h_check_cons_list" (spp-arg-list nil 14364 . 14366) . ((semantic-list "((void) 0)" 14367 . 14377)))
          ("XUNTAG" (spp-arg-list ("a" "type" "ctype") 23435 . 23451) . ((semantic-list "((ctype *) \\
				((char *) XLP (a) - LISP_WORD_TAG (type)))" 23452 . 23511)))
          ("DEFUN_ARGS_2" . ((semantic-list "(Lisp_Object, Lisp_Object)" 26260 . 26286)))
          ("CHECK_RANGED_INTEGER" (spp-arg-list ("x" "lo" "hi") 83864 . 83875) . 
              ((DO "do" 83884 . 83886) (semantic-list "{									\\
    CHECK_FIXNUM (x);							\\
    if (! ((lo) <= XFIXNUM (x) && XFIXNUM (x) <= (hi)))			\\
      args_out_of_range_3						\\
	(x,								\\
	 make_fixnum ((lo) < 0 && (lo) < MOST_NEGATIVE_FIXNUM		\\
		      ? MOST_NEGATIVE_FIXNUM				\\
		      : (lo)),						\\
	 make_fixnum (min (hi, MOST_POSITIVE_FIXNUM)));			\\
  }" 83887 . 84210) (WHILE "while" 84211 . 84216) (semantic-list "(false)" 84217 . 84224)))
          ("FOR_EACH_TAIL" (spp-arg-list ("tail") 152404 . 152410) . ((symbol "FOR_EACH_TAIL_INTERNAL" 152415 . 152437) (semantic-list "(tail, circular_list (tail), true)" 152438 . 152472)))
          ("eassume" (spp-arg-list ("cond") 7170 . 7176) . ((symbol "assume" 7177 . 7183) (semantic-list "(cond)" 7184 . 7190)))
          ("lisp_h_EQ" (spp-arg-list ("x" "y") 13371 . 13377) . ((semantic-list "(XLI (x) == XLI (y))" 13378 . 13398)))
          ("DEFINE_KEY_OPS_AS_MACROS" . ((symbol "true" 15460 . 15464)))
          ("ENUM_BF" (spp-arg-list ("TYPE") 17554 . 17560) . ((ENUM "enum" 17561 . 17565) (symbol "TYPE" 17566 . 17570)))
          ("DEFUN_ARGS_3" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object)" 26308 . 26347)))
          ("TAG_PTR" (spp-arg-list ("tag" "ptr") 27828 . 27838) . ((symbol "LISP_INITIALLY" 27843 . 27857) (semantic-list "((Lisp_Word) ((untagged_ptr) (ptr) + LISP_WORD_TAG (tag)))" 27858 . 27916)))
          ("PSEUDOVECTOR_FLAG" . ((semantic-list "(PTRDIFF_MAX - PTRDIFF_MAX / 2)" 32937 . 32968)))
          ("XSETTERMINAL" (spp-arg-list ("a" "b") 39823 . 39829) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_TERMINAL))" 39830 . 39870)))
          ("XSETCOMPILED" (spp-arg-list ("a" "b") 39951 . 39957) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_COMPILED))" 39958 . 39998)))
          ("STRING_SET_UNIBYTE" (spp-arg-list ("STR") 45186 . 45191) . 
              ((DO "do" 45199 . 45201) (semantic-list "{							\\
    if (XSTRING (STR)->u.s.size == 0)			\\
      (STR) = empty_unibyte_string;			\\
    else						\\
      XSTRING (STR)->u.s.size_byte = -1;		\\
  }" 45202 . 45357) (WHILE "while" 45358 . 45363) (semantic-list "(false)" 45364 . 45371)))
          ("PSEUDOVECSIZE" (spp-arg-list ("type" "nonlispfield") 53868 . 53888) . ((semantic-list "((offsetof (type, nonlispfield) - header_size) / word_size)" 53895 . 53954)))
          ("UNSIGNED_CMP" (spp-arg-list ("a" "op" "b") 54300 . 54310) . ((semantic-list "(max (sizeof ((a) + 0), sizeof ((b) + 0)) <= sizeof (unsigned)	\\
   ? ((a) + (unsigned) 0) op ((b) + (unsigned) 0)			\\
   : ((a) + (uintmax_t) 0) op ((b) + (uintmax_t) 0))" 54320 . 54491)))
          ("FLOAT_TO_STRING_BUFSIZE" . ((number "350" 118102 . 118105)))
          ("AUTO_CONS_EXPR" (spp-arg-list ("a" "b") 149858 . 149864) . ((semantic-list "(USE_STACK_CONS ? STACK_CONS (a, b) : Fcons (a, b))" 149869 . 149920)))
          ("pMu" . ((symbol "pI" 5305 . 5307) (string "\"u\"" 5307 . 5310)))
          ("LISP_WORDS_ARE_POINTERS" . ((semantic-list "(EMACS_INT_MAX == INTPTR_MAX)" 10802 . 10831)))
          ("lisp_h_XLI" (spp-arg-list ("o") 12485 . 12488) . ((semantic-list "(o)" 12489 . 12492)))
          ("DEFUN_ARGS_4" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)" 26369 . 26421)))
          ("DEFINE_NON_NIL_Q_SYMBOL_MACROS" . ((symbol "true" 29130 . 29134)))
          ("FIXNUM_OVERFLOW_P" (spp-arg-list ("i") 37787 . 37790) . ((semantic-list "(! ((0 <= (i) || MOST_NEGATIVE_FIXNUM <= (i)) && (i) <= MOST_POSITIVE_FIXNUM))" 37795 . 37873)))
          ("XSETSYMBOL" (spp-arg-list ("a" "b") 38649 . 38655) . ((semantic-list "((a) = make_lisp_symbol (b))" 38656 . 38684)))
          ("XSETPVECTYPESIZE" (spp-arg-list ("v" "code" "lispsize" "restsize") 38916 . 38945) . ((semantic-list "((v)->header.size = (PSEUDOVECTOR_FLAG			\\
		       | ((code) << PSEUDOVECTOR_AREA_BITS)	\\
		       | ((restsize) << PSEUDOVECTOR_SIZE_BITS) \\
		       | (lispsize)))" 38951 . 39117)))
          ("DEFSYM" (spp-arg-list ("sym" "name") 64487 . 64498))
          ("QUITP" . ((semantic-list "(!NILP (Vquit_flag) && NILP (Vinhibit_quit))" 96156 . 96200)))
          ("ALLOCATE_ZEROED_PSEUDOVECTOR" (spp-arg-list ("type" "field" "tag") 115514 . 115532) . ((semantic-list "((type *) allocate_pseudovector (VECSIZE (type),		       \\
				   PSEUDOVECSIZE (type, field),	       \\
				   VECSIZE (type), tag))" 115545 . 115677)))
          ("WAIT_READING_MAX" . ((symbol "INTMAX_MAX" 135795 . 135805)))
          ("CHILD_SETUP_TYPE" . ((symbol "_Noreturn" 136298 . 136307) (VOID "void" 136308 . 136312)))
          ("SAFE_ALLOCA_LISP" (spp-arg-list ("buf" "nelt") 148099 . 148110) . ((symbol "SAFE_ALLOCA_LISP_EXTRA" 148111 . 148133) (semantic-list "(buf, nelt, 0)" 148134 . 148148)))
          ("DEFINE_GDB_SYMBOL_END" (spp-arg-list ("val") 1864 . 1869) . ((punctuation ";" 1870 . 1871)))
          ("lisp_h_CHECK_FIXNUM" (spp-arg-list ("x") 13090 . 13093) . ((symbol "CHECK_TYPE" 13094 . 13104) (semantic-list "(FIXNUMP (x), Qfixnump, x)" 13105 . 13131)))
          ("DEFUN_ARGS_5" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object)" 26443 . 26514)))
          ("MOST_NEGATIVE_FIXNUM" . ((semantic-list "(-1 - MOST_POSITIVE_FIXNUM)" 35353 . 35380)))
          ("STRING_SET_MULTIBYTE" (spp-arg-list ("STR") 45503 . 45508) . 
              ((DO "do" 45515 . 45517) (semantic-list "{							\\
    if (XSTRING (STR)->u.s.size == 0)			\\
      (STR) = empty_multibyte_string;			\\
    else						\\
      XSTRING (STR)->u.s.size_byte = XSTRING (STR)->u.s.size; \\
  }" 45518 . 45695) (WHILE "while" 45696 . 45701) (semantic-list "(false)" 45702 . 45709)))
          ("XSET_HASH_TABLE" (spp-arg-list ("VAR" "PTR") 67754 . 67764) . ((semantic-list "(XSETPSEUDOVECTOR (VAR, PTR, PVEC_HASH_TABLE))" 67772 . 67818)))
          ("CALLMANY" (spp-arg-list ("f" "array") 88315 . 88325) . ((semantic-list "(f)" 88326 . 88329) (semantic-list "(ARRAYELTS (array), array)" 88330 . 88356)))
          ("DEFVAR_KBOARD" (spp-arg-list ("lname" "vname" "doc") 90576 . 90595) . 
              ((DO "do" 90602 . 90604) (semantic-list "{								\\
    static struct Lisp_Kboard_Objfwd ko_fwd;			\\
    defvar_kboard (&ko_fwd, lname, offsetof (KBOARD, vname ## _)); \\
  }" 90605 . 90737) (WHILE "while" 90738 . 90743) (semantic-list "(false)" 90744 . 90751)))
          ("ALLOCATE_PSEUDOVECTOR" (spp-arg-list ("type" "field" "tag") 115171 . 115189) . ((semantic-list "((type *) allocate_pseudovector (VECSIZE (type),		       \\
				   PSEUDOVECSIZE (type, field),	       \\
				   PSEUDOVECSIZE (type, field), tag))" 115203 . 115348)))
          ("DAEMON_RUNNING" . ((semantic-list "(daemon_type >= 0)" 134746 . 134764)))
          ("eabs" (spp-arg-list ("x") 144582 . 144585) . ((semantic-list "((x) < 0 ? -(x) : (x))" 144594 . 144616)))
          ("SAFE_ALLOCA" (spp-arg-list ("size") 145313 . 145319) . ((semantic-list "((size) <= sa_avail				\\
			   ? AVAIL_ALLOCA (size)			\\
			   : record_xmalloc (size))" 145320 . 145407)))
          ("AUTO_STRING" (spp-arg-list ("name" "str") 151294 . 151305) . ((symbol "AUTO_STRING_WITH_LEN" 151310 . 151330) (semantic-list "(name, str, strlen (str))" 151331 . 151356)))
          ("DEFINE_GDB_SYMBOL_BEGIN" (spp-arg-list ("type" "id") 1789 . 1799) . 
              ((EXTERN "extern" 1800 . 1806) (symbol "DECLARE_GDB_SYM" 1807 . 1822) (semantic-list "(type, id)" 1823 . 1833)))
          ("ARRAYELTS" (spp-arg-list ("arr") 2085 . 2090) . ((semantic-list "(sizeof (arr) / sizeof (arr)[0])" 2091 . 2123)))
          ("pI" . ((string "\"ll\"" 3856 . 3860)))
          ("eassert" (spp-arg-list ("cond") 7092 . 7098) . ((semantic-list "((void) (false && (cond)))" 7099 . 7125)))
          ("lisp_h_XPL" (spp-arg-list ("p") 12592 . 12595) . ((semantic-list "((Lisp_Object) (uintptr_t) (p))" 12596 . 12627)))
          ("lisp_h_CHECK_SYMBOL" (spp-arg-list ("x") 13159 . 13162) . ((symbol "CHECK_TYPE" 13163 . 13173) (semantic-list "(SYMBOLP (x), Qsymbolp, x)" 13174 . 13200)))
          ("DEFUN_ARGS_6" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object, Lisp_Object)" 26536 . 26620)))
          ("DEFINE_LISP_SYMBOL" (spp-arg-list ("name") 28528 . 28534) . 
              ((symbol "DEFINE_GDB_SYMBOL_BEGIN" 28540 . 28563) (semantic-list "(Lisp_Object, name)" 28564 . 28583) (symbol "DEFINE_GDB_SYMBOL_END" 28589 . 28610) (semantic-list "(LISPSYM_INITIALLY (name))" 28611 . 28637)))
          ("XSETWINDOW_CONFIGURATION" (spp-arg-list ("a" "b") 39609 . 39615) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_WINDOW_CONFIGURATION))" 39620 . 39672)))
          ("XSETPROCESS" (spp-arg-list ("a" "b") 39692 . 39698) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_PROCESS))" 39699 . 39738)))
          ("sys_setjmp" (spp-arg-list ("j") 61819 . 61822) . ((symbol "setjmp" 61823 . 61829) (semantic-list "(j)" 61830 . 61833)))
          ("CHECK_NUMBER_COERCE_MARKER" (spp-arg-list ("x") 85458 . 85461) . 
              ((DO "do" 85470 . 85472) (semantic-list "{									\\
    if (MARKERP (x))							\\
      XSETFASTINT (x, marker_position (x));				\\
    else								\\
      CHECK_TYPE (NUMBERP (x), Qnumber_or_marker_p, x);			\\
  }" 85473 . 85644) (WHILE "while" 85645 . 85650) (semantic-list "(false)" 85651 . 85658)))
          ("INTEGER_TO_CONS" (spp-arg-list ("i") 100210 . 100213) . ((semantic-list "(! FIXNUM_OVERFLOW_P (i)					    \\
   ? make_fixnum (i)						    \\
   : EXPR_SIGNED (i) ? intbig_to_lisp (i) : uintbig_to_lisp (i))" 100226 . 100357)))
          ("USE_SAFE_ALLOCA" . 
              ((symbol "ptrdiff_t" 145107 . 145116) (symbol "sa_avail" 145117 . 145125) (punctuation "=" 145126 . 145127) (symbol "MAX_ALLOCA" 145128 . 145138) (punctuation ";" 145138 . 145139) (symbol "ptrdiff_t" 145144 . 145153) (symbol "sa_count" 145154 . 145162) (punctuation "=" 145163 . 145164) (symbol "SPECPDL_INDEX" 145165 . 145178) (semantic-list "()" 145179 . 145181)))
          ("EMACS_INT_MAX" . ((symbol "LLONG_MAX" 3293 . 3302)))
          ("VAL_MAX" . ((semantic-list "(EMACS_INT_MAX >> (GCTYPEBITS - 1))" 9093 . 9128)))
          ("LISP_INITIALLY" (spp-arg-list ("w") 21617 . 21620) . ((semantic-list "(w)" 21621 . 21624)))
          ("DEFUN_ARGS_7" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object, Lisp_Object, Lisp_Object)" 26642 . 26739)))
          ("MOST_POSITIVE_FIXNUM" . ((semantic-list "(EMACS_INT_MAX >> INTTYPEBITS)" 35293 . 35323)))
          ("USE_STACK_LISP_OBJECTS" . ((symbol "false" 148921 . 148926)))
          ("lisp_h_XCONS" (spp-arg-list ("a") 14197 . 14200) . ((semantic-list "(eassert (CONSP (a)), XUNTAG (a, Lisp_Cons, struct Lisp_Cons))" 14206 . 14268)))
          ("lisp_h_XHASH" (spp-arg-list ("a") 14289 . 14292) . ((symbol "XUFIXNUM" 14293 . 14301) (semantic-list "(a)" 14302 . 14305)))
          ("DEFUN_ARGS_8" . ((semantic-list "(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, \\
			 Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)" 26761 . 26871)))
          ("XSETINT" (spp-arg-list ("a" "b") 38352 . 38358) . ((semantic-list "((a) = make_fixnum (b))" 38359 . 38382)))
          ("XSETPSEUDOVECTOR" (spp-arg-list ("a" "b" "code") 39212 . 39224) . ((symbol "XSETTYPED_PSEUDOVECTOR" 39229 . 39251) (semantic-list "(a, b,					\\
			  (XUNTAG (a, Lisp_Vectorlike,		\\
				   union vectorlike_header)	\\
			   ->size),				\\
			  code)" 39252 . 39366)))
          ("XSETSUBR" (spp-arg-list ("a" "b") 39887 . 39893) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_SUBR))" 39894 . 39930)))
          ("STRING_BYTES_BOUND" . ((semantic-list "((ptrdiff_t) min (MOST_POSITIVE_FIXNUM, min (SIZE_MAX, PTRDIFF_MAX) - 1))" 45048 . 45121)))
          ("_UCHAR_T")
          ("CHECK_FIXNUM_COERCE_MARKER" (spp-arg-list ("x") 84529 . 84532) . 
              ((DO "do" 84541 . 84543) (semantic-list "{									\\
    if (MARKERP ((x)))							\\
      XSETFASTINT (x, marker_position (x));				\\
    else								\\
      CHECK_TYPE (FIXNUMP (x), Qinteger_or_marker_p, x);		\\
  }" 84544 . 84717) (WHILE "while" 84718 . 84723) (semantic-list "(false)" 84724 . 84731)))
          ("CALLN" (spp-arg-list ("f" "...") 88665 . 88673) . ((symbol "CALLMANY" 88674 . 88682) (semantic-list "(f, ((Lisp_Object []) {__VA_ARGS__}))" 88683 . 88720)))
          ("lisp_h_FIXNUMP" (spp-arg-list ("x") 13472 . 13475) . ((semantic-list "((XTYPE (x) & (Lisp_Int0 | ~Lisp_Int1)) == Lisp_Int0)" 13476 . 13529)))
          ("XSETFLOAT" (spp-arg-list ("a" "b") 38702 . 38708) . ((semantic-list "((a) = make_lisp_ptr (b, Lisp_Float))" 38709 . 38746)))
          ("XSETPVECTYPE" (spp-arg-list ("v" "code") 38796 . 38805) . ((semantic-list "((v)->header.size |= PSEUDOVECTOR_FLAG | ((code) << PSEUDOVECTOR_AREA_BITS))" 38815 . 38891)))
          ("XSETTYPED_PSEUDOVECTOR" (spp-arg-list ("a" "b" "size" "code") 39397 . 39415) . ((semantic-list "(XSETVECTOR (a, b),							\\
   eassert ((size & (PSEUDOVECTOR_FLAG | PVEC_TYPE_MASK))		\\
	    == (PSEUDOVECTOR_FLAG | (code << PSEUDOVECTOR_AREA_BITS))))" 39422 . 39575)))
          ("XSETWINDOW" (spp-arg-list ("a" "b") 39757 . 39763) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_WINDOW))" 39764 . 39802)))
          ("XSETBOOL_VECTOR" (spp-arg-list ("a" "b") 40158 . 40164) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_BOOL_VECTOR))" 40165 . 40208)))
          ("XSETTHREAD" (spp-arg-list ("a" "b") 40307 . 40313) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_THREAD))" 40314 . 40352)))
          ("XSETMUTEX" (spp-arg-list ("a" "b") 40370 . 40376) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_MUTEX))" 40377 . 40414)))
          ("IEEE_FLOATING_POINT" . ((semantic-list "(FLT_RADIX == 2 && FLT_MANT_DIG == 24 \\
			     && FLT_MIN_EXP == -125 && FLT_MAX_EXP == 128)" 80160 . 80253)))
          ("DEFVAR_LISP" (spp-arg-list ("lname" "vname" "doc") 89876 . 89895) . 
              ((DO "do" 89901 . 89903) (semantic-list "{						\\
    static struct Lisp_Objfwd o_fwd;		\\
    defvar_lisp (&o_fwd, lname, &globals.f_ ## vname);		\\
  }" 89904 . 90014) (WHILE "while" 90015 . 90020) (semantic-list "(false)" 90021 . 90028)))
          ("SAFE_ALLOCA_STRING" (spp-arg-list ("ptr" "string") 146085 . 146098) . 
              ((DO "do" 146105 . 146107) (semantic-list "{							\\
    (ptr) = SAFE_ALLOCA (SBYTES (string) + 1);		\\
    memcpy (ptr, SDATA (string), SBYTES (string) + 1);	\\
  }" 146108 . 146228) (WHILE "while" 146229 . 146234) (semantic-list "(false)" 146235 . 146242)))
          ("SAFE_FREE_UNBIND_TO" (spp-arg-list ("count" "val") 147051 . 147063) . ((symbol "safe_free_unbind_to" 147068 . 147087) (semantic-list "(count, sa_count, val)" 147088 . 147110)))
          ("DECLARE_GDB_SYM" (spp-arg-list ("type" "id") 1576 . 1586) . 
              ((symbol "type" 1587 . 1591) (CONST "const" 1592 . 1597) (symbol "id" 1598 . 1600) (symbol "EXTERNALLY_VISIBLE" 1601 . 1619)))
          ("GCTYPEBITS" . ((number "3" 2230 . 2231)))
          ("lisp_h_CHECK_TYPE" (spp-arg-list ("ok" "predicate" "x") 13226 . 13244) . ((semantic-list "((ok) ? (void) 0 : wrong_type_argument (predicate, x))" 13250 . 13304)))
          ("lisp_h_SYMBOL_VAL" (spp-arg-list ("sym") 13893 . 13898) . ((semantic-list "(eassert ((sym)->u.s.redirect == SYMBOL_PLAINVAL), (sym)->u.s.val.value)" 13904 . 13976)))
          ("EXFUN" (spp-arg-list ("fnname" "maxargs") 25900 . 25917) . 
              ((EXTERN "extern" 25922 . 25928) (symbol "Lisp_Object" 25929 . 25940) (symbol "fnname" 25941 . 25947) (spp-symbol-merge ((symbol "DEFUN_ARGS_" 25948 . 25959) (symbol "maxargs" 25963 . 25970)) 25948 . 25970)))
          ("XSETSTRING" (spp-arg-list ("a" "b") 38585 . 38591) . ((semantic-list "((a) = make_lisp_ptr (b, Lisp_String))" 38592 . 38630)))
          ("XSETCONDVAR" (spp-arg-list ("a" "b") 40434 . 40440) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_CONDVAR))" 40441 . 40480)))
          ("CHECK_FIXNUM_OR_FLOAT_COERCE_MARKER" (spp-arg-list ("x") 85216 . 85219) . 
              ((DO "do" 85227 . 85229) (semantic-list "{									\\
    if (MARKERP (x))							\\
      XSETFASTINT (x, marker_position (x));				\\
    else								\\
      CHECK_TYPE (FIXED_OR_FLOATP (x), Qnumber_or_marker_p, x);		\\
  }" 85230 . 85408) (WHILE "while" 85409 . 85414) (semantic-list "(false)" 85415 . 85422)))
          ("CONS_TO_INTEGER" (spp-arg-list ("cons" "type" "var") 100681 . 100698) . ((semantic-list "(TYPE_SIGNED (type)							\\
  ? ((var) = cons_to_signed (cons, TYPE_MINIMUM (type), TYPE_MAXIMUM (type))) \\
  : ((var) = cons_to_unsigned (cons, TYPE_MAXIMUM (type))))" 100705 . 100872)))
          ("AVAIL_ALLOCA" (spp-arg-list ("size") 145203 . 145209) . ((semantic-list "(sa_avail -= (size), alloca (size))" 145210 . 145245)))
          ("SAFE_ALLOCA_LISP_EXTRA" (spp-arg-list ("buf" "nelt" "extra") 147420 . 147438) . 
              ((DO "do" 147450 . 147452) (semantic-list "{							       \\
    ptrdiff_t alloca_nbytes;				       \\
    if (INT_MULTIPLY_WRAPV (nelt, word_size, &alloca_nbytes)   \\
	|| INT_ADD_WRAPV (alloca_nbytes, extra, &alloca_nbytes) \\
	|| SIZE_MAX < alloca_nbytes)			       \\
      memory_full (SIZE_MAX);				       \\
    else if (alloca_nbytes <= sa_avail)			       \\
      (buf) = AVAIL_ALLOCA (alloca_nbytes);		       \\
    else						       \\
      {							       \\
	(buf) = xmalloc (alloca_nbytes);		       \\
	record_unwind_protect_array (buf, nelt);	       \\
      }							       \\
  }" 147453 . 147990) (WHILE "while" 147991 . 147996) (semantic-list "(false)" 147997 . 148004)))
          ("STACK_CONS" (spp-arg-list ("a" "b") 149763 . 149769) . ((symbol "make_lisp_ptr" 149774 . 149787) (semantic-list "(&((struct Lisp_Cons) {{{a, {b}}}}), Lisp_Cons)" 149788 . 149835)))
          ("BOOL_VECTOR_BITS_PER_CHAR" . ((number "8" 4139 . 4140)))
          ("GCALIGNED_UNION" . 
              ((CHAR "char" 10488 . 10492) (symbol "alignas" 10493 . 10500) (semantic-list "(GCALIGNMENT)" 10501 . 10514) (symbol "gcaligned" 10515 . 10524) (punctuation ";" 10524 . 10525)))
          ("lisp_h_XIL" (spp-arg-list ("i") 12513 . 12516) . ((semantic-list "(i)" 12517 . 12520)))
          ("lisp_h_XLP" (spp-arg-list ("o") 12541 . 12544) . ((semantic-list "((void *) (uintptr_t) (o))" 12545 . 12571)))
          ("lisp_h_FLOATP" (spp-arg-list ("x") 13420 . 13423) . ((semantic-list "(XTYPE (x) == Lisp_Float)" 13424 . 13449)))
          ("lisp_h_XCDR" (spp-arg-list ("c") 14152 . 14155) . 
              ((symbol "XCONS" 14156 . 14161) (semantic-list "(c)" 14162 . 14165) (punctuation "-" 14165 . 14166) (punctuation ">" 14166 . 14167) (symbol "u" 14167 . 14168) (punctuation "." 14168 . 14169) (symbol "s" 14169 . 14170) (punctuation "." 14170 . 14171) (symbol "u" 14171 . 14172) (punctuation "." 14172 . 14173) (symbol "cdr" 14173 . 14176)))
          ("INTMASK" . ((semantic-list "(EMACS_INT_MAX >> (INTTYPEBITS - 1))" 17172 . 17208)))
          ("XSETFASTINT" (spp-arg-list ("a" "b") 38402 . 38408) . ((semantic-list "((a) = make_fixed_natnum (b))" 38409 . 38438)))
          ("XSETCHAR_TABLE" (spp-arg-list ("a" "b") 40085 . 40091) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_CHAR_TABLE))" 40092 . 40134)))
          ("XSETSUB_CHAR_TABLE" (spp-arg-list ("a" "b") 40235 . 40241) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_SUB_CHAR_TABLE))" 40242 . 40288)))
          ("VECSIZE" (spp-arg-list ("type") 53577 . 53583) . ((semantic-list "((sizeof (type) - header_size + word_size - 1) / word_size)" 53593 . 53652)))
          ("ASCII_CHAR_P" (spp-arg-list ("c") 54554 . 54557) . ((symbol "UNSIGNED_CMP" 54558 . 54570) (semantic-list "(c, <, 0x80)" 54571 . 54583)))
          ("DEFVAR_LISP_NOPRO" (spp-arg-list ("lname" "vname" "doc") 90054 . 90073) . 
              ((DO "do" 90078 . 90080) (semantic-list "{						\\
    static struct Lisp_Objfwd o_fwd;		\\
    defvar_lisp_nopro (&o_fwd, lname, &globals.f_ ## vname);	\\
  }" 90081 . 90196) (WHILE "while" 90197 . 90202) (semantic-list "(false)" 90203 . 90210)))
          ("DEFVAR_BOOL" (spp-arg-list ("lname" "vname" "doc") 90230 . 90249) . 
              ((DO "do" 90255 . 90257) (semantic-list "{						\\
    static struct Lisp_Boolfwd b_fwd;		\\
    defvar_bool (&b_fwd, lname, &globals.f_ ## vname);		\\
  }" 90258 . 90369) (WHILE "while" 90370 . 90375) (semantic-list "(false)" 90376 . 90383)))
          ("AUTO_LIST1" (spp-arg-list ("name" "a") 150288 . 150297) . 
              ((symbol "Lisp_Object" 150307 . 150318) (symbol "name" 150319 . 150323) (punctuation "=" 150324 . 150325) (semantic-list "(USE_STACK_CONS ? STACK_CONS (a, Qnil) : list1 (a))" 150326 . 150377)))
          ("lisp_h_CONSP" (spp-arg-list ("x") 13325 . 13328) . ((semantic-list "(XTYPE (x) == Lisp_Cons)" 13329 . 13353)))
          ("lisp_h_NILP" (spp-arg-list ("x") 13549 . 13552) . ((symbol "EQ" 13553 . 13555) (semantic-list "(x, Qnil)" 13556 . 13565)))
          ("lisp_h_SET_SYMBOL_VAL" (spp-arg-list ("sym" "v") 13595 . 13603) . ((semantic-list "(eassert ((sym)->u.s.redirect == SYMBOL_PLAINVAL), \\
    (sym)->u.s.val.value = (v))" 13609 . 13693)))
          ("lisp_h_SYMBOL_CONSTANT_P" (spp-arg-list ("sym") 13726 . 13731) . ((semantic-list "(XSYMBOL (sym)->u.s.trapped_write == SYMBOL_NOWRITE)" 13737 . 13789)))
          ("lisp_h_SYMBOLP" (spp-arg-list ("x") 13999 . 14002) . ((semantic-list "(XTYPE (x) == Lisp_Symbol)" 14003 . 14029)))
          ("lisp_h_VECTORLIKEP" (spp-arg-list ("x") 14056 . 14059) . ((semantic-list "(XTYPE (x) == Lisp_Vectorlike)" 14060 . 14090)))
          ("DEFUN_ARGS_UNEVALLED" . ((semantic-list "(Lisp_Object)" 26162 . 26175)))
          ("XSETVECTOR" (spp-arg-list ("a" "b") 38517 . 38523) . ((semantic-list "((a) = make_lisp_ptr (b, Lisp_Vectorlike))" 38524 . 38566)))
          ("TYPE_RANGED_FIXNUMP" (spp-arg-list ("type" "x") 82011 . 82020) . ((semantic-list "(FIXNUMP (x)			      \\
   && (TYPE_SIGNED (type) ? TYPE_MINIMUM (type) <= XFIXNUM (x) : 0 <= XFIXNUM (x)) \\
   && XFIXNUM (x) <= TYPE_MAXIMUM (type))" 82025 . 82174)))
          ("CHECK_TYPE_RANGED_INTEGER" (spp-arg-list ("type" "x") 84258 . 84267) . 
              ((DO "do" 84272 . 84274) (semantic-list "{									\\
    if (TYPE_SIGNED (type))						\\
      CHECK_RANGED_INTEGER (x, TYPE_MINIMUM (type), TYPE_MAXIMUM (type)); \\
    else								\\
      CHECK_RANGED_INTEGER (x, 0, TYPE_MAXIMUM (type));			\\
  }" 84275 . 84479) (WHILE "while" 84480 . 84485) (semantic-list "(false)" 84486 . 84493)))
          ("IS_DAEMON" . ((semantic-list "(daemon_type != 0)" 134704 . 134722)))
          ("make_fixnum_or_float" (spp-arg-list ("val") 144743 . 144748) . ((semantic-list "(FIXNUM_OVERFLOW_P (val) ? make_float (val) : make_fixnum (val))" 144754 . 144818)))
          ("SAFE_FREE" (spp-arg-list nil 146316 . 146318) . ((symbol "safe_free" 146319 . 146328) (semantic-list "(sa_count)" 146329 . 146339)))
          ("AUTO_CONS" (spp-arg-list ("name" "a" "b") 150216 . 150228) . 
              ((symbol "Lisp_Object" 150229 . 150240) (symbol "name" 150241 . 150245) (punctuation "=" 150246 . 150247) (symbol "AUTO_CONS_EXPR" 150248 . 150262) (semantic-list "(a, b)" 150263 . 150269)))
          ("AUTO_LIST2" (spp-arg-list ("name" "a" "b") 150396 . 150408) . 
              ((symbol "Lisp_Object" 150418 . 150429) (symbol "name" 150430 . 150434) (punctuation "=" 150435 . 150436) (semantic-list "(USE_STACK_CONS					\\
		      ? STACK_CONS (a, STACK_CONS (b, Qnil))		\\
		      : list2 (a, b))" 150437 . 150532)))
          ("AUTO_STRING_WITH_LEN" (spp-arg-list ("name" "str" "len") 151755 . 151771) . 
              ((symbol "Lisp_Object" 151779 . 151790) (symbol "name" 151791 . 151795) (punctuation "=" 151796 . 151797) (semantic-list "(USE_STACK_STRING							\\
     ? (make_lisp_ptr							\\
	((&(struct Lisp_String) {{{len, -1, 0, (unsigned char *) (str)}}}), \\
	 Lisp_String))							\\
     : make_unibyte_string (str, len))" 151810 . 151999)))
          ("FOR_EACH_TAIL_SAFE" (spp-arg-list ("tail") 152629 . 152635) . ((symbol "FOR_EACH_TAIL_INTERNAL" 152640 . 152662) (semantic-list "(tail, (void) ((tail) = Qnil), false)" 152663 . 152700)))
          ("FOR_EACH_ALIST_VALUE" (spp-arg-list ("head_var" "list_var" "value_var") 154069 . 154100) . ((FOR "for" 154106 . 154109) (semantic-list "((list_var) = (head_var);						\\
       (CONSP (list_var) && ((value_var) = XCDR (XCAR (list_var)), true)); \\
       (list_var) = XCDR (list_var))" 154110 . 154256)))
          )
)
    (semanticdb-table "semanticdb-table-19e1a2c"
      :major-mode c-mode
      :tags 
        '( ("DYNLIB_H" variable (:constant-flag t) nil [758 766])
            ("stdbool.h" include (:system-flag t) nil [768 788])
            ("dynlib_handle_ptr" type
               (:typedef ("void")
                :pointer 1
                :type "typedef")
                nil [790 822])
            ("dynlib_open" function
               (:prototype-flag t
                :arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [854 871]))                  
                :type ("dynlib_handle_ptr" type (:type "class") nil nil))
                nil [823 872])
            ("dynlib_close" function
               (:prototype-flag t
                :arguments 
                  ( ("h" variable (:type ("dynlib_handle_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [891 911]))                  
                :type "int")
                nil [873 912])
            ("dynlib_error" function
               (:prototype-flag t
                :pointer 1
                :constant-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [939 944]))                  
                :type "char")
                nil [913 945])
            ("dynlib_sym" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("h" variable (:type ("dynlib_handle_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [985 1005])
                    ("sym" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1006 1022]))                  
                :type "void")
                nil [967 1023])
            ("dynlib_func" function
               (:prototype-flag t
                :arguments 
                  ( ("h" variable (:type ("dynlib_handle_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1151 1171])
                    ("sym" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1172 1188]))                  
                :type ("dynlib_function_ptr" type (:type "class") nil nil))
                nil [1118 1189])
            ("dynlib_addr" function
               (:prototype-flag t
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1399 1409])
                    ("file" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1410 1428])
                    ("sym" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1429 1446]))                  
                :type "void")
                nil [1381 1447]))          
      :file "dynlib.h"
      :pointmax 1471
      :fsize 1470
      :lastmodtime '(23336 3763 569688 520000)
      :unmatched-syntax '((punctuation 1116 . 1117) (semantic-list 1110 . 1116) (semantic-list 1067 . 1109) (punctuation 1066 . 1067) (symbol 1040 . 1065) (STRUCT 1033 . 1039) (TYPEDEF 1025 . 1032) (symbol 947 . 966))
      :lexical-table 
        '(("DYNLIB_H")
          )
)
    (semanticdb-table "semanticdb-table-19e1a4c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_CODING_H" variable (:constant-flag t) nil [1139 1153])
            ("lisp.h" include nil nil [1155 1172])
            ("define_coding_system_arg_index" type
               (:members 
                  ( ("coding_arg_name" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1301 1317])
                    ("coding_arg_mnemonic" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1322 1342])
                    ("coding_arg_coding_type" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1347 1370])
                    ("coding_arg_charset_list" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1375 1399])
                    ("coding_arg_ascii_compatible_p" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1404 1434])
                    ("coding_arg_decode_translation_table" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1439 1475])
                    ("coding_arg_encode_translation_table" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1480 1516])
                    ("coding_arg_post_read_conversion" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1521 1553])
                    ("coding_arg_pre_write_conversion" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1558 1590])
                    ("coding_arg_default_char" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1595 1619])
                    ("coding_arg_for_unibyte" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1624 1647])
                    ("coding_arg_plist" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1652 1669])
                    ("coding_arg_eol_type" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1674 1694])
                    ("coding_arg_max" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1699 1717]))                  
                :type "enum")
                nil [1257 1718])
            ("define_coding_iso2022_arg_index" type
               (:members 
                  ( ("coding_arg_iso2022_initial" variable
                       (:constant-flag t
                        :default-value (1794 1808)
                        :type "int")
                        (reparse-symbol enumsubparts) [1765 1808])
                    ("coding_arg_iso2022_reg_usage" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1814 1843])
                    ("coding_arg_iso2022_request" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1848 1875])
                    ("coding_arg_iso2022_flags" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1880 1905])
                    ("coding_arg_iso2022_max" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1910 1936]))                  
                :type "enum")
                nil [1720 1937])
            ("define_coding_utf8_arg_index" type
               (:members 
                  ( ("coding_arg_utf8_bom" variable
                       (:constant-flag t
                        :default-value (2003 2017)
                        :type "int")
                        (reparse-symbol enumsubparts) [1981 2017])
                    ("coding_arg_utf8_max" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2023 2046]))                  
                :type "enum")
                nil [1939 2047])
            ("define_coding_utf16_arg_index" type
               (:members 
                  ( ("coding_arg_utf16_bom" variable
                       (:constant-flag t
                        :default-value (2115 2129)
                        :type "int")
                        (reparse-symbol enumsubparts) [2092 2129])
                    ("coding_arg_utf16_endian" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2135 2159])
                    ("coding_arg_utf16_max" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2164 2188]))                  
                :type "enum")
                nil [2049 2189])
            ("define_coding_ccl_arg_index" type
               (:members 
                  ( ("coding_arg_ccl_decoder" variable
                       (:constant-flag t
                        :default-value (2257 2271)
                        :type "int")
                        (reparse-symbol enumsubparts) [2232 2271])
                    ("coding_arg_ccl_encoder" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2277 2300])
                    ("coding_arg_ccl_valids" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2305 2327])
                    ("coding_arg_ccl_max" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2332 2354]))                  
                :type "enum")
                nil [2191 2355])
            ("define_coding_undecided_arg_index" type
               (:members 
                  ( ("coding_arg_undecided_inhibit_null_byte_detection" variable
                       (:constant-flag t
                        :default-value (2455 2469)
                        :type "int")
                        (reparse-symbol enumsubparts) [2404 2469])
                    ("coding_arg_undecided_inhibit_iso_escape_detection" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2475 2525])
                    ("coding_arg_undecided_prefer_utf_8" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2530 2564])
                    ("coding_arg_undecided_max" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2569 2597]))                  
                :type "enum")
                nil [2357 2598])
            ("Vcoding_system_hash_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [3001 3046])
            ("coding_attr_index" type
               (:members 
                  ( ("coding_attr_base_name" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3152 3174])
                    ("coding_attr_docstring" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3179 3201])
                    ("coding_attr_mnemonic" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3206 3227])
                    ("coding_attr_type" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3232 3249])
                    ("coding_attr_charset_list" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3254 3279])
                    ("coding_attr_ascii_compat" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3284 3309])
                    ("coding_attr_decode_tbl" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3314 3337])
                    ("coding_attr_encode_tbl" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3342 3365])
                    ("coding_attr_trans_tbl" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3370 3392])
                    ("coding_attr_post_read" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3397 3419])
                    ("coding_attr_pre_write" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3424 3446])
                    ("coding_attr_default_char" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3451 3476])
                    ("coding_attr_for_unibyte" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3481 3505])
                    ("coding_attr_plist" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3510 3528])
                    ("coding_attr_category" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3534 3555])
                    ("coding_attr_safe_charsets" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3560 3586])
                    ("coding_attr_charset_valids" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3654 3681])
                    ("coding_attr_ccl_decoder" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3687 3711])
                    ("coding_attr_ccl_encoder" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3716 3740])
                    ("coding_attr_ccl_valids" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3745 3768])
                    ("coding_attr_iso_initial" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3774 3798])
                    ("coding_attr_iso_usage" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3803 3825])
                    ("coding_attr_iso_request" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3830 3854])
                    ("coding_attr_iso_flags" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3859 3881])
                    ("coding_attr_utf_bom" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3887 3907])
                    ("coding_attr_utf_16_endian" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3912 3938])
                    ("coding_attr_emacs_mule_full" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3944 3972])
                    ("coding_attr_undecided_inhibit_null_byte_detection" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3978 4028])
                    ("coding_attr_undecided_inhibit_iso_escape_detection" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4033 4084])
                    ("coding_attr_undecided_prefer_utf_8" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4089 4124])
                    ("coding_attr_last_index" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4130 4156]))                  
                :type "enum")
                nil [3121 4157])
            ("CODING_ATTR_BASE_NAME" variable (:constant-flag t) nil [4228 4249])
            ("CODING_ATTR_TYPE" variable (:constant-flag t) nil [4301 4317])
            ("CODING_ATTR_CHARSET_LIST" variable (:constant-flag t) nil [4365 4389])
            ("CODING_ATTR_MNEMONIC" variable (:constant-flag t) nil [4444 4464])
            ("CODING_ATTR_DOCSTRING" variable (:constant-flag t) nil [4515 4536])
            ("CODING_ATTR_ASCII_COMPAT" variable (:constant-flag t) nil [4588 4612])
            ("CODING_ATTR_DECODE_TBL" variable (:constant-flag t) nil [4667 4689])
            ("CODING_ATTR_ENCODE_TBL" variable (:constant-flag t) nil [4742 4764])
            ("CODING_ATTR_TRANS_TBL" variable (:constant-flag t) nil [4817 4838])
            ("CODING_ATTR_POST_READ" variable (:constant-flag t) nil [4890 4911])
            ("CODING_ATTR_PRE_WRITE" variable (:constant-flag t) nil [4963 4984])
            ("CODING_ATTR_DEFAULT_CHAR" variable (:constant-flag t) nil [5036 5060])
            ("CODING_ATTR_FOR_UNIBYTE" variable (:constant-flag t) nil [5115 5138])
            ("CODING_ATTR_PLIST" variable (:constant-flag t) nil [5192 5209])
            ("CODING_ATTR_CATEGORY" variable (:constant-flag t) nil [5257 5277])
            ("CODING_ATTR_SAFE_CHARSETS" variable (:constant-flag t) nil [5328 5353])
            ("CODING_ID_NAME" variable (:constant-flag t) nil [5469 5483])
            ("CODING_ID_ATTRS" variable (:constant-flag t) nil [5630 5645])
            ("CODING_ID_ALIASES" variable (:constant-flag t) nil [5803 5820])
            ("CODING_ID_EOL_TYPE" variable (:constant-flag t) nil [5971 5989])
            ("CODING_SYSTEM_SPEC" variable (:constant-flag t) nil [6133 6151])
            ("CODING_SYSTEM_ID" variable (:constant-flag t) nil [6302 6318])
            ("CODING_SYSTEM_P" variable (:constant-flag t) nil [6513 6528])
            ("CHECK_CODING_SYSTEM" variable (:constant-flag t) nil [6762 6781])
            ("CHECK_CODING_SYSTEM_GET_SPEC" variable (:constant-flag t) nil [7073 7101])
            ("CHECK_CODING_SYSTEM_GET_ID" variable (:constant-flag t) nil [7501 7527])
            ("coding_result_code" type
               (:members 
                  ( ("CODING_RESULT_SUCCESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7930 7952])
                    ("CODING_RESULT_INSUFFICIENT_SRC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7957 7988])
                    ("CODING_RESULT_INSUFFICIENT_DST" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7993 8024])
                    ("CODING_RESULT_INVALID_SRC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [8029 8055])
                    ("CODING_RESULT_INTERRUPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [8060 8087]))                  
                :type "enum")
                nil [7898 8088])
            ("CODING_MODE_LAST_BLOCK" variable (:constant-flag t) nil [8336 8358])
            ("CODING_MODE_SELECTIVE_DISPLAY" variable (:constant-flag t) nil [8479 8508])
            ("CODING_MODE_DIRECTION" variable (:constant-flag t) nil [8660 8681])
            ("CODING_MODE_FIXED_DESTINATION" variable (:constant-flag t) nil [8698 8727])
            ("CODING_MODE_SAFE_ENCODING" variable (:constant-flag t) nil [8875 8900])
            ("composite.h" include nil nil [8952 8974])
            ("composition_state" type
               (:members 
                  ( ("COMPOSING_NO" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9007 9020])
                    ("COMPOSING_CHAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9025 9040])
                    ("COMPOSING_RULE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9045 9060])
                    ("COMPOSING_COMPONENT_CHAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9065 9090])
                    ("COMPOSING_COMPONENT_RULE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9095 9123]))                  
                :type "enum")
                nil [8976 9124])
            ("composition_status" type
               (:members 
                  ( ("state" variable (:type ("composition_state" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [9209 9238])
                    ("method" variable (:type ("composition_method" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [9241 9272])
                    ("old_form" variable (:type "bool") (reparse-symbol classsubparts) [9275 9289])
                    ("length" variable (:type "int") (reparse-symbol classsubparts) [9320 9331])
                    ("nchars" variable (:type "int") (reparse-symbol classsubparts) [9382 9393])
                    ("ncomps" variable (:type "int") (reparse-symbol classsubparts) [9435 9446])
                    ("carryover" variable (:type "int") (reparse-symbol classsubparts) [9603 9796]))                  
                :type "struct")
                nil [9179 9799])
            ("iso_2022_spec" type
               (:members 
                  ( ("flags" variable (:type "unsigned int") (reparse-symbol classsubparts) [9955 9970])
                    ("current_invocation" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol classsubparts) [10043 10069])
                    ("current_designation" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol classsubparts) [10260 10287])
                    ("ctext_extended_segment_len" variable (:type "int") (reparse-symbol classsubparts) [10357 10388])
                    ("single_shifting" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10500 10528])
                    ("bol" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10601 10617])
                    ("embedded_utf_8" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10684 10711])
                    ("cmp_status" variable (:type ("composition_status" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [10749 10786]))                  
                :type "struct")
                nil [9885 10789])
            ("emacs_mule_spec" type
               (:members 
                  ( ("cmp_status" variable (:type ("composition_status" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [10818 10855]))                  
                :type "struct")
                nil [10791 10858])
            ("undecided_spec" type
               (:members 
                  ( ("inhibit_nbd" variable (:type "int") (reparse-symbol classsubparts) [11010 11026])
                    ("inhibit_ied" variable (:type "int") (reparse-symbol classsubparts) [11089 11105])
                    ("prefer_utf_8" variable (:type "bool") (reparse-symbol classsubparts) [11172 11190]))                  
                :type "struct")
                nil [10860 11193])
            ("utf_bom_type" type
               (:members 
                  ( ("utf_detect_bom" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11221 11236])
                    ("utf_without_bom" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11241 11257])
                    ("utf_with_bom" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11262 11278]))                  
                :type "enum")
                nil [11195 11279])
            ("utf_16_endian_type" type
               (:members 
                  ( ("utf_16_big_endian" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11313 11331])
                    ("utf_16_little_endian" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [11336 11360]))                  
                :type "enum")
                nil [11281 11361])
            ("utf_16_spec" type
               (:members 
                  ( ("bom" variable (:type ("utf_bom_type" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [11386 11408])
                    ("endian" variable (:type ("utf_16_endian_type" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [11411 11442])
                    ("surrogate" variable (:type "int") (reparse-symbol classsubparts) [11445 11459]))                  
                :type "struct")
                nil [11363 11462])
            ("coding_detection_info" type
               (:members 
                  ( ("checked" variable (:type "int") (reparse-symbol classsubparts) [11615 11627])
                    ("found" variable (:type "int") (reparse-symbol classsubparts) [11676 11686])
                    ("rejected" variable (:type "int") (reparse-symbol classsubparts) [11729 11742]))                  
                :type "struct")
                nil [11464 11745])
            ("coding_system" type
               (:members 
                  ( ("id" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12078 12091])
                    ("common_flags" variable
                       (:suffix ":14"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [12208 12235])
                    ("mode" variable
                       (:suffix ":5"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [12334 12352])
                    ("src_multibyte" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12642 12668])
                    ("dst_multibyte" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12671 12697])
                    ("chars_at_source" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12801 12829])
                    ("raw_destination" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12939 12967])
                    ("annotated" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13027 13049])
                    ("eol_seen" variable
                       (:suffix ":3"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [13125 13147])
                    ("result" variable
                       (:suffix ":3"
                        :type "int")
                        (reparse-symbol classsubparts) [13223 13234])
                    ("max_charset_id" variable (:type "int") (reparse-symbol classsubparts) [13238 13257])
                    ("spec" variable (:type ("" type
                         (:members 
                            ( ("iso_2022" variable (:type ("iso_2022_spec" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil)) (reparse-symbol classsubparts) [13349 13379])
                              ("ccl" variable
                                 (:pointer 1
                                  :type ("ccl_spec" type
                                       (:prototype t
                                        :type "struct")
                                        nil nil))
                                  (reparse-symbol classsubparts) [13386 13407])
                              ("utf_16" variable (:type ("utf_16_spec" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil)) (reparse-symbol classsubparts) [13439 13465])
                              ("utf_8_bom" variable (:type ("utf_bom_type" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [13472 13500])
                              ("emacs_mule" variable (:type ("emacs_mule_spec" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil)) (reparse-symbol classsubparts) [13507 13541])
                              ("undecided" variable (:type ("undecided_spec" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil)) (reparse-symbol classsubparts) [13548 13580]))                            
                          :type "union")
                          nil nil)) (reparse-symbol classsubparts) [13331 13592])
                    ("safe_charsets" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [13596 13625])
                    ("head_ascii" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13920 13941])
                    ("detected_utf8_bytes" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14061 14112])
                    ("detected_utf8_chars" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14061 14112])
                    ("produced" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14185 14244])
                    ("produced_char" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14185 14244])
                    ("consumed" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14185 14244])
                    ("consumed_char" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14185 14244])
                    ("src_pos" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14248 14302])
                    ("src_pos_byte" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14248 14302])
                    ("src_chars" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14248 14302])
                    ("src_bytes" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14248 14302])
                    ("src_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14305 14328])
                    ("source" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [14331 14359])
                    ("dst_pos" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14363 14406])
                    ("dst_pos_byte" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14363 14406])
                    ("dst_bytes" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14363 14406])
                    ("dst_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14409 14432])
                    ("destination" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [14435 14462])
                    ("charbuf" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol classsubparts) [15048 15061])
                    ("charbuf_size" variable (:type "int") (reparse-symbol classsubparts) [15064 15095])
                    ("charbuf_used" variable (:type "int") (reparse-symbol classsubparts) [15064 15095])
                    ("carryover" variable
                       (:dereference 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [15099 15127])
                    ("carryover_bytes" variable (:type "int") (reparse-symbol classsubparts) [15130 15150])
                    ("default_char" variable (:type "int") (reparse-symbol classsubparts) [15154 15171])
                    ("detector" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("coding_system" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15193 15216])
                            ("" variable
                               (:pointer 1
                                :type ("coding_detection_info" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15217 15248]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [15175 15249])
                    ("decoder" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("coding_system" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15269 15292]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [15252 15293])
                    ("encoder" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("coding_system" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15313 15336]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [15296 15337]))                  
                :type "struct")
                nil [11748 15340])
            ("CODING_ANNOTATION_MASK" variable (:constant-flag t) nil [15539 15561])
            ("CODING_ANNOTATE_COMPOSITION_MASK" variable (:constant-flag t) nil [15579 15611])
            ("CODING_ANNOTATE_DIRECTION_MASK" variable (:constant-flag t) nil [15627 15657])
            ("CODING_ANNOTATE_CHARSET_MASK" variable (:constant-flag t) nil [15674 15702])
            ("CODING_FOR_UNIBYTE_MASK" variable (:constant-flag t) nil [15719 15742])
            ("CODING_REQUIRE_FLUSHING_MASK" variable (:constant-flag t) nil [15760 15788])
            ("CODING_REQUIRE_DECODING_MASK" variable (:constant-flag t) nil [15805 15833])
            ("CODING_REQUIRE_ENCODING_MASK" variable (:constant-flag t) nil [15850 15878])
            ("CODING_REQUIRE_DETECTION_MASK" variable (:constant-flag t) nil [15895 15924])
            ("CODING_RESET_AT_BOL_MASK" variable (:constant-flag t) nil [15941 15965])
            ("CODING_REQUIRE_ANNOTATION" variable (:constant-flag t) nil [16067 16092])
            ("CODING_FOR_UNIBYTE" variable (:constant-flag t) nil [16249 16267])
            ("CODING_REQUIRE_FLUSHING" variable (:constant-flag t) nil [16463 16486])
            ("CODING_REQUIRE_DECODING" variable (:constant-flag t) nil [16656 16679])
            ("CODING_REQUIRE_ENCODING" variable (:constant-flag t) nil [17075 17098])
            ("CODING_REQUIRE_DETECTION" variable (:constant-flag t) nil [17363 17387])
            ("CODING_MAY_REQUIRE_DECODING" variable (:constant-flag t) nil [17589 17616])
            ("SJIS_TO_JIS" variable (:constant-flag t) nil [17947 17958])
            ("SJIS_TO_JIS2" variable (:constant-flag t) nil [18368 18380])
            ("JIS_TO_SJIS" variable (:constant-flag t) nil [19024 19035])
            ("JIS_TO_SJIS2" variable (:constant-flag t) nil [19431 19443])
            ("ENCODE_FILE" variable (:constant-flag t) nil [20168 20179])
            ("DECODE_FILE" variable (:constant-flag t) nil [20314 20325])
            ("ENCODE_SYSTEM" variable (:constant-flag t) nil [20462 20475])
            ("DECODE_SYSTEM" variable (:constant-flag t) nil [20723 20736])
            ("ENCODE_UTF_8" variable (:constant-flag t) nil [20964 20976])
            ("UTF_16_HIGH_SURROGATE_P" variable (:constant-flag t) nil [21124 21147])
            ("UTF_16_LOW_SURROGATE_P" variable (:constant-flag t) nil [21278 21300])
            ("code_conversion_save" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [21409 21414])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [21415 21420]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21368 21421])
            ("encode_coding_utf_8" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21455 21478]))                  
                :type "bool")
                nil [21422 21479])
            ("utf8_string_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21507 21519]))                  
                :type "bool")
                nil [21480 21520])
            ("setup_coding_system" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21554 21566])
                    ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21567 21590]))                  
                :type "void")
                nil [21521 21591])
            ("coding_charset_list" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21632 21655]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21592 21656])
            ("coding_system_charset_list" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21704 21716]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21657 21717])
            ("code_convert_string" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21758 21770])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21771 21783])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21824 21836])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [21837 21842])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [21843 21848])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [21849 21854]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21718 21855])
            ("code_convert_string_norecord" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21905 21917])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21918 21930])
                    ("" variable (:type "bool") (reparse-symbol arg-sub-list) [21980 21985]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21856 21986])
            ("encode_file_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22024 22036]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [21987 22037])
            ("decode_file_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22075 22087]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22038 22088])
            ("raw_text_coding_system" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22132 22144]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22089 22145])
            ("raw_text_coding_system_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22184 22207]))                  
                :type "bool")
                nil [22146 22208])
            ("coding_inherit_eol_type" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22253 22265])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22266 22278]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22209 22279])
            ("complement_process_encoding_system" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22335 22347]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [22280 22348])
            ("decode_coding_gap" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22381 22404])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22415 22425])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22426 22436]))                  
                :type "void")
                nil [22350 22437])
            ("decode_coding_object" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22472 22495])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22530 22542])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22543 22553])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22554 22564])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22599 22609])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22610 22620])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22621 22633]))                  
                :type "void")
                nil [22438 22634])
            ("encode_coding_object" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22669 22692])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22727 22739])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22740 22750])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22751 22761])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22796 22806])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22807 22817])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22818 22830]))                  
                :type "void")
                nil [22635 22831])
            ("surrogates_to_codepoint" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [22897 22901])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [22902 22906]))                  
                :type "int")
                nil [22868 22907])
            ("encode_coding_string" variable (:constant-flag t) nil [24010 24030])
            ("decode_coding_c_string" variable (:constant-flag t) nil [24245 24267])
            ("surrogates_to_codepoint" function
               (:arguments 
                  ( ("low" variable (:type "int") (reparse-symbol arg-sub-list) [24637 24645])
                    ("high" variable (:type "int") (reparse-symbol arg-sub-list) [24646 24655]))                  
                :type "int")
                nil [24608 24888])
            ("preferred_coding_system" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [24934 24939]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [24890 24940])
            ("emacs_mule_bytes" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type "char")
                nil [25123 25157]))          
      :file "coding.h"
      :pointmax 25206
      :fsize 25205
      :lastmodtime '(23359 63679 412492 283000)
      :unmatched-syntax '((symbol 25159 . 25176) (symbol 24601 . 24607) (symbol 22861 . 22867) (semantic-list 13202 . 13222) (symbol 13194 . 13201) (symbol 1174 . 1193))
      :lexical-table 
        '(("CODING_ATTR_ASCII_COMPAT" (spp-arg-list ("attrs") 4612 . 4619) . ((symbol "AREF" 4620 . 4624) (semantic-list "(attrs, coding_attr_ascii_compat)" 4625 . 4658)))
          ("CODING_ANNOTATE_COMPOSITION_MASK" . ((number "0x0001" 15612 . 15618)))
          ("CODING_REQUIRE_FLUSHING_MASK" . ((number "0x0200" 15790 . 15796)))
          ("SJIS_TO_JIS" (spp-arg-list ("code") 17958 . 17964) . 
              ((DO "do" 17972 . 17974) (semantic-list "{							\\
    int s1, s2, j1, j2;					\\
							\\
    s1 = (code) >> 8, s2 = (code) & 0xFF;		\\
							\\
    if (s2 >= 0x9F)					\\
      (j1 = s1 * 2 - (s1 >= 0xE0 ? 0x160 : 0xE0),	\\
       j2 = s2 - 0x7E);					\\
    else						\\
      (j1 = s1 * 2 - ((s1 >= 0xE0) ? 0x161 : 0xE1),	\\
       j2 = s2 - ((s2 >= 0x7F) ? 0x20 : 0x1F));		\\
    (code) = (j1 << 8) | j2;				\\
  }" 17975 . 18344) (WHILE "while" 18345 . 18350) (semantic-list "(false)" 18351 . 18358)))
          ("JIS_TO_SJIS" (spp-arg-list ("code") 19035 . 19041) . 
              ((DO "do" 19049 . 19051) (semantic-list "{							\\
    int s1, s2, j1, j2;					\\
							\\
    j1 = (code) >> 8, j2 = (code) & 0xFF;		\\
    if (j1 & 1)						\\
      (s1 = j1 / 2 + ((j1 < 0x5F) ? 0x71 : 0xB1),	\\
       s2 = j2 + ((j2 >= 0x60) ? 0x20 : 0x1F));		\\
    else						\\
      (s1 = j1 / 2 + ((j1 < 0x5F) ? 0x70 : 0xB0),	\\
       s2 = j2 + 0x7E);					\\
    (code) = (s1 << 8) | s2;				\\
  }" 19052 . 19407) (WHILE "while" 19408 . 19413) (semantic-list "(false)" 19414 . 19421)))
          ("CODING_REQUIRE_ENCODING_MASK" . ((number "0x0800" 15880 . 15886)))
          ("CODING_RESET_AT_BOL_MASK" . ((number "0x2000" 15967 . 15973)))
          ("CODING_ATTR_ENCODE_TBL" (spp-arg-list ("attrs") 4764 . 4771) . ((symbol "AREF" 4772 . 4776) (semantic-list "(attrs, coding_attr_encode_tbl)" 4777 . 4808)))
          ("CODING_ID_EOL_TYPE" (spp-arg-list ("id") 5989 . 5993) . ((semantic-list "(AREF (HASH_VALUE (XHASH_TABLE (Vcoding_system_hash_table), id), 2))" 5998 . 6066)))
          ("CODING_SYSTEM_SPEC" (spp-arg-list ("coding_system_symbol") 6151 . 6173) . ((semantic-list "(Fgethash (coding_system_symbol, Vcoding_system_hash_table, Qnil))" 6178 . 6244)))
          ("CODING_SYSTEM_P" (spp-arg-list ("coding_system_symbol") 6528 . 6550) . ((semantic-list "(CODING_SYSTEM_ID (coding_system_symbol) >= 0		\\
   || (! NILP (coding_system_symbol)			\\
       && ! NILP (Fcoding_system_p (coding_system_symbol))))" 6556 . 6706)))
          ("CODING_MODE_SAFE_ENCODING" . ((number "0x10" 8902 . 8906)))
          ("CODING_ANNOTATION_MASK" . ((number "0x00FF" 15564 . 15570)))
          ("ENCODE_UTF_8" (spp-arg-list ("str") 20976 . 20981) . ((symbol "code_convert_string_norecord" 20982 . 21010) (semantic-list "(str, Qutf_8, true)" 21011 . 21030)))
          ("decode_coding_c_string" (spp-arg-list ("coding" "src" "bytes" "dst_object") 24267 . 24299) . 
              ((DO "do" 24305 . 24307) (semantic-list "{									\\
    (coding)->source = (src);						\\
    (coding)->src_chars = (coding)->src_bytes = (bytes);		\\
    decode_coding_object ((coding), Qnil, 0, 0, (bytes), (bytes),	\\
			  (dst_object));				\\
  }" 24308 . 24513) (WHILE "while" 24514 . 24519) (semantic-list "(false)" 24520 . 24527)))
          ("CODING_ID_NAME" (spp-arg-list ("id") 5483 . 5487) . ((semantic-list "(HASH_KEY (XHASH_TABLE (Vcoding_system_hash_table), id))" 5492 . 5548)))
          ("CHECK_CODING_SYSTEM_GET_ID" (spp-arg-list ("x" "id") 7527 . 7534) . 
              ((DO "do" 7541 . 7543) (semantic-list "{								\\
      id = CODING_SYSTEM_ID (x);				\\
      if (id < 0)						\\
	{							\\
	  Fcheck_coding_system (x);				\\
	  id = CODING_SYSTEM_ID (x);				\\
	}							\\
      if (id < 0)						\\
	wrong_type_argument (Qcoding_system_p, (x));	\\
    }" 7557 . 7800) (WHILE "while" 7801 . 7806) (semantic-list "(false)" 7807 . 7814)))
          ("CODING_MODE_FIXED_DESTINATION" . ((number "0x08" 8729 . 8733)))
          ("CODING_ANNOTATE_CHARSET_MASK" . ((number "0x0003" 15704 . 15710)))
          ("CODING_FOR_UNIBYTE_MASK" . ((number "0x0100" 15745 . 15751)))
          ("CODING_MAY_REQUIRE_DECODING" (spp-arg-list ("coding") 17616 . 17624) . ((semantic-list "(CODING_REQUIRE_DECODING (coding)		\\
   || CODING_REQUIRE_DETECTION (coding))" 17629 . 17706)))
          ("ENCODE_FILE" (spp-arg-list ("NAME") 20179 . 20185) . ((symbol "encode_file_name" 20187 . 20203) (semantic-list "(NAME)" 20204 . 20210)))
          ("DECODE_SYSTEM" (spp-arg-list ("str") 20736 . 20741) . ((semantic-list "(! NILP (Vlocale_coding_system)					   \\
   ? code_convert_string_norecord (str, Vlocale_coding_system, false)	   \\
   : str)" 20754 . 20879)))
          ("CODING_ATTR_POST_READ" (spp-arg-list ("attrs") 4911 . 4918) . ((symbol "AREF" 4919 . 4923) (semantic-list "(attrs, coding_attr_post_read)" 4924 . 4954)))
          ("CODING_ID_ALIASES" (spp-arg-list ("id") 5820 . 5824) . ((semantic-list "(AREF (HASH_VALUE (XHASH_TABLE (Vcoding_system_hash_table), id), 1))" 5829 . 5897)))
          ("CHECK_CODING_SYSTEM_GET_SPEC" (spp-arg-list ("x" "spec") 7101 . 7110) . 
              ((DO "do" 7116 . 7118) (semantic-list "{							\\
    spec = CODING_SYSTEM_SPEC (x);			\\
    if (NILP (spec))					\\
      {							\\
	Fcheck_coding_system (x);			\\
	spec = CODING_SYSTEM_SPEC (x);			\\
      }							\\
    if (NILP (spec))					\\
      wrong_type_argument (Qcoding_system_p, (x));	\\
  }" 7119 . 7377) (WHILE "while" 7378 . 7383) (semantic-list "(false)" 7384 . 7391)))
          ("CODING_REQUIRE_DETECTION_MASK" . ((number "0x1000" 15926 . 15932)))
          ("DECODE_FILE" (spp-arg-list ("NAME") 20325 . 20331) . ((symbol "decode_file_name" 20333 . 20349) (semantic-list "(NAME)" 20350 . 20356)))
          ("CODING_ID_ATTRS" (spp-arg-list ("id") 5645 . 5649) . ((semantic-list "(AREF (HASH_VALUE (XHASH_TABLE (Vcoding_system_hash_table), id), 0))" 5654 . 5722)))
          ("CODING_ATTR_MNEMONIC" (spp-arg-list ("attrs") 4464 . 4471) . ((symbol "AREF" 4472 . 4476) (semantic-list "(attrs, coding_attr_mnemonic)" 4477 . 4506)))
          ("CODING_SYSTEM_ID" (spp-arg-list ("coding_system_symbol") 6318 . 6340) . ((symbol "hash_lookup" 6347 . 6358) (semantic-list "(XHASH_TABLE (Vcoding_system_hash_table),		\\
	       coding_system_symbol, NULL)" 6359 . 6439)))
          ("CODING_REQUIRE_ANNOTATION" (spp-arg-list ("coding") 16092 . 16100) . ((semantic-list "((coding)->common_flags & CODING_ANNOTATION_MASK)" 16105 . 16154)))
          ("CODING_REQUIRE_FLUSHING" (spp-arg-list ("coding") 16486 . 16494) . ((semantic-list "((coding)->common_flags & CODING_REQUIRE_FLUSHING_MASK)" 16499 . 16554)))
          ("UTF_16_LOW_SURROGATE_P" (spp-arg-list ("val") 21300 . 21305) . ((semantic-list "(((val) & 0xFC00) == 0xDC00)" 21310 . 21338)))
          ("EMACS_CODING_H")
          ("CODING_ATTR_DOCSTRING" (spp-arg-list ("attrs") 4536 . 4543) . ((symbol "AREF" 4544 . 4548) (semantic-list "(attrs, coding_attr_docstring)" 4549 . 4579)))
          ("CODING_ATTR_FOR_UNIBYTE" (spp-arg-list ("attrs") 5138 . 5145) . ((symbol "AREF" 5146 . 5150) (semantic-list "(attrs, coding_attr_for_unibyte)" 5151 . 5183)))
          ("CODING_ATTR_PLIST" (spp-arg-list ("attrs") 5209 . 5216) . ((symbol "AREF" 5217 . 5221) (semantic-list "(attrs, coding_attr_plist)" 5222 . 5248)))
          ("CODING_ATTR_CATEGORY" (spp-arg-list ("attrs") 5277 . 5284) . ((symbol "AREF" 5285 . 5289) (semantic-list "(attrs, coding_attr_category)" 5290 . 5319)))
          ("ENCODE_SYSTEM" (spp-arg-list ("str") 20475 . 20480) . ((semantic-list "(! NILP (Vlocale_coding_system)					   \\
   ? code_convert_string_norecord (str, Vlocale_coding_system, true)	   \\
   : str)" 20493 . 20617)))
          ("CODING_ATTR_TYPE" (spp-arg-list ("attrs") 4317 . 4324) . ((symbol "AREF" 4326 . 4330) (semantic-list "(attrs, coding_attr_type)" 4331 . 4356)))
          ("CODING_FOR_UNIBYTE" (spp-arg-list ("coding") 16267 . 16275) . ((semantic-list "((coding)->common_flags & CODING_FOR_UNIBYTE_MASK)" 16280 . 16330)))
          ("CODING_ATTR_TRANS_TBL" (spp-arg-list ("attrs") 4838 . 4845) . ((symbol "AREF" 4846 . 4850) (semantic-list "(attrs, coding_attr_trans_tbl)" 4851 . 4881)))
          ("CODING_ANNOTATE_DIRECTION_MASK" . ((number "0x0002" 15659 . 15665)))
          ("CODING_REQUIRE_ENCODING" (spp-arg-list ("coding") 17098 . 17106) . ((semantic-list "((coding)->src_multibyte					\\
   || (coding)->common_flags & CODING_REQUIRE_ENCODING_MASK	\\
   || (coding)->mode & CODING_MODE_SELECTIVE_DISPLAY)" 17114 . 17260)))
          ("CODING_ATTR_BASE_NAME" (spp-arg-list ("attrs") 4249 . 4256) . ((symbol "AREF" 4257 . 4261) (semantic-list "(attrs, coding_attr_base_name)" 4262 . 4292)))
          ("CODING_REQUIRE_DECODING_MASK" . ((number "0x0400" 15835 . 15841)))
          ("CODING_REQUIRE_DECODING" (spp-arg-list ("coding") 16679 . 16687) . ((semantic-list "((coding)->dst_multibyte		\\
   || (coding)->common_flags & CODING_REQUIRE_DECODING_MASK)" 16692 . 16780)))
          ("CODING_REQUIRE_DETECTION" (spp-arg-list ("coding") 17387 . 17395) . ((semantic-list "((coding)->common_flags & CODING_REQUIRE_DETECTION_MASK)" 17400 . 17456)))
          ("CODING_ATTR_DECODE_TBL" (spp-arg-list ("attrs") 4689 . 4696) . ((symbol "AREF" 4697 . 4701) (semantic-list "(attrs, coding_attr_decode_tbl)" 4702 . 4733)))
          ("CODING_ATTR_DEFAULT_CHAR" (spp-arg-list ("attrs") 5060 . 5067) . ((symbol "AREF" 5068 . 5072) (semantic-list "(attrs, coding_attr_default_char)" 5073 . 5106)))
          ("SJIS_TO_JIS2" (spp-arg-list ("code") 18380 . 18386) . 
              ((DO "do" 18394 . 18396) (semantic-list "{							\\
    int s1, s2, j1, j2;					\\
							\\
    s1 = (code) >> 8, s2 = (code) & 0xFF;		\\
							\\
    if (s2 >= 0x9F)					\\
      {							\\
	j1 = (s1 == 0xF0 ? 0x28				\\
	      : s1 == 0xF1 ? 0x24			\\
	      : s1 == 0xF2 ? 0x2C			\\
	      : s1 == 0xF3 ? 0x2E			\\
	      : 0x6E + (s1 - 0xF4) * 2);		\\
	j2 = s2 - 0x7E;					\\
      }							\\
    else						\\
      {							\\
	j1 = (s1 <= 0xF2 ? 0x21 + (s1 - 0xF0) * 2	\\
	      : s1 <= 0xF4 ? 0x2D + (s1 - 0xF3) * 2	\\
	      : 0x6F + (s1 - 0xF5) * 2);		\\
	j2 = s2 - ((s2 >= 0x7F ? 0x20 : 0x1F));		\\
      }							\\
    (code) = (j1 << 8) | j2;				\\
  }" 18397 . 18999) (WHILE "while" 19000 . 19005) (semantic-list "(false)" 19006 . 19013)))
          ("JIS_TO_SJIS2" (spp-arg-list ("code") 19443 . 19449) . 
              ((DO "do" 19457 . 19459) (semantic-list "{							\\
    int s1, s2, j1, j2;					\\
							\\
    j1 = (code) >> 8, j2 = (code) & 0xFF;		\\
    if (j1 & 1)						\\
      {							\\
	s1 = (j1 <= 0x25 ? 0xF0 + (j1 - 0x21) / 2	\\
	      : j1 <= 0x2F ? 0xF3 + (j1 - 0x2D) / 2	\\
	      : 0xF5 + (j1 - 0x6F) / 2);		\\
	s2 = j2 + ((j2 >= 0x60) ? 0x20 : 0x1F);		\\
      }							\\
    else						\\
      {							\\
	s1 = (j1 == 0x28 ? 0xF0				\\
	      : j1 == 0x24 ? 0xF1			\\
	      : j1 == 0x2C ? 0xF2			\\
	      : j1 == 0x2E ? 0xF3			\\
	      : 0xF4 + (j1 - 0x6E) / 2);		\\
	s2 = j2 + 0x7E;					\\
      }							\\
    (code) = (s1 << 8) | s2;				\\
  }" 19460 . 20050) (WHILE "while" 20051 . 20056) (semantic-list "(false)" 20057 . 20064)))
          ("CODING_ATTR_CHARSET_LIST" (spp-arg-list ("attrs") 4389 . 4396) . ((symbol "AREF" 4397 . 4401) (semantic-list "(attrs, coding_attr_charset_list)" 4402 . 4435)))
          ("CODING_ATTR_PRE_WRITE" (spp-arg-list ("attrs") 4984 . 4991) . ((symbol "AREF" 4992 . 4996) (semantic-list "(attrs, coding_attr_pre_write)" 4997 . 5027)))
          ("CODING_ATTR_SAFE_CHARSETS" (spp-arg-list ("attrs") 5353 . 5360) . ((symbol "AREF" 5360 . 5364) (semantic-list "(attrs, coding_attr_safe_charsets)" 5365 . 5399)))
          ("CHECK_CODING_SYSTEM" (spp-arg-list ("x") 6781 . 6784) . 
              ((DO "do" 6792 . 6794) (semantic-list "{							\\
    if (CODING_SYSTEM_ID (x) < 0			\\
	&& NILP (Fcheck_coding_system (x)))		\\
      wrong_type_argument (Qcoding_system_p, (x));	\\
  }" 6795 . 6938) (WHILE "while" 6939 . 6944) (semantic-list "(false)" 6945 . 6952)))
          ("CODING_MODE_LAST_BLOCK" . ((number "0x01" 8361 . 8365)))
          ("CODING_MODE_SELECTIVE_DISPLAY" . ((number "0x02" 8510 . 8514)))
          ("CODING_MODE_DIRECTION" . ((number "0x04" 8684 . 8688)))
          ("UTF_16_HIGH_SURROGATE_P" (spp-arg-list ("val") 21147 . 21152) . ((semantic-list "(((val) & 0xFC00) == 0xD800)" 21157 . 21185)))
          ("encode_coding_string" (spp-arg-list ("coding" "string" "nocopy") 24030 . 24054) . ((semantic-list "(STRING_MULTIBYTE(string) ?						\\
    (encode_coding_object (coding, string, 0, 0, SCHARS (string),	\\
			   SBYTES (string), Qt),			\\
     (coding)->dst_object) : (string))" 24061 . 24234)))
          )
)
    (semanticdb-table "semanticdb-table-19e1a6c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_KEYBOARD_H" variable (:constant-flag t) nil [801 817])
            ("coding.h" include nil nil [819 838])
            ("termhooks.h" include nil nil [892 914])
            ("KVAR" variable (:constant-flag t) nil [1109 1113])
            ("KBOARD" type
               (:typedef ("kboard" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3219 3248])
            ("kboard" type
               (:members 
                  ( ("next_kboard" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3271 3291])
                    ("Voverriding_terminal_local_map_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3633 3677])
                    ("Vlast_command_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3803 3830])
                    ("Vreal_last_command_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3916 3948])
                    ("Vkeyboard_translate_table_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4024 4063])
                    ("Vlast_repeatable_command_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4127 4165])
                    ("Vprefix_arg_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4237 4262])
                    ("Vlast_prefix_arg_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4336 4366])
                    ("kbd_queue_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4422 4445])
                    ("defining_kbd_macro_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4506 4538])
                    ("kbd_macro_buffer" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4608 4638])
                    ("kbd_macro_ptr" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4703 4730])
                    ("kbd_macro_end" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5269 5296])
                    ("kbd_macro_bufsize" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5349 5377])
                    ("Vlast_kbd_macro_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5428 5457])
                    ("Vsystem_key_alist_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5522 5553])
                    ("system_key_syms_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5601 5630])
                    ("Vwindow_system_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5680 5708])
                    ("Vlocal_function_key_map_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5823 5860])
                    ("Vinput_decode_map_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6053 6084])
                    ("Vdefault_minibuffer_frame_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6168 6207])
                    ("reference_count" variable (:type "int") (reparse-symbol classsubparts) [6354 6374])
                    ("echo_string_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6502 6527])
                    ("kbd_queue_has_data" variable (:type ("bool_bf" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7078 7105])
                    ("immediate_echo" variable
                       (:suffix ":1"
                        :type ("bool_bf" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7163 7190])
                    ("echo_prompt_" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7269 7294]))                  
                :type "struct")
                nil [3249 7299])
            ("kset_default_minibuffer_frame" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7344 7362])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7363 7379]))                  
                :type "void")
                nil [7308 7423])
            ("kset_defining_kbd_macro" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7461 7479])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7480 7496]))                  
                :type "void")
                nil [7431 7533])
            ("kset_input_decode_map" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7569 7587])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7588 7604]))                  
                :type "void")
                nil [7541 7640])
            ("kset_last_command" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7672 7690])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7691 7707]))                  
                :type "void")
                nil [7648 7739])
            ("kset_last_kbd_macro" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7773 7791])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7792 7808]))                  
                :type "void")
                nil [7747 7842])
            ("kset_prefix_arg" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7872 7890])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7891 7907]))                  
                :type "void")
                nil [7850 7937])
            ("kset_system_key_alist" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7973 7991])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7992 8008]))                  
                :type "void")
                nil [7945 8044])
            ("kset_window_system" function
               (:arguments 
                  ( ("kb" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8077 8095])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8096 8112]))                  
                :type "void")
                nil [8052 8145])
            ("buffered_input_event" type
               (:members 
                  ( ("EVENT_KIND_WIDTH" variable (:type "int") (reparse-symbol classsubparts) [8206 8223])
                    ("ie" variable (:type ("input_event" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [8226 8248]))                  
                :type "union")
                nil [8147 8310])
            ("initial_kboard" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("KBOARD" type (:type "class") nil nil))
                nil [8367 8397])
            ("current_kboard" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("KBOARD" type (:type "class") nil nil))
                nil [8686 8716])
            ("num_input_events" variable
               (:typemodifiers ("extern")
                :type ("uintmax_t" type (:type "class") nil nil))
                nil [8796 8830])
            ("point_before_last_command_or_undo" variable
               (:typemodifiers ("extern")
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [8976 9027])
            ("buffer_before_last_command_or_undo" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [9179 9236])
            ("prev_buffer" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("buffer" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [9238 9272])
            ("poll_suppress_count" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [9340 9371])
            ("this_command_keys" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9610 9647])
            ("this_command_key_count" variable
               (:typemodifiers ("extern")
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [9648 9688])
            ("internal_last_event_frame" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9999 10044])
            ("item_properties" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [10285 10320])
            ("ITEM_PROPERTY_ITEM" variable (:constant-flag t) nil [10499 10517])
            ("ITEM_PROPERTY_NAME" variable (:constant-flag t) nil [10552 10570])
            ("ITEM_PROPERTY_DEF" variable (:constant-flag t) nil [10662 10679])
            ("ITEM_PROPERTY_MAP" variable (:constant-flag t) nil [10751 10768])
            ("ITEM_PROPERTY_TYPE" variable (:constant-flag t) nil [10810 10828])
            ("ITEM_PROPERTY_KEYEQ" variable (:constant-flag t) nil [10900 10919])
            ("ITEM_PROPERTY_SELECTED" variable (:constant-flag t) nil [11002 11024])
            ("ITEM_PROPERTY_HELP" variable (:constant-flag t) nil [11081 11099])
            ("ITEM_PROPERTY_ENABLE" variable (:constant-flag t) nil [11197 11217])
            ("menu_items" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12210 12240])
            ("menu_items_inuse" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12395 12431])
            ("menu_items_allocated" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [12491 12523])
            ("menu_items_used" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [12589 12616])
            ("menu_items_n_panes" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [12715 12745])
            ("MENU_ITEMS_PANE_NAME" variable (:constant-flag t) nil [12755 12775])
            ("MENU_ITEMS_PANE_PREFIX" variable (:constant-flag t) nil [12786 12808])
            ("MENU_ITEMS_PANE_LENGTH" variable (:constant-flag t) nil [12819 12841])
            ("menu_item_idx" type
               (:members 
                  ( ("MENU_ITEMS_ITEM_NAME" variable
                       (:constant-flag t
                        :default-value (12891 12892)
                        :type "int")
                        (reparse-symbol enumsubparts) [12868 12892])
                    ("MENU_ITEMS_ITEM_ENABLE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [12896 12919])
                    ("MENU_ITEMS_ITEM_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [12922 12944])
                    ("MENU_ITEMS_ITEM_EQUIV_KEY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [12947 12973])
                    ("MENU_ITEMS_ITEM_DEFINITION" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [12976 13003])
                    ("MENU_ITEMS_ITEM_TYPE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [13006 13027])
                    ("MENU_ITEMS_ITEM_SELECTED" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [13030 13055])
                    ("MENU_ITEMS_ITEM_HELP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [13058 13079])
                    ("MENU_ITEMS_ITEM_LENGTH" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [13082 13106]))                  
                :type "enum")
                nil [12845 13107])
            ("unuse_menu_items" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [13139 13144]))                  
                :type "void")
                nil [13109 13145])
            ("ENCODE_MENU_STRING" variable (:constant-flag t) nil [13597 13615])
            ("EVENT_HAS_PARAMETERS" variable (:constant-flag t) nil [13865 13885])
            ("EVENT_HEAD" variable (:constant-flag t) nil [14003 14013])
            ("EVENT_START" variable (:constant-flag t) nil [14163 14174])
            ("EVENT_END" variable (:constant-flag t) nil [14220 14229])
            ("EVENT_CLICK_COUNT" variable (:constant-flag t) nil [14344 14361])
            ("POSN_WINDOW" variable (:constant-flag t) nil [14453 14464])
            ("POSN_POSN" variable (:constant-flag t) nil [14497 14506])
            ("POSN_SET_POSN" variable (:constant-flag t) nil [14550 14563])
            ("POSN_WINDOW_POSN" variable (:constant-flag t) nil [14609 14625])
            ("POSN_TIMESTAMP" variable (:constant-flag t) nil [14680 14694])
            ("POSN_SCROLLBAR_PART" variable (:constant-flag t) nil [14760 14779])
            ("POSN_STRING" variable (:constant-flag t) nil [14963 14974])
            ("POSN_INBUFFER_P" variable (:constant-flag t) nil [15087 15102])
            ("POSN_BUFFER_POSN" variable (:constant-flag t) nil [15145 15161])
            ("EVENT_HEAD_KIND" variable (:constant-flag t) nil [15252 15267])
            ("input_available_clear_time" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("timespec" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15410 15461])
            ("ignore_mouse_drag_p" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [15463 15495])
            ("parse_modifiers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15533 15545]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15497 15546])
            ("reorder_modifiers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15585 15597]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15547 15598])
            ("read_char" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [15629 15633])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15634 15646])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15647 15659])
                    ("" variable
                       (:pointer 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [15690 15697])
                    ("" variable
                       (:pointer 1
                        :type ("timespec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [15698 15716]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15599 15717])
            ("parse_solitary_modifier" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15754 15773]))                  
                :type "int")
                nil [15718 15774])
            ("real_this_command" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [15847 15884])
            ("quit_char" variable
               (:typemodifiers ("extern")
                :type "int")
                nil [15886 15907])
            ("timers_run" variable
               (:typemodifiers ("extern")
                :type "unsigned int")
                nil [15909 15940])
            ("menu_separator_name_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15977 15990]))                  
                :type "bool")
                nil [15942 15991])
            ("parse_menu_item" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16021 16033])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [16034 16038]))                  
                :type "bool")
                nil [15992 16039])
            ("init_raw_keybuf_count" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16076 16081]))                  
                :type "void")
                nil [16041 16082])
            ("allocate_kboard" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16115 16127]))                  
                :type ("KBOARD" type (:type "class") nil nil))
                nil [16083 16128])
            ("delete_kboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16156 16165]))                  
                :type "void")
                nil [16129 16166])
            ("not_single_kboard_state" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("KBOARD" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16204 16213]))                  
                :type "void")
                nil [16167 16214])
            ("push_kboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16240 16256]))                  
                :type "void")
                nil [16215 16257])
            ("push_frame_kboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16289 16304]))                  
                :type "void")
                nil [16258 16305])
            ("pop_kboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16330 16335]))                  
                :type "void")
                nil [16306 16336])
            ("temporarily_switch_to_single_kboard" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16386 16401]))                  
                :type "void")
                nil [16337 16402])
            ("record_asynch_buffer_change" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16444 16449]))                  
                :type "void")
                nil [16403 16450])
            ("input_poll_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [16482 16486]))                  
                :type "void")
                nil [16451 16487])
            ("start_polling" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16515 16520]))                  
                :type "void")
                nil [16488 16521])
            ("stop_polling" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16548 16553]))                  
                :type "void")
                nil [16522 16554])
            ("set_poll_suppress_count" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [16592 16596]))                  
                :type "void")
                nil [16555 16597])
            ("gobble_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16623 16628]))                  
                :type "int")
                nil [16598 16629])
            ("input_polling_used" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16662 16667]))                  
                :type "bool")
                nil [16630 16668])
            ("clear_input_pending" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16702 16707]))                  
                :type "void")
                nil [16669 16708])
            ("requeued_events_pending_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16748 16753]))                  
                :type "bool")
                nil [16709 16754])
            ("bind_polling_period" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [16788 16792]))                  
                :type "void")
                nil [16755 16793])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [16826 16842])
            ("stuff_buffered_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16877 16889]))                  
                :type "void")
                nil [16843 16890])
            ("clear_waiting_for_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [16928 16933]))                  
                :type "void")
                nil [16891 16934])
            ("swallow_events" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [16963 16968]))                  
                :type "void")
                nil [16935 16969])
            ("lucid_event_type_list_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17007 17019]))                  
                :type "bool")
                nil [16970 17020])
            ("kbd_buffer_store_event" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17057 17078]))                  
                :type "void")
                nil [17021 17079])
            ("kbd_buffer_store_buffered_event" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffered_input_event" type (:type "union") nil nil))
                        (reparse-symbol arg-sub-list) [17125 17154])
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17165 17186]))                  
                :type "void")
                nil [17080 17187])
            ("kbd_buffer_store_event_hold" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17229 17255])
                    ("hold_quit" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17264 17294]))                  
                :type "void")
                nil [17195 17544])
            ("poll_for_input_1" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [17667 17672]))                  
                :type "void")
                nil [17637 17673])
            ("show_help_echo" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17702 17714])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17715 17727])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17728 17740])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17769 17781]))                  
                :type "void")
                nil [17674 17782])
            ("gen_help_event" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17811 17823])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17824 17836])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17837 17849])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17878 17890])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17891 17901]))                  
                :type "void")
                nil [17783 17902])
            ("kbd_buffer_store_help_event" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17944 17956])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17957 17969]))                  
                :type "void")
                nil [17903 17970])
            ("menu_item_eval_property" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18015 18027]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [17971 18028])
            ("kbd_buffer_events_waiting" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18068 18073]))                  
                :type "bool")
                nil [18029 18074])
            ("add_user_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [18104 18108])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18109 18122]))                  
                :type "void")
                nil [18075 18123])
            ("tty_read_avail_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18158 18176])
                    ("" variable
                       (:pointer 1
                        :type ("input_event" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18177 18198]))                  
                :type "int")
                nil [18125 18199])
            ("pending_signals" variable
               (:typemodifiers ("extern")
                :type "bool")
                nil [18200 18237])
            ("process_pending_signals" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18275 18280]))                  
                :type "void")
                nil [18238 18281])
            ("timer_check" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18318 18323]))                  
                :type ("timespec" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [18282 18324])
            ("mark_kboards" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18351 18356]))                  
                :type "void")
                nil [18325 18357])
            ("DEV_TTY" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type "char")
                nil [18433 18461]))          
      :file "keyboard.h"
      :pointmax 18512
      :fsize 18511
      :lastmodtime '(23408 44231 552891 309000)
      :unmatched-syntax '((symbol 18463 . 18480) (symbol 17188 . 17194) (semantic-list 16820 . 16825) (symbol 16805 . 16819) (INT 16801 . 16804) (EXTERN 16794 . 16800) (punctuation 8204 . 8205) (symbol 8199 . 8203) (semantic-list 8186 . 8198) (symbol 8178 . 8185) (symbol 8045 . 8051) (symbol 7938 . 7944) (symbol 7843 . 7849) (symbol 7740 . 7746) (symbol 7641 . 7647) (symbol 7534 . 7540) (symbol 7424 . 7430) (symbol 7301 . 7307) (symbol 1000 . 1019))
      :lexical-table 
        '(("ITEM_PROPERTY_TYPE" . ((number "4" 10829 . 10830)))
          ("ENCODE_MENU_STRING" (spp-arg-list ("str") 13615 . 13620) . ((symbol "string_make_unibyte" 13621 . 13640) (semantic-list "(str)" 13641 . 13646)))
          ("EVENT_HAS_PARAMETERS" (spp-arg-list ("event") 13885 . 13892) . ((semantic-list "(CONSP (event))" 13893 . 13908)))
          ("POSN_INBUFFER_P" (spp-arg-list ("posn") 15102 . 15108) . ((semantic-list "(NILP (POSN_STRING (posn)))" 15109 . 15136)))
          ("EMACS_KEYBOARD_H")
          ("ITEM_PROPERTY_HELP" . ((number "7" 11100 . 11101)))
          ("POSN_SCROLLBAR_PART" (spp-arg-list ("posn") 14779 . 14785) . ((semantic-list "(Fnth (make_fixnum (4), (posn)))" 14786 . 14818)))
          ("ITEM_PROPERTY_NAME" . ((number "1" 10571 . 10572)))
          ("ITEM_PROPERTY_ENABLE" . ((number "8" 11218 . 11219)))
          ("MENU_ITEMS_PANE_LENGTH" . ((number "3" 12842 . 12843)))
          ("POSN_SET_POSN" (spp-arg-list ("posn" "x") 14563 . 14571) . ((semantic-list "(XSETCAR (XCDR (posn), (x)))" 14572 . 14600)))
          ("MENU_ITEMS_PANE_PREFIX" . ((number "2" 12809 . 12810)))
          ("EVENT_HEAD" (spp-arg-list ("event") 14013 . 14020) . ((semantic-list "(EVENT_HAS_PARAMETERS (event) ? XCAR (event) : (event))" 14025 . 14080)))
          ("POSN_WINDOW" (spp-arg-list ("posn") 14464 . 14470) . ((semantic-list "(CAR_SAFE (posn))" 14471 . 14488)))
          ("POSN_BUFFER_POSN" (spp-arg-list ("posn") 15161 . 15167) . ((semantic-list "(Fnth (make_fixnum (5), (posn)))" 15168 . 15200)))
          ("POSN_STRING" (spp-arg-list ("posn") 14974 . 14980) . ((semantic-list "(Fnth (make_fixnum (4), (posn)))" 14981 . 15013)))
          ("ITEM_PROPERTY_DEF" . ((number "2" 10680 . 10681)))
          ("ITEM_PROPERTY_KEYEQ" . ((number "5" 10920 . 10921)))
          ("EVENT_START" (spp-arg-list ("event") 14174 . 14181) . ((semantic-list "(CAR_SAFE (CDR_SAFE (event)))" 14182 . 14211)))
          ("POSN_TIMESTAMP" (spp-arg-list ("posn") 14694 . 14700) . ((semantic-list "(CAR_SAFE (CDR_SAFE (CDR_SAFE (CDR_SAFE (posn)))))" 14701 . 14751)))
          ("KVAR" (spp-arg-list ("kboard" "field") 1113 . 1128) . ((semantic-list "((kboard)->field ## _)" 1129 . 1151)))
          ("ITEM_PROPERTY_MAP" . ((number "3" 10769 . 10770)))
          ("EVENT_END" (spp-arg-list ("event") 14229 . 14236) . ((semantic-list "(CAR_SAFE (CDR_SAFE (CDR_SAFE (event))))" 14237 . 14277)))
          ("POSN_WINDOW_POSN" (spp-arg-list ("posn") 14625 . 14631) . ((semantic-list "(CAR_SAFE (CDR_SAFE (CDR_SAFE (posn))))" 14632 . 14671)))
          ("MENU_ITEMS_PANE_NAME" . ((number "1" 12776 . 12777)))
          ("ITEM_PROPERTY_ITEM" . ((number "0" 10518 . 10519)))
          ("ITEM_PROPERTY_SELECTED" . ((number "6" 11025 . 11026)))
          ("EVENT_CLICK_COUNT" (spp-arg-list ("event") 14361 . 14368) . ((semantic-list "(Fnth (make_fixnum (2), (event)))" 14369 . 14402)))
          ("POSN_POSN" (spp-arg-list ("posn") 14506 . 14512) . ((semantic-list "(CAR_SAFE (CDR_SAFE (posn)))" 14513 . 14541)))
          ("EVENT_HEAD_KIND" (spp-arg-list ("event_head") 15267 . 15279) . ((semantic-list "(Fget ((event_head), Qevent_kind))" 15284 . 15318)))
          )
)
    (semanticdb-table "semanticdb-table-19e1a8c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_SYSSIGNAL_H" variable (:constant-flag t) nil [805 822])
            ("signal.h" include (:system-flag t) nil [824 843])
            ("init_signals" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [871 876]))                  
                :type "void")
                nil [845 877])
            ("block_child_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [910 921]))                  
                :type "void")
                nil [878 922])
            ("unblock_child_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [957 974]))                  
                :type "void")
                nil [923 975])
            ("block_interrupt_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1012 1023]))                  
                :type "void")
                nil [976 1024])
            ("restore_signal_mask" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1058 1075]))                  
                :type "void")
                nil [1025 1076])
            ("block_tty_out_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1111 1122]))                  
                :type "void")
                nil [1077 1123])
            ("unblock_tty_out_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1160 1177]))                  
                :type "void")
                nil [1124 1178])
            ("empty_mask" variable
               (:typemodifiers ("extern")
                :type ("sigset_t" type (:type "class") nil nil))
                nil [1793 1820])
            ("signal_handler_t" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1856 1860]))                  
                :type "void")
                nil [1830 1861])
            ("emacs_sigaction_init" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sigaction" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1897 1916])
                    ("" variable (:type ("signal_handler_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1917 1934]))                  
                :type "void")
                nil [1863 1935])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [1969 1985])
            ("SA_SIGINFO" variable (:constant-flag t) nil [2087 2097])
            ("emacs_raise" variable (:constant-flag t) nil [2137 2148])
            ("strsignal" variable (:constant-flag t) nil [2206 2215])
            ("deliver_process_signal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2279 2283])
                    ("" variable (:type ("signal_handler_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2284 2301]))                  
                :type "void")
                nil [2250 2302]))          
      :file "syssignal.h"
      :pointmax 2335
      :fsize 2334
      :lastmodtime '(23336 3763 603020 817000)
      :unmatched-syntax '((semantic-list 1963 . 1968) (symbol 1948 . 1962) (punctuation 1947 . 1948) (CONST 1941 . 1946) (CHAR 1936 . 1940) (TYPEDEF 1822 . 1829))
      :lexical-table 
        '(("emacs_raise" (spp-arg-list ("sig") 2148 . 2153) . ((symbol "raise" 2154 . 2159) (semantic-list "(sig)" 2160 . 2165)))
          ("SA_SIGINFO" . ((number "0" 2098 . 2099)))
          ("EMACS_SYSSIGNAL_H")
          ("strsignal" (spp-arg-list ("sig") 2215 . 2220) . ((symbol "safe_strsignal" 2221 . 2235) (semantic-list "(sig)" 2236 . 2241)))
          )
)
    (semanticdb-table "semanticdb-table-19e1aac"
      :major-mode c-mode
      :tags 
        '( ("THREAD_H" variable (:constant-flag t) nil [746 754])
            ("regex-emacs.h" include nil nil [756 780])
            ("sysselect.h" include nil nil [888 910])
            ("systime.h" include nil nil [924 944])
            ("systhread.h" include nil nil [958 980])
            ("thread_state" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [1006 1037])
                    ("m_last_thing_searched" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1198 1232])
                    ("last_thing_searched" variable (:constant-flag t) (reparse-symbol classsubparts) [1241 1260])
                    ("m_saved_last_thing_searched" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1304 1344])
                    ("saved_last_thing_searched" variable (:constant-flag t) (reparse-symbol classsubparts) [1353 1378])
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1456 1473])
                    ("function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1509 1530])
                    ("result" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1590 1609])
                    ("error_symbol" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1665 1690])
                    ("error_data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1693 1716])
                    ("event_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1809 1834])
                    ("m_stack_bottom" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [1993 2014])
                    ("stack_bottom" variable (:constant-flag t) (reparse-symbol classsubparts) [2023 2035])
                    ("stack_top" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [2547 2563])
                    ("m_catchlist" variable
                       (:pointer 1
                        :type ("catchtag" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2567 2596])
                    ("catchlist" variable (:constant-flag t) (reparse-symbol classsubparts) [2605 2614])
                    ("m_handlerlist" variable
                       (:pointer 1
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2935 2965])
                    ("handlerlist" variable (:constant-flag t) (reparse-symbol classsubparts) [2974 2985])
                    ("m_handlerlist_sentinel" variable
                       (:pointer 1
                        :type ("handler" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [3021 3060])
                    ("handlerlist_sentinel" variable (:constant-flag t) (reparse-symbol classsubparts) [3069 3089])
                    ("m_specpdl_size" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3196 3221])
                    ("specpdl_size" variable (:constant-flag t) (reparse-symbol classsubparts) [3230 3242])
                    ("m_specpdl" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol classsubparts) [3321 3350])
                    ("specpdl" variable (:constant-flag t) (reparse-symbol classsubparts) [3359 3366])
                    ("m_specpdl_ptr" variable
                       (:pointer 1
                        :type ("specbinding" type (:type "union") nil nil))
                        (reparse-symbol classsubparts) [3451 3484])
                    ("specpdl_ptr" variable (:constant-flag t) (reparse-symbol classsubparts) [3493 3504])
                    ("m_lisp_eval_depth" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3595 3623])
                    ("lisp_eval_depth" variable (:constant-flag t) (reparse-symbol classsubparts) [3632 3647])
                    ("m_current_buffer" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [3731 3763])
                    ("current_buffer" variable (:constant-flag t) (reparse-symbol classsubparts) [3772 3786])
                    ("m_search_regs" variable (:type ("re_registers" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [4808 4842])
                    ("search_regs" variable (:constant-flag t) (reparse-symbol classsubparts) [4851 4862])
                    ("m_search_regs_saved" variable (:type "bool") (reparse-symbol classsubparts) [5021 5046])
                    ("search_regs_saved" variable (:constant-flag t) (reparse-symbol classsubparts) [5055 5072])
                    ("m_saved_search_regs" variable (:type ("re_registers" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [5114 5154])
                    ("saved_search_regs" variable (:constant-flag t) (reparse-symbol classsubparts) [5163 5180])
                    ("m_waiting_for_user_input_p" variable (:type "int") (reparse-symbol classsubparts) [5724 5755])
                    ("waiting_for_user_input_p" variable (:constant-flag t) (reparse-symbol classsubparts) [5764 5788])
                    ("m_waiting_for_input" variable (:type "bool") (reparse-symbol classsubparts) [5874 5899])
                    ("waiting_for_input" variable (:constant-flag t) (reparse-symbol classsubparts) [5908 5925])
                    ("m_getcjmp" variable (:type ("sys_jmp_buf" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6222 6244])
                    ("getcjmp" variable (:constant-flag t) (reparse-symbol classsubparts) [6253 6260])
                    ("thread_id" variable (:type ("sys_thread_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6336 6359])
                    ("thread_condvar" variable (:type ("sys_cond_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6504 6530])
                    ("wait_condvar" variable
                       (:pointer 1
                        :type ("sys_cond_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6723 6748])
                    ("not_holding_lock" variable (:type "int") (reparse-symbol classsubparts) [7058 7079])
                    ("next_thread" variable
                       (:pointer 1
                        :type ("thread_state" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [7127 7160]))                  
                :type "struct")
                nil [982 7163])
            ("THREADP" function
               (:arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7186 7200]))                  
                :type "bool")
                nil [7172 7245])
            ("CHECK_THREAD" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7273 7287]))                  
                :type "void")
                nil [7254 7332])
            ("XTHREAD" function
               (:pointer 1
                :arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7372 7386]))                  
                :type ("thread_state" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [7341 7474])
            ("lisp_mutex_t" type
               (:typedef ("" type
                     (:members 
                        ( ("owner" variable
                             (:pointer 1
                              :type ("thread_state" type
                                   (:prototype t
                                    :type "struct")
                                    nil nil))
                              (reparse-symbol classsubparts) [7784 7811])
                          ("count" variable (:type "unsigned int") (reparse-symbol classsubparts) [7839 7858])
                          ("condition" variable (:type ("sys_cond_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7912 7933]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [7716 7949])
            ("Lisp_Mutex" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [8006 8037])
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8081 8098])
                    ("mutex" variable (:type ("lisp_mutex_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8141 8160]))                  
                :type "struct")
                nil [7984 8163])
            ("MUTEXP" function
               (:arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8185 8199]))                  
                :type "bool")
                nil [8172 8243])
            ("CHECK_MUTEX" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8270 8284]))                  
                :type "void")
                nil [8252 8327])
            ("XMUTEX" function
               (:pointer 1
                :arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8364 8378]))                  
                :type ("Lisp_Mutex" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [8336 8463])
            ("Lisp_CondVar" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [8535 8566])
                    ("mutex" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8601 8619])
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8676 8693])
                    ("cond" variable (:type ("sys_cond_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8749 8765]))                  
                :type "struct")
                nil [8511 8768])
            ("CONDVARP" function
               (:arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8792 8806]))                  
                :type "bool")
                nil [8777 8852])
            ("CHECK_CONDVAR" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8881 8895]))                  
                :type "void")
                nil [8861 8954])
            ("XCONDVAR" function
               (:pointer 1
                :arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8995 9009]))                  
                :type ("Lisp_CondVar" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [8963 9098])
            ("current_thread" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("thread_state" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [9100 9143])
            ("finalize_one_thread" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("thread_state" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9178 9205]))                  
                :type "void")
                nil [9145 9206])
            ("finalize_one_mutex" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_Mutex" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9239 9259]))                  
                :type "void")
                nil [9207 9260])
            ("finalize_one_condvar" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Lisp_CondVar" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9295 9317]))                  
                :type "void")
                nil [9261 9318])
            ("maybe_reacquire_global_lock" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9360 9365]))                  
                :type "void")
                nil [9319 9366])
            ("init_threads_once" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9399 9404]))                  
                :type "void")
                nil [9368 9405])
            ("init_threads" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9432 9437]))                  
                :type "void")
                nil [9406 9438])
            ("syms_of_threads" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9468 9473]))                  
                :type "void")
                nil [9439 9474])
            ("main_thread_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [9502 9509]))                  
                :type "bool")
                nil [9475 9510])
            ("in_current_thread" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9542 9547]))                  
                :type "bool")
                nil [9511 9548])
            ("select_func" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [9575 9579])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9580 9589])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9590 9599])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9600 9609])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("timespec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9614 9638])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9639 9656]))                  
                :type "int")
                nil [9558 9657])
            ("thread_select" function
               (:prototype-flag t
                :arguments 
                  ( ("func" variable
                       (:pointer 1
                        :type ("select_func" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9679 9697])
                    ("max_fds" variable (:type "int") (reparse-symbol arg-sub-list) [9698 9710])
                    ("rfds" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9711 9724])
                    ("wfds" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9731 9744])
                    ("efds" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9745 9758])
                    ("timeout" variable
                       (:pointer 1
                        :type ("timespec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9759 9784])
                    ("sigmask" variable
                       (:pointer 1
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9791 9809]))                  
                :type "int")
                nil [9659 9810])
            ("thread_check_current_buffer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9846 9862]))                  
                :type "bool")
                nil [9812 9863]))          
      :file "thread.h"
      :pointmax 9887
      :fsize 9886
      :lastmodtime '(23404 19614 897309 262000)
      :unmatched-syntax '((TYPEDEF 9550 . 9557) (symbol 8956 . 8962) (symbol 8854 . 8860) (symbol 8770 . 8776) (symbol 8329 . 8335) (symbol 8245 . 8251) (symbol 8165 . 8171) (symbol 7334 . 7340) (symbol 7247 . 7253) (symbol 7165 . 7171))
      :lexical-table 
        '(("handlerlist_sentinel" . ((semantic-list "(current_thread->m_handlerlist_sentinel)" 3090 . 3130)))
          ("stack_bottom" . ((semantic-list "(current_thread->m_stack_bottom)" 2036 . 2068)))
          ("specpdl_ptr" . ((semantic-list "(current_thread->m_specpdl_ptr)" 3505 . 3536)))
          ("THREAD_H")
          ("waiting_for_user_input_p" . ((semantic-list "(current_thread->m_waiting_for_user_input_p)" 5789 . 5833)))
          ("specpdl" . ((semantic-list "(current_thread->m_specpdl)" 3367 . 3394)))
          ("lisp_eval_depth" . ((semantic-list "(current_thread->m_lisp_eval_depth)" 3648 . 3683)))
          ("waiting_for_input" . ((semantic-list "(current_thread->m_waiting_for_input)" 5926 . 5963)))
          ("getcjmp" . ((semantic-list "(current_thread->m_getcjmp)" 6261 . 6288)))
          ("specpdl_size" . ((semantic-list "(current_thread->m_specpdl_size)" 3243 . 3275)))
          ("current_buffer" . ((semantic-list "(current_thread->m_current_buffer)" 3787 . 3821)))
          ("search_regs_saved" . ((semantic-list "(current_thread->m_search_regs_saved)" 5073 . 5110)))
          ("saved_search_regs" . ((semantic-list "(current_thread->m_saved_search_regs)" 5181 . 5218)))
          ("last_thing_searched" . ((semantic-list "(current_thread->m_last_thing_searched)" 1261 . 1300)))
          ("search_regs" . ((semantic-list "(current_thread->m_search_regs)" 4863 . 4894)))
          ("handlerlist" . ((semantic-list "(current_thread->m_handlerlist)" 2986 . 3017)))
          ("catchlist" . ((semantic-list "(current_thread->m_catchlist)" 2615 . 2644)))
          ("saved_last_thing_searched" . ((semantic-list "(current_thread->m_saved_last_thing_searched)" 1379 . 1424)))
          )
)
    (semanticdb-table "semanticdb-table-19d4828"
      :major-mode c-mode
      :tags 
        '( ("NDEBUG" variable (:constant-flag t) nil [1198 1204])
            ("stdbool.h" include (:system-flag t) nil [1587 1607])
            ("GNUC_PREREQ" variable (:constant-flag t) nil [2013 2024])
            ("bool_bf" type
               (:typedef ("bool")
                :type "typedef")
                nil [2362 2383])
            ("__has_attribute" variable (:constant-flag t) nil [2701 2716])
            ("__has_attribute_alloc_size" variable (:constant-flag t) nil [2749 2775])
            ("__has_attribute_cleanup" variable (:constant-flag t) nil [2807 2830])
            ("__has_attribute_externally_visible" variable (:constant-flag t) nil [2862 2896])
            ("__has_attribute_no_address_safety_analysis" variable (:constant-flag t) nil [2928 2970])
            ("__has_attribute_no_sanitize_address" variable (:constant-flag t) nil [2986 3021])
            ("__has_attribute_no_sanitize_undefined" variable (:constant-flag t) nil [3053 3090])
            ("__has_feature" variable (:constant-flag t) nil [3264 3277])
            ("ADDRESS_SANITIZER" variable (:constant-flag t) nil [3458 3475])
            ("getenv_TZ" variable (:constant-flag t) nil [7660 7669])
            ("setenv_TZ" variable (:constant-flag t) nil [7694 7703])
            ("emacs_getenv_TZ" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7750 7755]))                  
                :type "char")
                nil [7720 7756])
            ("emacs_setenv_TZ" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7785 7798]))                  
                :type "int")
                nil [7757 7799])
            ("NO_INLINE" variable (:constant-flag t) nil [7870 7879])
            ("EXTERNALLY_VISIBLE" variable (:constant-flag t) nil [8056 8074])
            ("ATTRIBUTE_FORMAT" variable (:constant-flag t) nil [8190 8206])
            ("FALLTHROUGH" variable (:constant-flag t) nil [8329 8340])
            ("PRINTF_ARCHETYPE" variable (:constant-flag t) nil [9383 9399])
            ("ATTRIBUTE_FORMAT_PRINTF" variable (:constant-flag t) nil [9426 9449])
            ("ATTRIBUTE_CONST" variable (:constant-flag t) nil [9561 9576])
            ("ATTRIBUTE_UNUSED" variable (:constant-flag t) nil [9605 9621])
            ("ATTRIBUTE_MAY_ALIAS" variable (:constant-flag t) nil [9754 9773])
            ("DECLARE_POINTER_ALIAS" variable (:constant-flag t) nil [10063 10084])
            ("ATTRIBUTE_MALLOC" variable (:constant-flag t) nil [10184 10200])
            ("ATTRIBUTE_ALLOC_SIZE" variable (:constant-flag t) nil [10392 10412])
            ("ATTRIBUTE_MALLOC_SIZE" variable (:constant-flag t) nil [10435 10456])
            ("ADDRESS_SANITIZER_WORKAROUND" variable (:constant-flag t) nil [10858 10886])
            ("ATTRIBUTE_NO_SANITIZE_ADDRESS" variable (:constant-flag t) nil [11399 11428])
            ("ATTRIBUTE_NO_SANITIZE_UNDEFINED" variable (:constant-flag t) nil [11785 11816])
            ("INLINE" variable (:constant-flag t) nil [13452 13458])
            ("EXTERN_INLINE" variable (:constant-flag t) nil [13485 13498])
            ("INLINE_HEADER_BEGIN" variable (:constant-flag t) nil [13525 13544])
            ("INLINE_HEADER_END" variable (:constant-flag t) nil [13577 13594])
            ("UNINIT" variable (:constant-flag t) nil [13837 13843]))          
      :file "conf_post.h"
      :pointmax 13863
      :fsize 13862
      :lastmodtime '(23408 44231 529557 791000)
      :unmatched-syntax '((close-paren 10847 . 10848) (semantic-list 10772 . 10847) (punctuation 10770 . 10771) (punctuation 10769 . 10770))
      :lexical-table 
        '(("__has_attribute_no_address_safety_analysis" . ((symbol "false" 2971 . 2976)))
          ("getenv_TZ" . ((symbol "emacs_getenv_TZ" 7670 . 7685)))
          ("ATTRIBUTE_CONST" . ((symbol "_GL_ATTRIBUTE_CONST" 9577 . 9596)))
          ("INLINE_HEADER_BEGIN" . ((symbol "_GL_INLINE_HEADER_BEGIN" 13545 . 13568)))
          ("__has_attribute_externally_visible" . ((symbol "GNUC_PREREQ" 2897 . 2908) (semantic-list "(4, 1, 0)" 2909 . 2918)))
          ("ATTRIBUTE_MALLOC" . ((symbol "__attribute__" 10201 . 10214) (semantic-list "((__malloc__))" 10215 . 10229)))
          ("__has_attribute_no_sanitize_undefined" . ((symbol "GNUC_PREREQ" 3091 . 3102) (semantic-list "(4, 9, 0)" 3103 . 3112)))
          ("__has_attribute_no_sanitize_address" . ((symbol "GNUC_PREREQ" 3022 . 3033) (semantic-list "(4, 8, 0)" 3034 . 3043)))
          ("__has_feature" (spp-arg-list ("a") 3277 . 3280) . ((symbol "false" 3281 . 3286)))
          ("ATTRIBUTE_MALLOC_SIZE" (spp-arg-list ("args") 10456 . 10462) . 
              ((symbol "ATTRIBUTE_MALLOC" 10463 . 10479) (symbol "ATTRIBUTE_ALLOC_SIZE" 10480 . 10500) (semantic-list "(args)" 10501 . 10507)))
          ("INLINE" . ((symbol "_GL_INLINE" 13459 . 13469)))
          ("EXTERN_INLINE" . ((symbol "_GL_EXTERN_INLINE" 13499 . 13516)))
          ("setenv_TZ" . ((symbol "emacs_setenv_TZ" 7704 . 7719)))
          ("PRINTF_ARCHETYPE" . ((symbol "__printf__" 9400 . 9410)))
          ("ATTRIBUTE_NO_SANITIZE_ADDRESS")
          ("ADDRESS_SANITIZER" . ((symbol "false" 3476 . 3481)))
          ("FALLTHROUGH" . ((semantic-list "((void) 0)" 8341 . 8351)))
          ("EXTERNALLY_VISIBLE")
          ("GNUC_PREREQ" (spp-arg-list ("v" "w" "x") 2024 . 2033) . ((semantic-list "((v) < __GNUC__ + ((w) < __GNUC_MINOR__ + ((x) <= __GNUC_PATCHLEVEL__)))" 2040 . 2112)))
          ("ADDRESS_SANITIZER_WORKAROUND")
          ("INLINE_HEADER_END" . ((symbol "_GL_INLINE_HEADER_END" 13595 . 13616)))
          ("__has_attribute_cleanup" . ((symbol "GNUC_PREREQ" 2831 . 2842) (semantic-list "(3, 4, 0)" 2843 . 2852)))
          ("ATTRIBUTE_FORMAT" (spp-arg-list ("spec") 8206 . 8212))
          ("NDEBUG")
          ("__has_attribute" (spp-arg-list ("a") 2716 . 2719) . ((spp-symbol-merge ((symbol "__has_attribute_" 2720 . 2736) (symbol "a" 2738 . 2739)) 2720 . 2739)))
          ("__has_attribute_alloc_size" . ((symbol "GNUC_PREREQ" 2776 . 2787) (semantic-list "(4, 3, 0)" 2788 . 2797)))
          ("NO_INLINE" . ((symbol "__attribute__" 7880 . 7893) (semantic-list "((noinline))" 7893 . 7905)))
          ("ATTRIBUTE_MAY_ALIAS")
          ("DECLARE_POINTER_ALIAS" (spp-arg-list ("name" "type" "addr") 10084 . 10102) . 
              ((symbol "type" 10107 . 10111) (symbol "ATTRIBUTE_MAY_ALIAS" 10112 . 10131) (punctuation "*" 10132 . 10133) (symbol "name" 10133 . 10137) (punctuation "=" 10138 . 10139) (semantic-list "(type *)" 10140 . 10148) (semantic-list "(addr)" 10149 . 10155)))
          ("UNINIT")
          ("ATTRIBUTE_FORMAT_PRINTF" (spp-arg-list ("string_index" "first_to_check") 9449 . 9479) . ((symbol "ATTRIBUTE_FORMAT" 9484 . 9500) (semantic-list "((PRINTF_ARCHETYPE, string_index, first_to_check))" 9501 . 9551)))
          ("ATTRIBUTE_ALLOC_SIZE" (spp-arg-list ("args") 10412 . 10418))
          ("ATTRIBUTE_UNUSED" . ((symbol "_GL_UNUSED" 9622 . 9632)))
          ("ATTRIBUTE_NO_SANITIZE_UNDEFINED")
          )
)
    (semanticdb-table "semanticdb-table-1abc890"
      :major-mode c-mode
      :tags 
        '( ("__MINI_GMP_H__" variable (:constant-flag t) nil [1379 1393])
            ("stddef.h" include (:system-flag t) nil [1412 1431])
            ("mpz_export" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [11282 11289])
                    ("" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11290 11299])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [11300 11304])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11305 11312])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [11313 11317])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11318 11325])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11326 11338]))                  
                :pointer 1
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [11264 11339])
            ("mpz_import" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11208 11214])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11215 11222])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [11223 11227])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11228 11235])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [11236 11240])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11241 11248])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [11249 11262]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [11191 11263])
            ("mpz_init_set_str" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10008 10014])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10015 10028])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [10029 10033]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9986 10034])
            ("mpz_set_str" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9959 9965])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9966 9979])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [9980 9984]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9942 9985])
            ("mpz_get_str" function
               (:typemodifiers ("extern" "\"C\"")
                :type "char"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9915 9922])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [9923 9927])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9928 9940]))                  
                :pointer 1
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9896 9941])
            ("mpz_sizeinbase" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("size_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9877 9889])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [9890 9894]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9854 9895])
            ("mpz_init_set_d" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9837 9843])
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) [9844 9851]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9816 9852])
            ("mpz_init_set" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9795 9801])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9802 9814]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9776 9815])
            ("mpz_init_set_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9749 9755])
                    ("" variable (:type "unsigned long int") (reparse-symbol arg-sub-list) [9756 9774]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9727 9775])
            ("mpz_init_set_si" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9702 9708])
                    ("" variable (:type "signed long int") (reparse-symbol arg-sub-list) [9709 9725]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9680 9726])
            ("mpz_set_d" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9663 9669])
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) [9670 9677]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9647 9678])
            ("mpz_set" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9626 9632])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9633 9645]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9612 9646])
            ("mpz_set_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9585 9591])
                    ("" variable (:type "unsigned long int") (reparse-symbol arg-sub-list) [9592 9610]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9568 9611])
            ("mpz_set_si" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9543 9549])
                    ("" variable (:type "signed long int") (reparse-symbol arg-sub-list) [9550 9566]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9526 9567])
            ("MPZ_ROINIT_N" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [9486 9498])
            ("mpz_roinit_n" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mpz_srcptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9447 9453])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9454 9464])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9465 9475]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9422 9476])
            ("mpz_limbs_finish" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9403 9409])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9410 9420]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9380 9421])
            ("mpz_limbs_write" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9361 9367])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9368 9378]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9337 9379])
            ("mpz_limbs_modify" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9318 9324])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9325 9335]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9293 9336])
            ("mpz_limbs_read" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_srcptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mpz_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9280 9291]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9254 9292])
            ("mpz_realloc2" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9233 9239])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9240 9252]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9214 9253])
            ("mpz_getlimbn" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9188 9200])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9201 9211]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9164 9212])
            ("mpz_size" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("size_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9150 9162]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9133 9163])
            ("mpz_get_d" function
               (:typemodifiers ("extern" "\"C\"")
                :type "double"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9119 9131]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9101 9132])
            ("mpz_get_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9087 9099]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9057 9100])
            ("mpz_get_si" function
               (:typemodifiers ("extern" "\"C\"")
                :type "long int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9043 9055]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9022 9056])
            ("mpz_fits_ulong_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9008 9020]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8986 9021])
            ("mpz_fits_slong_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8972 8984]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8950 8985])
            ("mpz_scan1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8922 8934])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8935 8947]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8899 8948])
            ("mpz_scan0" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8872 8884])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8885 8897]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8849 8898])
            ("mpz_hamdist" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8822 8834])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8835 8847]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8797 8848])
            ("mpz_popcount" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8783 8795]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8757 8796])
            ("mpz_xor" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8722 8728])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8729 8741])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8742 8754]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8708 8755])
            ("mpz_ior" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8674 8680])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8681 8693])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8694 8706]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8660 8707])
            ("mpz_and" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8626 8632])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8633 8645])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8646 8658]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8612 8659])
            ("mpz_com" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8591 8597])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8598 8610]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8577 8611])
            ("mpz_combit" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8555 8561])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8562 8574]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8538 8575])
            ("mpz_clrbit" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8517 8523])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8524 8536]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8500 8537])
            ("mpz_setbit" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8479 8485])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8486 8498]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8462 8499])
            ("mpz_tstbit" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8435 8447])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8448 8460]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8419 8461])
            ("mpz_probab_prime_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8399 8411])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8412 8416]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8375 8417])
            ("mpz_bin_uiui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8336 8342])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8343 8357])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8358 8372]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8317 8373])
            ("mpz_mfac_uiui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8279 8285])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8286 8300])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8301 8315]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8259 8316])
            ("mpz_2fac_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8236 8242])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8243 8257]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8218 8258])
            ("mpz_fac_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8195 8201])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8202 8216]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8178 8217])
            ("mpz_root" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8141 8147])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8148 8160])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8161 8175]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8127 8176])
            ("mpz_rootrem" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8084 8090])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8091 8097])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8098 8110])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8111 8125]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [8066 8126])
            ("mpz_powm_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8016 8022])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8023 8035])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [8036 8050])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8051 8063]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7998 8064])
            ("mpz_powm" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7951 7957])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7958 7970])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7971 7983])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7984 7996]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7936 7997])
            ("mpz_ui_pow_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7898 7904])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7905 7919])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7920 7934]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7878 7935])
            ("mpz_pow_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7842 7848])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7849 7861])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7862 7876]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7825 7877])
            ("mpz_perfect_square_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7810 7822]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7784 7823])
            ("mpz_sqrt" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7763 7769])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7770 7782]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7748 7783])
            ("mpz_sqrtrem" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7720 7726])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7727 7733])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7734 7746]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7702 7747])
            ("mpz_invert" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7667 7673])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7674 7686])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7687 7699]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7651 7700])
            ("mpz_lcm" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7617 7623])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7624 7636])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7637 7649]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7603 7650])
            ("mpz_lcm_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7567 7573])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7574 7586])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7587 7601]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7550 7602])
            ("mpz_gcdext" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7502 7508])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7509 7515])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7516 7522])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7523 7535])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7536 7548]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7485 7549])
            ("mpz_gcd" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7451 7457])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7458 7470])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7471 7483]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7437 7484])
            ("mpz_gcd_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7401 7407])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7408 7420])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7421 7435]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7375 7436])
            ("mpz_divisible_ui_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7345 7357])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7358 7372]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7321 7373])
            ("mpz_divexact_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7284 7290])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7291 7303])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7304 7318]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7262 7319])
            ("mpz_mod_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7225 7231])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7232 7244])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7245 7259]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7199 7260])
            ("mpz_tdiv_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7169 7181])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7182 7196]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7142 7197])
            ("mpz_fdiv_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7113 7125])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7126 7140]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7086 7141])
            ("mpz_cdiv_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7057 7069])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7070 7084]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [7030 7085])
            ("mpz_tdiv_r_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6994 7000])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7001 7013])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [7014 7028]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6965 7029])
            ("mpz_fdiv_r_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6929 6935])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6936 6948])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6949 6963]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6900 6964])
            ("mpz_cdiv_r_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6864 6870])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6871 6883])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6884 6898]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6835 6899])
            ("mpz_tdiv_q_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6799 6805])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6806 6818])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6819 6833]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6770 6834])
            ("mpz_fdiv_q_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6734 6740])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6741 6753])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6754 6768]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6705 6769])
            ("mpz_cdiv_q_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6669 6675])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6676 6688])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6689 6703]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6640 6704])
            ("mpz_tdiv_qr_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6597 6603])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6604 6610])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6611 6623])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6624 6638]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6567 6639])
            ("mpz_fdiv_qr_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6524 6530])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6531 6537])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6538 6550])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6551 6565]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6494 6566])
            ("mpz_cdiv_qr_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6451 6457])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6458 6464])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6465 6477])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [6478 6492]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6421 6493])
            ("mpz_congruent_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6380 6392])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6393 6405])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6406 6418]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6359 6419])
            ("mpz_divisible_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6332 6344])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6345 6357]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6311 6358])
            ("mpz_divexact" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6276 6282])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6283 6295])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6296 6308]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6257 6309])
            ("mpz_mod" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6222 6228])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6229 6241])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6242 6254]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6208 6255])
            ("mpz_tdiv_r_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6173 6179])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6180 6192])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6193 6205]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6151 6206])
            ("mpz_fdiv_r_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6117 6123])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6124 6136])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6137 6149]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6095 6150])
            ("mpz_cdiv_r_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6061 6067])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6068 6080])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6081 6093]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [6039 6094])
            ("mpz_tdiv_q_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6005 6011])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6012 6024])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6025 6037]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5983 6038])
            ("mpz_fdiv_q_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5949 5955])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5956 5968])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5969 5981]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5927 5982])
            ("mpz_cdiv_q_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5893 5899])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5900 5912])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5913 5925]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5871 5926])
            ("mpz_tdiv_r" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5836 5842])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5843 5855])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5856 5868]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5819 5869])
            ("mpz_fdiv_r" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5785 5791])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5792 5804])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5805 5817]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5768 5818])
            ("mpz_cdiv_r" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5734 5740])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5741 5753])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5754 5766]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5717 5767])
            ("mpz_tdiv_q" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5683 5689])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5690 5702])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5703 5715]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5666 5716])
            ("mpz_fdiv_q" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5632 5638])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5639 5651])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5652 5664]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5615 5665])
            ("mpz_cdiv_q" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5581 5587])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5588 5600])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5601 5613]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5564 5614])
            ("mpz_tdiv_qr" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5523 5529])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5530 5536])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5537 5549])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5550 5562]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5505 5563])
            ("mpz_fdiv_qr" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5464 5470])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5471 5477])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5478 5490])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5491 5503]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5446 5504])
            ("mpz_cdiv_qr" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5405 5411])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5412 5418])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5419 5431])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5432 5444]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5387 5445])
            ("mpz_submul" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5352 5358])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5359 5371])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5372 5384]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5335 5385])
            ("mpz_submul_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5295 5301])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5302 5314])
                    ("" variable (:type "unsigned long int") (reparse-symbol arg-sub-list) [5315 5333]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5275 5334])
            ("mpz_addmul" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5241 5247])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5248 5260])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5261 5273]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5224 5274])
            ("mpz_addmul_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5184 5190])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5191 5203])
                    ("" variable (:type "unsigned long int") (reparse-symbol arg-sub-list) [5204 5222]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5164 5223])
            ("mpz_mul_2exp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5130 5136])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5137 5149])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5150 5162]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5111 5163])
            ("mpz_mul" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5077 5083])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5084 5096])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5097 5109]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5063 5110])
            ("mpz_mul_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5023 5029])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5030 5042])
                    ("" variable (:type "unsigned long int") (reparse-symbol arg-sub-list) [5043 5061]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5006 5062])
            ("mpz_mul_si" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4975 4981])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4982 4994])
                    ("" variable (:type "long int") (reparse-symbol arg-sub-list) [4995 5004]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4958 5005])
            ("mpz_sub" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4923 4929])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4930 4942])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4943 4955]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4909 4956])
            ("mpz_ui_sub" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4873 4879])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4880 4894])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4895 4907]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4856 4908])
            ("mpz_sub_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4820 4826])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4827 4839])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4840 4854]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4803 4855])
            ("mpz_add" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4769 4775])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4776 4788])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4789 4801]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4755 4802])
            ("mpz_add_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4719 4725])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4726 4738])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4739 4753]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4702 4754])
            ("mpz_swap" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4686 4692])
                    ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4693 4699]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4671 4700])
            ("mpz_neg" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4650 4656])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4657 4669]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4636 4670])
            ("mpz_abs" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4615 4621])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4622 4634]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4601 4635])
            ("mpz_cmpabs_d" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4578 4590])
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) [4591 4598]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4560 4599])
            ("mpz_cmp_d" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4538 4550])
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) [4551 4558]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4523 4559])
            ("mpz_cmpabs" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4496 4508])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4509 4521]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4480 4522])
            ("mpz_cmpabs_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4451 4463])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4464 4478]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4432 4479])
            ("mpz_cmp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4405 4417])
                    ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4418 4430]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4392 4431])
            ("mpz_cmp_ui" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4363 4375])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4376 4390]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4347 4391])
            ("mpz_cmp_si" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4327 4339])
                    ("" variable (:type "long") (reparse-symbol arg-sub-list) [4340 4345]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4311 4346])
            ("mpz_sgn" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("mpz_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4297 4309]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4284 4310])
            ("mpz_even_p" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [4250 4260])
            ("mpz_odd_p" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [4182 4191])
            ("mpz_clear" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4165 4171]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4149 4172])
            ("mpz_init2" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4128 4134])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4135 4147]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4112 4148])
            ("mpz_init" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mpz_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4104 4110]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4089 4111])
            ("mpn_set_str" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_size_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4043 4050])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [4051 4073])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4074 4081])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4082 4086]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4020 4087])
            ("mpn_get_str" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("size_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [3978 3994])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3995 3999])
                    ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4000 4007])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4008 4018]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3958 4019])
            ("mpn_invert_limb" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [3913 3928])
            ("mpn_invert_3by2" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3882 3892])
                    ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3893 3903]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3855 3904])
            ("mpn_popcount" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3831 3841])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3842 3852]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3805 3853])
            ("mpn_neg" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3773 3780])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3781 3791])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3792 3802]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3754 3803])
            ("mpn_com" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3723 3730])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3731 3741])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3742 3752]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3709 3753])
            ("mpn_scan1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3683 3693])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3694 3706]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3660 3707])
            ("mpn_scan0" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_bitcnt_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3635 3645])
                    ("" variable (:type ("mp_bitcnt_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3646 3658]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3612 3659])
            ("mpn_rshift" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3566 3573])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3574 3584])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3585 3595])
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3596 3609]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3544 3610])
            ("mpn_lshift" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3499 3506])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3507 3517])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3518 3528])
                    ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3529 3542]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3477 3543])
            ("mpn_sqrtrem" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_size_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3437 3444])
                    ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3445 3452])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3453 3463])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3464 3474]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3414 3475])
            ("mpn_perfect_square_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3391 3401])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3402 3412]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3365 3413])
            ("mpn_sqr" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3334 3341])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3342 3352])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3353 3363]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3320 3364])
            ("mpn_mul_n" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3278 3285])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3286 3296])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3297 3307])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3308 3318]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3262 3319])
            ("mpn_mul" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3209 3216])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3217 3227])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3228 3238])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3239 3249])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3250 3260]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3190 3261])
            ("mpn_submul_1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3147 3154])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3155 3165])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3166 3176])
                    ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3177 3187]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3123 3188])
            ("mpn_addmul_1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3081 3088])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3089 3099])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3100 3110])
                    ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3111 3121]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3057 3122])
            ("mpn_mul_1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3015 3022])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3023 3033])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3034 3044])
                    ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3045 3055]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2994 3056])
            ("mpn_sub" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2940 2947])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2948 2958])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2959 2969])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2970 2980])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2981 2991]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2921 2992])
            ("mpn_sub_n" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2879 2886])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2887 2897])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2898 2908])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2909 2919]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2858 2920])
            ("mpn_sub_1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2816 2823])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2824 2834])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2835 2845])
                    ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2846 2856]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2795 2857])
            ("mpn_add" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2741 2748])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2749 2759])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2760 2770])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2771 2781])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2782 2792]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2722 2793])
            ("mpn_add_n" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2680 2687])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2688 2698])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2699 2709])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2710 2720]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2659 2721])
            ("mpn_add_1" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("mp_limb_t" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2617 2624])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2625 2635])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2636 2646])
                    ("" variable (:type ("mp_limb_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2647 2657]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2596 2658])
            ("mpn_zero_p" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2572 2582])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2583 2593]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2556 2594])
            ("mpn_cmp" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :arguments 
                  ( ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2522 2532])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2533 2543])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2544 2554]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2509 2555])
            ("mpn_zero" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2488 2495])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2496 2506]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2473 2507])
            ("mpn_copyd" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2442 2449])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2450 2460])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2461 2471]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2426 2472])
            ("mpn_copyi" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable (:type ("mp_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2395 2402])
                    ("" variable (:type ("mp_srcptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2403 2413])
                    ("" variable (:type ("mp_size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2414 2424]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2379 2425])
            ("mp_bits_per_limb" variable
               (:type "int"
                :constant-flag t
                :typemodifiers ("extern" "\"C\"" "extern"))
                (reparse-symbol extern-c-contents) [2343 2377])
            ("mpz_srcptr" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :pointer 1
                :typedef ("__mpz_struct" type (:type "class") nil nil))
                (reparse-symbol extern-c-contents) [2302 2341])
            ("mpz_ptr" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :pointer 1
                :typedef ("__mpz_struct" type (:type "class") nil nil))
                (reparse-symbol extern-c-contents) [2271 2301])
            ("mpz_t" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("__mpz_struct" type (:type "class") nil nil))
                (reparse-symbol extern-c-contents) [2239 2269])
            ("__mpz_struct" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("" type
                     (:members 
                        ( ("_mp_alloc" variable (:type "int") (reparse-symbol classsubparts) [1925 1939])
                          ("_mp_size" variable (:type "int") (reparse-symbol classsubparts) [2020 2033])
                          ("_mp_d" variable
                             (:pointer 1
                              :type ("mp_limb_t" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [2174 2191]))                        
                      :type "struct")
                      nil nil))
                (reparse-symbol extern-c-contents) [1906 2237])
            ("mp_srcptr" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :pointer 1
                :typedef ("mp_limb_t" type (:type "class") nil nil))
                (reparse-symbol extern-c-contents) [1869 1904])
            ("mp_ptr" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :pointer 1
                :typedef ("mp_limb_t" type (:type "class") nil nil))
                (reparse-symbol extern-c-contents) [1842 1868])
            ("mp_bitcnt_t" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("unsigned long"))
                (reparse-symbol extern-c-contents) [1806 1840])
            ("mp_size_t" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("long"))
                (reparse-symbol extern-c-contents) [1782 1805])
            ("mp_limb_t" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("unsigned long"))
                (reparse-symbol extern-c-contents) [1749 1781])
            ("mp_get_memory_functions" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1643 1653])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1673 1683])
                    (nil variable (:pointer (("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [1730 1737]) ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1738 1745])) :type "void") (reparse-symbol arg-sub-list) [1719 1746]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [1613 1747])
            ("mp_set_memory_functions" function
               (:typemodifiers ("extern" "\"C\"")
                :type "void"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1510 1519])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1539 1548])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [1594 1601])
                            ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1602 1609]))                          
                        :type "void")
                        nil nil))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [1480 1611]))          
      :file "mini-gmp.h"
      :pointmax 11404
      :fsize 11403
      :lastmodtime '(23408 44231 556224 669000)
      :unmatched-syntax '((semantic-list 1684 . 1708) (semantic-list 1679 . 1683) (semantic-list 1654 . 1662) (semantic-list 1649 . 1653) (semantic-list 1549 . 1573) (semantic-list 1545 . 1548) (semantic-list 1520 . 1528) (semantic-list 1516 . 1519))
      :lexical-table 
        '(("mpz_even_p" (spp-arg-list ("z") 4260 . 4263) . ((semantic-list "(! mpz_odd_p (z))" 4265 . 4282)))
          ("__MINI_GMP_H__")
          ("mpz_odd_p" (spp-arg-list ("z") 4191 . 4194) . ((semantic-list "(((z)->_mp_size != 0) & (int) (z)->_mp_d[0])" 4197 . 4241)))
          ("MPZ_ROINIT_N" (spp-arg-list ("xp" "xs") 9498 . 9506) . ((semantic-list "{{0, (xs),(xp) }}" 9507 . 9524)))
          ("mpn_invert_limb" (spp-arg-list ("x") 3928 . 3931) . ((symbol "mpn_invert_3by2" 3932 . 3947) (semantic-list "((x), 0)" 3948 . 3956)))
          )
)
    (semanticdb-table "semanticdb-table-1abc8e0"
      :major-mode c-mode
      :tags 
        '( ("emacs_globals" type
               (:members 
                  ( ("f_Vafter_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [99 137])
                    ("Vafter_change_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [146 169])
                    ("f_Vafter_delete_frame_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [206 250])
                    ("Vafter_delete_frame_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [259 288])
                    ("f_Vafter_init_time" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [331 362])
                    ("Vafter_init_time" variable (:constant-flag t) (reparse-symbol classsubparts) [371 387])
                    ("f_Vafter_insert_file_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [417 460])
                    ("Vafter_insert_file_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [469 497])
                    ("f_Vafter_load_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [539 571])
                    ("Vafter_load_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [580 597])
                    ("f_Valternate_fontname_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [628 668])
                    ("Valternate_fontname_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [677 702])
                    ("f_Vauto_composition_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [741 782])
                    ("Vauto_composition_function" variable (:constant-flag t) (reparse-symbol classsubparts) [791 817])
                    ("f_Vauto_composition_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [857 894])
                    ("Vauto_composition_mode" variable (:constant-flag t) (reparse-symbol classsubparts) [903 925])
                    ("f_Vauto_fill_chars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [961 992])
                    ("Vauto_fill_chars" variable (:constant-flag t) (reparse-symbol classsubparts) [1001 1017])
                    ("f_Vauto_resize_tool_bars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1047 1084])
                    ("Vauto_resize_tool_bars" variable (:constant-flag t) (reparse-symbol classsubparts) [1093 1115])
                    ("f_Vauto_save_include_big_deletions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1151 1198])
                    ("Vauto_save_include_big_deletions" variable (:constant-flag t) (reparse-symbol classsubparts) [1207 1239])
                    ("f_Vauto_save_list_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1285 1325])
                    ("Vauto_save_list_file_name" variable (:constant-flag t) (reparse-symbol classsubparts) [1334 1359])
                    ("f_Vauto_save_timeout" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1398 1431])
                    ("Vauto_save_timeout" variable (:constant-flag t) (reparse-symbol classsubparts) [1440 1458])
                    ("f_Vauto_save_visited_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1490 1533])
                    ("Vauto_save_visited_file_name" variable (:constant-flag t) (reparse-symbol classsubparts) [1542 1570])
                    ("f_Vbefore_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1612 1651])
                    ("Vbefore_change_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [1660 1684])
                    ("f_Vbefore_init_time" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1722 1754])
                    ("Vbefore_init_time" variable (:constant-flag t) (reparse-symbol classsubparts) [1763 1780])
                    ("f_Vblink_cursor_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1811 1845])
                    ("Vblink_cursor_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [1854 1873])
                    ("f_Vbuffer_access_fontified_property" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1906 1954])
                    ("Vbuffer_access_fontified_property" variable (:constant-flag t) (reparse-symbol classsubparts) [1963 1996])
                    ("f_Vbuffer_access_fontify_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2043 2090])
                    ("Vbuffer_access_fontify_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [2099 2131])
                    ("f_Vbuffer_list_update_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2177 2216])
                    ("Vbuffer_list_update_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [2225 2249])
                    ("f_Vbuild_files" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2287 2314])
                    ("Vbuild_files" variable (:constant-flag t) (reparse-symbol classsubparts) [2323 2335])
                    ("f_Vbyte_boolean_vars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2361 2394])
                    ("Vbyte_boolean_vars" variable (:constant-flag t) (reparse-symbol classsubparts) [2403 2421])
                    ("f_Vbyte_code_meter" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2453 2484])
                    ("Vbyte_code_meter" variable (:constant-flag t) (reparse-symbol classsubparts) [2493 2509])
                    ("f_Vbytecomp_version_regexp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2539 2578])
                    ("Vbytecomp_version_regexp" variable (:constant-flag t) (reparse-symbol classsubparts) [2587 2611])
                    ("f_Vcairo_version_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2649 2685])
                    ("Vcairo_version_string" variable (:constant-flag t) (reparse-symbol classsubparts) [2694 2715])
                    ("f_Vchange_major_mode_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2750 2788])
                    ("Vchange_major_mode_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [2797 2820])
                    ("f_Vchar_code_property_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2857 2897])
                    ("Vchar_code_property_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [2906 2931])
                    ("f_Vchar_property_alias_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2970 3011])
                    ("Vchar_property_alias_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [3020 3046])
                    ("f_Vchar_script_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3086 3119])
                    ("Vchar_script_table" variable (:constant-flag t) (reparse-symbol classsubparts) [3128 3146])
                    ("f_Vchar_width_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3178 3210])
                    ("Vchar_width_table" variable (:constant-flag t) (reparse-symbol classsubparts) [3219 3236])
                    ("f_Vcharset_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3267 3295])
                    ("Vcharset_list" variable (:constant-flag t) (reparse-symbol classsubparts) [3304 3317])
                    ("f_Vcharset_map_path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3344 3376])
                    ("Vcharset_map_path" variable (:constant-flag t) (reparse-symbol classsubparts) [3385 3402])
                    ("f_Vcharset_revision_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3433 3471])
                    ("Vcharset_revision_table" variable (:constant-flag t) (reparse-symbol classsubparts) [3480 3503])
                    ("f_Vcode_conversion_map_vector" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3540 3582])
                    ("Vcode_conversion_map_vector" variable (:constant-flag t) (reparse-symbol classsubparts) [3591 3618])
                    ("f_Vcoding_category_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3659 3695])
                    ("Vcoding_category_list" variable (:constant-flag t) (reparse-symbol classsubparts) [3704 3725])
                    ("f_Vcoding_system_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3760 3795])
                    ("Vcoding_system_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [3804 3824])
                    ("f_Vcoding_system_for_read" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3858 3896])
                    ("Vcoding_system_for_read" variable (:constant-flag t) (reparse-symbol classsubparts) [3905 3928])
                    ("f_Vcoding_system_for_write" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3965 4004])
                    ("Vcoding_system_for_write" variable (:constant-flag t) (reparse-symbol classsubparts) [4013 4037])
                    ("f_Vcoding_system_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4075 4109])
                    ("Vcoding_system_list" variable (:constant-flag t) (reparse-symbol classsubparts) [4118 4137])
                    ("f_Vcombine_after_change_calls" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4170 4212])
                    ("Vcombine_after_change_calls" variable (:constant-flag t) (reparse-symbol classsubparts) [4221 4248])
                    ("f_Vcommand_debug_status" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4289 4325])
                    ("Vcommand_debug_status" variable (:constant-flag t) (reparse-symbol classsubparts) [4334 4355])
                    ("f_Vcommand_error_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4390 4428])
                    ("Vcommand_error_function" variable (:constant-flag t) (reparse-symbol classsubparts) [4437 4460])
                    ("f_Vcommand_history" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4497 4528])
                    ("Vcommand_history" variable (:constant-flag t) (reparse-symbol classsubparts) [4537 4553])
                    ("f_Vcommand_line_args" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4583 4616])
                    ("Vcommand_line_args" variable (:constant-flag t) (reparse-symbol classsubparts) [4625 4643])
                    ("f_Vcomment_use_syntax_ppss" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4675 4714])
                    ("Vcomment_use_syntax_ppss" variable (:constant-flag t) (reparse-symbol classsubparts) [4723 4747])
                    ("f_Vcompletion_ignored_extensions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4785 4830])
                    ("Vcompletion_ignored_extensions" variable (:constant-flag t) (reparse-symbol classsubparts) [4839 4869])
                    ("f_Vcompletion_regexp_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4913 4951])
                    ("Vcompletion_regexp_list" variable (:constant-flag t) (reparse-symbol classsubparts) [4960 4983])
                    ("f_Vcompose_chars_after_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5020 5064])
                    ("Vcompose_chars_after_function" variable (:constant-flag t) (reparse-symbol classsubparts) [5073 5102])
                    ("f_Vcomposition_function_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5145 5187])
                    ("Vcomposition_function_table" variable (:constant-flag t) (reparse-symbol classsubparts) [5196 5223])
                    ("f_Vconfigure_info_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5264 5304])
                    ("Vconfigure_info_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [5313 5338])
                    ("f_Vcurrent_iso639_language" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5377 5416])
                    ("Vcurrent_iso639_language" variable (:constant-flag t) (reparse-symbol classsubparts) [5425 5449])
                    ("f_Vcurrent_load_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5487 5520])
                    ("Vcurrent_load_list" variable (:constant-flag t) (reparse-symbol classsubparts) [5529 5547])
                    ("f_Vcurrent_prefix_arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5579 5613])
                    ("Vcurrent_prefix_arg" variable (:constant-flag t) (reparse-symbol classsubparts) [5622 5641])
                    ("f_Vdata_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5674 5704])
                    ("Vdata_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [5713 5728])
                    ("f_Vdbus_compiled_version" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5757 5794])
                    ("Vdbus_compiled_version" variable (:constant-flag t) (reparse-symbol classsubparts) [5803 5825])
                    ("f_Vdbus_debug" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5861 5887])
                    ("Vdbus_debug" variable (:constant-flag t) (reparse-symbol classsubparts) [5896 5907])
                    ("f_Vdbus_message_type_error" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5932 5971])
                    ("Vdbus_message_type_error" variable (:constant-flag t) (reparse-symbol classsubparts) [5980 6004])
                    ("f_Vdbus_message_type_invalid" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6042 6083])
                    ("Vdbus_message_type_invalid" variable (:constant-flag t) (reparse-symbol classsubparts) [6092 6118])
                    ("f_Vdbus_message_type_method_call" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6158 6203])
                    ("Vdbus_message_type_method_call" variable (:constant-flag t) (reparse-symbol classsubparts) [6212 6242])
                    ("f_Vdbus_message_type_method_return" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6286 6333])
                    ("Vdbus_message_type_method_return" variable (:constant-flag t) (reparse-symbol classsubparts) [6342 6374])
                    ("f_Vdbus_message_type_signal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6420 6460])
                    ("Vdbus_message_type_signal" variable (:constant-flag t) (reparse-symbol classsubparts) [6469 6494])
                    ("f_Vdbus_registered_objects_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6533 6578])
                    ("Vdbus_registered_objects_table" variable (:constant-flag t) (reparse-symbol classsubparts) [6587 6617])
                    ("f_Vdbus_runtime_version" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6661 6697])
                    ("Vdbus_runtime_version" variable (:constant-flag t) (reparse-symbol classsubparts) [6706 6727])
                    ("f_Vdeactivate_mark" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6762 6793])
                    ("Vdeactivate_mark" variable (:constant-flag t) (reparse-symbol classsubparts) [6802 6818])
                    ("f_Vdebug_ignored_errors" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6848 6884])
                    ("Vdebug_ignored_errors" variable (:constant-flag t) (reparse-symbol classsubparts) [6893 6914])
                    ("f_Vdebug_on_error" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6949 6979])
                    ("Vdebug_on_error" variable (:constant-flag t) (reparse-symbol classsubparts) [6988 7003])
                    ("f_Vdebug_on_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7032 7062])
                    ("Vdebug_on_event" variable (:constant-flag t) (reparse-symbol classsubparts) [7071 7086])
                    ("f_Vdebug_on_message" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7115 7147])
                    ("Vdebug_on_message" variable (:constant-flag t) (reparse-symbol classsubparts) [7156 7173])
                    ("f_Vdebug_on_signal" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7204 7235])
                    ("Vdebug_on_signal" variable (:constant-flag t) (reparse-symbol classsubparts) [7244 7260])
                    ("f_Vdebugger" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7290 7314])
                    ("Vdebugger" variable (:constant-flag t) (reparse-symbol classsubparts) [7323 7332])
                    ("f_Vdefault_file_name_coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7355 7402])
                    ("Vdefault_file_name_coding_system" variable (:constant-flag t) (reparse-symbol classsubparts) [7411 7443])
                    ("f_Vdefault_frame_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7489 7524])
                    ("Vdefault_frame_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [7533 7553])
                    ("f_Vdefault_frame_scroll_bars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7587 7628])
                    ("Vdefault_frame_scroll_bars" variable (:constant-flag t) (reparse-symbol classsubparts) [7637 7663])
                    ("f_Vdefault_process_coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7703 7748])
                    ("Vdefault_process_coding_system" variable (:constant-flag t) (reparse-symbol classsubparts) [7757 7787])
                    ("f_Vdefault_text_properties" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7831 7870])
                    ("Vdefault_text_properties" variable (:constant-flag t) (reparse-symbol classsubparts) [7879 7903])
                    ("f_Vdeferred_action_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7941 7981])
                    ("Vdeferred_action_function" variable (:constant-flag t) (reparse-symbol classsubparts) [7990 8015])
                    ("f_Vdeferred_action_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8054 8090])
                    ("Vdeferred_action_list" variable (:constant-flag t) (reparse-symbol classsubparts) [8099 8120])
                    ("f_Vdefine_key_rebound_commands" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8155 8198])
                    ("Vdefine_key_rebound_commands" variable (:constant-flag t) (reparse-symbol classsubparts) [8207 8235])
                    ("f_Vdelayed_warnings_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8277 8314])
                    ("Vdelayed_warnings_list" variable (:constant-flag t) (reparse-symbol classsubparts) [8323 8345])
                    ("f_Vdelete_frame_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8381 8419])
                    ("Vdelete_frame_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [8428 8451])
                    ("f_Vdelete_terminal_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8488 8529])
                    ("Vdelete_terminal_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [8538 8564])
                    ("f_Vdisable_point_adjustment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8604 8644])
                    ("Vdisable_point_adjustment" variable (:constant-flag t) (reparse-symbol classsubparts) [8653 8678])
                    ("f_Vdisplay_line_numbers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8717 8753])
                    ("Vdisplay_line_numbers" variable (:constant-flag t) (reparse-symbol classsubparts) [8762 8783])
                    ("f_Vdisplay_line_numbers_current_absolute" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8818 8871])
                    ("Vdisplay_line_numbers_current_absolute" variable (:constant-flag t) (reparse-symbol classsubparts) [8880 8918])
                    ("f_Vdisplay_line_numbers_width" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8970 9012])
                    ("Vdisplay_line_numbers_width" variable (:constant-flag t) (reparse-symbol classsubparts) [9021 9048])
                    ("f_Vdisplay_pixels_per_inch" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9089 9128])
                    ("Vdisplay_pixels_per_inch" variable (:constant-flag t) (reparse-symbol classsubparts) [9137 9161])
                    ("f_Vdoc_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9199 9228])
                    ("Vdoc_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [9237 9251])
                    ("f_Vdoc_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9279 9308])
                    ("Vdoc_file_name" variable (:constant-flag t) (reparse-symbol classsubparts) [9317 9331])
                    ("f_Vdouble_click_time" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9359 9392])
                    ("Vdouble_click_time" variable (:constant-flag t) (reparse-symbol classsubparts) [9401 9419])
                    ("f_Vdynamic_library_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9451 9488])
                    ("Vdynamic_library_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [9497 9519])
                    ("f_Vecho_keystrokes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9555 9586])
                    ("Vecho_keystrokes" variable (:constant-flag t) (reparse-symbol classsubparts) [9595 9611])
                    ("f_Vemacs_copyright" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9641 9672])
                    ("Vemacs_copyright" variable (:constant-flag t) (reparse-symbol classsubparts) [9681 9697])
                    ("f_Vemacs_version" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9727 9756])
                    ("Vemacs_version" variable (:constant-flag t) (reparse-symbol classsubparts) [9765 9779])
                    ("f_Vemulation_mode_map_alists" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9807 9848])
                    ("Vemulation_mode_map_alists" variable (:constant-flag t) (reparse-symbol classsubparts) [9857 9883])
                    ("f_Venable_character_translation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9923 9967])
                    ("Venable_character_translation" variable (:constant-flag t) (reparse-symbol classsubparts) [9976 10005])
                    ("f_Venable_disabled_menus_and_buttons" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10048 10097])
                    ("Venable_disabled_menus_and_buttons" variable (:constant-flag t) (reparse-symbol classsubparts) [10106 10140])
                    ("f_Veval_buffer_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10188 10220])
                    ("Veval_buffer_list" variable (:constant-flag t) (reparse-symbol classsubparts) [10229 10246])
                    ("f_Vexec_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10277 10307])
                    ("Vexec_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [10316 10331])
                    ("f_Vexec_path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10360 10385])
                    ("Vexec_path" variable (:constant-flag t) (reparse-symbol classsubparts) [10394 10404])
                    ("f_Vexec_suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10428 10457])
                    ("Vexec_suffixes" variable (:constant-flag t) (reparse-symbol classsubparts) [10466 10480])
                    ("f_Vexecuting_kbd_macro" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10508 10543])
                    ("Vexecuting_kbd_macro" variable (:constant-flag t) (reparse-symbol classsubparts) [10552 10572])
                    ("f_Vface_default_stipple" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10606 10642])
                    ("Vface_default_stipple" variable (:constant-flag t) (reparse-symbol classsubparts) [10651 10672])
                    ("f_Vface_font_rescale_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10707 10746])
                    ("Vface_font_rescale_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [10755 10779])
                    ("f_Vface_ignored_fonts" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10817 10851])
                    ("Vface_ignored_fonts" variable (:constant-flag t) (reparse-symbol classsubparts) [10860 10879])
                    ("f_Vface_new_frame_defaults" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10912 10951])
                    ("Vface_new_frame_defaults" variable (:constant-flag t) (reparse-symbol classsubparts) [10960 10984])
                    ("f_Vface_remapping_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11022 11058])
                    ("Vface_remapping_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [11067 11088])
                    ("f_Vfeatures" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11123 11147])
                    ("Vfeatures" variable (:constant-flag t) (reparse-symbol classsubparts) [11156 11165])
                    ("f_Vfile_coding_system_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11188 11228])
                    ("Vfile_coding_system_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [11237 11262])
                    ("f_Vfile_name_coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11301 11340])
                    ("Vfile_name_coding_system" variable (:constant-flag t) (reparse-symbol classsubparts) [11349 11373])
                    ("f_Vfile_name_handler_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11411 11450])
                    ("Vfile_name_handler_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [11459 11483])
                    ("f_Vfind_word_boundary_function_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11521 11570])
                    ("Vfind_word_boundary_function_table" variable (:constant-flag t) (reparse-symbol classsubparts) [11579 11613])
                    ("f_Vfirst_change_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11661 11694])
                    ("Vfirst_change_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [11703 11721])
                    ("f_Vfloat_output_format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11753 11788])
                    ("Vfloat_output_format" variable (:constant-flag t) (reparse-symbol classsubparts) [11797 11817])
                    ("f_Vfont_ccl_encoder_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11851 11889])
                    ("Vfont_ccl_encoder_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [11898 11921])
                    ("f_Vfont_encoding_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11958 11993])
                    ("Vfont_encoding_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [12002 12022])
                    ("f_Vfont_encoding_charset_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12056 12099])
                    ("Vfont_encoding_charset_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [12108 12136])
                    ("f_Vfont_log" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12178 12202])
                    ("Vfont_log" variable (:constant-flag t) (reparse-symbol classsubparts) [12211 12220])
                    ("f_Vfont_slant_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12243 12275])
                    ("Vfont_slant_table" variable (:constant-flag t) (reparse-symbol classsubparts) [12284 12301])
                    ("f_Vfont_weight_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12332 12365])
                    ("Vfont_weight_table" variable (:constant-flag t) (reparse-symbol classsubparts) [12374 12392])
                    ("f_Vfont_width_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12424 12456])
                    ("Vfont_width_table" variable (:constant-flag t) (reparse-symbol classsubparts) [12465 12482])
                    ("f_Vfontification_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12513 12552])
                    ("Vfontification_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [12561 12585])
                    ("f_Vfontset_alias_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12623 12658])
                    ("Vfontset_alias_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [12667 12687])
                    ("f_Vframe_alpha_lower_limit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12721 12760])
                    ("Vframe_alpha_lower_limit" variable (:constant-flag t) (reparse-symbol classsubparts) [12769 12793])
                    ("f_Vframe_title_format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12831 12865])
                    ("Vframe_title_format" variable (:constant-flag t) (reparse-symbol classsubparts) [12874 12893])
                    ("f_Vfringe_bitmaps" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12926 12956])
                    ("Vfringe_bitmaps" variable (:constant-flag t) (reparse-symbol classsubparts) [12965 12980])
                    ("f_Vfunction_key_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13009 13041])
                    ("Vfunction_key_map" variable (:constant-flag t) (reparse-symbol classsubparts) [13050 13067])
                    ("f_Vgc_cons_percentage" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13098 13132])
                    ("Vgc_cons_percentage" variable (:constant-flag t) (reparse-symbol classsubparts) [13141 13160])
                    ("f_Vgc_elapsed" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13193 13219])
                    ("Vgc_elapsed" variable (:constant-flag t) (reparse-symbol classsubparts) [13228 13239])
                    ("f_Vglobal_disable_point_adjustment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13264 13311])
                    ("Vglobal_disable_point_adjustment" variable (:constant-flag t) (reparse-symbol classsubparts) [13320 13352])
                    ("f_Vglobal_mode_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13398 13432])
                    ("Vglobal_mode_string" variable (:constant-flag t) (reparse-symbol classsubparts) [13441 13460])
                    ("f_Vglyph_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13493 13520])
                    ("Vglyph_table" variable (:constant-flag t) (reparse-symbol classsubparts) [13529 13541])
                    ("f_Vglyphless_char_display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13567 13605])
                    ("Vglyphless_char_display" variable (:constant-flag t) (reparse-symbol classsubparts) [13614 13637])
                    ("f_Vgtk_version_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13674 13708])
                    ("Vgtk_version_string" variable (:constant-flag t) (reparse-symbol classsubparts) [13717 13736])
                    ("f_Vhelp_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13769 13794])
                    ("Vhelp_char" variable (:constant-flag t) (reparse-symbol classsubparts) [13803 13813])
                    ("f_Vhelp_event_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13837 13868])
                    ("Vhelp_event_list" variable (:constant-flag t) (reparse-symbol classsubparts) [13877 13893])
                    ("f_Vhelp_form" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13923 13948])
                    ("Vhelp_form" variable (:constant-flag t) (reparse-symbol classsubparts) [13957 13967])
                    ("f_Vhistory_add_new_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13991 14028])
                    ("Vhistory_add_new_input" variable (:constant-flag t) (reparse-symbol classsubparts) [14037 14059])
                    ("f_Vhistory_length" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14095 14125])
                    ("Vhistory_length" variable (:constant-flag t) (reparse-symbol classsubparts) [14134 14149])
                    ("f_Vhourglass_delay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14178 14209])
                    ("Vhourglass_delay" variable (:constant-flag t) (reparse-symbol classsubparts) [14218 14234])
                    ("f_Vhscroll_step" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14264 14292])
                    ("Vhscroll_step" variable (:constant-flag t) (reparse-symbol classsubparts) [14301 14314])
                    ("f_Vicon_title_format" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14341 14374])
                    ("Vicon_title_format" variable (:constant-flag t) (reparse-symbol classsubparts) [14383 14401])
                    ("f_Vignore_relative_composition" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14433 14476])
                    ("Vignore_relative_composition" variable (:constant-flag t) (reparse-symbol classsubparts) [14485 14513])
                    ("f_Vimage_cache_eviction_delay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14555 14597])
                    ("Vimage_cache_eviction_delay" variable (:constant-flag t) (reparse-symbol classsubparts) [14606 14633])
                    ("f_Vimage_types" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14674 14701])
                    ("Vimage_types" variable (:constant-flag t) (reparse-symbol classsubparts) [14710 14722])
                    ("f_Vinhibit_changing_match_data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14748 14791])
                    ("Vinhibit_changing_match_data" variable (:constant-flag t) (reparse-symbol classsubparts) [14800 14828])
                    ("f_Vinhibit_debugger" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14870 14902])
                    ("Vinhibit_debugger" variable (:constant-flag t) (reparse-symbol classsubparts) [14911 14928])
                    ("f_Vinhibit_field_text_motion" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14959 15000])
                    ("Vinhibit_field_text_motion" variable (:constant-flag t) (reparse-symbol classsubparts) [15009 15035])
                    ("f_Vinhibit_file_name_handlers" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15075 15117])
                    ("Vinhibit_file_name_handlers" variable (:constant-flag t) (reparse-symbol classsubparts) [15126 15153])
                    ("f_Vinhibit_file_name_operation" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15194 15237])
                    ("Vinhibit_file_name_operation" variable (:constant-flag t) (reparse-symbol classsubparts) [15246 15274])
                    ("f_Vinhibit_point_motion_hooks" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15316 15358])
                    ("Vinhibit_point_motion_hooks" variable (:constant-flag t) (reparse-symbol classsubparts) [15367 15394])
                    ("f_Vinhibit_quit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15435 15463])
                    ("Vinhibit_quit" variable (:constant-flag t) (reparse-symbol classsubparts) [15472 15485])
                    ("f_Vinhibit_read_only" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15512 15545])
                    ("Vinhibit_read_only" variable (:constant-flag t) (reparse-symbol classsubparts) [15554 15572])
                    ("f_Vinhibit_redisplay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15604 15637])
                    ("Vinhibit_redisplay" variable (:constant-flag t) (reparse-symbol classsubparts) [15646 15664])
                    ("f_Vinitial_environment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15696 15731])
                    ("Vinitial_environment" variable (:constant-flag t) (reparse-symbol classsubparts) [15740 15760])
                    ("f_Vinitial_window_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15794 15831])
                    ("Vinitial_window_system" variable (:constant-flag t) (reparse-symbol classsubparts) [15840 15862])
                    ("f_Vinput_method_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15898 15935])
                    ("Vinput_method_function" variable (:constant-flag t) (reparse-symbol classsubparts) [15944 15966])
                    ("f_Vinput_method_previous_message" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16002 16047])
                    ("Vinput_method_previous_message" variable (:constant-flag t) (reparse-symbol classsubparts) [16056 16086])
                    ("f_Vinstallation_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16130 16168])
                    ("Vinstallation_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [16177 16200])
                    ("f_Vinternal__daemon_sockname" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16237 16278])
                    ("Vinternal__daemon_sockname" variable (:constant-flag t) (reparse-symbol classsubparts) [16287 16313])
                    ("f_Vinternal__top_level_message" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16353 16396])
                    ("Vinternal__top_level_message" variable (:constant-flag t) (reparse-symbol classsubparts) [16405 16433])
                    ("f_Vinternal_interpreter_environment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16475 16523])
                    ("Vinternal_interpreter_environment" variable (:constant-flag t) (reparse-symbol classsubparts) [16532 16565])
                    ("f_Vinterrupt_process_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16612 16655])
                    ("Vinterrupt_process_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [16664 16692])
                    ("f_Vinvocation_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16734 16770])
                    ("Vinvocation_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [16779 16800])
                    ("f_Vinvocation_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16835 16866])
                    ("Vinvocation_name" variable (:constant-flag t) (reparse-symbol classsubparts) [16875 16891])
                    ("f_Vkbd_macro_termination_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16921 16963])
                    ("Vkbd_macro_termination_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [16972 16999])
                    ("f_Vkey_translation_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17040 17075])
                    ("Vkey_translation_map" variable (:constant-flag t) (reparse-symbol classsubparts) [17084 17104])
                    ("f_Vkill_buffer_query_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17138 17181])
                    ("Vkill_buffer_query_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [17190 17218])
                    ("f_Vkill_emacs_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17260 17291])
                    ("Vkill_emacs_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [17300 17316])
                    ("f_Vlast_code_conversion_error" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17346 17388])
                    ("Vlast_code_conversion_error" variable (:constant-flag t) (reparse-symbol classsubparts) [17397 17424])
                    ("f_Vlast_coding_system_used" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17465 17504])
                    ("Vlast_coding_system_used" variable (:constant-flag t) (reparse-symbol classsubparts) [17513 17537])
                    ("f_Vlast_event_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17575 17607])
                    ("Vlast_event_frame" variable (:constant-flag t) (reparse-symbol classsubparts) [17616 17633])
                    ("f_Vlatin_extra_code_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17664 17702])
                    ("Vlatin_extra_code_table" variable (:constant-flag t) (reparse-symbol classsubparts) [17711 17734])
                    ("f_Vlexical_binding" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17771 17802])
                    ("Vlexical_binding" variable (:constant-flag t) (reparse-symbol classsubparts) [17811 17827])
                    ("f_Vline_number_display_limit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17857 17898])
                    ("Vline_number_display_limit" variable (:constant-flag t) (reparse-symbol classsubparts) [17907 17933])
                    ("f_Vline_prefix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17973 18000])
                    ("Vline_prefix" variable (:constant-flag t) (reparse-symbol classsubparts) [18009 18021])
                    ("f_Vload_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18047 18077])
                    ("Vload_file_name" variable (:constant-flag t) (reparse-symbol classsubparts) [18086 18101])
                    ("f_Vload_file_rep_suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18130 18168])
                    ("Vload_file_rep_suffixes" variable (:constant-flag t) (reparse-symbol classsubparts) [18177 18200])
                    ("f_Vload_history" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18237 18265])
                    ("Vload_history" variable (:constant-flag t) (reparse-symbol classsubparts) [18274 18287])
                    ("f_Vload_path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18314 18339])
                    ("Vload_path" variable (:constant-flag t) (reparse-symbol classsubparts) [18348 18358])
                    ("f_Vload_read_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18382 18416])
                    ("Vload_read_function" variable (:constant-flag t) (reparse-symbol classsubparts) [18425 18444])
                    ("f_Vload_source_file_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18477 18518])
                    ("Vload_source_file_function" variable (:constant-flag t) (reparse-symbol classsubparts) [18527 18553])
                    ("f_Vload_suffixes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18593 18622])
                    ("Vload_suffixes" variable (:constant-flag t) (reparse-symbol classsubparts) [18631 18645])
                    ("f_Vlocale_coding_system" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18673 18709])
                    ("Vlocale_coding_system" variable (:constant-flag t) (reparse-symbol classsubparts) [18718 18739])
                    ("f_Vlread_unescaped_character_literals" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18774 18824])
                    ("Vlread_unescaped_character_literals" variable (:constant-flag t) (reparse-symbol classsubparts) [18833 18868])
                    ("f_Vlucid_menu_bar_dirty_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18917 18958])
                    ("Vlucid_menu_bar_dirty_flag" variable (:constant-flag t) (reparse-symbol classsubparts) [18967 18993])
                    ("f_Vmain_thread" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19033 19060])
                    ("Vmain_thread" variable (:constant-flag t) (reparse-symbol classsubparts) [19069 19081])
                    ("f_Vmake_pointer_invisible" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19107 19145])
                    ("Vmake_pointer_invisible" variable (:constant-flag t) (reparse-symbol classsubparts) [19154 19177])
                    ("f_Vmark_even_if_inactive" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19214 19251])
                    ("Vmark_even_if_inactive" variable (:constant-flag t) (reparse-symbol classsubparts) [19260 19282])
                    ("f_Vmax_image_size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19318 19348])
                    ("Vmax_image_size" variable (:constant-flag t) (reparse-symbol classsubparts) [19357 19372])
                    ("f_Vmax_mini_window_height" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19401 19439])
                    ("Vmax_mini_window_height" variable (:constant-flag t) (reparse-symbol classsubparts) [19448 19471])
                    ("f_Vmaximum_scroll_margin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19508 19545])
                    ("Vmaximum_scroll_margin" variable (:constant-flag t) (reparse-symbol classsubparts) [19554 19576])
                    ("f_Vmemory_full" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19612 19639])
                    ("Vmemory_full" variable (:constant-flag t) (reparse-symbol classsubparts) [19648 19660])
                    ("f_Vmemory_signal_data" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19686 19720])
                    ("Vmemory_signal_data" variable (:constant-flag t) (reparse-symbol classsubparts) [19729 19748])
                    ("f_Vmenu_bar_final_items" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19781 19817])
                    ("Vmenu_bar_final_items" variable (:constant-flag t) (reparse-symbol classsubparts) [19826 19847])
                    ("f_Vmenu_bar_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19882 19911])
                    ("Vmenu_bar_mode" variable (:constant-flag t) (reparse-symbol classsubparts) [19920 19934])
                    ("f_Vmenu_bar_update_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19962 19998])
                    ("Vmenu_bar_update_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [20007 20028])
                    ("f_Vmenu_updating_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20063 20098])
                    ("Vmenu_updating_frame" variable (:constant-flag t) (reparse-symbol classsubparts) [20107 20127])
                    ("f_Vmessage_log_max" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20161 20192])
                    ("Vmessage_log_max" variable (:constant-flag t) (reparse-symbol classsubparts) [20201 20217])
                    ("f_Vminibuf_scroll_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20247 20284])
                    ("Vminibuf_scroll_window" variable (:constant-flag t) (reparse-symbol classsubparts) [20293 20315])
                    ("f_Vminibuffer_completing_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20351 20398])
                    ("Vminibuffer_completing_file_name" variable (:constant-flag t) (reparse-symbol classsubparts) [20407 20439])
                    ("f_Vminibuffer_completion_confirm" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20485 20530])
                    ("Vminibuffer_completion_confirm" variable (:constant-flag t) (reparse-symbol classsubparts) [20539 20569])
                    ("f_Vminibuffer_completion_predicate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20613 20660])
                    ("Vminibuffer_completion_predicate" variable (:constant-flag t) (reparse-symbol classsubparts) [20669 20701])
                    ("f_Vminibuffer_completion_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20747 20790])
                    ("Vminibuffer_completion_table" variable (:constant-flag t) (reparse-symbol classsubparts) [20799 20827])
                    ("f_Vminibuffer_exit_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20869 20905])
                    ("Vminibuffer_exit_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [20914 20935])
                    ("f_Vminibuffer_help_form" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20970 21006])
                    ("Vminibuffer_help_form" variable (:constant-flag t) (reparse-symbol classsubparts) [21015 21036])
                    ("f_Vminibuffer_history_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21071 21114])
                    ("Vminibuffer_history_position" variable (:constant-flag t) (reparse-symbol classsubparts) [21123 21151])
                    ("f_Vminibuffer_history_variable" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21193 21236])
                    ("Vminibuffer_history_variable" variable (:constant-flag t) (reparse-symbol classsubparts) [21245 21273])
                    ("f_Vminibuffer_local_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21315 21351])
                    ("Vminibuffer_local_map" variable (:constant-flag t) (reparse-symbol classsubparts) [21360 21381])
                    ("f_Vminibuffer_local_ns_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21416 21455])
                    ("Vminibuffer_local_ns_map" variable (:constant-flag t) (reparse-symbol classsubparts) [21464 21488])
                    ("f_Vminibuffer_message_timeout" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21526 21568])
                    ("Vminibuffer_message_timeout" variable (:constant-flag t) (reparse-symbol classsubparts) [21577 21604])
                    ("f_Vminibuffer_prompt_properties" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21645 21689])
                    ("Vminibuffer_prompt_properties" variable (:constant-flag t) (reparse-symbol classsubparts) [21698 21727])
                    ("f_Vminibuffer_setup_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21770 21807])
                    ("Vminibuffer_setup_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [21816 21838])
                    ("f_Vminor_mode_map_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21874 21910])
                    ("Vminor_mode_map_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [21919 21940])
                    ("f_Vminor_mode_overriding_map_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21975 22022])
                    ("Vminor_mode_overriding_map_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [22031 22063])
                    ("f_Vmodule_environments" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22109 22144])
                    ("Vmodule_environments" variable (:constant-flag t) (reparse-symbol classsubparts) [22153 22173])
                    ("f_Vmodule_file_suffix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22207 22241])
                    ("Vmodule_file_suffix" variable (:constant-flag t) (reparse-symbol classsubparts) [22250 22269])
                    ("f_Vmodule_refs_hash" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22302 22334])
                    ("Vmodule_refs_hash" variable (:constant-flag t) (reparse-symbol classsubparts) [22343 22360])
                    ("f_Vmodule_runtimes" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22391 22422])
                    ("Vmodule_runtimes" variable (:constant-flag t) (reparse-symbol classsubparts) [22431 22447])
                    ("f_Vmost_negative_fixnum" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22477 22513])
                    ("Vmost_negative_fixnum" variable (:constant-flag t) (reparse-symbol classsubparts) [22522 22543])
                    ("f_Vmost_positive_fixnum" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22578 22614])
                    ("Vmost_positive_fixnum" variable (:constant-flag t) (reparse-symbol classsubparts) [22623 22644])
                    ("f_Vmotif_version_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22679 22715])
                    ("Vmotif_version_string" variable (:constant-flag t) (reparse-symbol classsubparts) [22724 22745])
                    ("f_Vmouse_autoselect_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22780 22819])
                    ("Vmouse_autoselect_window" variable (:constant-flag t) (reparse-symbol classsubparts) [22828 22852])
                    ("f_Vmouse_highlight" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22890 22921])
                    ("Vmouse_highlight" variable (:constant-flag t) (reparse-symbol classsubparts) [22930 22946])
                    ("f_Vmouse_leave_buffer_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22976 23015])
                    ("Vmouse_leave_buffer_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [23024 23048])
                    ("f_Vmouse_position_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23086 23125])
                    ("Vmouse_position_function" variable (:constant-flag t) (reparse-symbol classsubparts) [23134 23158])
                    ("f_Vmove_frame_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23196 23232])
                    ("Vmove_frame_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [23241 23262])
                    ("f_Vnetwork_coding_system_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23297 23340])
                    ("Vnetwork_coding_system_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [23349 23377])
                    ("f_Vnobreak_char_display" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23419 23455])
                    ("Vnobreak_char_display" variable (:constant-flag t) (reparse-symbol classsubparts) [23464 23485])
                    ("f_Vobarray" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23520 23543])
                    ("Vobarray" variable (:constant-flag t) (reparse-symbol classsubparts) [23552 23560])
                    ("f_Voperating_system_release" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23582 23622])
                    ("Voperating_system_release" variable (:constant-flag t) (reparse-symbol classsubparts) [23631 23656])
                    ("f_Votf_script_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23695 23727])
                    ("Votf_script_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [23736 23753])
                    ("f_Vother_window_scroll_buffer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23784 23826])
                    ("Vother_window_scroll_buffer" variable (:constant-flag t) (reparse-symbol classsubparts) [23835 23862])
                    ("f_Voverflow_newline_into_fringe" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23903 23947])
                    ("Voverflow_newline_into_fringe" variable (:constant-flag t) (reparse-symbol classsubparts) [23956 23985])
                    ("f_Voverlay_arrow_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24028 24066])
                    ("Voverlay_arrow_position" variable (:constant-flag t) (reparse-symbol classsubparts) [24075 24098])
                    ("f_Voverlay_arrow_string" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24135 24171])
                    ("Voverlay_arrow_string" variable (:constant-flag t) (reparse-symbol classsubparts) [24180 24201])
                    ("f_Voverlay_arrow_variable_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24236 24279])
                    ("Voverlay_arrow_variable_list" variable (:constant-flag t) (reparse-symbol classsubparts) [24288 24316])
                    ("f_Voverriding_local_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24358 24394])
                    ("Voverriding_local_map" variable (:constant-flag t) (reparse-symbol classsubparts) [24403 24424])
                    ("f_Voverriding_local_map_menu_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24459 24505])
                    ("Voverriding_local_map_menu_flag" variable (:constant-flag t) (reparse-symbol classsubparts) [24514 24545])
                    ("f_Voverriding_plist_environment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24590 24634])
                    ("Voverriding_plist_environment" variable (:constant-flag t) (reparse-symbol classsubparts) [24643 24672])
                    ("f_Vpath_separator" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24715 24745])
                    ("Vpath_separator" variable (:constant-flag t) (reparse-symbol classsubparts) [24754 24769])
                    ("f_Vpost_command_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24798 24831])
                    ("Vpost_command_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [24840 24858])
                    ("f_Vpost_gc_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24890 24918])
                    ("Vpost_gc_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [24927 24940])
                    ("f_Vpost_self_insert_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24967 25004])
                    ("Vpost_self_insert_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [25013 25035])
                    ("f_Vpre_command_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25071 25103])
                    ("Vpre_command_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [25112 25129])
                    ("f_Vpre_redisplay_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25160 25198])
                    ("Vpre_redisplay_function" variable (:constant-flag t) (reparse-symbol classsubparts) [25207 25230])
                    ("f_Vprefix_help_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25267 25302])
                    ("Vprefix_help_command" variable (:constant-flag t) (reparse-symbol classsubparts) [25311 25331])
                    ("f_Vpreloaded_file_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25365 25400])
                    ("Vpreloaded_file_list" variable (:constant-flag t) (reparse-symbol classsubparts) [25409 25429])
                    ("f_Vprevious_system_messages_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25463 25510])
                    ("Vprevious_system_messages_locale" variable (:constant-flag t) (reparse-symbol classsubparts) [25519 25551])
                    ("f_Vprevious_system_time_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25597 25640])
                    ("Vprevious_system_time_locale" variable (:constant-flag t) (reparse-symbol classsubparts) [25649 25677])
                    ("f_Vprint_charset_text_property" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25719 25762])
                    ("Vprint_charset_text_property" variable (:constant-flag t) (reparse-symbol classsubparts) [25771 25799])
                    ("f_Vprint_circle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25841 25869])
                    ("Vprint_circle" variable (:constant-flag t) (reparse-symbol classsubparts) [25878 25891])
                    ("f_Vprint_continuous_numbering" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25918 25960])
                    ("Vprint_continuous_numbering" variable (:constant-flag t) (reparse-symbol classsubparts) [25969 25996])
                    ("f_Vprint_gensym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26037 26065])
                    ("Vprint_gensym" variable (:constant-flag t) (reparse-symbol classsubparts) [26074 26087])
                    ("f_Vprint_length" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26114 26142])
                    ("Vprint_length" variable (:constant-flag t) (reparse-symbol classsubparts) [26151 26164])
                    ("f_Vprint_level" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26191 26218])
                    ("Vprint_level" variable (:constant-flag t) (reparse-symbol classsubparts) [26227 26239])
                    ("f_Vprint_number_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26265 26299])
                    ("Vprint_number_table" variable (:constant-flag t) (reparse-symbol classsubparts) [26308 26327])
                    ("f_Vprintable_chars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26360 26391])
                    ("Vprintable_chars" variable (:constant-flag t) (reparse-symbol classsubparts) [26400 26416])
                    ("f_Vprocess_adaptive_read_buffering" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26446 26493])
                    ("Vprocess_adaptive_read_buffering" variable (:constant-flag t) (reparse-symbol classsubparts) [26502 26534])
                    ("f_Vprocess_coding_system_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26580 26623])
                    ("Vprocess_coding_system_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [26632 26660])
                    ("f_Vprocess_connection_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26702 26741])
                    ("Vprocess_connection_type" variable (:constant-flag t) (reparse-symbol classsubparts) [26750 26774])
                    ("f_Vprocess_environment" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26812 26847])
                    ("Vprocess_environment" variable (:constant-flag t) (reparse-symbol classsubparts) [26856 26876])
                    ("f_Vpurify_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26910 26937])
                    ("Vpurify_flag" variable (:constant-flag t) (reparse-symbol classsubparts) [26946 26958])
                    ("f_Vquit_flag" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26984 27009])
                    ("Vquit_flag" variable (:constant-flag t) (reparse-symbol classsubparts) [27018 27028])
                    ("f_Vread_buffer_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27052 27088])
                    ("Vread_buffer_function" variable (:constant-flag t) (reparse-symbol classsubparts) [27097 27118])
                    ("f_Vread_circle" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27153 27180])
                    ("Vread_circle" variable (:constant-flag t) (reparse-symbol classsubparts) [27189 27201])
                    ("f_Vread_expression_history" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27227 27266])
                    ("Vread_expression_history" variable (:constant-flag t) (reparse-symbol classsubparts) [27275 27299])
                    ("f_Vread_hide_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27337 27367])
                    ("Vread_hide_char" variable (:constant-flag t) (reparse-symbol classsubparts) [27376 27391])
                    ("f_Vread_symbol_positions_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27420 27462])
                    ("Vread_symbol_positions_list" variable (:constant-flag t) (reparse-symbol classsubparts) [27471 27498])
                    ("f_Vread_with_symbol_positions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27539 27581])
                    ("Vread_with_symbol_positions" variable (:constant-flag t) (reparse-symbol classsubparts) [27590 27617])
                    ("f_Vreal_this_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27658 27691])
                    ("Vreal_this_command" variable (:constant-flag t) (reparse-symbol classsubparts) [27700 27718])
                    ("f_Vrecenter_redisplay" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27750 27784])
                    ("Vrecenter_redisplay" variable (:constant-flag t) (reparse-symbol classsubparts) [27793 27812])
                    ("f_Vredisplay__all_windows_cause" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27845 27889])
                    ("Vredisplay__all_windows_cause" variable (:constant-flag t) (reparse-symbol classsubparts) [27898 27927])
                    ("f_Vredisplay__mode_lines_cause" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27970 28013])
                    ("Vredisplay__mode_lines_cause" variable (:constant-flag t) (reparse-symbol classsubparts) [28022 28050])
                    ("f_Vredisplay_end_trigger_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28092 28139])
                    ("Vredisplay_end_trigger_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [28148 28180])
                    ("f_Vreport_emacs_bug_address" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28226 28266])
                    ("Vreport_emacs_bug_address" variable (:constant-flag t) (reparse-symbol classsubparts) [28275 28300])
                    ("f_Vresize_mini_windows" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28339 28374])
                    ("Vresize_mini_windows" variable (:constant-flag t) (reparse-symbol classsubparts) [28383 28403])
                    ("f_Vresume_tty_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28437 28473])
                    ("Vresume_tty_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [28482 28503])
                    ("f_Vring_bell_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28538 28572])
                    ("Vring_bell_function" variable (:constant-flag t) (reparse-symbol classsubparts) [28581 28600])
                    ("f_Vsaved_region_selection" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28633 28671])
                    ("Vsaved_region_selection" variable (:constant-flag t) (reparse-symbol classsubparts) [28680 28703])
                    ("f_Vscalable_fonts_allowed" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28740 28778])
                    ("Vscalable_fonts_allowed" variable (:constant-flag t) (reparse-symbol classsubparts) [28787 28810])
                    ("f_Vscript_representative_chars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28847 28890])
                    ("Vscript_representative_chars" variable (:constant-flag t) (reparse-symbol classsubparts) [28899 28927])
                    ("f_Vscroll_preserve_screen_position" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28969 29016])
                    ("Vscroll_preserve_screen_position" variable (:constant-flag t) (reparse-symbol classsubparts) [29025 29057])
                    ("f_Vsearch_spaces_regexp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29103 29139])
                    ("Vsearch_spaces_regexp" variable (:constant-flag t) (reparse-symbol classsubparts) [29148 29169])
                    ("f_Vselect_active_regions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29204 29241])
                    ("Vselect_active_regions" variable (:constant-flag t) (reparse-symbol classsubparts) [29250 29272])
                    ("f_Vselect_safe_coding_system_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29308 29358])
                    ("Vselect_safe_coding_system_function" variable (:constant-flag t) (reparse-symbol classsubparts) [29367 29402])
                    ("f_Vselection_converter_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29451 29492])
                    ("Vselection_converter_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [29501 29527])
                    ("f_Vselection_inhibit_update_commands" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29567 29616])
                    ("Vselection_inhibit_update_commands" variable (:constant-flag t) (reparse-symbol classsubparts) [29625 29659])
                    ("f_Vset_auto_coding_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29707 29747])
                    ("Vset_auto_coding_function" variable (:constant-flag t) (reparse-symbol classsubparts) [29756 29781])
                    ("f_Vshared_game_score_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29820 29863])
                    ("Vshared_game_score_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [29872 29900])
                    ("f_Vshell_file_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29942 29973])
                    ("Vshell_file_name" variable (:constant-flag t) (reparse-symbol classsubparts) [29982 29998])
                    ("f_Vshow_help_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30028 30062])
                    ("Vshow_help_function" variable (:constant-flag t) (reparse-symbol classsubparts) [30071 30090])
                    ("f_Vshow_trailing_whitespace" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30123 30163])
                    ("Vshow_trailing_whitespace" variable (:constant-flag t) (reparse-symbol classsubparts) [30172 30197])
                    ("f_Vsignal_hook_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30236 30272])
                    ("Vsignal_hook_function" variable (:constant-flag t) (reparse-symbol classsubparts) [30281 30302])
                    ("f_Vsource_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30337 30369])
                    ("Vsource_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [30378 30395])
                    ("f_Vspecial_event_map" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30426 30459])
                    ("Vspecial_event_map" variable (:constant-flag t) (reparse-symbol classsubparts) [30468 30486])
                    ("f_Vstandard_display_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30518 30556])
                    ("Vstandard_display_table" variable (:constant-flag t) (reparse-symbol classsubparts) [30565 30588])
                    ("f_Vstandard_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30625 30655])
                    ("Vstandard_input" variable (:constant-flag t) (reparse-symbol classsubparts) [30664 30679])
                    ("f_Vstandard_output" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30708 30739])
                    ("Vstandard_output" variable (:constant-flag t) (reparse-symbol classsubparts) [30748 30764])
                    ("f_Vstandard_translation_table_for_decode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30794 30847])
                    ("Vstandard_translation_table_for_decode" variable (:constant-flag t) (reparse-symbol classsubparts) [30856 30894])
                    ("f_Vstandard_translation_table_for_encode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30946 30999])
                    ("Vstandard_translation_table_for_encode" variable (:constant-flag t) (reparse-symbol classsubparts) [31008 31046])
                    ("f_Vsuspend_tty_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31098 31135])
                    ("Vsuspend_tty_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [31144 31166])
                    ("f_Vsystem_configuration" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31202 31238])
                    ("Vsystem_configuration" variable (:constant-flag t) (reparse-symbol classsubparts) [31247 31268])
                    ("f_Vsystem_configuration_features" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31303 31348])
                    ("Vsystem_configuration_features" variable (:constant-flag t) (reparse-symbol classsubparts) [31357 31387])
                    ("f_Vsystem_configuration_options" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31431 31475])
                    ("Vsystem_configuration_options" variable (:constant-flag t) (reparse-symbol classsubparts) [31484 31513])
                    ("f_Vsystem_messages_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31556 31594])
                    ("Vsystem_messages_locale" variable (:constant-flag t) (reparse-symbol classsubparts) [31603 31626])
                    ("f_Vsystem_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31663 31690])
                    ("Vsystem_name" variable (:constant-flag t) (reparse-symbol classsubparts) [31699 31711])
                    ("f_Vsystem_time_locale" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31737 31771])
                    ("Vsystem_time_locale" variable (:constant-flag t) (reparse-symbol classsubparts) [31780 31799])
                    ("f_Vsystem_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31832 31859])
                    ("Vsystem_type" variable (:constant-flag t) (reparse-symbol classsubparts) [31868 31880])
                    ("f_Vtemp_buffer_show_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31906 31947])
                    ("Vtemp_buffer_show_function" variable (:constant-flag t) (reparse-symbol classsubparts) [31956 31982])
                    ("f_Vtemporary_file_directory" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32022 32062])
                    ("Vtemporary_file_directory" variable (:constant-flag t) (reparse-symbol classsubparts) [32071 32096])
                    ("f_Vterminal_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32135 32165])
                    ("Vterminal_frame" variable (:constant-flag t) (reparse-symbol classsubparts) [32174 32189])
                    ("f_Vtext_property_default_nonsticky" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32218 32265])
                    ("Vtext_property_default_nonsticky" variable (:constant-flag t) (reparse-symbol classsubparts) [32274 32306])
                    ("f_Vtext_quoting_style" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32352 32386])
                    ("Vtext_quoting_style" variable (:constant-flag t) (reparse-symbol classsubparts) [32395 32414])
                    ("f_Vthis_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32447 32475])
                    ("Vthis_command" variable (:constant-flag t) (reparse-symbol classsubparts) [32484 32497])
                    ("f_Vthis_command_keys_shift_translated" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32524 32574])
                    ("Vthis_command_keys_shift_translated" variable (:constant-flag t) (reparse-symbol classsubparts) [32583 32618])
                    ("f_Vthis_original_command" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32667 32704])
                    ("Vthis_original_command" variable (:constant-flag t) (reparse-symbol classsubparts) [32713 32735])
                    ("f_Vthrow_on_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32771 32801])
                    ("Vthrow_on_input" variable (:constant-flag t) (reparse-symbol classsubparts) [32810 32825])
                    ("f_Vtimer_idle_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32854 32885])
                    ("Vtimer_idle_list" variable (:constant-flag t) (reparse-symbol classsubparts) [32894 32910])
                    ("f_Vtimer_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32940 32966])
                    ("Vtimer_list" variable (:constant-flag t) (reparse-symbol classsubparts) [32975 32986])
                    ("f_Vtool_bar_border" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33011 33042])
                    ("Vtool_bar_border" variable (:constant-flag t) (reparse-symbol classsubparts) [33051 33067])
                    ("f_Vtool_bar_button_margin" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33097 33135])
                    ("Vtool_bar_button_margin" variable (:constant-flag t) (reparse-symbol classsubparts) [33144 33167])
                    ("f_Vtool_bar_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33204 33233])
                    ("Vtool_bar_mode" variable (:constant-flag t) (reparse-symbol classsubparts) [33242 33256])
                    ("f_Vtool_bar_separator_image_expression" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33284 33335])
                    ("Vtool_bar_separator_image_expression" variable (:constant-flag t) (reparse-symbol classsubparts) [33344 33380])
                    ("f_Vtool_bar_style" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33430 33460])
                    ("Vtool_bar_style" variable (:constant-flag t) (reparse-symbol classsubparts) [33469 33484])
                    ("f_Vtop_level" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33513 33538])
                    ("Vtop_level" variable (:constant-flag t) (reparse-symbol classsubparts) [33547 33557])
                    ("f_Vtransient_mark_mode" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33581 33616])
                    ("Vtransient_mark_mode" variable (:constant-flag t) (reparse-symbol classsubparts) [33625 33645])
                    ("f_Vtranslation_hash_table_vector" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33679 33724])
                    ("Vtranslation_hash_table_vector" variable (:constant-flag t) (reparse-symbol classsubparts) [33733 33763])
                    ("f_Vtranslation_table_for_input" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33807 33850])
                    ("Vtranslation_table_for_input" variable (:constant-flag t) (reparse-symbol classsubparts) [33859 33887])
                    ("f_Vtranslation_table_vector" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33929 33969])
                    ("Vtranslation_table_vector" variable (:constant-flag t) (reparse-symbol classsubparts) [33978 34003])
                    ("f_Vtruncate_partial_width_windows" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34042 34088])
                    ("Vtruncate_partial_width_windows" variable (:constant-flag t) (reparse-symbol classsubparts) [34097 34128])
                    ("f_Vtty_defined_color_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34173 34212])
                    ("Vtty_defined_color_alist" variable (:constant-flag t) (reparse-symbol classsubparts) [34221 34245])
                    ("f_Vtty_erase_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34283 34313])
                    ("Vtty_erase_char" variable (:constant-flag t) (reparse-symbol classsubparts) [34322 34337])
                    ("f_Vundo_outer_limit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34366 34398])
                    ("Vundo_outer_limit" variable (:constant-flag t) (reparse-symbol classsubparts) [34407 34424])
                    ("f_Vundo_outer_limit_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34455 34496])
                    ("Vundo_outer_limit_function" variable (:constant-flag t) (reparse-symbol classsubparts) [34505 34531])
                    ("f_Vunicode_category_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34571 34609])
                    ("Vunicode_category_table" variable (:constant-flag t) (reparse-symbol classsubparts) [34618 34641])
                    ("f_Vunread_command_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34678 34715])
                    ("Vunread_command_events" variable (:constant-flag t) (reparse-symbol classsubparts) [34724 34746])
                    ("f_Vunread_input_method_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34782 34824])
                    ("Vunread_input_method_events" variable (:constant-flag t) (reparse-symbol classsubparts) [34833 34860])
                    ("f_Vunread_post_input_method_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34901 34948])
                    ("Vunread_post_input_method_events" variable (:constant-flag t) (reparse-symbol classsubparts) [34957 34989])
                    ("f_Vuse_default_ascent" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35035 35069])
                    ("Vuse_default_ascent" variable (:constant-flag t) (reparse-symbol classsubparts) [35078 35097])
                    ("f_Vuser_full_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35130 35160])
                    ("Vuser_full_name" variable (:constant-flag t) (reparse-symbol classsubparts) [35169 35184])
                    ("f_Vuser_init_file" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35213 35243])
                    ("Vuser_init_file" variable (:constant-flag t) (reparse-symbol classsubparts) [35252 35267])
                    ("f_Vuser_login_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35296 35327])
                    ("Vuser_login_name" variable (:constant-flag t) (reparse-symbol classsubparts) [35336 35352])
                    ("f_Vuser_real_login_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35382 35418])
                    ("Vuser_real_login_name" variable (:constant-flag t) (reparse-symbol classsubparts) [35427 35448])
                    ("f_Vvalues" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35483 35505])
                    ("Vvalues" variable (:constant-flag t) (reparse-symbol classsubparts) [35514 35521])
                    ("f_Vvertical_centering_font_regexp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35542 35588])
                    ("Vvertical_centering_font_regexp" variable (:constant-flag t) (reparse-symbol classsubparts) [35597 35628])
                    ("f_Vvoid_text_area_pointer" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35673 35711])
                    ("Vvoid_text_area_pointer" variable (:constant-flag t) (reparse-symbol classsubparts) [35720 35743])
                    ("f_Vwhere_is_preferred_modifier" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35780 35823])
                    ("Vwhere_is_preferred_modifier" variable (:constant-flag t) (reparse-symbol classsubparts) [35832 35860])
                    ("f_Vwhile_no_input_ignore_events" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35902 35946])
                    ("Vwhile_no_input_ignore_events" variable (:constant-flag t) (reparse-symbol classsubparts) [35955 35984])
                    ("f_Vwindow_combination_limit" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36027 36067])
                    ("Vwindow_combination_limit" variable (:constant-flag t) (reparse-symbol classsubparts) [36076 36101])
                    ("f_Vwindow_combination_resize" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36140 36181])
                    ("Vwindow_combination_resize" variable (:constant-flag t) (reparse-symbol classsubparts) [36190 36216])
                    ("f_Vwindow_configuration_change_hook" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36256 36304])
                    ("Vwindow_configuration_change_hook" variable (:constant-flag t) (reparse-symbol classsubparts) [36313 36346])
                    ("f_Vwindow_persistent_parameters" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36393 36437])
                    ("Vwindow_persistent_parameters" variable (:constant-flag t) (reparse-symbol classsubparts) [36446 36475])
                    ("f_Vwindow_point_insertion_type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36518 36561])
                    ("Vwindow_point_insertion_type" variable (:constant-flag t) (reparse-symbol classsubparts) [36570 36598])
                    ("f_Vwindow_scroll_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36640 36679])
                    ("Vwindow_scroll_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [36688 36712])
                    ("f_Vwindow_size_change_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36750 36794])
                    ("Vwindow_size_change_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [36803 36832])
                    ("f_Vwindow_system_version" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36875 36912])
                    ("Vwindow_system_version" variable (:constant-flag t) (reparse-symbol classsubparts) [36921 36943])
                    ("f_Vword_combining_categories" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36979 37020])
                    ("Vword_combining_categories" variable (:constant-flag t) (reparse-symbol classsubparts) [37029 37055])
                    ("f_Vword_separating_categories" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37095 37137])
                    ("Vword_separating_categories" variable (:constant-flag t) (reparse-symbol classsubparts) [37146 37173])
                    ("f_Vwrap_prefix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37214 37241])
                    ("Vwrap_prefix" variable (:constant-flag t) (reparse-symbol classsubparts) [37250 37262])
                    ("f_Vwrite_region_annotate_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37288 37335])
                    ("Vwrite_region_annotate_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [37344 37376])
                    ("f_Vwrite_region_annotations_so_far" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37422 37469])
                    ("Vwrite_region_annotations_so_far" variable (:constant-flag t) (reparse-symbol classsubparts) [37478 37510])
                    ("f_Vwrite_region_post_annotation_function" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37556 37609])
                    ("Vwrite_region_post_annotation_function" variable (:constant-flag t) (reparse-symbol classsubparts) [37618 37656])
                    ("f_Vx_alt_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37708 37736])
                    ("Vx_alt_keysym" variable (:constant-flag t) (reparse-symbol classsubparts) [37745 37758])
                    ("f_Vx_bitmap_file_path" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37785 37819])
                    ("Vx_bitmap_file_path" variable (:constant-flag t) (reparse-symbol classsubparts) [37828 37847])
                    ("f_Vx_ctrl_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37880 37909])
                    ("Vx_ctrl_keysym" variable (:constant-flag t) (reparse-symbol classsubparts) [37918 37932])
                    ("f_Vx_cursor_fore_pixel" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37960 37995])
                    ("Vx_cursor_fore_pixel" variable (:constant-flag t) (reparse-symbol classsubparts) [38004 38024])
                    ("f_Vx_hourglass_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38058 38099])
                    ("Vx_hourglass_pointer_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [38108 38134])
                    ("f_Vx_hyper_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38174 38204])
                    ("Vx_hyper_keysym" variable (:constant-flag t) (reparse-symbol classsubparts) [38213 38228])
                    ("f_Vx_keysym_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38257 38287])
                    ("Vx_keysym_table" variable (:constant-flag t) (reparse-symbol classsubparts) [38296 38311])
                    ("f_Vx_lost_selection_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38340 38382])
                    ("Vx_lost_selection_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [38391 38418])
                    ("f_Vx_max_tooltip_size" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38459 38493])
                    ("Vx_max_tooltip_size" variable (:constant-flag t) (reparse-symbol classsubparts) [38502 38521])
                    ("f_Vx_meta_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38554 38583])
                    ("Vx_meta_keysym" variable (:constant-flag t) (reparse-symbol classsubparts) [38592 38606])
                    ("f_Vx_mode_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38634 38670])
                    ("Vx_mode_pointer_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [38679 38700])
                    ("f_Vx_no_window_manager" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38735 38770])
                    ("Vx_no_window_manager" variable (:constant-flag t) (reparse-symbol classsubparts) [38779 38799])
                    ("f_Vx_nontext_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38833 38872])
                    ("Vx_nontext_pointer_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [38881 38905])
                    ("f_Vx_pixel_size_width_font_regexp" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38943 38989])
                    ("Vx_pixel_size_width_font_regexp" variable (:constant-flag t) (reparse-symbol classsubparts) [38998 39029])
                    ("f_Vx_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39074 39105])
                    ("Vx_pointer_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [39114 39130])
                    ("f_Vx_resource_class" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39160 39192])
                    ("Vx_resource_class" variable (:constant-flag t) (reparse-symbol classsubparts) [39201 39218])
                    ("f_Vx_resource_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39249 39280])
                    ("Vx_resource_name" variable (:constant-flag t) (reparse-symbol classsubparts) [39289 39305])
                    ("f_Vx_select_enable_clipboard_manager" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39335 39384])
                    ("Vx_select_enable_clipboard_manager" variable (:constant-flag t) (reparse-symbol classsubparts) [39393 39427])
                    ("f_Vx_sensitive_text_pointer_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39475 39521])
                    ("Vx_sensitive_text_pointer_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [39530 39561])
                    ("f_Vx_sent_selection_functions" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39606 39648])
                    ("Vx_sent_selection_functions" variable (:constant-flag t) (reparse-symbol classsubparts) [39657 39684])
                    ("f_Vx_session_id" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39725 39753])
                    ("Vx_session_id" variable (:constant-flag t) (reparse-symbol classsubparts) [39762 39775])
                    ("f_Vx_session_previous_id" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39802 39839])
                    ("Vx_session_previous_id" variable (:constant-flag t) (reparse-symbol classsubparts) [39848 39870])
                    ("f_Vx_super_keysym" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39906 39936])
                    ("Vx_super_keysym" variable (:constant-flag t) (reparse-symbol classsubparts) [39945 39960])
                    ("f_Vx_toolkit_scroll_bars" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39989 40026])
                    ("Vx_toolkit_scroll_bars" variable (:constant-flag t) (reparse-symbol classsubparts) [40035 40057])
                    ("f_Vx_wait_for_event_timeout" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40093 40133])
                    ("Vx_wait_for_event_timeout" variable (:constant-flag t) (reparse-symbol classsubparts) [40142 40167])
                    ("f_Vx_window_bottom_edge_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40206 40248])
                    ("Vx_window_bottom_edge_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [40257 40284])
                    ("f_Vx_window_bottom_left_corner_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40325 40374])
                    ("Vx_window_bottom_left_corner_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [40383 40417])
                    ("f_Vx_window_bottom_right_corner_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40465 40515])
                    ("Vx_window_bottom_right_corner_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [40524 40559])
                    ("f_Vx_window_horizontal_drag_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40608 40654])
                    ("Vx_window_horizontal_drag_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [40663 40694])
                    ("f_Vx_window_left_edge_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40739 40779])
                    ("Vx_window_left_edge_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [40788 40813])
                    ("f_Vx_window_right_edge_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40852 40893])
                    ("Vx_window_right_edge_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [40902 40928])
                    ("f_Vx_window_top_edge_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [40968 41007])
                    ("Vx_window_top_edge_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [41016 41040])
                    ("f_Vx_window_top_left_corner_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41078 41124])
                    ("Vx_window_top_left_corner_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [41133 41164])
                    ("f_Vx_window_top_right_corner_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41209 41256])
                    ("Vx_window_top_right_corner_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [41265 41297])
                    ("f_Vx_window_vertical_drag_shape" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41343 41387])
                    ("Vx_window_vertical_drag_shape" variable (:constant-flag t) (reparse-symbol classsubparts) [41396 41425])
                    ("f_Vxft_settings" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41468 41496])
                    ("Vxft_settings" variable (:constant-flag t) (reparse-symbol classsubparts) [41505 41518])
                    ("f_Vxwidget_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41545 41573])
                    ("Vxwidget_list" variable (:constant-flag t) (reparse-symbol classsubparts) [41582 41595])
                    ("f_Vxwidget_view_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41622 41655])
                    ("Vxwidget_view_list" variable (:constant-flag t) (reparse-symbol classsubparts) [41664 41682])
                    ("f_automatic_hscrolling" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41714 41749])
                    ("automatic_hscrolling" variable (:constant-flag t) (reparse-symbol classsubparts) [41758 41778])
                    ("f_do_mouse_tracking" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41812 41844])
                    ("do_mouse_tracking" variable (:constant-flag t) (reparse-symbol classsubparts) [41853 41870])
                    ("f_eol_mnemonic_dos" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41901 41932])
                    ("eol_mnemonic_dos" variable (:constant-flag t) (reparse-symbol classsubparts) [41941 41957])
                    ("f_eol_mnemonic_mac" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41987 42018])
                    ("eol_mnemonic_mac" variable (:constant-flag t) (reparse-symbol classsubparts) [42027 42043])
                    ("f_eol_mnemonic_undecided" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42073 42110])
                    ("eol_mnemonic_undecided" variable (:constant-flag t) (reparse-symbol classsubparts) [42119 42141])
                    ("f_eol_mnemonic_unix" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42177 42209])
                    ("eol_mnemonic_unix" variable (:constant-flag t) (reparse-symbol classsubparts) [42218 42235])
                    ("f_focus_follows_mouse" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42266 42300])
                    ("focus_follows_mouse" variable (:constant-flag t) (reparse-symbol classsubparts) [42309 42328])
                    ("f_frame_inhibit_implied_resize" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42361 42404])
                    ("frame_inhibit_implied_resize" variable (:constant-flag t) (reparse-symbol classsubparts) [42413 42441])
                    ("f_frame_size_history" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42483 42516])
                    ("frame_size_history" variable (:constant-flag t) (reparse-symbol classsubparts) [42525 42543])
                    ("f_iconify_child_frame" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42575 42609])
                    ("iconify_child_frame" variable (:constant-flag t) (reparse-symbol classsubparts) [42618 42637])
                    ("f_last_command_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42670 42703])
                    ("last_command_event" variable (:constant-flag t) (reparse-symbol classsubparts) [42712 42730])
                    ("f_last_input_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42762 42793])
                    ("last_input_event" variable (:constant-flag t) (reparse-symbol classsubparts) [42802 42818])
                    ("f_last_nonmenu_event" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42848 42881])
                    ("last_nonmenu_event" variable (:constant-flag t) (reparse-symbol classsubparts) [42890 42908])
                    ("f_menu_prompt_more_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [42940 42976])
                    ("menu_prompt_more_char" variable (:constant-flag t) (reparse-symbol classsubparts) [42985 43006])
                    ("f_meta_prefix_char" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43041 43072])
                    ("meta_prefix_char" variable (:constant-flag t) (reparse-symbol classsubparts) [43081 43097])
                    ("f_auto_save_interval" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43127 43158])
                    ("auto_save_interval" variable (:constant-flag t) (reparse-symbol classsubparts) [43167 43185])
                    ("f_baud_rate" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43217 43239])
                    ("baud_rate" variable (:constant-flag t) (reparse-symbol classsubparts) [43248 43257])
                    ("f_cons_cells_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43280 43310])
                    ("cons_cells_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [43319 43336])
                    ("f_debug_end_pos" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43367 43393])
                    ("debug_end_pos" variable (:constant-flag t) (reparse-symbol classsubparts) [43402 43415])
                    ("f_double_click_fuzz" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43442 43472])
                    ("double_click_fuzz" variable (:constant-flag t) (reparse-symbol classsubparts) [43481 43498])
                    ("f_emacs_scroll_step" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43529 43559])
                    ("emacs_scroll_step" variable (:constant-flag t) (reparse-symbol classsubparts) [43568 43585])
                    ("f_executing_kbd_macro_index" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43616 43654])
                    ("executing_kbd_macro_index" variable (:constant-flag t) (reparse-symbol classsubparts) [43663 43688])
                    ("f_extra_keyboard_modifiers" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43727 43764])
                    ("extra_keyboard_modifiers" variable (:constant-flag t) (reparse-symbol classsubparts) [43773 43797])
                    ("f_floats_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43835 43861])
                    ("floats_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [43870 43883])
                    ("f_gc_cons_threshold" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43910 43940])
                    ("gc_cons_threshold" variable (:constant-flag t) (reparse-symbol classsubparts) [43949 43966])
                    ("f_gcs_done" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43997 44018])
                    ("gcs_done" variable (:constant-flag t) (reparse-symbol classsubparts) [44027 44035])
                    ("f_global_gnutls_log_level" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44057 44093])
                    ("global_gnutls_log_level" variable (:constant-flag t) (reparse-symbol classsubparts) [44102 44125])
                    ("f_hscroll_margin" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44162 44189])
                    ("hscroll_margin" variable (:constant-flag t) (reparse-symbol classsubparts) [44198 44212])
                    ("f_imagemagick_render_type" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44240 44276])
                    ("imagemagick_render_type" variable (:constant-flag t) (reparse-symbol classsubparts) [44285 44308])
                    ("f_intervals_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44345 44374])
                    ("intervals_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [44383 44399])
                    ("f_line_number_display_limit_width" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44429 44473])
                    ("line_number_display_limit_width" variable (:constant-flag t) (reparse-symbol classsubparts) [44482 44513])
                    ("f_max_lisp_eval_depth" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44558 44590])
                    ("max_lisp_eval_depth" variable (:constant-flag t) (reparse-symbol classsubparts) [44599 44618])
                    ("f_max_specpdl_size" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44651 44680])
                    ("max_specpdl_size" variable (:constant-flag t) (reparse-symbol classsubparts) [44689 44705])
                    ("f_misc_objects_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44735 44767])
                    ("misc_objects_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [44776 44795])
                    ("f_next_screen_context_lines" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44828 44866])
                    ("next_screen_context_lines" variable (:constant-flag t) (reparse-symbol classsubparts) [44875 44900])
                    ("f_num_input_keys" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [44939 44966])
                    ("num_input_keys" variable (:constant-flag t) (reparse-symbol classsubparts) [44975 44989])
                    ("f_num_nonmacro_input_events" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45017 45055])
                    ("num_nonmacro_input_events" variable (:constant-flag t) (reparse-symbol classsubparts) [45064 45089])
                    ("f_overline_margin" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45128 45156])
                    ("overline_margin" variable (:constant-flag t) (reparse-symbol classsubparts) [45165 45180])
                    ("f_polling_period" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45209 45236])
                    ("polling_period" variable (:constant-flag t) (reparse-symbol classsubparts) [45245 45259])
                    ("f_profiler_log_size" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45287 45317])
                    ("profiler_log_size" variable (:constant-flag t) (reparse-symbol classsubparts) [45326 45343])
                    ("f_profiler_max_stack_depth" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45374 45411])
                    ("profiler_max_stack_depth" variable (:constant-flag t) (reparse-symbol classsubparts) [45420 45444])
                    ("f_pure_bytes_used" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45482 45510])
                    ("pure_bytes_used" variable (:constant-flag t) (reparse-symbol classsubparts) [45519 45534])
                    ("f_scroll_conservatively" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45563 45597])
                    ("scroll_conservatively" variable (:constant-flag t) (reparse-symbol classsubparts) [45606 45627])
                    ("f_scroll_margin" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45662 45688])
                    ("scroll_margin" variable (:constant-flag t) (reparse-symbol classsubparts) [45697 45710])
                    ("f_string_chars_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45737 45769])
                    ("string_chars_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [45778 45797])
                    ("f_strings_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45830 45857])
                    ("strings_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [45866 45880])
                    ("f_symbols_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45908 45935])
                    ("symbols_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [45944 45958])
                    ("f_syntax_propertize__done" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [45986 46022])
                    ("syntax_propertize__done" variable (:constant-flag t) (reparse-symbol classsubparts) [46031 46054])
                    ("f_tool_bar_button_relief" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46091 46126])
                    ("tool_bar_button_relief" variable (:constant-flag t) (reparse-symbol classsubparts) [46135 46157])
                    ("f_tool_bar_max_label_size" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46193 46229])
                    ("tool_bar_max_label_size" variable (:constant-flag t) (reparse-symbol classsubparts) [46238 46261])
                    ("f_underline_minimum_offset" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46298 46335])
                    ("underline_minimum_offset" variable (:constant-flag t) (reparse-symbol classsubparts) [46344 46368])
                    ("f_undo_limit" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46406 46429])
                    ("undo_limit" variable (:constant-flag t) (reparse-symbol classsubparts) [46438 46448])
                    ("f_undo_strong_limit" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46472 46502])
                    ("undo_strong_limit" variable (:constant-flag t) (reparse-symbol classsubparts) [46511 46528])
                    ("f_vector_cells_consed" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46559 46591])
                    ("vector_cells_consed" variable (:constant-flag t) (reparse-symbol classsubparts) [46600 46619])
                    ("f_x_selection_timeout" variable (:type ("EMACS_INT" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46652 46684])
                    ("x_selection_timeout" variable (:constant-flag t) (reparse-symbol classsubparts) [46693 46712])
                    ("f_Vcomment_end_can_be_escaped" variable (:type "bool") (reparse-symbol classsubparts) [46745 46780])
                    ("Vcomment_end_can_be_escaped" variable (:constant-flag t) (reparse-symbol classsubparts) [46789 46816])
                    ("f_Vfast_but_imprecise_scrolling" variable (:type "bool") (reparse-symbol classsubparts) [46857 46894])
                    ("Vfast_but_imprecise_scrolling" variable (:constant-flag t) (reparse-symbol classsubparts) [46903 46932])
                    ("f_Vxft_ignore_color_fonts" variable (:type "bool") (reparse-symbol classsubparts) [46975 47006])
                    ("Vxft_ignore_color_fonts" variable (:constant-flag t) (reparse-symbol classsubparts) [47015 47038])
                    ("f_attempt_orderly_shutdown_on_fatal_signal" variable (:type "bool") (reparse-symbol classsubparts) [47075 47123])
                    ("attempt_orderly_shutdown_on_fatal_signal" variable (:constant-flag t) (reparse-symbol classsubparts) [47132 47172])
                    ("f_attempt_stack_overflow_recovery" variable (:type "bool") (reparse-symbol classsubparts) [47226 47265])
                    ("attempt_stack_overflow_recovery" variable (:constant-flag t) (reparse-symbol classsubparts) [47274 47305])
                    ("f_auto_raise_tool_bar_buttons_p" variable (:type "bool") (reparse-symbol classsubparts) [47350 47387])
                    ("auto_raise_tool_bar_buttons_p" variable (:constant-flag t) (reparse-symbol classsubparts) [47396 47425])
                    ("f_auto_save_no_message" variable (:type "bool") (reparse-symbol classsubparts) [47468 47496])
                    ("auto_save_no_message" variable (:constant-flag t) (reparse-symbol classsubparts) [47505 47525])
                    ("f_auto_window_vscroll_p" variable (:type "bool") (reparse-symbol classsubparts) [47559 47588])
                    ("auto_window_vscroll_p" variable (:constant-flag t) (reparse-symbol classsubparts) [47597 47618])
                    ("f_binary_as_unsigned" variable (:type "bool") (reparse-symbol classsubparts) [47653 47679])
                    ("binary_as_unsigned" variable (:constant-flag t) (reparse-symbol classsubparts) [47688 47706])
                    ("f_byte_metering_on" variable (:type "bool") (reparse-symbol classsubparts) [47738 47762])
                    ("byte_metering_on" variable (:constant-flag t) (reparse-symbol classsubparts) [47771 47787])
                    ("f_cannot_suspend" variable (:type "bool") (reparse-symbol classsubparts) [47817 47839])
                    ("cannot_suspend" variable (:constant-flag t) (reparse-symbol classsubparts) [47848 47862])
                    ("f_coding_system_require_warning" variable (:type "bool") (reparse-symbol classsubparts) [47890 47927])
                    ("coding_system_require_warning" variable (:constant-flag t) (reparse-symbol classsubparts) [47936 47965])
                    ("f_completion_ignore_case" variable (:type "bool") (reparse-symbol classsubparts) [48008 48038])
                    ("completion_ignore_case" variable (:constant-flag t) (reparse-symbol classsubparts) [48047 48069])
                    ("f_create_lockfiles" variable (:type "bool") (reparse-symbol classsubparts) [48105 48129])
                    ("create_lockfiles" variable (:constant-flag t) (reparse-symbol classsubparts) [48138 48154])
                    ("f_cross_disabled_images" variable (:type "bool") (reparse-symbol classsubparts) [48184 48213])
                    ("cross_disabled_images" variable (:constant-flag t) (reparse-symbol classsubparts) [48222 48243])
                    ("f_cursor_in_echo_area" variable (:type "bool") (reparse-symbol classsubparts) [48278 48305])
                    ("cursor_in_echo_area" variable (:constant-flag t) (reparse-symbol classsubparts) [48314 48333])
                    ("f_debug_on_next_call" variable (:type "bool") (reparse-symbol classsubparts) [48366 48392])
                    ("debug_on_next_call" variable (:constant-flag t) (reparse-symbol classsubparts) [48401 48419])
                    ("f_debug_on_quit" variable (:type "bool") (reparse-symbol classsubparts) [48451 48472])
                    ("debug_on_quit" variable (:constant-flag t) (reparse-symbol classsubparts) [48481 48494])
                    ("f_debugger_may_continue" variable (:type "bool") (reparse-symbol classsubparts) [48521 48550])
                    ("debugger_may_continue" variable (:constant-flag t) (reparse-symbol classsubparts) [48559 48580])
                    ("f_debugger_stack_frame_as_list" variable (:type "bool") (reparse-symbol classsubparts) [48615 48651])
                    ("debugger_stack_frame_as_list" variable (:constant-flag t) (reparse-symbol classsubparts) [48660 48688])
                    ("f_delete_by_moving_to_trash" variable (:type "bool") (reparse-symbol classsubparts) [48730 48763])
                    ("delete_by_moving_to_trash" variable (:constant-flag t) (reparse-symbol classsubparts) [48772 48797])
                    ("f_delete_exited_processes" variable (:type "bool") (reparse-symbol classsubparts) [48836 48867])
                    ("delete_exited_processes" variable (:constant-flag t) (reparse-symbol classsubparts) [48876 48899])
                    ("f_disable_ascii_optimization" variable (:type "bool") (reparse-symbol classsubparts) [48936 48970])
                    ("disable_ascii_optimization" variable (:constant-flag t) (reparse-symbol classsubparts) [48979 49005])
                    ("f_display_hourglass_p" variable (:type "bool") (reparse-symbol classsubparts) [49045 49072])
                    ("display_hourglass_p" variable (:constant-flag t) (reparse-symbol classsubparts) [49081 49100])
                    ("f_display_line_numbers_widen" variable (:type "bool") (reparse-symbol classsubparts) [49133 49167])
                    ("display_line_numbers_widen" variable (:constant-flag t) (reparse-symbol classsubparts) [49176 49202])
                    ("f_display_raw_bytes_as_hex" variable (:type "bool") (reparse-symbol classsubparts) [49242 49274])
                    ("display_raw_bytes_as_hex" variable (:constant-flag t) (reparse-symbol classsubparts) [49283 49307])
                    ("f_enable_recursive_minibuffers" variable (:type "bool") (reparse-symbol classsubparts) [49345 49381])
                    ("enable_recursive_minibuffers" variable (:constant-flag t) (reparse-symbol classsubparts) [49390 49418])
                    ("f_face_filters_always_match" variable (:type "bool") (reparse-symbol classsubparts) [49460 49493])
                    ("face_filters_always_match" variable (:constant-flag t) (reparse-symbol classsubparts) [49502 49527])
                    ("f_force_load_messages" variable (:type "bool") (reparse-symbol classsubparts) [49566 49593])
                    ("force_load_messages" variable (:constant-flag t) (reparse-symbol classsubparts) [49602 49621])
                    ("f_force_new_style_backquotes" variable (:type "bool") (reparse-symbol classsubparts) [49654 49688])
                    ("force_new_style_backquotes" variable (:constant-flag t) (reparse-symbol classsubparts) [49697 49723])
                    ("f_frame_resize_pixelwise" variable (:type "bool") (reparse-symbol classsubparts) [49763 49793])
                    ("frame_resize_pixelwise" variable (:constant-flag t) (reparse-symbol classsubparts) [49802 49824])
                    ("f_garbage_collection_messages" variable (:type "bool") (reparse-symbol classsubparts) [49860 49895])
                    ("garbage_collection_messages" variable (:constant-flag t) (reparse-symbol classsubparts) [49904 49931])
                    ("f_highlight_nonselected_windows" variable (:type "bool") (reparse-symbol classsubparts) [49972 50009])
                    ("highlight_nonselected_windows" variable (:constant-flag t) (reparse-symbol classsubparts) [50018 50047])
                    ("f_history_delete_duplicates" variable (:type "bool") (reparse-symbol classsubparts) [50090 50123])
                    ("history_delete_duplicates" variable (:constant-flag t) (reparse-symbol classsubparts) [50132 50157])
                    ("f_indent_tabs_mode" variable (:type "bool") (reparse-symbol classsubparts) [50196 50220])
                    ("indent_tabs_mode" variable (:constant-flag t) (reparse-symbol classsubparts) [50229 50245])
                    ("f_inherit_process_coding_system" variable (:type "bool") (reparse-symbol classsubparts) [50275 50312])
                    ("inherit_process_coding_system" variable (:constant-flag t) (reparse-symbol classsubparts) [50321 50350])
                    ("f_inhibit_bidi_mirroring" variable (:type "bool") (reparse-symbol classsubparts) [50393 50423])
                    ("inhibit_bidi_mirroring" variable (:constant-flag t) (reparse-symbol classsubparts) [50432 50454])
                    ("f_inhibit_compacting_font_caches" variable (:type "bool") (reparse-symbol classsubparts) [50490 50528])
                    ("inhibit_compacting_font_caches" variable (:constant-flag t) (reparse-symbol classsubparts) [50537 50567])
                    ("f_inhibit_eol_conversion" variable (:type "bool") (reparse-symbol classsubparts) [50611 50641])
                    ("inhibit_eol_conversion" variable (:constant-flag t) (reparse-symbol classsubparts) [50650 50672])
                    ("f_inhibit_eval_during_redisplay" variable (:type "bool") (reparse-symbol classsubparts) [50708 50745])
                    ("inhibit_eval_during_redisplay" variable (:constant-flag t) (reparse-symbol classsubparts) [50754 50783])
                    ("f_inhibit_free_realized_faces" variable (:type "bool") (reparse-symbol classsubparts) [50826 50861])
                    ("inhibit_free_realized_faces" variable (:constant-flag t) (reparse-symbol classsubparts) [50870 50897])
                    ("f_inhibit_iso_escape_detection" variable (:type "bool") (reparse-symbol classsubparts) [50938 50974])
                    ("inhibit_iso_escape_detection" variable (:constant-flag t) (reparse-symbol classsubparts) [50983 51011])
                    ("f_inhibit_load_charset_map" variable (:type "bool") (reparse-symbol classsubparts) [51053 51085])
                    ("inhibit_load_charset_map" variable (:constant-flag t) (reparse-symbol classsubparts) [51094 51118])
                    ("f_inhibit_menubar_update" variable (:type "bool") (reparse-symbol classsubparts) [51156 51186])
                    ("inhibit_menubar_update" variable (:constant-flag t) (reparse-symbol classsubparts) [51195 51217])
                    ("f_inhibit_message" variable (:type "bool") (reparse-symbol classsubparts) [51253 51276])
                    ("inhibit_message" variable (:constant-flag t) (reparse-symbol classsubparts) [51285 51300])
                    ("f_inhibit_modification_hooks" variable (:type "bool") (reparse-symbol classsubparts) [51329 51363])
                    ("inhibit_modification_hooks" variable (:constant-flag t) (reparse-symbol classsubparts) [51372 51398])
                    ("f_inhibit_null_byte_detection" variable (:type "bool") (reparse-symbol classsubparts) [51438 51473])
                    ("inhibit_null_byte_detection" variable (:constant-flag t) (reparse-symbol classsubparts) [51482 51509])
                    ("f_inhibit_record_char" variable (:type "bool") (reparse-symbol classsubparts) [51550 51577])
                    ("inhibit_record_char" variable (:constant-flag t) (reparse-symbol classsubparts) [51586 51605])
                    ("f_inhibit_try_cursor_movement" variable (:type "bool") (reparse-symbol classsubparts) [51638 51673])
                    ("inhibit_try_cursor_movement" variable (:constant-flag t) (reparse-symbol classsubparts) [51682 51709])
                    ("f_inhibit_try_window_id" variable (:type "bool") (reparse-symbol classsubparts) [51750 51779])
                    ("inhibit_try_window_id" variable (:constant-flag t) (reparse-symbol classsubparts) [51788 51809])
                    ("f_inhibit_try_window_reusing" variable (:type "bool") (reparse-symbol classsubparts) [51844 51878])
                    ("inhibit_try_window_reusing" variable (:constant-flag t) (reparse-symbol classsubparts) [51887 51913])
                    ("f_inhibit_x_resources" variable (:type "bool") (reparse-symbol classsubparts) [51953 51980])
                    ("inhibit_x_resources" variable (:constant-flag t) (reparse-symbol classsubparts) [51989 52008])
                    ("f_inverse_video" variable (:type "bool") (reparse-symbol classsubparts) [52041 52062])
                    ("inverse_video" variable (:constant-flag t) (reparse-symbol classsubparts) [52071 52084])
                    ("f_load_convert_to_unibyte" variable (:type "bool") (reparse-symbol classsubparts) [52111 52142])
                    ("load_convert_to_unibyte" variable (:constant-flag t) (reparse-symbol classsubparts) [52151 52174])
                    ("f_load_dangerous_libraries" variable (:type "bool") (reparse-symbol classsubparts) [52211 52243])
                    ("load_dangerous_libraries" variable (:constant-flag t) (reparse-symbol classsubparts) [52252 52276])
                    ("f_load_force_doc_strings" variable (:type "bool") (reparse-symbol classsubparts) [52314 52344])
                    ("load_force_doc_strings" variable (:constant-flag t) (reparse-symbol classsubparts) [52353 52375])
                    ("f_load_in_progress" variable (:type "bool") (reparse-symbol classsubparts) [52411 52435])
                    ("load_in_progress" variable (:constant-flag t) (reparse-symbol classsubparts) [52444 52460])
                    ("f_load_prefer_newer" variable (:type "bool") (reparse-symbol classsubparts) [52490 52515])
                    ("load_prefer_newer" variable (:constant-flag t) (reparse-symbol classsubparts) [52524 52541])
                    ("f_make_cursor_line_fully_visible_p" variable (:type "bool") (reparse-symbol classsubparts) [52572 52612])
                    ("make_cursor_line_fully_visible_p" variable (:constant-flag t) (reparse-symbol classsubparts) [52621 52653])
                    ("f_menu_prompting" variable (:type "bool") (reparse-symbol classsubparts) [52699 52721])
                    ("menu_prompting" variable (:constant-flag t) (reparse-symbol classsubparts) [52730 52744])
                    ("f_message_truncate_lines" variable (:type "bool") (reparse-symbol classsubparts) [52772 52802])
                    ("message_truncate_lines" variable (:constant-flag t) (reparse-symbol classsubparts) [52811 52833])
                    ("f_minibuffer_allow_text_properties" variable (:type "bool") (reparse-symbol classsubparts) [52869 52909])
                    ("minibuffer_allow_text_properties" variable (:constant-flag t) (reparse-symbol classsubparts) [52918 52950])
                    ("f_minibuffer_auto_raise" variable (:type "bool") (reparse-symbol classsubparts) [52996 53025])
                    ("minibuffer_auto_raise" variable (:constant-flag t) (reparse-symbol classsubparts) [53034 53055])
                    ("f_mode_line_in_non_selected_windows" variable (:type "bool") (reparse-symbol classsubparts) [53090 53131])
                    ("mode_line_in_non_selected_windows" variable (:constant-flag t) (reparse-symbol classsubparts) [53140 53173])
                    ("f_multibyte_syntax_as_symbol" variable (:type "bool") (reparse-symbol classsubparts) [53220 53254])
                    ("multibyte_syntax_as_symbol" variable (:constant-flag t) (reparse-symbol classsubparts) [53263 53289])
                    ("f_multiple_frames" variable (:type "bool") (reparse-symbol classsubparts) [53329 53352])
                    ("multiple_frames" variable (:constant-flag t) (reparse-symbol classsubparts) [53361 53376])
                    ("f_no_redraw_on_reenter" variable (:type "bool") (reparse-symbol classsubparts) [53405 53433])
                    ("no_redraw_on_reenter" variable (:constant-flag t) (reparse-symbol classsubparts) [53442 53462])
                    ("f_noninteractive1" variable (:type "bool") (reparse-symbol classsubparts) [53496 53519])
                    ("noninteractive1" variable (:constant-flag t) (reparse-symbol classsubparts) [53528 53543])
                    ("f_open_paren_in_column_0_is_defun_start" variable (:type "bool") (reparse-symbol classsubparts) [53572 53617])
                    ("open_paren_in_column_0_is_defun_start" variable (:constant-flag t) (reparse-symbol classsubparts) [53626 53663])
                    ("f_parse_sexp_ignore_comments" variable (:type "bool") (reparse-symbol classsubparts) [53714 53748])
                    ("parse_sexp_ignore_comments" variable (:constant-flag t) (reparse-symbol classsubparts) [53757 53783])
                    ("f_parse_sexp_lookup_properties" variable (:type "bool") (reparse-symbol classsubparts) [53823 53859])
                    ("parse_sexp_lookup_properties" variable (:constant-flag t) (reparse-symbol classsubparts) [53868 53896])
                    ("f_print_escape_control_characters" variable (:type "bool") (reparse-symbol classsubparts) [53938 53977])
                    ("print_escape_control_characters" variable (:constant-flag t) (reparse-symbol classsubparts) [53986 54017])
                    ("f_print_escape_multibyte" variable (:type "bool") (reparse-symbol classsubparts) [54062 54092])
                    ("print_escape_multibyte" variable (:constant-flag t) (reparse-symbol classsubparts) [54101 54123])
                    ("f_print_escape_newlines" variable (:type "bool") (reparse-symbol classsubparts) [54159 54188])
                    ("print_escape_newlines" variable (:constant-flag t) (reparse-symbol classsubparts) [54197 54218])
                    ("f_print_escape_nonascii" variable (:type "bool") (reparse-symbol classsubparts) [54253 54282])
                    ("print_escape_nonascii" variable (:constant-flag t) (reparse-symbol classsubparts) [54291 54312])
                    ("f_print_quoted" variable (:type "bool") (reparse-symbol classsubparts) [54347 54367])
                    ("print_quoted" variable (:constant-flag t) (reparse-symbol classsubparts) [54376 54388])
                    ("f_read_buffer_completion_ignore_case" variable (:type "bool") (reparse-symbol classsubparts) [54414 54456])
                    ("read_buffer_completion_ignore_case" variable (:constant-flag t) (reparse-symbol classsubparts) [54465 54499])
                    ("f_redisplay__inhibit_bidi" variable (:type "bool") (reparse-symbol classsubparts) [54547 54578])
                    ("redisplay__inhibit_bidi" variable (:constant-flag t) (reparse-symbol classsubparts) [54587 54610])
                    ("f_redisplay_dont_pause" variable (:type "bool") (reparse-symbol classsubparts) [54647 54675])
                    ("redisplay_dont_pause" variable (:constant-flag t) (reparse-symbol classsubparts) [54684 54704])
                    ("f_scroll_bar_adjust_thumb_portion_p" variable (:type "bool") (reparse-symbol classsubparts) [54738 54779])
                    ("scroll_bar_adjust_thumb_portion_p" variable (:constant-flag t) (reparse-symbol classsubparts) [54788 54821])
                    ("f_system_uses_terminfo" variable (:type "bool") (reparse-symbol classsubparts) [54868 54896])
                    ("system_uses_terminfo" variable (:constant-flag t) (reparse-symbol classsubparts) [54905 54925])
                    ("f_text_quoting_flag" variable (:type "bool") (reparse-symbol classsubparts) [54959 54984])
                    ("text_quoting_flag" variable (:constant-flag t) (reparse-symbol classsubparts) [54993 55010])
                    ("f_tooltip_reuse_hidden_frame" variable (:type "bool") (reparse-symbol classsubparts) [55041 55075])
                    ("tooltip_reuse_hidden_frame" variable (:constant-flag t) (reparse-symbol classsubparts) [55084 55110])
                    ("f_undo_inhibit_record_point" variable (:type "bool") (reparse-symbol classsubparts) [55150 55183])
                    ("undo_inhibit_record_point" variable (:constant-flag t) (reparse-symbol classsubparts) [55192 55217])
                    ("f_unibyte_display_via_language_environment" variable (:type "bool") (reparse-symbol classsubparts) [55256 55304])
                    ("unibyte_display_via_language_environment" variable (:constant-flag t) (reparse-symbol classsubparts) [55313 55353])
                    ("f_use_default_font_for_symbols" variable (:type "bool") (reparse-symbol classsubparts) [55407 55443])
                    ("use_default_font_for_symbols" variable (:constant-flag t) (reparse-symbol classsubparts) [55452 55480])
                    ("f_use_dialog_box" variable (:type "bool") (reparse-symbol classsubparts) [55522 55544])
                    ("use_dialog_box" variable (:constant-flag t) (reparse-symbol classsubparts) [55553 55567])
                    ("f_use_file_dialog" variable (:type "bool") (reparse-symbol classsubparts) [55595 55618])
                    ("use_file_dialog" variable (:constant-flag t) (reparse-symbol classsubparts) [55627 55642])
                    ("f_use_system_font" variable (:type "bool") (reparse-symbol classsubparts) [55671 55694])
                    ("use_system_font" variable (:constant-flag t) (reparse-symbol classsubparts) [55703 55718])
                    ("f_visible_bell" variable (:type "bool") (reparse-symbol classsubparts) [55747 55767])
                    ("visible_bell" variable (:constant-flag t) (reparse-symbol classsubparts) [55776 55788])
                    ("f_visible_cursor" variable (:type "bool") (reparse-symbol classsubparts) [55814 55836])
                    ("visible_cursor" variable (:constant-flag t) (reparse-symbol classsubparts) [55845 55859])
                    ("f_window_resize_pixelwise" variable (:type "bool") (reparse-symbol classsubparts) [55887 55918])
                    ("window_resize_pixelwise" variable (:constant-flag t) (reparse-symbol classsubparts) [55927 55950])
                    ("f_words_include_escapes" variable (:type "bool") (reparse-symbol classsubparts) [55987 56016])
                    ("words_include_escapes" variable (:constant-flag t) (reparse-symbol classsubparts) [56025 56046])
                    ("f_write_region_inhibit_fsync" variable (:type "bool") (reparse-symbol classsubparts) [56081 56115])
                    ("write_region_inhibit_fsync" variable (:constant-flag t) (reparse-symbol classsubparts) [56124 56150])
                    ("f_x_frame_normalize_before_maximize" variable (:type "bool") (reparse-symbol classsubparts) [56190 56231])
                    ("x_frame_normalize_before_maximize" variable (:constant-flag t) (reparse-symbol classsubparts) [56240 56273])
                    ("f_x_gtk_file_dialog_help_text" variable (:type "bool") (reparse-symbol classsubparts) [56320 56355])
                    ("x_gtk_file_dialog_help_text" variable (:constant-flag t) (reparse-symbol classsubparts) [56364 56391])
                    ("f_x_gtk_show_hidden_files" variable (:type "bool") (reparse-symbol classsubparts) [56432 56463])
                    ("x_gtk_show_hidden_files" variable (:constant-flag t) (reparse-symbol classsubparts) [56472 56495])
                    ("f_x_gtk_use_old_file_dialog" variable (:type "bool") (reparse-symbol classsubparts) [56532 56565])
                    ("x_gtk_use_old_file_dialog" variable (:constant-flag t) (reparse-symbol classsubparts) [56574 56599])
                    ("f_x_gtk_use_system_tooltips" variable (:type "bool") (reparse-symbol classsubparts) [56638 56671])
                    ("x_gtk_use_system_tooltips" variable (:constant-flag t) (reparse-symbol classsubparts) [56680 56705])
                    ("f_x_gtk_use_window_move" variable (:type "bool") (reparse-symbol classsubparts) [56744 56773])
                    ("x_gtk_use_window_move" variable (:constant-flag t) (reparse-symbol classsubparts) [56782 56803])
                    ("f_x_mouse_click_focus_ignore_position" variable (:type "bool") (reparse-symbol classsubparts) [56838 56881])
                    ("x_mouse_click_focus_ignore_position" variable (:constant-flag t) (reparse-symbol classsubparts) [56890 56925])
                    ("f_x_stretch_cursor_p" variable (:type "bool") (reparse-symbol classsubparts) [56974 57000])
                    ("x_stretch_cursor_p" variable (:constant-flag t) (reparse-symbol classsubparts) [57009 57027])
                    ("f_x_underline_at_descent_line" variable (:type "bool") (reparse-symbol classsubparts) [57059 57094])
                    ("x_underline_at_descent_line" variable (:constant-flag t) (reparse-symbol classsubparts) [57103 57130])
                    ("f_x_use_underline_position_properties" variable (:type "bool") (reparse-symbol classsubparts) [57171 57214])
                    ("x_use_underline_position_properties" variable (:constant-flag t) (reparse-symbol classsubparts) [57223 57258]))                  
                :type "struct")
                nil [74 57307])
            ("globals" variable
               (:typemodifiers ("extern")
                :type ("emacs_globals" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [57308 57344])
            ("lispsym" variable
               (:dereference 1
                :typemodifiers ("extern")
                :type ("Lisp_Symbol" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [57369 57416])
            ("iQnil" variable (:constant-flag t) nil [57426 57431])
            ("iQATOM" variable (:constant-flag t) nil [57468 57474])
            ("iQAutomatic_GC" variable (:constant-flag t) nil [57512 57526])
            ("iQCLIPBOARD" variable (:constant-flag t) nil [57572 57583])
            ("iQCLIPBOARD_MANAGER" variable (:constant-flag t) nil [57626 57645])
            ("iQCOMPOUND_TEXT" variable (:constant-flag t) nil [57696 57711])
            ("iQCadstyle" variable (:constant-flag t) nil [57758 57768])
            ("iQCadvertised_binding" variable (:constant-flag t) nil [57810 57831])
            ("iQCalign_to" variable (:constant-flag t) nil [57884 57895])
            ("iQCantialias" variable (:constant-flag t) nil [57938 57950])
            ("iQCarray" variable (:constant-flag t) nil [57994 58002])
            ("iQCascent" variable (:constant-flag t) nil [58043 58052])
            ("iQCascii_compatible_p" variable (:constant-flag t) nil [58094 58115])
            ("iQCavgwidth" variable (:constant-flag t) nil [58169 58180])
            ("iQCbackground" variable (:constant-flag t) nil [58224 58237])
            ("iQCbold" variable (:constant-flag t) nil [58283 58290])
            ("iQCboolean" variable (:constant-flag t) nil [58330 58340])
            ("iQCbox" variable (:constant-flag t) nil [58383 58389])
            ("iQCbuffer" variable (:constant-flag t) nil [58428 58437])
            ("iQCbutton" variable (:constant-flag t) nil [58479 58488])
            ("iQCbyte" variable (:constant-flag t) nil [58530 58537])
            ("iQCbytesize" variable (:constant-flag t) nil [58577 58588])
            ("iQCcategory" variable (:constant-flag t) nil [58632 58643])
            ("iQCcipher_aead_capable" variable (:constant-flag t) nil [58687 58709])
            ("iQCcipher_blocksize" variable (:constant-flag t) nil [58764 58783])
            ("iQCcipher_id" variable (:constant-flag t) nil [58835 58847])
            ("iQCcipher_ivsize" variable (:constant-flag t) nil [58892 58908])
            ("iQCcipher_keysize" variable (:constant-flag t) nil [58957 58974])
            ("iQCcipher_tagsize" variable (:constant-flag t) nil [59024 59041])
            ("iQCcoding" variable (:constant-flag t) nil [59091 59100])
            ("iQCcolor" variable (:constant-flag t) nil [59142 59150])
            ("iQCcolor_adjustment" variable (:constant-flag t) nil [59191 59210])
            ("iQCcolor_symbols" variable (:constant-flag t) nil [59262 59278])
            ("iQCcombining_capability" variable (:constant-flag t) nil [59327 59350])
            ("iQCcommand" variable (:constant-flag t) nil [59406 59416])
            ("iQCcomplete_negotiation" variable (:constant-flag t) nil [59459 59482])
            ("iQCconnection_type" variable (:constant-flag t) nil [59538 59556])
            ("iQCconversion" variable (:constant-flag t) nil [59607 59620])
            ("iQCcrlfiles" variable (:constant-flag t) nil [59666 59677])
            ("iQCcrop" variable (:constant-flag t) nil [59721 59728])
            ("iQCdata" variable (:constant-flag t) nil [59768 59775])
            ("iQCdebug_on_exit" variable (:constant-flag t) nil [59815 59831])
            ("iQCdecode_translation_table" variable (:constant-flag t) nil [59880 59907])
            ("iQCdefault_char" variable (:constant-flag t) nil [59967 59982])
            ("iQCdevice" variable (:constant-flag t) nil [60030 60039])
            ("iQCdict_entry" variable (:constant-flag t) nil [60081 60094])
            ("iQCdigest_algorithm_id" variable (:constant-flag t) nil [60140 60162])
            ("iQCdigest_algorithm_length" variable (:constant-flag t) nil [60217 60243])
            ("iQCdistant_foreground" variable (:constant-flag t) nil [60302 60323])
            ("iQCdocumentation" variable (:constant-flag t) nil [60377 60393])
            ("iQCdouble" variable (:constant-flag t) nil [60442 60451])
            ("iQCdpi" variable (:constant-flag t) nil [60493 60499])
            ("iQCenable" variable (:constant-flag t) nil [60538 60547])
            ("iQCencode_translation_table" variable (:constant-flag t) nil [60589 60616])
            ("iQCeval" variable (:constant-flag t) nil [60676 60683])
            ("iQCfalse" variable (:constant-flag t) nil [60723 60731])
            ("iQCfalse_object" variable (:constant-flag t) nil [60772 60787])
            ("iQCfamily" variable (:constant-flag t) nil [60835 60844])
            ("iQCfile" variable (:constant-flag t) nil [60886 60893])
            ("iQCfilter" variable (:constant-flag t) nil [60933 60942])
            ("iQCfiltered" variable (:constant-flag t) nil [60984 60995])
            ("iQCflowcontrol" variable (:constant-flag t) nil [61039 61053])
            ("iQCfont" variable (:constant-flag t) nil [61100 61107])
            ("iQCfont_entity" variable (:constant-flag t) nil [61147 61161])
            ("iQCfontset" variable (:constant-flag t) nil [61208 61218])
            ("iQCforeground" variable (:constant-flag t) nil [61261 61274])
            ("iQCfoundry" variable (:constant-flag t) nil [61320 61330])
            ("iQCheight" variable (:constant-flag t) nil [61373 61382])
            ("iQChelp" variable (:constant-flag t) nil [61424 61431])
            ("iQCheuristic_mask" variable (:constant-flag t) nil [61471 61488])
            ("iQChost" variable (:constant-flag t) nil [61538 61545])
            ("iQChostname" variable (:constant-flag t) nil [61585 61596])
            ("iQCignore_defface" variable (:constant-flag t) nil [61640 61657])
            ("iQCimage" variable (:constant-flag t) nil [61707 61715])
            ("iQCindex" variable (:constant-flag t) nil [61756 61764])
            ("iQCinherit" variable (:constant-flag t) nil [61805 61815])
            ("iQCint16" variable (:constant-flag t) nil [61858 61866])
            ("iQCint32" variable (:constant-flag t) nil [61907 61915])
            ("iQCint64" variable (:constant-flag t) nil [61956 61964])
            ("iQCinverse_video" variable (:constant-flag t) nil [62005 62021])
            ("iQCitalic" variable (:constant-flag t) nil [62070 62079])
            ("iQCkey_sequence" variable (:constant-flag t) nil [62121 62136])
            ("iQCkeylist" variable (:constant-flag t) nil [62184 62194])
            ("iQCkeys" variable (:constant-flag t) nil [62237 62244])
            ("iQClabel" variable (:constant-flag t) nil [62284 62292])
            ("iQClang" variable (:constant-flag t) nil [62333 62340])
            ("iQCline_width" variable (:constant-flag t) nil [62380 62393])
            ("iQCloader" variable (:constant-flag t) nil [62439 62448])
            ("iQClocal" variable (:constant-flag t) nil [62490 62498])
            ("iQClog" variable (:constant-flag t) nil [62539 62545])
            ("iQCloglevel" variable (:constant-flag t) nil [62584 62595])
            ("iQCmac_algorithm_id" variable (:constant-flag t) nil [62639 62658])
            ("iQCmac_algorithm_keysize" variable (:constant-flag t) nil [62710 62734])
            ("iQCmac_algorithm_length" variable (:constant-flag t) nil [62791 62814])
            ("iQCmac_algorithm_noncesize" variable (:constant-flag t) nil [62870 62896])
            ("iQCmap" variable (:constant-flag t) nil [62955 62961])
            ("iQCmargin" variable (:constant-flag t) nil [63000 63009])
            ("iQCmask" variable (:constant-flag t) nil [63051 63058])
            ("iQCmatrix" variable (:constant-flag t) nil [63098 63107])
            ("iQCmax_height" variable (:constant-flag t) nil [63149 63162])
            ("iQCmax_width" variable (:constant-flag t) nil [63208 63220])
            ("iQCmethod" variable (:constant-flag t) nil [63266 63275])
            ("iQCmin_prime_bits" variable (:constant-flag t) nil [63318 63335])
            ("iQCmnemonic" variable (:constant-flag t) nil [63386 63397])
            ("iQCname" variable (:constant-flag t) nil [63442 63449])
            ("iQCnoquery" variable (:constant-flag t) nil [63490 63500])
            ("iQCnowait" variable (:constant-flag t) nil [63544 63553])
            ("iQCnull" variable (:constant-flag t) nil [63596 63603])
            ("iQCnull_object" variable (:constant-flag t) nil [63644 63658])
            ("iQCobject_path" variable (:constant-flag t) nil [63706 63720])
            ("iQCobject_type" variable (:constant-flag t) nil [63768 63782])
            ("iQCotf" variable (:constant-flag t) nil [63830 63836])
            ("iQCoverline" variable (:constant-flag t) nil [63876 63887])
            ("iQCparity" variable (:constant-flag t) nil [63932 63941])
            ("iQCplist" variable (:constant-flag t) nil [63984 63992])
            ("iQCpointer" variable (:constant-flag t) nil [64034 64044])
            ("iQCport" variable (:constant-flag t) nil [64088 64095])
            ("iQCpost_read_conversion" variable (:constant-flag t) nil [64136 64159])
            ("iQCpre_write_conversion" variable (:constant-flag t) nil [64216 64239])
            ("iQCpriority" variable (:constant-flag t) nil [64296 64307])
            ("iQCprocess" variable (:constant-flag t) nil [64352 64362])
            ("iQCpropertize" variable (:constant-flag t) nil [64406 64419])
            ("iQCpt_height" variable (:constant-flag t) nil [64466 64478])
            ("iQCpt_width" variable (:constant-flag t) nil [64524 64535])
            ("iQCpurecopy" variable (:constant-flag t) nil [64580 64591])
            ("iQCradio" variable (:constant-flag t) nil [64636 64644])
            ("iQCregistry" variable (:constant-flag t) nil [64686 64697])
            ("iQCrehash_size" variable (:constant-flag t) nil [64742 64756])
            ("iQCrehash_threshold" variable (:constant-flag t) nil [64804 64823])
            ("iQCrelative_height" variable (:constant-flag t) nil [64876 64894])
            ("iQCrelative_width" variable (:constant-flag t) nil [64946 64963])
            ("iQCrelief" variable (:constant-flag t) nil [65014 65023])
            ("iQCremote" variable (:constant-flag t) nil [65066 65075])
            ("iQCreverse_video" variable (:constant-flag t) nil [65118 65134])
            ("iQCrotation" variable (:constant-flag t) nil [65184 65195])
            ("iQCrtl" variable (:constant-flag t) nil [65240 65246])
            ("iQCscalable" variable (:constant-flag t) nil [65286 65297])
            ("iQCscale" variable (:constant-flag t) nil [65342 65350])
            ("iQCscript" variable (:constant-flag t) nil [65392 65401])
            ("iQCsentinel" variable (:constant-flag t) nil [65444 65455])
            ("iQCserial" variable (:constant-flag t) nil [65500 65509])
            ("iQCserver" variable (:constant-flag t) nil [65552 65561])
            ("iQCservice" variable (:constant-flag t) nil [65604 65614])
            ("iQCsession" variable (:constant-flag t) nil [65658 65668])
            ("iQCsignal" variable (:constant-flag t) nil [65712 65721])
            ("iQCsignature" variable (:constant-flag t) nil [65764 65776])
            ("iQCsize" variable (:constant-flag t) nil [65822 65829])
            ("iQCslant" variable (:constant-flag t) nil [65870 65878])
            ("iQCspacing" variable (:constant-flag t) nil [65920 65930])
            ("iQCspeed" variable (:constant-flag t) nil [65974 65982])
            ("iQCstderr" variable (:constant-flag t) nil [66024 66033])
            ("iQCstipple" variable (:constant-flag t) nil [66076 66086])
            ("iQCstop" variable (:constant-flag t) nil [66130 66137])
            ("iQCstopbits" variable (:constant-flag t) nil [66178 66189])
            ("iQCstrike_through" variable (:constant-flag t) nil [66234 66251])
            ("iQCstring" variable (:constant-flag t) nil [66302 66311])
            ("iQCstruct" variable (:constant-flag t) nil [66354 66363])
            ("iQCstyle" variable (:constant-flag t) nil [66406 66414])
            ("iQCsummary" variable (:constant-flag t) nil [66456 66466])
            ("iQCsystem" variable (:constant-flag t) nil [66510 66519])
            ("iQCtest" variable (:constant-flag t) nil [66562 66569])
            ("iQCtimeout" variable (:constant-flag t) nil [66610 66620])
            ("iQCtitle" variable (:constant-flag t) nil [66664 66672])
            ("iQCtls_parameters" variable (:constant-flag t) nil [66714 66731])
            ("iQCtoggle" variable (:constant-flag t) nil [66782 66791])
            ("iQCtrustfiles" variable (:constant-flag t) nil [66834 66847])
            ("iQCtype" variable (:constant-flag t) nil [66894 66901])
            ("iQCuint16" variable (:constant-flag t) nil [66942 66951])
            ("iQCuint32" variable (:constant-flag t) nil [66994 67003])
            ("iQCuint64" variable (:constant-flag t) nil [67046 67055])
            ("iQCunderline" variable (:constant-flag t) nil [67098 67110])
            ("iQCunix_fd" variable (:constant-flag t) nil [67156 67166])
            ("iQCuse_external_socket" variable (:constant-flag t) nil [67210 67232])
            ("iQCuser_spec" variable (:constant-flag t) nil [67288 67300])
            ("iQCvariant" variable (:constant-flag t) nil [67346 67356])
            ("iQCverify_error" variable (:constant-flag t) nil [67400 67415])
            ("iQCverify_flags" variable (:constant-flag t) nil [67464 67479])
            ("iQCvert_only" variable (:constant-flag t) nil [67528 67540])
            ("iQCvisible" variable (:constant-flag t) nil [67586 67596])
            ("iQCvolume" variable (:constant-flag t) nil [67640 67649])
            ("iQCweakness" variable (:constant-flag t) nil [67692 67703])
            ("iQCweight" variable (:constant-flag t) nil [67748 67757])
            ("iQCwidth" variable (:constant-flag t) nil [67800 67808])
            ("iQCwindow" variable (:constant-flag t) nil [67850 67859])
            ("iQCxwidget" variable (:constant-flag t) nil [67902 67912])
            ("iQDELETE" variable (:constant-flag t) nil [67956 67964])
            ("iQEmacsFrameResize" variable (:constant-flag t) nil [68006 68024])
            ("iQINCR" variable (:constant-flag t) nil [68076 68082])
            ("iQINTEGER" variable (:constant-flag t) nil [68122 68131])
            ("iQMULTIPLE" variable (:constant-flag t) nil [68174 68184])
            ("iQNULL" variable (:constant-flag t) nil [68228 68234])
            ("iQPRIMARY" variable (:constant-flag t) nil [68274 68283])
            ("iQSAVE_TARGETS" variable (:constant-flag t) nil [68326 68340])
            ("iQSECONDARY" variable (:constant-flag t) nil [68388 68399])
            ("iQSTRING" variable (:constant-flag t) nil [68444 68452])
            ("iQTARGETS" variable (:constant-flag t) nil [68494 68503])
            ("iQTEXT" variable (:constant-flag t) nil [68546 68552])
            ("iQTIMESTAMP" variable (:constant-flag t) nil [68592 68603])
            ("iQUTF8_STRING" variable (:constant-flag t) nil [68648 68661])
            ("iQ_EMACS_TMP_" variable (:constant-flag t) nil [68708 68721])
            ("iQabove" variable (:constant-flag t) nil [68768 68775])
            ("iQabove_handle" variable (:constant-flag t) nil [68816 68830])
            ("iQabove_suspended" variable (:constant-flag t) nil [68878 68895])
            ("iQaccess" variable (:constant-flag t) nil [68946 68954])
            ("iQaccess_file" variable (:constant-flag t) nil [68996 69009])
            ("iQactivate_input_method" variable (:constant-flag t) nil [69056 69079])
            ("iQactivate_menubar_hook" variable (:constant-flag t) nil [69136 69159])
            ("iQadd_name_to_file" variable (:constant-flag t) nil [69216 69234])
            ("iQadjust_frame_size_1" variable (:constant-flag t) nil [69286 69307])
            ("iQadjust_frame_size_2" variable (:constant-flag t) nil [69362 69383])
            ("iQadjust_frame_size_3" variable (:constant-flag t) nil [69438 69459])
            ("iQafter_change_functions" variable (:constant-flag t) nil [69514 69538])
            ("iQafter_delete_frame_functions" variable (:constant-flag t) nil [69596 69626])
            ("iQafter_handle" variable (:constant-flag t) nil [69690 69704])
            ("iQafter_insert_file_set_coding" variable (:constant-flag t) nil [69752 69782])
            ("iQafter_string" variable (:constant-flag t) nil [69846 69860])
            ("iQalist" variable (:constant-flag t) nil [69908 69915])
            ("iQall_events" variable (:constant-flag t) nil [69956 69968])
            ("iQalpha" variable (:constant-flag t) nil [70014 70021])
            ("iQalt" variable (:constant-flag t) nil [70062 70067])
            ("iQand_optional" variable (:constant-flag t) nil [70106 70120])
            ("iQand_rest" variable (:constant-flag t) nil [70168 70178])
            ("iQappend" variable (:constant-flag t) nil [70222 70230])
            ("iQapply" variable (:constant-flag t) nil [70272 70279])
            ("iQargs" variable (:constant-flag t) nil [70320 70326])
            ("iQargs_out_of_range" variable (:constant-flag t) nil [70366 70385])
            ("iQarith_error" variable (:constant-flag t) nil [70438 70451])
            ("iQarrayp" variable (:constant-flag t) nil [70498 70506])
            ("iQarrow" variable (:constant-flag t) nil [70548 70555])
            ("iQascii" variable (:constant-flag t) nil [70596 70603])
            ("iQascii_0" variable (:constant-flag t) nil [70644 70653])
            ("iQascii_character" variable (:constant-flag t) nil [70696 70713])
            ("iQassq_delete_all" variable (:constant-flag t) nil [70764 70781])
            ("iQattrib" variable (:constant-flag t) nil [70832 70840])
            ("iQauto_composed" variable (:constant-flag t) nil [70882 70897])
            ("iQauto_fill_chars" variable (:constant-flag t) nil [70946 70963])
            ("iQauto_hscroll_mode" variable (:constant-flag t) nil [71014 71033])
            ("iQauto_lower" variable (:constant-flag t) nil [71086 71098])
            ("iQauto_raise" variable (:constant-flag t) nil [71144 71156])
            ("iQauto_save_coding" variable (:constant-flag t) nil [71202 71220])
            ("iQautoload" variable (:constant-flag t) nil [71272 71282])
            ("iQbackground_color" variable (:constant-flag t) nil [71326 71344])
            ("iQbackground_mode" variable (:constant-flag t) nil [71396 71413])
            ("iQbackquote" variable (:constant-flag t) nil [71464 71475])
            ("iQbar" variable (:constant-flag t) nil [71520 71525])
            ("iQbefore_change_functions" variable (:constant-flag t) nil [71564 71589])
            ("iQbefore_handle" variable (:constant-flag t) nil [71648 71663])
            ("iQbefore_string" variable (:constant-flag t) nil [71712 71727])
            ("iQbeginning_of_buffer" variable (:constant-flag t) nil [71776 71797])
            ("iQbelow" variable (:constant-flag t) nil [71852 71859])
            ("iQbelow_handle" variable (:constant-flag t) nil [71900 71914])
            ("iQbig" variable (:constant-flag t) nil [71962 71967])
            ("iQbig5" variable (:constant-flag t) nil [72006 72012])
            ("iQbitmap_spec_p" variable (:constant-flag t) nil [72052 72067])
            ("iQbold" variable (:constant-flag t) nil [72116 72122])
            ("iQbool_vector" variable (:constant-flag t) nil [72162 72175])
            ("iQbool_vector_p" variable (:constant-flag t) nil [72222 72237])
            ("iQborder" variable (:constant-flag t) nil [72286 72294])
            ("iQborder_color" variable (:constant-flag t) nil [72336 72350])
            ("iQborder_width" variable (:constant-flag t) nil [72398 72412])
            ("iQboth" variable (:constant-flag t) nil [72460 72466])
            ("iQboth_horiz" variable (:constant-flag t) nil [72506 72518])
            ("iQbottom" variable (:constant-flag t) nil [72564 72572])
            ("iQbottom_divider" variable (:constant-flag t) nil [72614 72630])
            ("iQbottom_divider_width" variable (:constant-flag t) nil [72680 72702])
            ("iQbottom_edge" variable (:constant-flag t) nil [72758 72771])
            ("iQbottom_left_corner" variable (:constant-flag t) nil [72818 72838])
            ("iQbottom_margin" variable (:constant-flag t) nil [72892 72907])
            ("iQbottom_right_corner" variable (:constant-flag t) nil [72956 72977])
            ("iQboundary" variable (:constant-flag t) nil [73032 73042])
            ("iQbox" variable (:constant-flag t) nil [73086 73091])
            ("iQbuffer" variable (:constant-flag t) nil [73130 73138])
            ("iQbuffer_access_fontify_functions" variable (:constant-flag t) nil [73180 73213])
            ("iQbuffer_file_coding_system" variable (:constant-flag t) nil [73280 73307])
            ("iQbuffer_list" variable (:constant-flag t) nil [73368 73381])
            ("iQbuffer_list_update_hook" variable (:constant-flag t) nil [73428 73453])
            ("iQbuffer_name_history" variable (:constant-flag t) nil [73512 73533])
            ("iQbuffer_or_string_p" variable (:constant-flag t) nil [73588 73608])
            ("iQbuffer_position" variable (:constant-flag t) nil [73662 73679])
            ("iQbuffer_predicate" variable (:constant-flag t) nil [73730 73748])
            ("iQbuffer_read_only" variable (:constant-flag t) nil [73800 73818])
            ("iQbufferp" variable (:constant-flag t) nil [73870 73879])
            ("iQbuffers" variable (:constant-flag t) nil [73922 73931])
            ("iQburied_buffer_list" variable (:constant-flag t) nil [73974 73994])
            ("iQbyte_code_meter" variable (:constant-flag t) nil [74048 74065])
            ("iQc" variable (:constant-flag t) nil [74116 74119])
            ("iQcall_process" variable (:constant-flag t) nil [74156 74170])
            ("iQcall_process_region" variable (:constant-flag t) nil [74218 74239])
            ("iQcancel_timer" variable (:constant-flag t) nil [74294 74308])
            ("iQcar_less_than_car" variable (:constant-flag t) nil [74356 74375])
            ("iQcase_fold_search" variable (:constant-flag t) nil [74428 74446])
            ("iQcase_table" variable (:constant-flag t) nil [74498 74510])
            ("iQcase_table_p" variable (:constant-flag t) nil [74556 74570])
            ("iQcatch_all_memory_full" variable (:constant-flag t) nil [74618 74641])
            ("iQcategory" variable (:constant-flag t) nil [74698 74708])
            ("iQcategory_table" variable (:constant-flag t) nil [74752 74768])
            ("iQcategory_table_p" variable (:constant-flag t) nil [74818 74836])
            ("iQcategoryp" variable (:constant-flag t) nil [74888 74899])
            ("iQcategorysetp" variable (:constant-flag t) nil [74944 74958])
            ("iQccl" variable (:constant-flag t) nil [75006 75011])
            ("iQccl_program_idx" variable (:constant-flag t) nil [75050 75067])
            ("iQcclp" variable (:constant-flag t) nil [75118 75124])
            ("iQcdr" variable (:constant-flag t) nil [75164 75169])
            ("iQceiling" variable (:constant-flag t) nil [75208 75217])
            ("iQcenter" variable (:constant-flag t) nil [75260 75268])
            ("iQchange_frame_size" variable (:constant-flag t) nil [75310 75329])
            ("iQchange_major_mode_hook" variable (:constant-flag t) nil [75382 75406])
            ("iQchar" variable (:constant-flag t) nil [75464 75470])
            ("iQchar_code_property_table" variable (:constant-flag t) nil [75510 75536])
            ("iQchar_from_name" variable (:constant-flag t) nil [75596 75612])
            ("iQchar_or_string_p" variable (:constant-flag t) nil [75662 75680])
            ("iQchar_script_table" variable (:constant-flag t) nil [75732 75751])
            ("iQchar_table" variable (:constant-flag t) nil [75804 75816])
            ("iQchar_table_extra_slots" variable (:constant-flag t) nil [75862 75886])
            ("iQchar_table_p" variable (:constant-flag t) nil [75944 75958])
            ("iQcharacterp" variable (:constant-flag t) nil [76006 76018])
            ("iQcharset" variable (:constant-flag t) nil [76064 76073])
            ("iQcharsetp" variable (:constant-flag t) nil [76116 76126])
            ("iQchoice" variable (:constant-flag t) nil [76170 76178])
            ("iQcircle" variable (:constant-flag t) nil [76220 76228])
            ("iQcircular_list" variable (:constant-flag t) nil [76270 76285])
            ("iQclone_of" variable (:constant-flag t) nil [76334 76344])
            ("iQclose" variable (:constant-flag t) nil [76388 76395])
            ("iQclose_nowrite" variable (:constant-flag t) nil [76436 76451])
            ("iQclose_write" variable (:constant-flag t) nil [76500 76513])
            ("iQclosed" variable (:constant-flag t) nil [76560 76568])
            ("iQclosure" variable (:constant-flag t) nil [76610 76619])
            ("iQcmajflt" variable (:constant-flag t) nil [76662 76671])
            ("iQcminflt" variable (:constant-flag t) nil [76714 76723])
            ("iQcode_conversion_map" variable (:constant-flag t) nil [76766 76787])
            ("iQcode_conversion_map_id" variable (:constant-flag t) nil [76842 76866])
            ("iQcodeset" variable (:constant-flag t) nil [76924 76933])
            ("iQcoding_system_define_form" variable (:constant-flag t) nil [76976 77003])
            ("iQcoding_system_error" variable (:constant-flag t) nil [77064 77085])
            ("iQcoding_system_history" variable (:constant-flag t) nil [77140 77163])
            ("iQcoding_system_p" variable (:constant-flag t) nil [77220 77237])
            ("iQcolumns" variable (:constant-flag t) nil [77288 77297])
            ("iQcomm" variable (:constant-flag t) nil [77340 77346])
            ("iQcomma" variable (:constant-flag t) nil [77386 77393])
            ("iQcomma_at" variable (:constant-flag t) nil [77434 77444])
            ("iQcomma_dot" variable (:constant-flag t) nil [77488 77499])
            ("iQcommand_debug_status" variable (:constant-flag t) nil [77544 77566])
            ("iQcommand_execute" variable (:constant-flag t) nil [77622 77639])
            ("iQcommandp" variable (:constant-flag t) nil [77690 77700])
            ("iQcomment_end_can_be_escaped" variable (:constant-flag t) nil [77744 77772])
            ("iQcompiled_function" variable (:constant-flag t) nil [77834 77853])
            ("iQcompletion_ignore_case" variable (:constant-flag t) nil [77906 77930])
            ("iQcomposition" variable (:constant-flag t) nil [77988 78001])
            ("iQcompound_text" variable (:constant-flag t) nil [78048 78063])
            ("iQcondition_variable" variable (:constant-flag t) nil [78112 78132])
            ("iQcondition_variable_p" variable (:constant-flag t) nil [78186 78208])
            ("iQconfig_changed_event" variable (:constant-flag t) nil [78264 78286])
            ("iQconnect" variable (:constant-flag t) nil [78342 78351])
            ("iQcons" variable (:constant-flag t) nil [78394 78400])
            ("iQconses" variable (:constant-flag t) nil [78440 78448])
            ("iQconsp" variable (:constant-flag t) nil [78490 78497])
            ("iQcontinuation" variable (:constant-flag t) nil [78538 78552])
            ("iQcopy_directory" variable (:constant-flag t) nil [78600 78616])
            ("iQcopy_file" variable (:constant-flag t) nil [78666 78677])
            ("iQcount" variable (:constant-flag t) nil [78722 78729])
            ("iQcreate" variable (:constant-flag t) nil [78770 78778])
            ("iQcstime" variable (:constant-flag t) nil [78820 78828])
            ("iQctime" variable (:constant-flag t) nil [78870 78877])
            ("iQctrl" variable (:constant-flag t) nil [78918 78924])
            ("iQcurrent_input_method" variable (:constant-flag t) nil [78964 78986])
            ("iQcurrent_line" variable (:constant-flag t) nil [79042 79056])
            ("iQcurrent_load_list" variable (:constant-flag t) nil [79104 79123])
            ("iQcursor" variable (:constant-flag t) nil [79176 79184])
            ("iQcursor_color" variable (:constant-flag t) nil [79226 79240])
            ("iQcursor_in_echo_area" variable (:constant-flag t) nil [79288 79309])
            ("iQcursor_type" variable (:constant-flag t) nil [79364 79377])
            ("iQcustom_variable_history" variable (:constant-flag t) nil [79424 79449])
            ("iQcustom_variable_p" variable (:constant-flag t) nil [79508 79527])
            ("iQcutime" variable (:constant-flag t) nil [79580 79588])
            ("iQcyclic_function_indirection" variable (:constant-flag t) nil [79630 79659])
            ("iQcyclic_variable_indirection" variable (:constant-flag t) nil [79722 79751])
            ("iQd" variable (:constant-flag t) nil [79814 79817])
            ("iQdata" variable (:constant-flag t) nil [79854 79860])
            ("iQdatagram" variable (:constant-flag t) nil [79900 79910])
            ("iQdays" variable (:constant-flag t) nil [79954 79960])
            ("iQdbus_error" variable (:constant-flag t) nil [80000 80012])
            ("iQdbus_event" variable (:constant-flag t) nil [80058 80070])
            ("iQdbus_message_internal" variable (:constant-flag t) nil [80116 80139])
            ("iQdeactivate_mark" variable (:constant-flag t) nil [80196 80213])
            ("iQdebug" variable (:constant-flag t) nil [80264 80271])
            ("iQdebug_on_next_call" variable (:constant-flag t) nil [80312 80332])
            ("iQdecomposed_characters" variable (:constant-flag t) nil [80386 80409])
            ("iQdefalias_fset_function" variable (:constant-flag t) nil [80466 80490])
            ("iQdefault" variable (:constant-flag t) nil [80548 80557])
            ("iQdefault_directory" variable (:constant-flag t) nil [80600 80619])
            ("iQdeferred_action_function" variable (:constant-flag t) nil [80672 80698])
            ("iQdefun" variable (:constant-flag t) nil [80758 80765])
            ("iQdefvaralias" variable (:constant-flag t) nil [80806 80819])
            ("iQdelay" variable (:constant-flag t) nil [80866 80873])
            ("iQdelayed_warnings_hook" variable (:constant-flag t) nil [80914 80937])
            ("iQdelete" variable (:constant-flag t) nil [80994 81002])
            ("iQdelete_before" variable (:constant-flag t) nil [81044 81059])
            ("iQdelete_by_moving_to_trash" variable (:constant-flag t) nil [81108 81135])
            ("iQdelete_directory" variable (:constant-flag t) nil [81196 81214])
            ("iQdelete_file" variable (:constant-flag t) nil [81266 81279])
            ("iQdelete_frame" variable (:constant-flag t) nil [81326 81340])
            ("iQdelete_frame_functions" variable (:constant-flag t) nil [81388 81412])
            ("iQdelete_self" variable (:constant-flag t) nil [81470 81483])
            ("iQdelete_terminal_functions" variable (:constant-flag t) nil [81530 81557])
            ("iQdelete_window" variable (:constant-flag t) nil [81618 81633])
            ("iQdir_ok" variable (:constant-flag t) nil [81682 81690])
            ("iQdirectory_file_name" variable (:constant-flag t) nil [81732 81753])
            ("iQdirectory_files" variable (:constant-flag t) nil [81808 81825])
            ("iQdirectory_files_and_attributes" variable (:constant-flag t) nil [81876 81908])
            ("iQdisable_eval" variable (:constant-flag t) nil [81974 81988])
            ("iQdisabled" variable (:constant-flag t) nil [82036 82046])
            ("iQdisplay" variable (:constant-flag t) nil [82090 82099])
            ("iQdisplay_buffer" variable (:constant-flag t) nil [82142 82158])
            ("iQdisplay_line_numbers" variable (:constant-flag t) nil [82208 82230])
            ("iQdisplay_line_numbers_disable" variable (:constant-flag t) nil [82286 82316])
            ("iQdisplay_line_numbers_widen" variable (:constant-flag t) nil [82380 82408])
            ("iQdisplay_line_numbers_width" variable (:constant-flag t) nil [82470 82498])
            ("iQdisplay_monitor_attributes_list" variable (:constant-flag t) nil [82560 82593])
            ("iQdisplay_table" variable (:constant-flag t) nil [82660 82675])
            ("iQdisplay_type" variable (:constant-flag t) nil [82724 82738])
            ("iQdo_after_load_evaluation" variable (:constant-flag t) nil [82786 82812])
            ("iQdomain_error" variable (:constant-flag t) nil [82872 82886])
            ("iQdont_follow" variable (:constant-flag t) nil [82934 82947])
            ("iQdos" variable (:constant-flag t) nil [82994 82999])
            ("iQdown" variable (:constant-flag t) nil [83038 83044])
            ("iQdrag_internal_border" variable (:constant-flag t) nil [83084 83106])
            ("iQdrag_n_drop" variable (:constant-flag t) nil [83162 83175])
            ("iQdragging" variable (:constant-flag t) nil [83222 83232])
            ("iQecho_area_clear_hook" variable (:constant-flag t) nil [83276 83298])
            ("iQecho_keystrokes" variable (:constant-flag t) nil [83354 83371])
            ("iQedge_detection" variable (:constant-flag t) nil [83422 83438])
            ("iQegid" variable (:constant-flag t) nil [83488 83494])
            ("iQeight_bit" variable (:constant-flag t) nil [83534 83545])
            ("iQemacs" variable (:constant-flag t) nil [83590 83597])
            ("iQemacs_mule" variable (:constant-flag t) nil [83638 83650])
            ("iQemboss" variable (:constant-flag t) nil [83696 83704])
            ("iQempty_box" variable (:constant-flag t) nil [83746 83757])
            ("iQempty_line" variable (:constant-flag t) nil [83802 83814])
            ("iQenable_recursive_minibuffers" variable (:constant-flag t) nil [83860 83890])
            ("iQend_of_buffer" variable (:constant-flag t) nil [83954 83969])
            ("iQend_of_file" variable (:constant-flag t) nil [84018 84031])
            ("iQend_scroll" variable (:constant-flag t) nil [84078 84090])
            ("iQend_session" variable (:constant-flag t) nil [84136 84149])
            ("iQeq" variable (:constant-flag t) nil [84196 84200])
            ("iQeql" variable (:constant-flag t) nil [84238 84243])
            ("iQequal" variable (:constant-flag t) nil [84282 84289])
            ("iQerror" variable (:constant-flag t) nil [84330 84337])
            ("iQerror_conditions" variable (:constant-flag t) nil [84378 84396])
            ("iQerror_message" variable (:constant-flag t) nil [84448 84463])
            ("iQescape_glyph" variable (:constant-flag t) nil [84512 84526])
            ("iQetime" variable (:constant-flag t) nil [84574 84581])
            ("iQeuid" variable (:constant-flag t) nil [84622 84628])
            ("iQeval" variable (:constant-flag t) nil [84668 84674])
            ("iQeval_buffer_list" variable (:constant-flag t) nil [84714 84732])
            ("iQevaporate" variable (:constant-flag t) nil [84784 84795])
            ("iQeven" variable (:constant-flag t) nil [84840 84846])
            ("iQevent_kind" variable (:constant-flag t) nil [84886 84898])
            ("iQevent_symbol_element_mask" variable (:constant-flag t) nil [84944 84971])
            ("iQevent_symbol_elements" variable (:constant-flag t) nil [85032 85055])
            ("iQexcl" variable (:constant-flag t) nil [85112 85118])
            ("iQexit" variable (:constant-flag t) nil [85158 85164])
            ("iQexpand_abbrev" variable (:constant-flag t) nil [85204 85219])
            ("iQexpand_file_name" variable (:constant-flag t) nil [85268 85286])
            ("iQexplicit" variable (:constant-flag t) nil [85338 85348])
            ("iQexplicit_name" variable (:constant-flag t) nil [85392 85407])
            ("iQextension_data" variable (:constant-flag t) nil [85456 85472])
            ("iQexternal_border_size" variable (:constant-flag t) nil [85522 85544])
            ("iQexternal_debugging_output" variable (:constant-flag t) nil [85600 85627])
            ("iQextra_bold" variable (:constant-flag t) nil [85688 85700])
            ("iQextra_light" variable (:constant-flag t) nil [85746 85759])
            ("iQface" variable (:constant-flag t) nil [85806 85812])
            ("iQface_alias" variable (:constant-flag t) nil [85852 85864])
            ("iQface_no_inherit" variable (:constant-flag t) nil [85910 85927])
            ("iQface_set_after_frame_default" variable (:constant-flag t) nil [85978 86008])
            ("iQfailed" variable (:constant-flag t) nil [86072 86080])
            ("iQfboundp" variable (:constant-flag t) nil [86122 86131])
            ("iQfeatures" variable (:constant-flag t) nil [86174 86184])
            ("iQfield" variable (:constant-flag t) nil [86228 86235])
            ("iQfile_accessible_directory_p" variable (:constant-flag t) nil [86276 86305])
            ("iQfile_acl" variable (:constant-flag t) nil [86368 86378])
            ("iQfile_already_exists" variable (:constant-flag t) nil [86422 86443])
            ("iQfile_attributes" variable (:constant-flag t) nil [86498 86515])
            ("iQfile_attributes_lessp" variable (:constant-flag t) nil [86566 86589])
            ("iQfile_date_error" variable (:constant-flag t) nil [86646 86663])
            ("iQfile_directory_p" variable (:constant-flag t) nil [86714 86732])
            ("iQfile_error" variable (:constant-flag t) nil [86784 86796])
            ("iQfile_executable_p" variable (:constant-flag t) nil [86842 86861])
            ("iQfile_exists_p" variable (:constant-flag t) nil [86914 86929])
            ("iQfile_missing" variable (:constant-flag t) nil [86978 86992])
            ("iQfile_modes" variable (:constant-flag t) nil [87040 87052])
            ("iQfile_name_all_completions" variable (:constant-flag t) nil [87098 87125])
            ("iQfile_name_as_directory" variable (:constant-flag t) nil [87186 87210])
            ("iQfile_name_case_insensitive_p" variable (:constant-flag t) nil [87268 87298])
            ("iQfile_name_completion" variable (:constant-flag t) nil [87362 87384])
            ("iQfile_name_directory" variable (:constant-flag t) nil [87440 87461])
            ("iQfile_name_handler_alist" variable (:constant-flag t) nil [87516 87541])
            ("iQfile_name_history" variable (:constant-flag t) nil [87600 87619])
            ("iQfile_name_nondirectory" variable (:constant-flag t) nil [87672 87696])
            ("iQfile_newer_than_file_p" variable (:constant-flag t) nil [87754 87778])
            ("iQfile_notify" variable (:constant-flag t) nil [87836 87849])
            ("iQfile_notify_error" variable (:constant-flag t) nil [87896 87915])
            ("iQfile_readable_p" variable (:constant-flag t) nil [87968 87985])
            ("iQfile_regular_p" variable (:constant-flag t) nil [88036 88052])
            ("iQfile_selinux_context" variable (:constant-flag t) nil [88102 88124])
            ("iQfile_symlink_p" variable (:constant-flag t) nil [88180 88196])
            ("iQfile_system_info" variable (:constant-flag t) nil [88246 88264])
            ("iQfile_truename" variable (:constant-flag t) nil [88316 88331])
            ("iQfile_writable_p" variable (:constant-flag t) nil [88380 88397])
            ("iQfinalizer" variable (:constant-flag t) nil [88448 88459])
            ("iQfirst_change_hook" variable (:constant-flag t) nil [88504 88523])
            ("iQfixnump" variable (:constant-flag t) nil [88576 88585])
            ("iQfloat" variable (:constant-flag t) nil [88628 88635])
            ("iQfloatp" variable (:constant-flag t) nil [88676 88684])
            ("iQfloats" variable (:constant-flag t) nil [88726 88734])
            ("iQfloor" variable (:constant-flag t) nil [88776 88783])
            ("iQfocus_in" variable (:constant-flag t) nil [88824 88834])
            ("iQfocus_out" variable (:constant-flag t) nil [88878 88889])
            ("iQfont" variable (:constant-flag t) nil [88934 88940])
            ("iQfont_backend" variable (:constant-flag t) nil [88980 88994])
            ("iQfont_entity" variable (:constant-flag t) nil [89042 89055])
            ("iQfont_name" variable (:constant-flag t) nil [89102 89113])
            ("iQfont_object" variable (:constant-flag t) nil [89158 89171])
            ("iQfont_parameter" variable (:constant-flag t) nil [89218 89234])
            ("iQfont_render" variable (:constant-flag t) nil [89284 89297])
            ("iQfont_spec" variable (:constant-flag t) nil [89344 89355])
            ("iQfontification_functions" variable (:constant-flag t) nil [89400 89425])
            ("iQfontified" variable (:constant-flag t) nil [89484 89495])
            ("iQfontset" variable (:constant-flag t) nil [89540 89549])
            ("iQfontset_info" variable (:constant-flag t) nil [89592 89606])
            ("iQforeground_color" variable (:constant-flag t) nil [89654 89672])
            ("iQforeign_selection" variable (:constant-flag t) nil [89724 89743])
            ("iQformat" variable (:constant-flag t) nil [89796 89804])
            ("iQformat_annotate_function" variable (:constant-flag t) nil [89846 89872])
            ("iQformat_decode" variable (:constant-flag t) nil [89932 89947])
            ("iQfraction" variable (:constant-flag t) nil [89996 90006])
            ("iQframe" variable (:constant-flag t) nil [90050 90057])
            ("iQframe_edges" variable (:constant-flag t) nil [90098 90111])
            ("iQframe_inhibit_resize" variable (:constant-flag t) nil [90158 90180])
            ("iQframe_live_p" variable (:constant-flag t) nil [90236 90250])
            ("iQframe_monitor_workarea" variable (:constant-flag t) nil [90298 90322])
            ("iQframe_set_background_mode" variable (:constant-flag t) nil [90380 90407])
            ("iQframe_windows_min_size" variable (:constant-flag t) nil [90468 90492])
            ("iQframep" variable (:constant-flag t) nil [90550 90558])
            ("iQframes" variable (:constant-flag t) nil [90600 90608])
            ("iQfree_frame_menubar_1" variable (:constant-flag t) nil [90650 90672])
            ("iQfree_frame_menubar_2" variable (:constant-flag t) nil [90728 90750])
            ("iQfree_frame_tool_bar" variable (:constant-flag t) nil [90806 90827])
            ("iQfreetype" variable (:constant-flag t) nil [90882 90892])
            ("iQfringe" variable (:constant-flag t) nil [90936 90944])
            ("iQfront_sticky" variable (:constant-flag t) nil [90986 91000])
            ("iQftcr" variable (:constant-flag t) nil [91048 91054])
            ("iQfullboth" variable (:constant-flag t) nil [91094 91104])
            ("iQfullheight" variable (:constant-flag t) nil [91148 91160])
            ("iQfullscreen" variable (:constant-flag t) nil [91206 91218])
            ("iQfullwidth" variable (:constant-flag t) nil [91264 91275])
            ("iQfuncall" variable (:constant-flag t) nil [91320 91329])
            ("iQfuncall_interactively" variable (:constant-flag t) nil [91372 91395])
            ("iQfunction" variable (:constant-flag t) nil [91452 91462])
            ("iQfunction_documentation" variable (:constant-flag t) nil [91506 91530])
            ("iQfunction_key" variable (:constant-flag t) nil [91588 91602])
            ("iQfundamental_mode" variable (:constant-flag t) nil [91650 91668])
            ("iQgc_cons_threshold" variable (:constant-flag t) nil [91720 91739])
            ("iQgdk_pixbuf" variable (:constant-flag t) nil [91792 91804])
            ("iQgeometry" variable (:constant-flag t) nil [91850 91860])
            ("iQget_buffer_window_list" variable (:constant-flag t) nil [91904 91928])
            ("iQget_emacs_mule_file_char" variable (:constant-flag t) nil [91986 92012])
            ("iQget_file_buffer" variable (:constant-flag t) nil [92072 92089])
            ("iQget_file_char" variable (:constant-flag t) nil [92140 92155])
            ("iQget_mru_window" variable (:constant-flag t) nil [92204 92220])
            ("iQgif" variable (:constant-flag t) nil [92270 92275])
            ("iQglib" variable (:constant-flag t) nil [92314 92320])
            ("iQglyphless_char" variable (:constant-flag t) nil [92360 92376])
            ("iQglyphless_char_display" variable (:constant-flag t) nil [92426 92450])
            ("iQgnutls_anon" variable (:constant-flag t) nil [92508 92521])
            ("iQgnutls_code" variable (:constant-flag t) nil [92568 92581])
            ("iQgnutls_e_again" variable (:constant-flag t) nil [92628 92644])
            ("iQgnutls_e_interrupted" variable (:constant-flag t) nil [92694 92716])
            ("iQgnutls_e_invalid_session" variable (:constant-flag t) nil [92772 92798])
            ("iQgnutls_e_not_ready_for_handshake" variable (:constant-flag t) nil [92858 92892])
            ("iQgnutls_type_cipher" variable (:constant-flag t) nil [92960 92980])
            ("iQgnutls_type_digest_algorithm" variable (:constant-flag t) nil [93034 93064])
            ("iQgnutls_type_mac_algorithm" variable (:constant-flag t) nil [93128 93155])
            ("iQgnutls_x509pki" variable (:constant-flag t) nil [93216 93232])
            ("iQgobject" variable (:constant-flag t) nil [93282 93291])
            ("iQgrave" variable (:constant-flag t) nil [93334 93341])
            ("iQgroup" variable (:constant-flag t) nil [93382 93389])
            ("iQgrow_only" variable (:constant-flag t) nil [93430 93441])
            ("iQgui_set_selection" variable (:constant-flag t) nil [93486 93505])
            ("iQhand" variable (:constant-flag t) nil [93558 93564])
            ("iQhandle" variable (:constant-flag t) nil [93604 93612])
            ("iQhandle_select_window" variable (:constant-flag t) nil [93654 93676])
            ("iQhandle_shift_selection" variable (:constant-flag t) nil [93732 93756])
            ("iQhandle_switch_frame" variable (:constant-flag t) nil [93814 93835])
            ("iQhash_table" variable (:constant-flag t) nil [93890 93902])
            ("iQhash_table_p" variable (:constant-flag t) nil [93948 93962])
            ("iQhash_table_test" variable (:constant-flag t) nil [94010 94027])
            ("iQhbar" variable (:constant-flag t) nil [94078 94084])
            ("iQheader_line" variable (:constant-flag t) nil [94124 94137])
            ("iQheader_line_format" variable (:constant-flag t) nil [94184 94204])
            ("iQheap" variable (:constant-flag t) nil [94258 94264])
            ("iQheight" variable (:constant-flag t) nil [94304 94312])
            ("iQheight_only" variable (:constant-flag t) nil [94354 94367])
            ("iQhelp_echo" variable (:constant-flag t) nil [94414 94425])
            ("iQhelp_form_show" variable (:constant-flag t) nil [94470 94486])
            ("iQheuristic" variable (:constant-flag t) nil [94536 94547])
            ("iQhex_code" variable (:constant-flag t) nil [94592 94602])
            ("iQhistory_length" variable (:constant-flag t) nil [94646 94662])
            ("iQhollow" variable (:constant-flag t) nil [94712 94720])
            ("iQhollow_small" variable (:constant-flag t) nil [94762 94776])
            ("iQhorizontal" variable (:constant-flag t) nil [94824 94836])
            ("iQhorizontal_handle" variable (:constant-flag t) nil [94882 94901])
            ("iQhorizontal_scroll_bar" variable (:constant-flag t) nil [94954 94977])
            ("iQhorizontal_scroll_bars" variable (:constant-flag t) nil [95034 95058])
            ("iQhw" variable (:constant-flag t) nil [95116 95120])
            ("iQhyper" variable (:constant-flag t) nil [95158 95165])
            ("iQicon" variable (:constant-flag t) nil [95206 95212])
            ("iQicon_left" variable (:constant-flag t) nil [95252 95263])
            ("iQicon_name" variable (:constant-flag t) nil [95308 95319])
            ("iQicon_top" variable (:constant-flag t) nil [95364 95374])
            ("iQicon_type" variable (:constant-flag t) nil [95418 95429])
            ("iQiconify_frame" variable (:constant-flag t) nil [95474 95489])
            ("iQiconify_top_level" variable (:constant-flag t) nil [95538 95557])
            ("iQidentity" variable (:constant-flag t) nil [95610 95620])
            ("iQif" variable (:constant-flag t) nil [95664 95668])
            ("iQignored" variable (:constant-flag t) nil [95706 95715])
            ("iQimage" variable (:constant-flag t) nil [95758 95765])
            ("iQimagemagick" variable (:constant-flag t) nil [95806 95819])
            ("iQinhibit_changing_match_data" variable (:constant-flag t) nil [95866 95895])
            ("iQinhibit_debugger" variable (:constant-flag t) nil [95958 95976])
            ("iQinhibit_double_buffering" variable (:constant-flag t) nil [96028 96054])
            ("iQinhibit_eval_during_redisplay" variable (:constant-flag t) nil [96114 96145])
            ("iQinhibit_file_name_operation" variable (:constant-flag t) nil [96210 96239])
            ("iQinhibit_free_realized_faces" variable (:constant-flag t) nil [96302 96331])
            ("iQinhibit_menubar_update" variable (:constant-flag t) nil [96394 96418])
            ("iQinhibit_modification_hooks" variable (:constant-flag t) nil [96476 96504])
            ("iQinhibit_point_motion_hooks" variable (:constant-flag t) nil [96566 96594])
            ("iQinhibit_quit" variable (:constant-flag t) nil [96656 96670])
            ("iQinhibit_read_only" variable (:constant-flag t) nil [96718 96737])
            ("iQinhibit_redisplay" variable (:constant-flag t) nil [96790 96809])
            ("iQinner_edges" variable (:constant-flag t) nil [96862 96875])
            ("iQinput_method_exit_on_first_char" variable (:constant-flag t) nil [96922 96955])
            ("iQinput_method_use_echo_area" variable (:constant-flag t) nil [97022 97050])
            ("iQinsert_behind_hooks" variable (:constant-flag t) nil [97112 97133])
            ("iQinsert_file_contents" variable (:constant-flag t) nil [97188 97210])
            ("iQinsert_in_front_hooks" variable (:constant-flag t) nil [97266 97289])
            ("iQinsufficient_source" variable (:constant-flag t) nil [97346 97367])
            ("iQintangible" variable (:constant-flag t) nil [97422 97434])
            ("iQinteger" variable (:constant-flag t) nil [97480 97489])
            ("iQinteger_or_marker_p" variable (:constant-flag t) nil [97532 97553])
            ("iQintegerp" variable (:constant-flag t) nil [97608 97618])
            ("iQinteractive" variable (:constant-flag t) nil [97662 97675])
            ("iQinteractive_form" variable (:constant-flag t) nil [97722 97740])
            ("iQinternal__syntax_propertize" variable (:constant-flag t) nil [97792 97821])
            ("iQinternal_auto_fill" variable (:constant-flag t) nil [97884 97904])
            ("iQinternal_border" variable (:constant-flag t) nil [97958 97975])
            ("iQinternal_border_width" variable (:constant-flag t) nil [98026 98049])
            ("iQinternal_default_interrupt_process" variable (:constant-flag t) nil [98106 98142])
            ("iQinternal_default_process_filter" variable (:constant-flag t) nil [98212 98245])
            ("iQinternal_default_process_sentinel" variable (:constant-flag t) nil [98312 98347])
            ("iQinternal_echo_keystrokes_prefix" variable (:constant-flag t) nil [98416 98449])
            ("iQinternal_interpreter_environment" variable (:constant-flag t) nil [98516 98550])
            ("iQinterrupt_process_functions" variable (:constant-flag t) nil [98618 98647])
            ("iQinterrupted" variable (:constant-flag t) nil [98710 98723])
            ("iQintervals" variable (:constant-flag t) nil [98770 98781])
            ("iQinvalid_arity" variable (:constant-flag t) nil [98826 98841])
            ("iQinvalid_function" variable (:constant-flag t) nil [98890 98908])
            ("iQinvalid_read_syntax" variable (:constant-flag t) nil [98960 98981])
            ("iQinvalid_regexp" variable (:constant-flag t) nil [99036 99052])
            ("iQinvalid_source" variable (:constant-flag t) nil [99102 99118])
            ("iQinvisible" variable (:constant-flag t) nil [99168 99179])
            ("iQipv4" variable (:constant-flag t) nil [99224 99230])
            ("iQipv6" variable (:constant-flag t) nil [99270 99276])
            ("iQisdir" variable (:constant-flag t) nil [99316 99323])
            ("iQiso10646_1" variable (:constant-flag t) nil [99364 99376])
            ("iQiso8859_1" variable (:constant-flag t) nil [99422 99433])
            ("iQiso_2022" variable (:constant-flag t) nil [99478 99488])
            ("iQiso_8859_1" variable (:constant-flag t) nil [99532 99544])
            ("iQitalic" variable (:constant-flag t) nil [99590 99598])
            ("iQiv_auto" variable (:constant-flag t) nil [99640 99649])
            ("iQja" variable (:constant-flag t) nil [99692 99696])
            ("iQjpeg" variable (:constant-flag t) nil [99734 99740])
            ("iQjson_end_of_file" variable (:constant-flag t) nil [99780 99798])
            ("iQjson_error" variable (:constant-flag t) nil [99850 99862])
            ("iQjson_object_too_deep" variable (:constant-flag t) nil [99908 99930])
            ("iQjson_out_of_memory" variable (:constant-flag t) nil [99986 100006])
            ("iQjson_parse_error" variable (:constant-flag t) nil [100060 100078])
            ("iQjson_parse_string" variable (:constant-flag t) nil [100130 100149])
            ("iQjson_serialize" variable (:constant-flag t) nil [100202 100218])
            ("iQjson_trailing_content" variable (:constant-flag t) nil [100268 100291])
            ("iQjson_value_p" variable (:constant-flag t) nil [100348 100362])
            ("iQkbd_macro_termination_hook" variable (:constant-flag t) nil [100410 100438])
            ("iQkeep_ratio" variable (:constant-flag t) nil [100500 100512])
            ("iQkey" variable (:constant-flag t) nil [100558 100563])
            ("iQkey_and_value" variable (:constant-flag t) nil [100602 100617])
            ("iQkey_or_value" variable (:constant-flag t) nil [100666 100680])
            ("iQkeymap" variable (:constant-flag t) nil [100728 100736])
            ("iQkeymap_canonicalize" variable (:constant-flag t) nil [100778 100799])
            ("iQkeymapp" variable (:constant-flag t) nil [100854 100863])
            ("iQkill_buffer_hook" variable (:constant-flag t) nil [100906 100924])
            ("iQkill_buffer_query_functions" variable (:constant-flag t) nil [100976 101005])
            ("iQkill_emacs" variable (:constant-flag t) nil [101068 101080])
            ("iQkill_emacs_hook" variable (:constant-flag t) nil [101126 101143])
            ("iQkill_forward_chars" variable (:constant-flag t) nil [101194 101214])
            ("iQko" variable (:constant-flag t) nil [101268 101272])
            ("iQlambda" variable (:constant-flag t) nil [101310 101318])
            ("iQlandscape" variable (:constant-flag t) nil [101360 101371])
            ("iQlanguage_change" variable (:constant-flag t) nil [101416 101433])
            ("iQlaplace" variable (:constant-flag t) nil [101484 101493])
            ("iQlast_arrow_position" variable (:constant-flag t) nil [101536 101557])
            ("iQlast_arrow_string" variable (:constant-flag t) nil [101612 101631])
            ("iQlast_nonmenu_event" variable (:constant-flag t) nil [101684 101704])
            ("iQlatin" variable (:constant-flag t) nil [101758 101765])
            ("iQlatin_1" variable (:constant-flag t) nil [101806 101815])
            ("iQleft" variable (:constant-flag t) nil [101858 101864])
            ("iQleft_edge" variable (:constant-flag t) nil [101904 101915])
            ("iQleft_fringe" variable (:constant-flag t) nil [101960 101973])
            ("iQleft_margin" variable (:constant-flag t) nil [102020 102033])
            ("iQleft_only" variable (:constant-flag t) nil [102080 102091])
            ("iQleft_to_right" variable (:constant-flag t) nil [102136 102151])
            ("iQleftmost" variable (:constant-flag t) nil [102200 102210])
            ("iQlet" variable (:constant-flag t) nil [102254 102259])
            ("iQletx" variable (:constant-flag t) nil [102298 102304])
            ("iQlexical_binding" variable (:constant-flag t) nil [102344 102361])
            ("iQlibgif_version" variable (:constant-flag t) nil [102412 102428])
            ("iQlibgnutls_version" variable (:constant-flag t) nil [102478 102497])
            ("iQlibjpeg_version" variable (:constant-flag t) nil [102550 102567])
            ("iQlibpng_version" variable (:constant-flag t) nil [102618 102634])
            ("iQlight" variable (:constant-flag t) nil [102684 102691])
            ("iQline" variable (:constant-flag t) nil [102732 102738])
            ("iQline_height" variable (:constant-flag t) nil [102778 102791])
            ("iQline_number" variable (:constant-flag t) nil [102838 102851])
            ("iQline_number_current_line" variable (:constant-flag t) nil [102898 102924])
            ("iQline_prefix" variable (:constant-flag t) nil [102984 102997])
            ("iQline_spacing" variable (:constant-flag t) nil [103044 103058])
            ("iQlist" variable (:constant-flag t) nil [103106 103112])
            ("iQlisten" variable (:constant-flag t) nil [103152 103160])
            ("iQlistp" variable (:constant-flag t) nil [103202 103209])
            ("iQlittle" variable (:constant-flag t) nil [103250 103258])
            ("iQload" variable (:constant-flag t) nil [103300 103306])
            ("iQload_file_name" variable (:constant-flag t) nil [103346 103362])
            ("iQload_force_doc_strings" variable (:constant-flag t) nil [103412 103436])
            ("iQload_in_progress" variable (:constant-flag t) nil [103494 103512])
            ("iQlocal" variable (:constant-flag t) nil [103564 103571])
            ("iQlocal_map" variable (:constant-flag t) nil [103612 103623])
            ("iQlread_unescaped_character_literals" variable (:constant-flag t) nil [103668 103704])
            ("iQlss" variable (:constant-flag t) nil [103774 103779])
            ("iQm" variable (:constant-flag t) nil [103818 103821])
            ("iQmac" variable (:constant-flag t) nil [103858 103863])
            ("iQmacro" variable (:constant-flag t) nil [103902 103909])
            ("iQmajflt" variable (:constant-flag t) nil [103950 103958])
            ("iQmake_directory" variable (:constant-flag t) nil [104000 104016])
            ("iQmake_directory_internal" variable (:constant-flag t) nil [104066 104091])
            ("iQmake_frame_visible" variable (:constant-flag t) nil [104150 104170])
            ("iQmake_invisible" variable (:constant-flag t) nil [104224 104240])
            ("iQmake_symbolic_link" variable (:constant-flag t) nil [104290 104310])
            ("iQmakunbound" variable (:constant-flag t) nil [104364 104376])
            ("iQmany" variable (:constant-flag t) nil [104422 104428])
            ("iQmargin" variable (:constant-flag t) nil [104468 104476])
            ("iQmark_for_redisplay" variable (:constant-flag t) nil [104518 104538])
            ("iQmark_inactive" variable (:constant-flag t) nil [104592 104607])
            ("iQmarker" variable (:constant-flag t) nil [104656 104664])
            ("iQmarkerp" variable (:constant-flag t) nil [104706 104715])
            ("iQmaximized" variable (:constant-flag t) nil [104758 104769])
            ("iQmd5" variable (:constant-flag t) nil [104814 104819])
            ("iQmenu" variable (:constant-flag t) nil [104858 104864])
            ("iQmenu_bar" variable (:constant-flag t) nil [104904 104914])
            ("iQmenu_bar_external" variable (:constant-flag t) nil [104958 104977])
            ("iQmenu_bar_lines" variable (:constant-flag t) nil [105030 105046])
            ("iQmenu_bar_size" variable (:constant-flag t) nil [105096 105111])
            ("iQmenu_bar_update_hook" variable (:constant-flag t) nil [105160 105182])
            ("iQmenu_enable" variable (:constant-flag t) nil [105238 105251])
            ("iQmenu_item" variable (:constant-flag t) nil [105298 105309])
            ("iQmeta" variable (:constant-flag t) nil [105354 105360])
            ("iQmetadata" variable (:constant-flag t) nil [105400 105410])
            ("iQmin_height" variable (:constant-flag t) nil [105454 105466])
            ("iQmin_width" variable (:constant-flag t) nil [105512 105523])
            ("iQminflt" variable (:constant-flag t) nil [105568 105576])
            ("iQminibuffer" variable (:constant-flag t) nil [105618 105630])
            ("iQminibuffer_completion_table" variable (:constant-flag t) nil [105676 105705])
            ("iQminibuffer_default" variable (:constant-flag t) nil [105768 105788])
            ("iQminibuffer_exit" variable (:constant-flag t) nil [105842 105859])
            ("iQminibuffer_exit_hook" variable (:constant-flag t) nil [105910 105932])
            ("iQminibuffer_history" variable (:constant-flag t) nil [105988 106008])
            ("iQminibuffer_prompt" variable (:constant-flag t) nil [106062 106081])
            ("iQminibuffer_setup_hook" variable (:constant-flag t) nil [106134 106157])
            ("iQminus" variable (:constant-flag t) nil [106214 106221])
            ("iQmissing_module_init_function" variable (:constant-flag t) nil [106262 106292])
            ("iQmm_size" variable (:constant-flag t) nil [106356 106365])
            ("iQmode_class" variable (:constant-flag t) nil [106408 106420])
            ("iQmode_line" variable (:constant-flag t) nil [106466 106477])
            ("iQmode_line_default_help_echo" variable (:constant-flag t) nil [106522 106551])
            ("iQmode_line_format" variable (:constant-flag t) nil [106614 106632])
            ("iQmode_line_inactive" variable (:constant-flag t) nil [106684 106704])
            ("iQmodeline" variable (:constant-flag t) nil [106758 106768])
            ("iQmodification_hooks" variable (:constant-flag t) nil [106812 106832])
            ("iQmodifier_cache" variable (:constant-flag t) nil [106886 106902])
            ("iQmodifier_value" variable (:constant-flag t) nil [106952 106968])
            ("iQmodify" variable (:constant-flag t) nil [107018 107026])
            ("iQmodule_environments" variable (:constant-flag t) nil [107068 107089])
            ("iQmodule_function" variable (:constant-flag t) nil [107144 107161])
            ("iQmodule_function_p" variable (:constant-flag t) nil [107212 107231])
            ("iQmodule_init_failed" variable (:constant-flag t) nil [107284 107304])
            ("iQmodule_load_failed" variable (:constant-flag t) nil [107358 107378])
            ("iQmodule_not_gpl_compatible" variable (:constant-flag t) nil [107432 107459])
            ("iQmodule_open_failed" variable (:constant-flag t) nil [107520 107540])
            ("iQmodule_refs_hash" variable (:constant-flag t) nil [107594 107612])
            ("iQmodule_runtimes" variable (:constant-flag t) nil [107664 107681])
            ("iQmono" variable (:constant-flag t) nil [107732 107738])
            ("iQmonospace" variable (:constant-flag t) nil [107778 107789])
            ("iQmonospace_font_name" variable (:constant-flag t) nil [107834 107855])
            ("iQmonths" variable (:constant-flag t) nil [107910 107918])
            ("iQmouse" variable (:constant-flag t) nil [107960 107967])
            ("iQmouse_click" variable (:constant-flag t) nil [108008 108021])
            ("iQmouse_color" variable (:constant-flag t) nil [108068 108081])
            ("iQmouse_face" variable (:constant-flag t) nil [108128 108140])
            ("iQmouse_fixup_help_message" variable (:constant-flag t) nil [108186 108212])
            ("iQmouse_leave_buffer_hook" variable (:constant-flag t) nil [108272 108297])
            ("iQmouse_movement" variable (:constant-flag t) nil [108356 108372])
            ("iQmouse_wheel_frame" variable (:constant-flag t) nil [108422 108441])
            ("iQmove" variable (:constant-flag t) nil [108494 108500])
            ("iQmove_file_to_trash" variable (:constant-flag t) nil [108540 108560])
            ("iQmove_frame" variable (:constant-flag t) nil [108614 108626])
            ("iQmove_self" variable (:constant-flag t) nil [108672 108683])
            ("iQmoved_from" variable (:constant-flag t) nil [108728 108740])
            ("iQmoved_to" variable (:constant-flag t) nil [108786 108796])
            ("iQmutex" variable (:constant-flag t) nil [108840 108847])
            ("iQmutexp" variable (:constant-flag t) nil [108888 108896])
            ("iQname" variable (:constant-flag t) nil [108938 108944])
            ("iQnative_edges" variable (:constant-flag t) nil [108984 108998])
            ("iQnatnump" variable (:constant-flag t) nil [109046 109055])
            ("iQnetwork" variable (:constant-flag t) nil [109098 109107])
            ("iQnice" variable (:constant-flag t) nil [109150 109156])
            ("iQno_accept_focus" variable (:constant-flag t) nil [109196 109213])
            ("iQno_catch" variable (:constant-flag t) nil [109264 109274])
            ("iQno_conversion" variable (:constant-flag t) nil [109318 109333])
            ("iQno_focus_on_map" variable (:constant-flag t) nil [109382 109399])
            ("iQno_other_frame" variable (:constant-flag t) nil [109450 109466])
            ("iQno_special_glyphs" variable (:constant-flag t) nil [109516 109535])
            ("iQnobreak_hyphen" variable (:constant-flag t) nil [109588 109604])
            ("iQnobreak_space" variable (:constant-flag t) nil [109654 109669])
            ("iQnoelisp" variable (:constant-flag t) nil [109718 109727])
            ("iQnon_ascii" variable (:constant-flag t) nil [109770 109781])
            ("iQnone" variable (:constant-flag t) nil [109826 109832])
            ("iQnormal" variable (:constant-flag t) nil [109872 109880])
            ("iQns" variable (:constant-flag t) nil [109922 109926])
            ("iQns_appearance" variable (:constant-flag t) nil [109964 109979])
            ("iQns_parse_geometry" variable (:constant-flag t) nil [110028 110047])
            ("iQns_transparent_titlebar" variable (:constant-flag t) nil [110100 110125])
            ("iQnsm_verify_connection" variable (:constant-flag t) nil [110184 110207])
            ("iQnumber_or_marker_p" variable (:constant-flag t) nil [110264 110284])
            ("iQnumberp" variable (:constant-flag t) nil [110338 110347])
            ("iQobject" variable (:constant-flag t) nil [110390 110398])
            ("iQoblique" variable (:constant-flag t) nil [110440 110449])
            ("iQodd" variable (:constant-flag t) nil [110492 110497])
            ("iQonly" variable (:constant-flag t) nil [110536 110542])
            ("iQonlydir" variable (:constant-flag t) nil [110582 110591])
            ("iQopen" variable (:constant-flag t) nil [110634 110640])
            ("iQopen_network_stream" variable (:constant-flag t) nil [110680 110701])
            ("iQopentype" variable (:constant-flag t) nil [110756 110766])
            ("iQoperations" variable (:constant-flag t) nil [110810 110822])
            ("iQorientation" variable (:constant-flag t) nil [110868 110881])
            ("iQouter_border_width" variable (:constant-flag t) nil [110928 110948])
            ("iQouter_edges" variable (:constant-flag t) nil [111002 111015])
            ("iQouter_position" variable (:constant-flag t) nil [111062 111078])
            ("iQouter_size" variable (:constant-flag t) nil [111128 111140])
            ("iQouter_window_id" variable (:constant-flag t) nil [111186 111203])
            ("iQoverflow_error" variable (:constant-flag t) nil [111254 111270])
            ("iQoverlay" variable (:constant-flag t) nil [111320 111329])
            ("iQoverlay_arrow" variable (:constant-flag t) nil [111372 111387])
            ("iQoverlay_arrow_bitmap" variable (:constant-flag t) nil [111436 111458])
            ("iQoverlay_arrow_string" variable (:constant-flag t) nil [111514 111536])
            ("iQoverlayp" variable (:constant-flag t) nil [111592 111602])
            ("iQoverride_redirect" variable (:constant-flag t) nil [111646 111665])
            ("iQoverriding_local_map" variable (:constant-flag t) nil [111718 111740])
            ("iQoverriding_plist_environment" variable (:constant-flag t) nil [111796 111826])
            ("iQoverriding_terminal_local_map" variable (:constant-flag t) nil [111890 111921])
            ("iQoverwrite_mode" variable (:constant-flag t) nil [111986 112002])
            ("iQoverwrite_mode_binary" variable (:constant-flag t) nil [112052 112075])
            ("iQp" variable (:constant-flag t) nil [112132 112135])
            ("iQpaper" variable (:constant-flag t) nil [112172 112179])
            ("iQparent_frame" variable (:constant-flag t) nil [112220 112234])
            ("iQparent_id" variable (:constant-flag t) nil [112282 112293])
            ("iQpbm" variable (:constant-flag t) nil [112338 112343])
            ("iQpc" variable (:constant-flag t) nil [112382 112386])
            ("iQpcpu" variable (:constant-flag t) nil [112424 112430])
            ("iQpdf" variable (:constant-flag t) nil [112470 112475])
            ("iQpermanent_local" variable (:constant-flag t) nil [112514 112531])
            ("iQpermanent_local_hook" variable (:constant-flag t) nil [112582 112604])
            ("iQpgrp" variable (:constant-flag t) nil [112660 112666])
            ("iQpipe" variable (:constant-flag t) nil [112706 112712])
            ("iQplay_sound_functions" variable (:constant-flag t) nil [112752 112774])
            ("iQplist" variable (:constant-flag t) nil [112830 112837])
            ("iQplistp" variable (:constant-flag t) nil [112878 112886])
            ("iQplus" variable (:constant-flag t) nil [112928 112934])
            ("iQpmem" variable (:constant-flag t) nil [112974 112980])
            ("iQpng" variable (:constant-flag t) nil [113020 113025])
            ("iQpoint_entered" variable (:constant-flag t) nil [113064 113079])
            ("iQpoint_left" variable (:constant-flag t) nil [113128 113140])
            ("iQpointer" variable (:constant-flag t) nil [113186 113195])
            ("iQpolling_period" variable (:constant-flag t) nil [113238 113254])
            ("iQpoly" variable (:constant-flag t) nil [113304 113310])
            ("iQportrait" variable (:constant-flag t) nil [113350 113360])
            ("iQposition" variable (:constant-flag t) nil [113404 113414])
            ("iQpost_command_hook" variable (:constant-flag t) nil [113458 113477])
            ("iQpost_gc_hook" variable (:constant-flag t) nil [113530 113544])
            ("iQpost_self_insert_hook" variable (:constant-flag t) nil [113592 113615])
            ("iQpostscript" variable (:constant-flag t) nil [113672 113684])
            ("iQppid" variable (:constant-flag t) nil [113730 113736])
            ("iQpre_command_hook" variable (:constant-flag t) nil [113776 113794])
            ("iQpressed_button" variable (:constant-flag t) nil [113846 113862])
            ("iQpri" variable (:constant-flag t) nil [113912 113917])
            ("iQprint_escape_multibyte" variable (:constant-flag t) nil [113956 113980])
            ("iQprint_escape_nonascii" variable (:constant-flag t) nil [114038 114061])
            ("iQpriority" variable (:constant-flag t) nil [114118 114128])
            ("iQprocess" variable (:constant-flag t) nil [114172 114181])
            ("iQprocessp" variable (:constant-flag t) nil [114224 114234])
            ("iQprofiler_backtrace_equal" variable (:constant-flag t) nil [114278 114304])
            ("iQprogn" variable (:constant-flag t) nil [114364 114371])
            ("iQprotected_field" variable (:constant-flag t) nil [114412 114429])
            ("iQprovide" variable (:constant-flag t) nil [114480 114489])
            ("iQpty" variable (:constant-flag t) nil [114532 114537])
            ("iQpure" variable (:constant-flag t) nil [114576 114582])
            ("iQpurecopy" variable (:constant-flag t) nil [114622 114632])
            ("iQq_overflow" variable (:constant-flag t) nil [114676 114688])
            ("iQquit" variable (:constant-flag t) nil [114734 114740])
            ("iQquote" variable (:constant-flag t) nil [114780 114787])
            ("iQraise" variable (:constant-flag t) nil [114828 114835])
            ("iQrange" variable (:constant-flag t) nil [114876 114883])
            ("iQrange_error" variable (:constant-flag t) nil [114924 114937])
            ("iQratio" variable (:constant-flag t) nil [114984 114991])
            ("iQraw_text" variable (:constant-flag t) nil [115032 115042])
            ("iQread" variable (:constant-flag t) nil [115086 115092])
            ("iQread_char" variable (:constant-flag t) nil [115132 115143])
            ("iQread_number" variable (:constant-flag t) nil [115188 115201])
            ("iQread_only" variable (:constant-flag t) nil [115248 115259])
            ("iQreal" variable (:constant-flag t) nil [115304 115310])
            ("iQrear_nonsticky" variable (:constant-flag t) nil [115350 115366])
            ("iQrecompute_lucid_menubar" variable (:constant-flag t) nil [115416 115441])
            ("iQrecord" variable (:constant-flag t) nil [115500 115508])
            ("iQrecord_window_buffer" variable (:constant-flag t) nil [115550 115572])
            ("iQrecordp" variable (:constant-flag t) nil [115628 115637])
            ("iQrect" variable (:constant-flag t) nil [115680 115686])
            ("iQredisplay_dont_pause" variable (:constant-flag t) nil [115726 115748])
            ("iQredisplay_end_trigger_functions" variable (:constant-flag t) nil [115804 115837])
            ("iQredisplay_internal_xC_functionx" variable (:constant-flag t) nil [115904 115937])
            ("iQregion_extract_function" variable (:constant-flag t) nil [116004 116029])
            ("iQrehash_size" variable (:constant-flag t) nil [116088 116101])
            ("iQrehash_threshold" variable (:constant-flag t) nil [116148 116166])
            ("iQrelative" variable (:constant-flag t) nil [116218 116228])
            ("iQreleased_button" variable (:constant-flag t) nil [116272 116289])
            ("iQremap" variable (:constant-flag t) nil [116340 116347])
            ("iQrename_file" variable (:constant-flag t) nil [116388 116401])
            ("iQreplace_buffer_in_windows" variable (:constant-flag t) nil [116448 116475])
            ("iQrequire" variable (:constant-flag t) nil [116536 116545])
            ("iQreverse_landscape" variable (:constant-flag t) nil [116588 116607])
            ("iQreverse_portrait" variable (:constant-flag t) nil [116660 116678])
            ("iQright" variable (:constant-flag t) nil [116730 116737])
            ("iQright_divider" variable (:constant-flag t) nil [116778 116793])
            ("iQright_divider_width" variable (:constant-flag t) nil [116842 116863])
            ("iQright_edge" variable (:constant-flag t) nil [116918 116930])
            ("iQright_fringe" variable (:constant-flag t) nil [116976 116990])
            ("iQright_margin" variable (:constant-flag t) nil [117038 117052])
            ("iQright_to_left" variable (:constant-flag t) nil [117100 117115])
            ("iQrightmost" variable (:constant-flag t) nil [117164 117175])
            ("iQrisky_local_variable" variable (:constant-flag t) nil [117220 117242])
            ("iQrss" variable (:constant-flag t) nil [117298 117303])
            ("iQrun" variable (:constant-flag t) nil [117342 117347])
            ("iQrun_hook_with_args" variable (:constant-flag t) nil [117386 117406])
            ("iQsafe" variable (:constant-flag t) nil [117460 117466])
            ("iQsans" variable (:constant-flag t) nil [117506 117512])
            ("iQsans__serif" variable (:constant-flag t) nil [117552 117565])
            ("iQsans_serif" variable (:constant-flag t) nil [117612 117624])
            ("iQsave_excursion" variable (:constant-flag t) nil [117670 117686])
            ("iQsave_session" variable (:constant-flag t) nil [117736 117750])
            ("iQscan_error" variable (:constant-flag t) nil [117798 117810])
            ("iQscreen_gamma" variable (:constant-flag t) nil [117856 117870])
            ("iQscroll_bar" variable (:constant-flag t) nil [117918 117930])
            ("iQscroll_bar_background" variable (:constant-flag t) nil [117976 117999])
            ("iQscroll_bar_foreground" variable (:constant-flag t) nil [118056 118079])
            ("iQscroll_bar_height" variable (:constant-flag t) nil [118136 118155])
            ("iQscroll_bar_movement" variable (:constant-flag t) nil [118208 118229])
            ("iQscroll_bar_width" variable (:constant-flag t) nil [118284 118302])
            ("iQscroll_command" variable (:constant-flag t) nil [118354 118370])
            ("iQscroll_down" variable (:constant-flag t) nil [118420 118433])
            ("iQscroll_up" variable (:constant-flag t) nil [118480 118491])
            ("iQsearch_failed" variable (:constant-flag t) nil [118536 118551])
            ("iQselect_window" variable (:constant-flag t) nil [118600 118615])
            ("iQselection_request" variable (:constant-flag t) nil [118664 118683])
            ("iQsemi_bold" variable (:constant-flag t) nil [118736 118747])
            ("iQsemi_light" variable (:constant-flag t) nil [118792 118804])
            ("iQseqpacket" variable (:constant-flag t) nil [118850 118861])
            ("iQsequencep" variable (:constant-flag t) nil [118906 118917])
            ("iQserial" variable (:constant-flag t) nil [118962 118970])
            ("iQsess" variable (:constant-flag t) nil [119012 119018])
            ("iQset" variable (:constant-flag t) nil [119058 119063])
            ("iQset_default" variable (:constant-flag t) nil [119102 119115])
            ("iQset_file_acl" variable (:constant-flag t) nil [119162 119176])
            ("iQset_file_modes" variable (:constant-flag t) nil [119224 119240])
            ("iQset_file_selinux_context" variable (:constant-flag t) nil [119290 119316])
            ("iQset_file_times" variable (:constant-flag t) nil [119376 119392])
            ("iQset_frame_size" variable (:constant-flag t) nil [119442 119458])
            ("iQset_visited_file_modtime" variable (:constant-flag t) nil [119509 119535])
            ("iQset_window_configuration" variable (:constant-flag t) nil [119596 119622])
            ("iQsetq" variable (:constant-flag t) nil [119683 119689])
            ("iQsetting_constant" variable (:constant-flag t) nil [119730 119748])
            ("iQsha1" variable (:constant-flag t) nil [119801 119807])
            ("iQsha224" variable (:constant-flag t) nil [119848 119856])
            ("iQsha256" variable (:constant-flag t) nil [119899 119907])
            ("iQsha384" variable (:constant-flag t) nil [119950 119958])
            ("iQsha512" variable (:constant-flag t) nil [120001 120009])
            ("iQshift_jis" variable (:constant-flag t) nil [120052 120063])
            ("iQside_effect_free" variable (:constant-flag t) nil [120109 120127])
            ("iQsignal" variable (:constant-flag t) nil [120180 120188])
            ("iQsingularity_error" variable (:constant-flag t) nil [120231 120250])
            ("iQsize" variable (:constant-flag t) nil [120304 120310])
            ("iQskip_taskbar" variable (:constant-flag t) nil [120351 120365])
            ("iQslice" variable (:constant-flag t) nil [120414 120421])
            ("iQsound" variable (:constant-flag t) nil [120463 120470])
            ("iQsource" variable (:constant-flag t) nil [120512 120520])
            ("iQspace" variable (:constant-flag t) nil [120563 120570])
            ("iQspace_width" variable (:constant-flag t) nil [120612 120625])
            ("iQspecial_lowercase" variable (:constant-flag t) nil [120673 120692])
            ("iQspecial_titlecase" variable (:constant-flag t) nil [120746 120765])
            ("iQspecial_uppercase" variable (:constant-flag t) nil [120819 120838])
            ("iQstandard_input" variable (:constant-flag t) nil [120892 120908])
            ("iQstandard_output" variable (:constant-flag t) nil [120959 120976])
            ("iQstart" variable (:constant-flag t) nil [121028 121035])
            ("iQstart_process" variable (:constant-flag t) nil [121077 121092])
            ("iQstate" variable (:constant-flag t) nil [121142 121149])
            ("iQstderr" variable (:constant-flag t) nil [121191 121199])
            ("iQstdin" variable (:constant-flag t) nil [121242 121249])
            ("iQstdout" variable (:constant-flag t) nil [121291 121299])
            ("iQsticky" variable (:constant-flag t) nil [121342 121350])
            ("iQstime" variable (:constant-flag t) nil [121393 121400])
            ("iQstop" variable (:constant-flag t) nil [121442 121448])
            ("iQstraight" variable (:constant-flag t) nil [121489 121499])
            ("iQstring" variable (:constant-flag t) nil [121544 121552])
            ("iQstring_bytes" variable (:constant-flag t) nil [121595 121609])
            ("iQstring_lessp" variable (:constant-flag t) nil [121658 121672])
            ("iQstring_without_embedded_nulls_p" variable (:constant-flag t) nil [121721 121754])
            ("iQstringp" variable (:constant-flag t) nil [121822 121831])
            ("iQstrings" variable (:constant-flag t) nil [121875 121884])
            ("iQsubfeatures" variable (:constant-flag t) nil [121928 121941])
            ("iQsubr" variable (:constant-flag t) nil [121989 121995])
            ("iQsubrp" variable (:constant-flag t) nil [122036 122043])
            ("iQsubstitute_env_in_file_name" variable (:constant-flag t) nil [122085 122114])
            ("iQsubstitute_in_file_name" variable (:constant-flag t) nil [122178 122203])
            ("iQsuper" variable (:constant-flag t) nil [122263 122270])
            ("iQsvg" variable (:constant-flag t) nil [122312 122317])
            ("iQsw" variable (:constant-flag t) nil [122357 122361])
            ("iQswitch_frame" variable (:constant-flag t) nil [122400 122414])
            ("iQsymbol" variable (:constant-flag t) nil [122463 122471])
            ("iQsymbolp" variable (:constant-flag t) nil [122514 122523])
            ("iQsymbols" variable (:constant-flag t) nil [122567 122576])
            ("iQsyntax_ppss" variable (:constant-flag t) nil [122620 122633])
            ("iQsyntax_table" variable (:constant-flag t) nil [122681 122695])
            ("iQsyntax_table_p" variable (:constant-flag t) nil [122744 122760])
            ("iQt" variable (:constant-flag t) nil [122811 122814])
            ("iQtarget_idx" variable (:constant-flag t) nil [122852 122864])
            ("iQtb_size_cb" variable (:constant-flag t) nil [122911 122923])
            ("iQtemp_buffer_setup_hook" variable (:constant-flag t) nil [122970 122994])
            ("iQtemp_buffer_show_hook" variable (:constant-flag t) nil [123053 123076])
            ("iQterminal" variable (:constant-flag t) nil [123134 123144])
            ("iQterminal_frame" variable (:constant-flag t) nil [123189 123205])
            ("iQterminal_live_p" variable (:constant-flag t) nil [123256 123273])
            ("iQtest" variable (:constant-flag t) nil [123325 123331])
            ("iQtext" variable (:constant-flag t) nil [123372 123378])
            ("iQtext_image_horiz" variable (:constant-flag t) nil [123419 123437])
            ("iQtext_pixels" variable (:constant-flag t) nil [123490 123503])
            ("iQtext_read_only" variable (:constant-flag t) nil [123551 123567])
            ("iQthcount" variable (:constant-flag t) nil [123618 123627])
            ("iQthin_space" variable (:constant-flag t) nil [123671 123683])
            ("iQthread" variable (:constant-flag t) nil [123730 123738])
            ("iQthreadp" variable (:constant-flag t) nil [123781 123790])
            ("iQtiff" variable (:constant-flag t) nil [123834 123840])
            ("iQtime" variable (:constant-flag t) nil [123881 123887])
            ("iQtimer_event_handler" variable (:constant-flag t) nil [123928 123949])
            ("iQtitle" variable (:constant-flag t) nil [124005 124012])
            ("iQtitle_bar_size" variable (:constant-flag t) nil [124054 124070])
            ("iQtitlecase" variable (:constant-flag t) nil [124121 124132])
            ("iQtool_bar" variable (:constant-flag t) nil [124178 124188])
            ("iQtool_bar_external" variable (:constant-flag t) nil [124233 124252])
            ("iQtool_bar_lines" variable (:constant-flag t) nil [124306 124322])
            ("iQtool_bar_position" variable (:constant-flag t) nil [124373 124392])
            ("iQtool_bar_size" variable (:constant-flag t) nil [124446 124461])
            ("iQtool_bar_style" variable (:constant-flag t) nil [124511 124527])
            ("iQtooltip" variable (:constant-flag t) nil [124578 124587])
            ("iQtop" variable (:constant-flag t) nil [124631 124636])
            ("iQtop_bottom" variable (:constant-flag t) nil [124676 124688])
            ("iQtop_edge" variable (:constant-flag t) nil [124735 124745])
            ("iQtop_left_corner" variable (:constant-flag t) nil [124790 124807])
            ("iQtop_level" variable (:constant-flag t) nil [124859 124870])
            ("iQtop_margin" variable (:constant-flag t) nil [124916 124928])
            ("iQtop_only" variable (:constant-flag t) nil [124975 124985])
            ("iQtop_right_corner" variable (:constant-flag t) nil [125030 125048])
            ("iQtpgid" variable (:constant-flag t) nil [125101 125108])
            ("iQtrailing_whitespace" variable (:constant-flag t) nil [125150 125171])
            ("iQtranslation_table" variable (:constant-flag t) nil [125227 125246])
            ("iQtranslation_table_id" variable (:constant-flag t) nil [125300 125322])
            ("iQtrapping_constant" variable (:constant-flag t) nil [125379 125398])
            ("iQtruncation" variable (:constant-flag t) nil [125452 125464])
            ("iQttname" variable (:constant-flag t) nil [125511 125519])
            ("iQtty" variable (:constant-flag t) nil [125562 125567])
            ("iQtty_color_alist" variable (:constant-flag t) nil [125607 125624])
            ("iQtty_color_by_index" variable (:constant-flag t) nil [125676 125696])
            ("iQtty_color_desc" variable (:constant-flag t) nil [125751 125767])
            ("iQtty_color_mode" variable (:constant-flag t) nil [125818 125834])
            ("iQtty_color_standard_values" variable (:constant-flag t) nil [125885 125912])
            ("iQtty_menu_exit" variable (:constant-flag t) nil [125974 125989])
            ("iQtty_menu_ignore" variable (:constant-flag t) nil [126039 126056])
            ("iQtty_menu_mouse_movement" variable (:constant-flag t) nil [126108 126133])
            ("iQtty_menu_navigation_map" variable (:constant-flag t) nil [126193 126218])
            ("iQtty_menu_next_item" variable (:constant-flag t) nil [126278 126298])
            ("iQtty_menu_next_menu" variable (:constant-flag t) nil [126353 126373])
            ("iQtty_menu_prev_item" variable (:constant-flag t) nil [126428 126448])
            ("iQtty_menu_prev_menu" variable (:constant-flag t) nil [126503 126523])
            ("iQtty_menu_select" variable (:constant-flag t) nil [126578 126595])
            ("iQtty_mode_reset_strings" variable (:constant-flag t) nil [126647 126671])
            ("iQtty_mode_set_strings" variable (:constant-flag t) nil [126730 126752])
            ("iQtty_type" variable (:constant-flag t) nil [126809 126819])
            ("iQultra_bold" variable (:constant-flag t) nil [126864 126876])
            ("iQunbound" variable (:constant-flag t) nil [126923 126932])
            ("iQundecided" variable (:constant-flag t) nil [126976 126987])
            ("iQundecorated" variable (:constant-flag t) nil [127033 127046])
            ("iQundefined" variable (:constant-flag t) nil [127094 127105])
            ("iQundefined_color" variable (:constant-flag t) nil [127151 127168])
            ("iQunderflow_error" variable (:constant-flag t) nil [127220 127237])
            ("iQunderline_minimum_offset" variable (:constant-flag t) nil [127289 127315])
            ("iQundo_auto__add_boundary" variable (:constant-flag t) nil [127376 127401])
            ("iQundo_auto__last_boundary_cause" variable (:constant-flag t) nil [127461 127493])
            ("iQundo_auto__this_command_amalgamating" variable (:constant-flag t) nil [127560 127598])
            ("iQundo_auto__undoable_change" variable (:constant-flag t) nil [127671 127699])
            ("iQundo_auto__undoably_changed_buffers" variable (:constant-flag t) nil [127762 127799])
            ("iQundo_auto_amalgamate" variable (:constant-flag t) nil [127871 127893])
            ("iQunevalled" variable (:constant-flag t) nil [127950 127961])
            ("iQunhandled_file_name_directory" variable (:constant-flag t) nil [128007 128038])
            ("iQunicode" variable (:constant-flag t) nil [128104 128113])
            ("iQunicode_bmp" variable (:constant-flag t) nil [128157 128170])
            ("iQunix" variable (:constant-flag t) nil [128218 128224])
            ("iQunlet" variable (:constant-flag t) nil [128265 128272])
            ("iQunmount" variable (:constant-flag t) nil [128314 128323])
            ("iQunspecified" variable (:constant-flag t) nil [128367 128380])
            ("iQunsplittable" variable (:constant-flag t) nil [128428 128442])
            ("iQup" variable (:constant-flag t) nil [128491 128495])
            ("iQupdate_frame_menubar" variable (:constant-flag t) nil [128534 128556])
            ("iQupdate_frame_tool_bar" variable (:constant-flag t) nil [128613 128636])
            ("iQuser" variable (:constant-flag t) nil [128694 128700])
            ("iQuser_error" variable (:constant-flag t) nil [128741 128753])
            ("iQuser_position" variable (:constant-flag t) nil [128800 128815])
            ("iQuser_ptr" variable (:constant-flag t) nil [128865 128875])
            ("iQuser_ptrp" variable (:constant-flag t) nil [128920 128931])
            ("iQuser_search_failed" variable (:constant-flag t) nil [128977 128997])
            ("iQuser_size" variable (:constant-flag t) nil [129052 129063])
            ("iQutf_16" variable (:constant-flag t) nil [129109 129117])
            ("iQutf_16le" variable (:constant-flag t) nil [129160 129170])
            ("iQutf_8" variable (:constant-flag t) nil [129215 129222])
            ("iQutf_8_emacs" variable (:constant-flag t) nil [129264 129277])
            ("iQutf_8_string_p" variable (:constant-flag t) nil [129325 129341])
            ("iQutf_8_unix" variable (:constant-flag t) nil [129392 129404])
            ("iQutime" variable (:constant-flag t) nil [129451 129458])
            ("iQvalue" variable (:constant-flag t) nil [129500 129507])
            ("iQvariable_documentation" variable (:constant-flag t) nil [129549 129573])
            ("iQvector" variable (:constant-flag t) nil [129632 129640])
            ("iQvector_or_char_table_p" variable (:constant-flag t) nil [129683 129707])
            ("iQvector_slots" variable (:constant-flag t) nil [129766 129780])
            ("iQvectorp" variable (:constant-flag t) nil [129829 129838])
            ("iQvectors" variable (:constant-flag t) nil [129882 129891])
            ("iQvendor_specific_keysyms" variable (:constant-flag t) nil [129935 129960])
            ("iQverify_visited_file_modtime" variable (:constant-flag t) nil [130020 130049])
            ("iQvertical" variable (:constant-flag t) nil [130113 130123])
            ("iQvertical_border" variable (:constant-flag t) nil [130168 130185])
            ("iQvertical_line" variable (:constant-flag t) nil [130237 130252])
            ("iQvertical_scroll_bar" variable (:constant-flag t) nil [130302 130323])
            ("iQvertical_scroll_bars" variable (:constant-flag t) nil [130379 130401])
            ("iQvisibility" variable (:constant-flag t) nil [130458 130470])
            ("iQvisible" variable (:constant-flag t) nil [130517 130526])
            ("iQvisual" variable (:constant-flag t) nil [130570 130578])
            ("iQvoid_function" variable (:constant-flag t) nil [130621 130636])
            ("iQvoid_variable" variable (:constant-flag t) nil [130686 130701])
            ("iQvsize" variable (:constant-flag t) nil [130751 130758])
            ("iQw32" variable (:constant-flag t) nil [130800 130805])
            ("iQwait_for_wm" variable (:constant-flag t) nil [130845 130858])
            ("iQwall" variable (:constant-flag t) nil [130906 130912])
            ("iQwatchers" variable (:constant-flag t) nil [130953 130963])
            ("iQwave" variable (:constant-flag t) nil [131008 131014])
            ("iQweakness" variable (:constant-flag t) nil [131055 131065])
            ("iQwebkit" variable (:constant-flag t) nil [131110 131118])
            ("iQwhen" variable (:constant-flag t) nil [131161 131167])
            ("iQwholenump" variable (:constant-flag t) nil [131208 131219])
            ("iQwidget_type" variable (:constant-flag t) nil [131265 131278])
            ("iQwidth" variable (:constant-flag t) nil [131326 131333])
            ("iQwidth_only" variable (:constant-flag t) nil [131375 131387])
            ("iQwindow" variable (:constant-flag t) nil [131434 131442])
            ("iQwindow__pixel_to_total" variable (:constant-flag t) nil [131485 131509])
            ("iQwindow__resize_root_window" variable (:constant-flag t) nil [131568 131596])
            ("iQwindow__resize_root_window_vertically" variable (:constant-flag t) nil [131659 131698])
            ("iQwindow__sanitize_window_sizes" variable (:constant-flag t) nil [131772 131803])
            ("iQwindow_configuration" variable (:constant-flag t) nil [131869 131891])
            ("iQwindow_configuration_change_hook" variable (:constant-flag t) nil [131948 131982])
            ("iQwindow_configuration_p" variable (:constant-flag t) nil [132051 132075])
            ("iQwindow_deletable_p" variable (:constant-flag t) nil [132134 132154])
            ("iQwindow_divider" variable (:constant-flag t) nil [132209 132225])
            ("iQwindow_divider_first_pixel" variable (:constant-flag t) nil [132276 132304])
            ("iQwindow_divider_last_pixel" variable (:constant-flag t) nil [132367 132394])
            ("iQwindow_id" variable (:constant-flag t) nil [132456 132467])
            ("iQwindow_live_p" variable (:constant-flag t) nil [132513 132528])
            ("iQwindow_point_insertion_type" variable (:constant-flag t) nil [132578 132607])
            ("iQwindow_scroll_functions" variable (:constant-flag t) nil [132671 132696])
            ("iQwindow_size" variable (:constant-flag t) nil [132756 132769])
            ("iQwindow_valid_p" variable (:constant-flag t) nil [132817 132833])
            ("iQwindowp" variable (:constant-flag t) nil [132884 132893])
            ("iQworkarea" variable (:constant-flag t) nil [132937 132947])
            ("iQwrap_prefix" variable (:constant-flag t) nil [132992 133005])
            ("iQwrite_region" variable (:constant-flag t) nil [133053 133067])
            ("iQwrite_region_annotate_functions" variable (:constant-flag t) nil [133116 133149])
            ("iQwrong_length_argument" variable (:constant-flag t) nil [133217 133240])
            ("iQwrong_number_of_arguments" variable (:constant-flag t) nil [133298 133325])
            ("iQwrong_type_argument" variable (:constant-flag t) nil [133387 133408])
            ("iQx" variable (:constant-flag t) nil [133464 133467])
            ("iQx_check_fullscreen" variable (:constant-flag t) nil [133505 133525])
            ("iQx_create_frame_1" variable (:constant-flag t) nil [133580 133598])
            ("iQx_create_frame_2" variable (:constant-flag t) nil [133651 133669])
            ("iQx_frame_parameter" variable (:constant-flag t) nil [133722 133741])
            ("iQx_gtk_map_stock" variable (:constant-flag t) nil [133795 133812])
            ("iQx_handle_net_wm_state" variable (:constant-flag t) nil [133864 133887])
            ("iQx_lost_selection_functions" variable (:constant-flag t) nil [133945 133973])
            ("iQx_net_wm_state" variable (:constant-flag t) nil [134036 134052])
            ("iQx_resource_name" variable (:constant-flag t) nil [134103 134120])
            ("iQx_sent_selection_functions" variable (:constant-flag t) nil [134172 134200])
            ("iQx_set_frame_parameters" variable (:constant-flag t) nil [134263 134287])
            ("iQx_set_fullscreen" variable (:constant-flag t) nil [134346 134364])
            ("iQx_set_menu_bar_lines" variable (:constant-flag t) nil [134417 134439])
            ("iQx_set_window_size_1" variable (:constant-flag t) nil [134496 134517])
            ("iQx_set_window_size_2" variable (:constant-flag t) nil [134573 134594])
            ("iQx_set_window_size_3" variable (:constant-flag t) nil [134650 134671])
            ("iQx_underline_at_descent_line" variable (:constant-flag t) nil [134727 134756])
            ("iQx_use_underline_position_properties" variable (:constant-flag t) nil [134820 134857])
            ("iQxbm" variable (:constant-flag t) nil [134929 134934])
            ("iQxg_change_toolbar_position" variable (:constant-flag t) nil [134974 135002])
            ("iQxg_frame_resized" variable (:constant-flag t) nil [135065 135083])
            ("iQxg_frame_set_char_size" variable (:constant-flag t) nil [135136 135160])
            ("iQxg_frame_set_char_size_1" variable (:constant-flag t) nil [135219 135245])
            ("iQxg_frame_set_char_size_2" variable (:constant-flag t) nil [135306 135332])
            ("iQxg_frame_set_char_size_3" variable (:constant-flag t) nil [135393 135419])
            ("iQxpm" variable (:constant-flag t) nil [135480 135485])
            ("iQxwidget" variable (:constant-flag t) nil [135525 135534])
            ("iQxwidget_event" variable (:constant-flag t) nil [135578 135593])
            ("iQxwidget_view_p" variable (:constant-flag t) nil [135643 135659])
            ("iQxwidgetp" variable (:constant-flag t) nil [135710 135720])
            ("iQyes_or_no_p_history" variable (:constant-flag t) nil [135765 135786])
            ("iQz_group" variable (:constant-flag t) nil [135842 135851])
            ("iQzero_width" variable (:constant-flag t) nil [135895 135907])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fabort_recursive_edit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [135963 135985]))                  
                :type "int")
                nil [135956 135989])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fabs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [135997 136002]))                  
                :type "int")
                nil [135990 136006])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Faccept_process_output" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136014 136037]))                  
                :type "int")
                nil [136007 136041])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Faccess_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136049 136062]))                  
                :type "int")
                nil [136042 136066])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Faccessible_keymaps" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136074 136094]))                  
                :type "int")
                nil [136067 136098])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Facos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136106 136112]))                  
                :type "int")
                nil [136099 136116])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Factive_minibuffer_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136124 136150]))                  
                :type "int")
                nil [136117 136154])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fadd1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136162 136168]))                  
                :type "int")
                nil [136155 136172])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fadd_face_text_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136180 136204]))                  
                :type "int")
                nil [136173 136208])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fadd_name_to_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136216 136234]))                  
                :type "int")
                nil [136209 136238])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fadd_text_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136246 136267]))                  
                :type "int")
                nil [136239 136271])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fadd_variable_watcher" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136279 136301]))                  
                :type "int")
                nil [136272 136305])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fall_completions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136313 136330]))                  
                :type "int")
                nil [136306 136334])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fall_threads" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136342 136355]))                  
                :type "int")
                nil [136335 136359])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136367 136372])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136373 136383]))                  
                :type "int")
                nil [136360 136384])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fappend" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136392 136400])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136401 136406]))                  
                :type "int")
                nil [136385 136407])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fapply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136415 136422])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136423 136428]))                  
                :type "int")
                nil [136408 136429])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fapropos_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136437 136455]))                  
                :type "int")
                nil [136430 136459])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Faref" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136467 136473]))                  
                :type "int")
                nil [136460 136477])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Farrayp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136485 136493]))                  
                :type "int")
                nil [136478 136497])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Faset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136505 136511]))                  
                :type "int")
                nil [136498 136515])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136523 136528]))                  
                :type "int")
                nil [136516 136532])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fasin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136540 136546]))                  
                :type "int")
                nil [136533 136550])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fassoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136558 136565]))                  
                :type "int")
                nil [136551 136569])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fassoc_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136577 136591]))                  
                :type "int")
                nil [136570 136595])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fassq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136603 136609]))                  
                :type "int")
                nil [136596 136613])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fatan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136621 136627]))                  
                :type "int")
                nil [136614 136631])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [136649 136665])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fautoload" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136673 136683]))                  
                :type "int")
                nil [136666 136687])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fautoload_do_load" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136695 136713]))                  
                :type "int")
                nil [136688 136717])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbacktrace__locals" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136725 136744]))                  
                :type "int")
                nil [136718 136748])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbacktrace_debug" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136756 136773]))                  
                :type "int")
                nil [136749 136777])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbacktrace_eval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136785 136801]))                  
                :type "int")
                nil [136778 136805])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbacktrace_frame_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136813 136839]))                  
                :type "int")
                nil [136806 136843])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbackward_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136851 136866]))                  
                :type "int")
                nil [136844 136870])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbackward_prefix_chars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136878 136901]))                  
                :type "int")
                nil [136871 136905])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbarf_if_buffer_read_only" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136913 136939]))                  
                :type "int")
                nil [136906 136943])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbase64_decode_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136951 136973]))                  
                :type "int")
                nil [136944 136977])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbase64_decode_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136985 137007]))                  
                :type "int")
                nil [136978 137011])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbase64_encode_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137019 137041]))                  
                :type "int")
                nil [137012 137045])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbase64_encode_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137053 137075]))                  
                :type "int")
                nil [137046 137079])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbeginning_of_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137087 137106]))                  
                :type "int")
                nil [137080 137110])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbidi_find_overridden_directionality" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137118 137155]))                  
                :type "int")
                nil [137111 137159])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbidi_resolved_levels" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137167 137189]))                  
                :type "int")
                nil [137160 137193])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbignump" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137201 137210]))                  
                :type "int")
                nil [137194 137214])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbitmap_spec_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137222 137237]))                  
                :type "int")
                nil [137215 137241])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbobp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137249 137255]))                  
                :type "int")
                nil [137242 137259])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbolp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137267 137273]))                  
                :type "int")
                nil [137260 137277])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137285 137298])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137299 137304]))                  
                :type "int")
                nil [137278 137305])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_count_consecutive" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137313 137344]))                  
                :type "int")
                nil [137306 137348])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_count_population" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137356 137386]))                  
                :type "int")
                nil [137349 137390])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_exclusive_or" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137398 137424]))                  
                :type "int")
                nil [137391 137428])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_intersection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137436 137462]))                  
                :type "int")
                nil [137429 137466])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_not" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137474 137491]))                  
                :type "int")
                nil [137467 137495])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137503 137518]))                  
                :type "int")
                nil [137496 137522])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_set_difference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137530 137558]))                  
                :type "int")
                nil [137523 137562])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_subsetp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137570 137591]))                  
                :type "int")
                nil [137563 137595])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbool_vector_union" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137603 137622]))                  
                :type "int")
                nil [137596 137626])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbottom_divider_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137634 137656]))                  
                :type "int")
                nil [137627 137660])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fboundp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137668 137676]))                  
                :type "int")
                nil [137661 137680])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_base_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137688 137708]))                  
                :type "int")
                nil [137681 137712])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_chars_modified_tick" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137720 137748]))                  
                :type "int")
                nil [137713 137752])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_enable_undo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137760 137780]))                  
                :type "int")
                nil [137753 137784])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_file_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137792 137810]))                  
                :type "int")
                nil [137785 137814])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_has_markers_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137822 137845]))                  
                :type "int")
                nil [137815 137849])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137857 137870]))                  
                :type "int")
                nil [137850 137874])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137882 137895]))                  
                :type "int")
                nil [137875 137899])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_live_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137907 137922]))                  
                :type "int")
                nil [137900 137926])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_local_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137934 137954]))                  
                :type "int")
                nil [137927 137958])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_local_variables" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [137966 137990]))                  
                :type "int")
                nil [137959 137994])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_modified_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138002 138021]))                  
                :type "int")
                nil [137995 138025])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_modified_tick" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138033 138055]))                  
                :type "int")
                nil [138026 138059])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138067 138080]))                  
                :type "int")
                nil [138060 138084])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138092 138105]))                  
                :type "int")
                nil [138085 138109])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138117 138132]))                  
                :type "int")
                nil [138110 138136])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_substring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138144 138162]))                  
                :type "int")
                nil [138137 138166])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_substring_no_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138174 138206]))                  
                :type "int")
                nil [138167 138210])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbuffer_swap_text" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138218 138236]))                  
                :type "int")
                nil [138211 138240])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbufferp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138248 138257]))                  
                :type "int")
                nil [138241 138261])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbury_buffer_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138269 138291]))                  
                :type "int")
                nil [138262 138295])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbyte_code" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138303 138314]))                  
                :type "int")
                nil [138296 138318])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbyte_code_function_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138326 138348]))                  
                :type "int")
                nil [138319 138352])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbyte_to_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138360 138378]))                  
                :type "int")
                nil [138353 138382])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fbyte_to_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138390 138406]))                  
                :type "int")
                nil [138383 138410])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [138433 138449])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcall_interactively" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138457 138477]))                  
                :type "int")
                nil [138450 138481])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcall_last_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138489 138510]))                  
                :type "int")
                nil [138482 138514])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcall_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138522 138536])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138537 138542]))                  
                :type "int")
                nil [138515 138543])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcall_process_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138551 138572])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138573 138578]))                  
                :type "int")
                nil [138544 138579])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcancel_kbd_macro_events" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138587 138612]))                  
                :type "int")
                nil [138580 138616])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcapitalize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138624 138636]))                  
                :type "int")
                nil [138617 138640])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcapitalize_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138648 138667]))                  
                :type "int")
                nil [138641 138671])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcapitalize_word" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138679 138696]))                  
                :type "int")
                nil [138672 138700])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138708 138713]))                  
                :type "int")
                nil [138701 138717])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcar_less_than_car" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138725 138744]))                  
                :type "int")
                nil [138718 138748])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcar_safe" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138756 138766]))                  
                :type "int")
                nil [138749 138770])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcase_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138778 138792]))                  
                :type "int")
                nil [138771 138796])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138804 138811])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138812 138822]))                  
                :type "int")
                nil [138797 138823])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcategory_docstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138831 138851]))                  
                :type "int")
                nil [138824 138855])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcategory_set_mnemonics" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138863 138887]))                  
                :type "int")
                nil [138856 138891])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcategory_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138899 138915]))                  
                :type "int")
                nil [138892 138919])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcategory_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138927 138945]))                  
                :type "int")
                nil [138920 138949])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fccl_execute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138957 138970]))                  
                :type "int")
                nil [138950 138974])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fccl_execute_on_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138982 139005]))                  
                :type "int")
                nil [138975 139009])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fccl_program_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139017 139032]))                  
                :type "int")
                nil [139010 139036])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcdr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139044 139049]))                  
                :type "int")
                nil [139037 139053])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcdr_safe" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139061 139071]))                  
                :type "int")
                nil [139054 139075])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fceiling" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139083 139092]))                  
                :type "int")
                nil [139076 139096])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_after" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139104 139116]))                  
                :type "int")
                nil [139097 139120])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_before" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139128 139141]))                  
                :type "int")
                nil [139121 139145])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_category_set" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139153 139172]))                  
                :type "int")
                nil [139146 139176])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_charset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139184 139198]))                  
                :type "int")
                nil [139177 139202])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139210 139222]))                  
                :type "int")
                nil [139203 139226])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [139256 139272])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_resolve_modifiers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139280 139304]))                  
                :type "int")
                nil [139273 139308])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_syntax" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139316 139329]))                  
                :type "int")
                nil [139309 139333])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_table_extra_slot" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139341 139364]))                  
                :type "int")
                nil [139334 139368])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139376 139390]))                  
                :type "int")
                nil [139369 139394])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_table_parent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139402 139421]))                  
                :type "int")
                nil [139395 139425])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_table_range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139433 139451]))                  
                :type "int")
                nil [139426 139455])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_table_subtype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139463 139483]))                  
                :type "int")
                nil [139456 139487])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_to_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139495 139511]))                  
                :type "int")
                nil [139488 139515])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fchar_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139523 139535]))                  
                :type "int")
                nil [139516 139539])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [139563 139579])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcharset_after" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139587 139602]))                  
                :type "int")
                nil [139580 139606])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcharset_id_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139614 139635]))                  
                :type "int")
                nil [139607 139639])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcharset_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139647 139662]))                  
                :type "int")
                nil [139640 139666])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcharset_priority_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139674 139697]))                  
                :type "int")
                nil [139667 139701])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcharsetp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139709 139719]))                  
                :type "int")
                nil [139702 139723])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcheck_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139731 139752]))                  
                :type "int")
                nil [139724 139756])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcheck_coding_systems_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139764 139793]))                  
                :type "int")
                nil [139757 139797])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_buffer_auto_save_failure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139805 139837]))                  
                :type "int")
                nil [139798 139841])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_charset_maps" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139849 139869]))                  
                :type "int")
                nil [139842 139873])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_composition_cache" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139881 139906]))                  
                :type "int")
                nil [139874 139910])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_face_cache" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139918 139936]))                  
                :type "int")
                nil [139911 139940])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_font_cache" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139948 139966]))                  
                :type "int")
                nil [139941 139970])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_image_cache" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139978 139997]))                  
                :type "int")
                nil [139971 140001])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140009 140023]))                  
                :type "int")
                nil [140002 140027])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclear_this_command_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140035 140060]))                  
                :type "int")
                nil [140028 140064])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclose_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140072 140084]))                  
                :type "int")
                nil [140065 140088])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fclrhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140096 140105]))                  
                :type "int")
                nil [140089 140109])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_aliases" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140117 140140]))                  
                :type "int")
                nil [140110 140144])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140152 140172]))                  
                :type "int")
                nil [140145 140176])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_eol_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140184 140208]))                  
                :type "int")
                nil [140177 140212])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140220 140237]))                  
                :type "int")
                nil [140213 140241])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140249 140270]))                  
                :type "int")
                nil [140242 140274])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_priority_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140282 140311]))                  
                :type "int")
                nil [140275 140315])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoding_system_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140323 140342]))                  
                :type "int")
                nil [140316 140346])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcolor_distance" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140354 140370]))                  
                :type "int")
                nil [140347 140374])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcolor_gray_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140382 140396]))                  
                :type "int")
                nil [140375 140400])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcolor_supported_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140408 140427]))                  
                :type "int")
                nil [140401 140431])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcombine_after_change_execute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140439 140469]))                  
                :type "int")
                nil [140432 140473])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcommand_error_default_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140481 140513]))                  
                :type "int")
                nil [140474 140517])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcommand_remapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140525 140544]))                  
                :type "int")
                nil [140518 140548])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcommandp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140556 140566]))                  
                :type "int")
                nil [140549 140570])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompare_buffer_substrings" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140578 140605]))                  
                :type "int")
                nil [140571 140609])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompare_strings" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140617 140634]))                  
                :type "int")
                nil [140610 140638])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompare_window_configurations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140646 140677]))                  
                :type "int")
                nil [140639 140681])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompleting_read" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140689 140706]))                  
                :type "int")
                nil [140682 140710])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompose_region_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140718 140743]))                  
                :type "int")
                nil [140711 140747])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompose_string_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140755 140780]))                  
                :type "int")
                nil [140748 140784])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcomposition_get_gstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140792 140817]))                  
                :type "int")
                nil [140785 140821])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcompute_motion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140829 140845]))                  
                :type "int")
                nil [140822 140849])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140857 140865])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140866 140871]))                  
                :type "int")
                nil [140850 140872])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcond" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140880 140886])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140887 140897]))                  
                :type "int")
                nil [140873 140898])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcondition_case" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140906 140922])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140923 140933]))                  
                :type "int")
                nil [140899 140934])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcondition_mutex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140942 140959]))                  
                :type "int")
                nil [140935 140963])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcondition_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140971 140987]))                  
                :type "int")
                nil [140964 140991])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcondition_notify" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140999 141017]))                  
                :type "int")
                nil [140992 141021])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcondition_variable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141029 141051]))                  
                :type "int")
                nil [141022 141055])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcondition_wait" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141063 141079]))                  
                :type "int")
                nil [141056 141083])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcons" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141091 141097]))                  
                :type "int")
                nil [141084 141101])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [141120 141136])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fconstrain_to_field" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141144 141164]))                  
                :type "int")
                nil [141137 141168])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcontinue_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141176 141194]))                  
                :type "int")
                nil [141169 141198])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcontrolling_tty_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141206 141225]))                  
                :type "int")
                nil [141199 141229])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcoordinates_in_window_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141237 141262]))                  
                :type "int")
                nil [141230 141266])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_alist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141274 141286]))                  
                :type "int")
                nil [141267 141290])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_category_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141298 141319]))                  
                :type "int")
                nil [141291 141323])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141331 141342]))                  
                :type "int")
                nil [141324 141346])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_hash_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141354 141371]))                  
                :type "int")
                nil [141347 141375])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_keymap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141383 141396]))                  
                :type "int")
                nil [141376 141400])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141408 141421]))                  
                :type "int")
                nil [141401 141425])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141433 141448]))                  
                :type "int")
                nil [141426 141452])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopy_syntax_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141460 141479]))                  
                :type "int")
                nil [141453 141483])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcopysign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141491 141501]))                  
                :type "int")
                nil [141484 141505])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141513 141518]))                  
                :type "int")
                nil [141506 141522])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_active_maps" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141530 141551]))                  
                :type "int")
                nil [141523 141555])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_bidi_paragraph_direction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141563 141597]))                  
                :type "int")
                nil [141556 141601])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141609 141625]))                  
                :type "int")
                nil [141602 141629])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_case_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141637 141657]))                  
                :type "int")
                nil [141630 141661])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_column" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141669 141685]))                  
                :type "int")
                nil [141662 141689])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_global_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141697 141717]))                  
                :type "int")
                nil [141690 141721])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_idle_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141729 141748]))                  
                :type "int")
                nil [141722 141752])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_indentation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141760 141781]))                  
                :type "int")
                nil [141753 141785])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_input_mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141793 141813]))                  
                :type "int")
                nil [141786 141817])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_local_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141825 141844]))                  
                :type "int")
                nil [141818 141848])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_message" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141856 141873]))                  
                :type "int")
                nil [141849 141877])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_minor_mode_maps" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141885 141910]))                  
                :type "int")
                nil [141878 141914])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_thread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141922 141938]))                  
                :type "int")
                nil [141915 141942])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141950 141964]))                  
                :type "int")
                nil [141943 141968])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_time_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141976 141997]))                  
                :type "int")
                nil [141969 142001])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_time_zone" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142009 142028]))                  
                :type "int")
                nil [142002 142032])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fcurrent_window_configuration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142040 142070]))                  
                :type "int")
                nil [142033 142074])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdaemon_initialized" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142082 142102]))                  
                :type "int")
                nil [142075 142106])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdaemonp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142114 142123]))                  
                :type "int")
                nil [142107 142127])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdbus__init_bus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142135 142151]))                  
                :type "int")
                nil [142128 142155])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdbus_get_unique_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142163 142185]))                  
                :type "int")
                nil [142156 142189])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdbus_message_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142197 142220])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142221 142226]))                  
                :type "int")
                nil [142190 142227])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdebug_timer_check" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142235 142254]))                  
                :type "int")
                nil [142228 142258])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdeclare_equiv_charset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142266 142289]))                  
                :type "int")
                nil [142259 142293])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdecode_big5_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142301 142319]))                  
                :type "int")
                nil [142294 142323])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdecode_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142331 142344]))                  
                :type "int")
                nil [142324 142348])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdecode_coding_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142356 142378]))                  
                :type "int")
                nil [142349 142382])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdecode_coding_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142390 142412]))                  
                :type "int")
                nil [142383 142416])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdecode_sjis_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142424 142442]))                  
                :type "int")
                nil [142417 142446])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdecode_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142454 142467]))                  
                :type "int")
                nil [142447 142471])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefalias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142479 142489]))                  
                :type "int")
                nil [142472 142493])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefault_boundp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142501 142517]))                  
                :type "int")
                nil [142494 142521])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefault_file_modes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142529 142549]))                  
                :type "int")
                nil [142522 142553])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefault_toplevel_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142561 142585]))                  
                :type "int")
                nil [142554 142589])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefault_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142597 142612]))                  
                :type "int")
                nil [142590 142616])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefconst" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142624 142634])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142635 142645]))                  
                :type "int")
                nil [142617 142646])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_category" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142654 142671]))                  
                :type "int")
                nil [142647 142675])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_charset_alias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142683 142705]))                  
                :type "int")
                nil [142676 142709])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_charset_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142717 142742])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142743 142748]))                  
                :type "int")
                nil [142710 142749])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_coding_system_alias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142757 142785]))                  
                :type "int")
                nil [142750 142789])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_coding_system_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142797 142828])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142829 142834]))                  
                :type "int")
                nil [142790 142835])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_fringe_bitmap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142843 142865]))                  
                :type "int")
                nil [142836 142869])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_hash_table_test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142877 142901]))                  
                :type "int")
                nil [142870 142905])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142913 142925]))                  
                :type "int")
                nil [142906 142929])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefine_prefix_command" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142937 142960]))                  
                :type "int")
                nil [142930 142964])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefvar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142972 142980])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [142981 142991]))                  
                :type "int")
                nil [142965 142992])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdefvaralias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143000 143013]))                  
                :type "int")
                nil [142993 143017])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143025 143033]))                  
                :type "int")
                nil [143018 143037])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_all_overlays" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143045 143066]))                  
                :type "int")
                nil [143038 143070])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_and_extract_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143078 143105]))                  
                :type "int")
                nil [143071 143109])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143117 143130]))                  
                :type "int")
                nil [143110 143134])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_directory_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143142 143169]))                  
                :type "int")
                nil [143135 143173])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_field" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143181 143195]))                  
                :type "int")
                nil [143174 143199])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143207 143220]))                  
                :type "int")
                nil [143200 143224])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143232 143246]))                  
                :type "int")
                nil [143225 143250])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_other_windows_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143258 143289]))                  
                :type "int")
                nil [143251 143293])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_overlay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143301 143317]))                  
                :type "int")
                nil [143294 143321])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143329 143345]))                  
                :type "int")
                nil [143322 143349])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143357 143372]))                  
                :type "int")
                nil [143350 143376])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_terminal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143384 143401]))                  
                :type "int")
                nil [143377 143405])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_window_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143413 143437]))                  
                :type "int")
                nil [143406 143441])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelete_xwidget_view" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143449 143470]))                  
                :type "int")
                nil [143442 143474])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdelq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143482 143488]))                  
                :type "int")
                nil [143475 143492])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdescribe_buffer_bindings" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143500 143526]))                  
                :type "int")
                nil [143493 143530])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdescribe_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143538 143555]))                  
                :type "int")
                nil [143531 143559])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdestroy_fringe_bitmap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143567 143590]))                  
                :type "int")
                nil [143560 143594])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdetect_coding_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143602 143624]))                  
                :type "int")
                nil [143595 143628])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdetect_coding_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143636 143658]))                  
                :type "int")
                nil [143629 143662])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143670 143676]))                  
                :type "int")
                nil [143663 143680])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdirectory_file_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143688 143709]))                  
                :type "int")
                nil [143681 143713])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdirectory_files" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143721 143738]))                  
                :type "int")
                nil [143714 143742])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdirectory_files_and_attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143750 143782]))                  
                :type "int")
                nil [143743 143786])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdirectory_name_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143794 143812]))                  
                :type "int")
                nil [143787 143816])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdiscard_input" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143824 143839]))                  
                :type "int")
                nil [143817 143843])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdisplay_supports_face_attributes_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143851 143887]))                  
                :type "int")
                nil [143844 143891])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdo_auto_save" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143899 143913]))                  
                :type "int")
                nil [143892 143917])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdocumentation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143925 143940]))                  
                :type "int")
                nil [143918 143944])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdocumentation_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143952 143976]))                  
                :type "int")
                nil [143945 143980])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdowncase" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143988 143998]))                  
                :type "int")
                nil [143981 144002])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdowncase_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144010 144027]))                  
                :type "int")
                nil [144003 144031])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdowncase_word" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144039 144054]))                  
                :type "int")
                nil [144032 144058])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdraw_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144066 144079]))                  
                :type "int")
                nil [144059 144083])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_colors" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144091 144104]))                  
                :type "int")
                nil [144084 144108])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_emacs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144116 144128]))                  
                :type "int")
                nil [144109 144132])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_face" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144140 144151]))                  
                :type "int")
                nil [144133 144155])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_frame_glyph_matrix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144163 144188]))                  
                :type "int")
                nil [144156 144192])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_glyph_matrix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144200 144219]))                  
                :type "int")
                nil [144193 144223])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_glyph_row" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144231 144247]))                  
                :type "int")
                nil [144224 144251])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_redisplay_history" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144259 144283]))                  
                :type "int")
                nil [144252 144287])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fdump_tool_bar_row" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144295 144314]))                  
                :type "int")
                nil [144288 144318])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Felt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144326 144331]))                  
                :type "int")
                nil [144319 144335])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Femacs_pid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144343 144354]))                  
                :type "int")
                nil [144336 144358])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fencode_big5_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144366 144384]))                  
                :type "int")
                nil [144359 144388])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fencode_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144396 144409]))                  
                :type "int")
                nil [144389 144413])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fencode_coding_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144421 144443]))                  
                :type "int")
                nil [144414 144447])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fencode_coding_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144455 144477]))                  
                :type "int")
                nil [144448 144481])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fencode_sjis_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144489 144507]))                  
                :type "int")
                nil [144482 144511])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fencode_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144519 144532])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144533 144538]))                  
                :type "int")
                nil [144512 144539])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fend_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144547 144562]))                  
                :type "int")
                nil [144540 144566])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fend_of_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144574 144587]))                  
                :type "int")
                nil [144567 144591])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feobp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144599 144605]))                  
                :type "int")
                nil [144592 144609])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feolp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144617 144623]))                  
                :type "int")
                nil [144610 144627])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [144643 144659])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144667 144672]))                  
                :type "int")
                nil [144660 144676])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feqlsign" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144684 144693])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144694 144699]))                  
                :type "int")
                nil [144677 144700])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fequal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144708 144715]))                  
                :type "int")
                nil [144701 144719])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fequal_including_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144727 144755]))                  
                :type "int")
                nil [144720 144759])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ferase_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144767 144781]))                  
                :type "int")
                nil [144760 144785])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ferror_message_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144793 144815]))                  
                :type "int")
                nil [144786 144819])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144827 144833]))                  
                :type "int")
                nil [144820 144837])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feval_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144845 144858]))                  
                :type "int")
                nil [144838 144862])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Feval_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144870 144883]))                  
                :type "int")
                nil [144863 144887])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fevent_convert_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144895 144915]))                  
                :type "int")
                nil [144888 144919])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fevent_symbol_parse_modifiers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144927 144957]))                  
                :type "int")
                nil [144920 144961])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fexecute_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144969 144988]))                  
                :type "int")
                nil [144962 144992])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fexit_recursive_edit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145010 145031]))                  
                :type "int")
                nil [145003 145035])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145043 145048]))                  
                :type "int")
                nil [145036 145052])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fexpand_file_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145060 145078]))                  
                :type "int")
                nil [145053 145082])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fexpt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145090 145096]))                  
                :type "int")
                nil [145083 145100])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fexternal_debugging_output" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145108 145135]))                  
                :type "int")
                nil [145101 145139])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [145178 145194])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fface_attributes_as_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145202 145229]))                  
                :type "int")
                nil [145195 145233])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fface_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145241 145252]))                  
                :type "int")
                nil [145234 145256])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffboundp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145264 145273]))                  
                :type "int")
                nil [145257 145277])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffceiling" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145285 145295]))                  
                :type "int")
                nil [145278 145299])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffeaturep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145307 145317]))                  
                :type "int")
                nil [145300 145321])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffetch_bytecode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145329 145345]))                  
                :type "int")
                nil [145322 145349])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fffloor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145357 145365]))                  
                :type "int")
                nil [145350 145369])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffield_beginning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145377 145394]))                  
                :type "int")
                nil [145370 145398])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffield_end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145406 145417]))                  
                :type "int")
                nil [145399 145421])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffield_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145429 145443]))                  
                :type "int")
                nil [145422 145447])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffield_string_no_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145455 145483]))                  
                :type "int")
                nil [145448 145487])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_accessible_directory_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145495 145524]))                  
                :type "int")
                nil [145488 145528])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_acl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145536 145546]))                  
                :type "int")
                nil [145529 145550])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145558 145575]))                  
                :type "int")
                nil [145551 145579])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_attributes_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145587 145610]))                  
                :type "int")
                nil [145580 145614])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_directory_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145622 145640]))                  
                :type "int")
                nil [145615 145644])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_executable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145652 145671]))                  
                :type "int")
                nil [145645 145675])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_exists_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145683 145698]))                  
                :type "int")
                nil [145676 145702])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_locked_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145710 145725]))                  
                :type "int")
                nil [145703 145729])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_modes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145737 145749]))                  
                :type "int")
                nil [145730 145753])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_absolute_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145761 145783]))                  
                :type "int")
                nil [145754 145787])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_all_completions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145795 145822]))                  
                :type "int")
                nil [145788 145826])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_as_directory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145834 145858]))                  
                :type "int")
                nil [145827 145862])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_case_insensitive_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145870 145900]))                  
                :type "int")
                nil [145863 145904])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_completion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145912 145934]))                  
                :type "int")
                nil [145905 145938])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_directory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145946 145967]))                  
                :type "int")
                nil [145939 145971])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_name_nondirectory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [145979 146003]))                  
                :type "int")
                nil [145972 146007])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_newer_than_file_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146015 146039]))                  
                :type "int")
                nil [146008 146043])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_readable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146051 146068]))                  
                :type "int")
                nil [146044 146072])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_regular_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146080 146096]))                  
                :type "int")
                nil [146073 146100])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_selinux_context" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146108 146130]))                  
                :type "int")
                nil [146101 146134])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_symlink_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146142 146158]))                  
                :type "int")
                nil [146135 146162])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_system_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146170 146188]))                  
                :type "int")
                nil [146163 146192])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffile_writable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146200 146217]))                  
                :type "int")
                nil [146193 146221])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffillarray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146229 146240]))                  
                :type "int")
                nil [146222 146244])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_charset_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146252 146273]))                  
                :type "int")
                nil [146245 146277])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_charset_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146285 146306]))                  
                :type "int")
                nil [146278 146310])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_coding_systems_region_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146318 146355]))                  
                :type "int")
                nil [146311 146359])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_composition_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146367 146394]))                  
                :type "int")
                nil [146360 146398])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_file_name_handler" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146406 146430]))                  
                :type "int")
                nil [146399 146434])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146442 146453]))                  
                :type "int")
                nil [146435 146457])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffind_operation_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146465 146495])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146496 146501]))                  
                :type "int")
                nil [146458 146502])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [146523 146539])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146547 146554]))                  
                :type "int")
                nil [146540 146558])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffloat_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146566 146578]))                  
                :type "int")
                nil [146559 146582])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [146602 146618])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffloor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146626 146633]))                  
                :type "int")
                nil [146619 146637])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffmakunbound" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146645 146658]))                  
                :type "int")
                nil [146638 146662])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffollowing_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146670 146686]))                  
                :type "int")
                nil [146663 146690])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146698 146707]))                  
                :type "int")
                nil [146691 146711])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_drive_otf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146719 146735]))                  
                :type "int")
                nil [146712 146739])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_face_attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146747 146769]))                  
                :type "int")
                nil [146740 146773])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_family_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146781 146799]))                  
                :type "int")
                nil [146774 146803])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146811 146821]))                  
                :type "int")
                nil [146804 146825])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_get_glyphs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146833 146850]))                  
                :type "int")
                nil [146826 146854])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_get_system_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146862 146884]))                  
                :type "int")
                nil [146855 146888])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_get_system_normal_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146896 146925]))                  
                :type "int")
                nil [146889 146929])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146937 146948]))                  
                :type "int")
                nil [146930 146952])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_match_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146960 146974]))                  
                :type "int")
                nil [146953 146978])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_otf_alternates" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146986 147007]))                  
                :type "int")
                nil [146979 147011])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147019 147029]))                  
                :type "int")
                nil [147012 147033])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_shape_gstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147041 147061]))                  
                :type "int")
                nil [147034 147065])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_spec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147073 147084])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147085 147090]))                  
                :type "int")
                nil [147066 147091])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_variation_glyphs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147099 147122]))                  
                :type "int")
                nil [147092 147126])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffont_xlfd_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147134 147150]))                  
                :type "int")
                nil [147127 147154])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffontp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147162 147169]))                  
                :type "int")
                nil [147155 147173])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffontset_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147181 147195]))                  
                :type "int")
                nil [147174 147199])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffontset_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147207 147221]))                  
                :type "int")
                nil [147200 147225])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffontset_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147233 147247]))                  
                :type "int")
                nil [147226 147251])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffontset_list_all" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147259 147277]))                  
                :type "int")
                nil [147252 147281])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforce_mode_line_update" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147289 147313]))                  
                :type "int")
                nil [147282 147317])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforce_window_update" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147325 147346]))                  
                :type "int")
                nil [147318 147350])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fformat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147358 147366])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147367 147372]))                  
                :type "int")
                nil [147351 147373])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fformat_message" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147381 147397])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147398 147403]))                  
                :type "int")
                nil [147374 147404])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fformat_mode_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147412 147430]))                  
                :type "int")
                nil [147405 147434])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fformat_network_address" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147442 147466]))                  
                :type "int")
                nil [147435 147470])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fformat_time_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147478 147498]))                  
                :type "int")
                nil [147471 147502])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforward_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147510 147524]))                  
                :type "int")
                nil [147503 147528])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforward_comment" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147536 147553]))                  
                :type "int")
                nil [147529 147557])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforward_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147565 147579]))                  
                :type "int")
                nil [147558 147583])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforward_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147591 147606]))                  
                :type "int")
                nil [147584 147610])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fforward_word" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147618 147632]))                  
                :type "int")
                nil [147611 147636])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_after_make_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147644 147668]))                  
                :type "int")
                nil [147637 147672])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_ancestor_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147680 147698]))                  
                :type "int")
                nil [147673 147702])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_char_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147710 147729]))                  
                :type "int")
                nil [147703 147733])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_char_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147741 147759]))                  
                :type "int")
                nil [147734 147763])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_face_alist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147771 147789]))                  
                :type "int")
                nil [147764 147793])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_first_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147801 147821]))                  
                :type "int")
                nil [147794 147825])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_focus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147833 147846]))                  
                :type "int")
                nil [147826 147850])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_font_cache" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147858 147876]))                  
                :type "int")
                nil [147851 147880])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_internal_border_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147888 147917]))                  
                :type "int")
                nil [147881 147921])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147929 147941]))                  
                :type "int")
                nil [147922 147945])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_live_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147953 147967]))                  
                :type "int")
                nil [147946 147971])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_native_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147979 148000]))                  
                :type "int")
                nil [147972 148004])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_native_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148012 148032]))                  
                :type "int")
                nil [148005 148036])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_or_buffer_changed_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148044 148071]))                  
                :type "int")
                nil [148037 148075])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_parameter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148083 148100]))                  
                :type "int")
                nil [148076 148104])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_parameters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148112 148130]))                  
                :type "int")
                nil [148105 148134])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_parent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148142 148156]))                  
                :type "int")
                nil [148135 148160])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_pointer_visible_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148168 148193]))                  
                :type "int")
                nil [148161 148197])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148205 148221]))                  
                :type "int")
                nil [148198 148225])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_root_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148233 148252]))                  
                :type "int")
                nil [148226 148256])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_selected_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148264 148287]))                  
                :type "int")
                nil [148257 148291])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_terminal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148299 148315]))                  
                :type "int")
                nil [148292 148319])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_text_cols" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148327 148344]))                  
                :type "int")
                nil [148320 148348])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_text_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148356 148375]))                  
                :type "int")
                nil [148349 148379])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_text_lines" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148387 148405]))                  
                :type "int")
                nil [148380 148409])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_text_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148417 148435]))                  
                :type "int")
                nil [148410 148439])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_total_cols" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148447 148465]))                  
                :type "int")
                nil [148440 148469])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_total_lines" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148477 148496]))                  
                :type "int")
                nil [148470 148500])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframe_visible_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148508 148525]))                  
                :type "int")
                nil [148501 148529])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [148565 148581])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fframep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148589 148597]))                  
                :type "int")
                nil [148582 148601])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffrexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148609 148616]))                  
                :type "int")
                nil [148602 148620])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffringe_bitmaps_at_pos" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148628 148651]))                  
                :type "int")
                nil [148621 148655])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffringe_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148663 148677]))                  
                :type "int")
                nil [148656 148681])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffround" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148689 148697]))                  
                :type "int")
                nil [148682 148701])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148709 148715]))                  
                :type "int")
                nil [148702 148719])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fftruncate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148727 148738]))                  
                :type "int")
                nil [148720 148742])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffunc_arity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148750 148762]))                  
                :type "int")
                nil [148743 148766])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffuncall" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148774 148783])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148784 148789]))                  
                :type "int")
                nil [148767 148790])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffuncall_interactively" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148798 148821])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148822 148827]))                  
                :type "int")
                nil [148791 148828])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148836 148846])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148847 148857]))                  
                :type "int")
                nil [148829 148858])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffunction_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148866 148882]))                  
                :type "int")
                nil [148859 148886])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ffunctionp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148894 148905]))                  
                :type "int")
                nil [148887 148909])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgap_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148917 148931]))                  
                :type "int")
                nil [148910 148935])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgap_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148943 148953]))                  
                :type "int")
                nil [148936 148957])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgarbage_collect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148975 148992]))                  
                :type ("NO_INLINE" type (:type "class") nil nil))
                nil [148958 148996])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgenerate_new_buffer_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149004 149030]))                  
                :type "int")
                nil [148997 149034])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgeq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149042 149047])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149048 149053]))                  
                :type "int")
                nil [149035 149054])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149062 149067]))                  
                :type "int")
                nil [149055 149071])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149079 149091]))                  
                :type "int")
                nil [149072 149095])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_buffer_create" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149103 149122]))                  
                :type "int")
                nil [149096 149126])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_buffer_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149134 149154]))                  
                :type "int")
                nil [149127 149158])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_buffer_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149166 149185]))                  
                :type "int")
                nil [149159 149189])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_buffer_xwidgets" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149197 149218]))                  
                :type "int")
                nil [149190 149222])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149230 149240]))                  
                :type "int")
                nil [149223 149244])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_char_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149252 149271]))                  
                :type "int")
                nil [149245 149275])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_char_property_and_overlay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149283 149314]))                  
                :type "int")
                nil [149276 149318])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_file_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149326 149343]))                  
                :type "int")
                nil [149319 149347])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_file_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149355 149370]))                  
                :type "int")
                nil [149348 149374])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_internal_run_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149382 149405]))                  
                :type "int")
                nil [149375 149409])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_load_suffixes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149417 149436]))                  
                :type "int")
                nil [149410 149440])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_pos_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149448 149466]))                  
                :type "int")
                nil [149441 149470])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149478 149491]))                  
                :type "int")
                nil [149471 149495])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_text_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149503 149522]))                  
                :type "int")
                nil [149496 149526])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_unicode_property_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149534 149565]))                  
                :type "int")
                nil [149527 149569])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_unused_category" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149577 149598]))                  
                :type "int")
                nil [149570 149602])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_unused_iso_final_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149610 149637]))                  
                :type "int")
                nil [149603 149641])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fget_variable_watchers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149649 149672]))                  
                :type "int")
                nil [149642 149676])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgetenv_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149684 149701]))                  
                :type "int")
                nil [149677 149705])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgethash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149713 149722]))                  
                :type "int")
                nil [149706 149726])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fglobal_key_binding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149734 149754]))                  
                :type "int")
                nil [149727 149758])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_asynchronous_parameters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149766 149798]))                  
                :type "int")
                nil [149759 149802])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_available_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149810 149830]))                  
                :type "int")
                nil [149803 149834])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_boot" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149842 149855]))                  
                :type "int")
                nil [149835 149859])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_bye" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149867 149879]))                  
                :type "int")
                nil [149860 149883])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_ciphers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149891 149907]))                  
                :type "int")
                nil [149884 149911])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_deinit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149919 149934]))                  
                :type "int")
                nil [149912 149938])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_digests" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149946 149962]))                  
                :type "int")
                nil [149939 149966])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_error_fatalp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149974 149995]))                  
                :type "int")
                nil [149967 149999])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_error_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150007 150028]))                  
                :type "int")
                nil [150000 150032])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [150059 150075])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_get_initstage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150083 150105]))                  
                :type "int")
                nil [150076 150109])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_hash_digest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150117 150137]))                  
                :type "int")
                nil [150110 150141])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_hash_mac" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150149 150166]))                  
                :type "int")
                nil [150142 150170])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_macs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150178 150191]))                  
                :type "int")
                nil [150171 150195])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_peer_status" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150203 150223]))                  
                :type "int")
                nil [150196 150227])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_peer_status_warning_describe" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150235 150272]))                  
                :type "int")
                nil [150228 150276])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_symmetric_decrypt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150284 150310]))                  
                :type "int")
                nil [150277 150314])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgnutls_symmetric_encrypt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150322 150348]))                  
                :type "int")
                nil [150315 150352])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgoto_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150360 150371]))                  
                :type "int")
                nil [150353 150375])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgpm_mouse_start" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150383 150400]))                  
                :type "int")
                nil [150376 150404])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgpm_mouse_stop" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150412 150428]))                  
                :type "int")
                nil [150405 150432])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgroup_gid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150440 150451]))                  
                :type "int")
                nil [150433 150455])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgroup_real_gid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150463 150479]))                  
                :type "int")
                nil [150456 150483])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fgtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150491 150496])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150497 150502]))                  
                :type "int")
                nil [150484 150503])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhandle_save_session" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150511 150532]))                  
                :type "int")
                nil [150504 150536])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhandle_switch_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150544 150565]))                  
                :type "int")
                nil [150537 150569])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_count" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150577 150595]))                  
                :type "int")
                nil [150570 150599])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150607 150621]))                  
                :type "int")
                nil [150600 150625])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_rehash_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150633 150657]))                  
                :type "int")
                nil [150626 150661])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_rehash_threshold" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150669 150698]))                  
                :type "int")
                nil [150662 150702])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150710 150727]))                  
                :type "int")
                nil [150703 150731])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150739 150756]))                  
                :type "int")
                nil [150732 150760])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fhash_table_weakness" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150768 150789]))                  
                :type "int")
                nil [150761 150793])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ficonify_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150801 150816]))                  
                :type "int")
                nil [150794 150820])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [150842 150858])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fif" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150866 150870])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150871 150881]))                  
                :type "int")
                nil [150859 150882])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fimage_flush" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150890 150903]))                  
                :type "int")
                nil [150883 150907])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fimage_mask_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150915 150929]))                  
                :type "int")
                nil [150908 150933])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fimage_metadata" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150941 150957]))                  
                :type "int")
                nil [150934 150961])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fimage_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150969 150981]))                  
                :type "int")
                nil [150962 150985])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fimagemagick_types" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150993 151012]))                  
                :type "int")
                nil [150986 151016])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fimagep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151024 151032]))                  
                :type "int")
                nil [151017 151036])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Findent_to" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151044 151055]))                  
                :type "int")
                nil [151037 151059])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Findirect_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151067 151086]))                  
                :type "int")
                nil [151060 151090])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Findirect_variable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151098 151117]))                  
                :type "int")
                nil [151091 151121])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finit_image_library" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151129 151149]))                  
                :type "int")
                nil [151122 151153])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finotify_add_watch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151161 151180]))                  
                :type "int")
                nil [151154 151184])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finotify_allocated_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151192 151213]))                  
                :type "int")
                nil [151185 151217])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finotify_rm_watch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151225 151243]))                  
                :type "int")
                nil [151218 151247])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finotify_valid_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151255 151272]))                  
                :type "int")
                nil [151248 151276])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finotify_watch_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151284 151304]))                  
                :type "int")
                nil [151277 151308])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finput_pending_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151316 151333]))                  
                :type "int")
                nil [151309 151337])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151345 151353])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151354 151359]))                  
                :type "int")
                nil [151338 151360])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_and_inherit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151368 151388])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151389 151394]))                  
                :type "int")
                nil [151361 151395])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_and_inherit_before_markers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151403 151438])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151439 151444]))                  
                :type "int")
                nil [151396 151445])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_before_markers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151453 151476])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151477 151482]))                  
                :type "int")
                nil [151446 151483])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_buffer_substring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151491 151516]))                  
                :type "int")
                nil [151484 151520])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151528 151541]))                  
                :type "int")
                nil [151521 151545])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151553 151566]))                  
                :type "int")
                nil [151546 151570])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finsert_file_contents" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151578 151600]))                  
                :type "int")
                nil [151571 151604])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finteger_or_marker_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151612 151633]))                  
                :type "int")
                nil [151605 151637])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [151659 151675])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [151708 151724])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finteractive_form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151732 151750]))                  
                :type "int")
                nil [151725 151754])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fintern" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151762 151770]))                  
                :type "int")
                nil [151755 151774])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fintern_soft" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151782 151795]))                  
                :type "int")
                nil [151775 151799])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_char_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151807 151827]))                  
                :type "int")
                nil [151800 151831])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_complete_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151839 151865]))                  
                :type "int")
                nil [151832 151869])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_copy_lisp_face" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151877 151902]))                  
                :type "int")
                nil [151870 151906])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_default_interrupt_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151914 151950]))                  
                :type "int")
                nil [151907 151954])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_default_process_filter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [151962 151995]))                  
                :type "int")
                nil [151955 151999])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_default_process_sentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152007 152042]))                  
                :type "int")
                nil [152000 152046])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_describe_syntax_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152054 152086]))                  
                :type "int")
                nil [152047 152090])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_face_x_get_resource" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152098 152128]))                  
                :type "int")
                nil [152091 152132])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_get_lisp_face_attribute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152140 152174]))                  
                :type "int")
                nil [152133 152178])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_handle_focus_in" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152186 152212]))                  
                :type "int")
                nil [152179 152216])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_lisp_face_attribute_values" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152224 152261]))                  
                :type "int")
                nil [152217 152265])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_lisp_face_empty_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152273 152301]))                  
                :type "int")
                nil [152266 152305])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_lisp_face_equal_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152313 152341]))                  
                :type "int")
                nil [152306 152345])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_lisp_face_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152353 152375]))                  
                :type "int")
                nil [152346 152379])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_make_lisp_face" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152387 152412]))                  
                :type "int")
                nil [152380 152416])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_merge_in_global_face" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152424 152455]))                  
                :type "int")
                nil [152417 152459])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_set_alternative_font_family_alist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152467 152511]))                  
                :type "int")
                nil [152460 152515])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_set_alternative_font_registry_alist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152523 152569]))                  
                :type "int")
                nil [152516 152573])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_set_font_selection_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152581 152616]))                  
                :type "int")
                nil [152574 152620])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_set_lisp_face_attribute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152628 152662]))                  
                :type "int")
                nil [152621 152666])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_set_lisp_face_attribute_from_resource" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152674 152722]))                  
                :type "int")
                nil [152667 152726])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_show_cursor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152734 152756]))                  
                :type "int")
                nil [152727 152760])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finternal_show_cursor_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152768 152792]))                  
                :type "int")
                nil [152761 152796])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finterrupt_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152804 152823]))                  
                :type "int")
                nil [152797 152827])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finvisible_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152835 152848]))                  
                :type "int")
                nil [152828 152852])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finvocation_directory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152860 152882]))                  
                :type "int")
                nil [152853 152886])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Finvocation_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152894 152911]))                  
                :type "int")
                nil [152887 152915])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fisnan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152923 152930]))                  
                :type "int")
                nil [152916 152934])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fiso_charset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152942 152955]))                  
                :type "int")
                nil [152935 152959])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fjson_insert" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152967 152980])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152981 152986]))                  
                :type "int")
                nil [152960 152987])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fjson_parse_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152995 153014])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153015 153020]))                  
                :type "int")
                nil [152988 153021])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fjson_parse_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153029 153048])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153049 153054]))                  
                :type "int")
                nil [153022 153055])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fjson_serialize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153063 153079])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153080 153085]))                  
                :type "int")
                nil [153056 153086])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkey_binding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153094 153107]))                  
                :type "int")
                nil [153087 153111])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkey_description" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153119 153136]))                  
                :type "int")
                nil [153112 153140])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkeyboard_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153148 153172]))                  
                :type "int")
                nil [153141 153176])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkeymap_parent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153184 153199]))                  
                :type "int")
                nil [153177 153203])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkeymap_prompt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153211 153226]))                  
                :type "int")
                nil [153204 153230])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkeymapp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153238 153247]))                  
                :type "int")
                nil [153231 153251])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkeywordp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153259 153269]))                  
                :type "int")
                nil [153252 153273])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkill_all_local_variables" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153281 153307]))                  
                :type "int")
                nil [153274 153311])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkill_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153319 153332]))                  
                :type "int")
                nil [153312 153336])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkill_emacs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153354 153366]))                  
                :type "int")
                nil [153347 153370])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkill_local_variable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153378 153399]))                  
                :type "int")
                nil [153371 153403])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fkill_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153411 153425]))                  
                :type "int")
                nil [153404 153429])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flast_nonminibuf_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153437 153460]))                  
                :type "int")
                nil [153430 153464])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flax_plist_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153472 153487]))                  
                :type "int")
                nil [153465 153491])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flax_plist_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153499 153514]))                  
                :type "int")
                nil [153492 153518])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms2_available_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153526 153545]))                  
                :type "int")
                nil [153519 153549])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_cam02_ucs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153557 153573]))                  
                :type "int")
                nil [153550 153577])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_cie_de2000" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153585 153602]))                  
                :type "int")
                nil [153578 153606])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_jab_to_jch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153614 153631]))                  
                :type "int")
                nil [153607 153635])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_jch_to_jab" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153643 153660]))                  
                :type "int")
                nil [153636 153664])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_jch_to_xyz" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153672 153689]))                  
                :type "int")
                nil [153665 153693])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_temp_to_white_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153701 153727]))                  
                :type "int")
                nil [153694 153731])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flcms_xyz_to_jch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153739 153756]))                  
                :type "int")
                nil [153732 153760])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fldexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153768 153775]))                  
                :type "int")
                nil [153761 153779])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flength" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153787 153795]))                  
                :type "int")
                nil [153780 153799])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fleq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153807 153812])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153813 153818]))                  
                :type "int")
                nil [153800 153819])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flet" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153827 153832])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153833 153843]))                  
                :type "int")
                nil [153820 153844])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("FletX" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153852 153858])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153859 153869]))                  
                :type "int")
                nil [153845 153870])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flibxml_available_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153878 153898]))                  
                :type "int")
                nil [153871 153902])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flibxml_parse_html_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153910 153936]))                  
                :type "int")
                nil [153903 153940])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flibxml_parse_xml_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153948 153973]))                  
                :type "int")
                nil [153941 153977])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fline_beginning_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [153985 154010]))                  
                :type "int")
                nil [153978 154014])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fline_end_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154022 154041]))                  
                :type "int")
                nil [154015 154045])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fline_number_display_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154053 154080]))                  
                :type "int")
                nil [154046 154084])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fline_pixel_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154092 154111]))                  
                :type "int")
                nil [154085 154115])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154123 154129])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154130 154135]))                  
                :type "int")
                nil [154116 154136])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flist_fonts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154144 154156]))                  
                :type "int")
                nil [154137 154160])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flist_system_processes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154168 154191]))                  
                :type "int")
                nil [154161 154195])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [154214 154230])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fload" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154238 154244]))                  
                :type "int")
                nil [154231 154248])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fload_average" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154256 154270]))                  
                :type "int")
                nil [154249 154274])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flocal_key_binding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154282 154301]))                  
                :type "int")
                nil [154275 154305])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flocal_variable_if_set_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154313 154338]))                  
                :type "int")
                nil [154306 154342])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flocal_variable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154350 154368]))                  
                :type "int")
                nil [154343 154372])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flocale_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154380 154393]))                  
                :type "int")
                nil [154373 154397])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flocate_file_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154405 154427]))                  
                :type "int")
                nil [154398 154431])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flock_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154439 154452]))                  
                :type "int")
                nil [154432 154456])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154464 154469]))                  
                :type "int")
                nil [154457 154473])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flogand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154481 154489])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154490 154495]))                  
                :type "int")
                nil [154474 154496])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flogb" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154504 154510]))                  
                :type "int")
                nil [154497 154514])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flogcount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154522 154532]))                  
                :type "int")
                nil [154515 154536])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flogior" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154544 154552])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154553 154558]))                  
                :type "int")
                nil [154537 154559])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flognot" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154567 154575]))                  
                :type "int")
                nil [154560 154579])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flogxor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154587 154595])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154596 154601]))                  
                :type "int")
                nil [154580 154602])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flooking_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154610 154622]))                  
                :type "int")
                nil [154603 154626])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flookup_image" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154634 154648]))                  
                :type "int")
                nil [154627 154652])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flookup_image_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154660 154678]))                  
                :type "int")
                nil [154653 154682])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flookup_key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154690 154702]))                  
                :type "int")
                nil [154683 154706])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flower_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154714 154727]))                  
                :type "int")
                nil [154707 154731])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flread__substitute_object_in_subtree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154739 154776]))                  
                :type "int")
                nil [154732 154780])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flsh" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154788 154793]))                  
                :type "int")
                nil [154781 154797])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Flss" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154805 154810])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154811 154816]))                  
                :type "int")
                nil [154798 154817])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmacroexpand" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154825 154838]))                  
                :type "int")
                nil [154818 154842])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_bool_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154850 154868]))                  
                :type "int")
                nil [154843 154872])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_byte_code" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154880 154896])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154897 154902]))                  
                :type "int")
                nil [154873 154903])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_category_set" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154911 154930]))                  
                :type "int")
                nil [154904 154934])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_category_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154942 154963]))                  
                :type "int")
                nil [154935 154967])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154975 154986]))                  
                :type "int")
                nil [154968 154990])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_char_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154998 155015]))                  
                :type "int")
                nil [154991 155019])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_condition_variable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155027 155052]))                  
                :type "int")
                nil [155020 155056])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_directory_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155064 155089]))                  
                :type "int")
                nil [155057 155093])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_finalizer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155101 155117]))                  
                :type "int")
                nil [155094 155121])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_frame_invisible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155129 155151]))                  
                :type "int")
                nil [155122 155155])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_frame_visible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155163 155183]))                  
                :type "int")
                nil [155156 155187])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_hash_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155195 155212])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155213 155218]))                  
                :type "int")
                nil [155188 155219])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_indirect_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155227 155249]))                  
                :type "int")
                nil [155220 155253])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_keymap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155261 155274]))                  
                :type "int")
                nil [155254 155278])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155286 155297]))                  
                :type "int")
                nil [155279 155301])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_local_variable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155309 155330]))                  
                :type "int")
                nil [155302 155334])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155342 155355]))                  
                :type "int")
                nil [155335 155359])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_mutex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155367 155379]))                  
                :type "int")
                nil [155360 155383])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_network_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155391 155413])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155414 155419]))                  
                :type "int")
                nil [155384 155420])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_overlay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155428 155442]))                  
                :type "int")
                nil [155421 155446])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_pipe_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155454 155473])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155474 155479]))                  
                :type "int")
                nil [155447 155480])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155488 155502])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155503 155508]))                  
                :type "int")
                nil [155481 155509])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_record" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155517 155530]))                  
                :type "int")
                nil [155510 155534])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_serial_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155542 155563])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155564 155569]))                  
                :type "int")
                nil [155535 155570])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_sparse_keymap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155578 155598]))                  
                :type "int")
                nil [155571 155602])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155610 155623]))                  
                :type "int")
                nil [155603 155627])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_symbol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155635 155648]))                  
                :type "int")
                nil [155628 155652])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_symbolic_link" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155660 155680]))                  
                :type "int")
                nil [155653 155684])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_temp_file_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155692 155717]))                  
                :type "int")
                nil [155685 155721])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_temp_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155729 155745]))                  
                :type "int")
                nil [155722 155749])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_terminal_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155757 155778]))                  
                :type "int")
                nil [155750 155782])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_thread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155790 155803]))                  
                :type "int")
                nil [155783 155807])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_var_non_special" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155815 155837]))                  
                :type "int")
                nil [155808 155841])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_variable_buffer_local" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155849 155877]))                  
                :type "int")
                nil [155842 155881])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155889 155902]))                  
                :type "int")
                nil [155882 155906])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmake_xwidget" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155914 155928]))                  
                :type "int")
                nil [155907 155932])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmakunbound" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155940 155952]))                  
                :type "int")
                nil [155933 155956])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmap_char_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155964 155980]))                  
                :type "int")
                nil [155957 155984])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmap_charset_chars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155992 156011]))                  
                :type "int")
                nil [155985 156015])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmap_keymap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156023 156035]))                  
                :type "int")
                nil [156016 156039])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmap_keymap_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156047 156068]))                  
                :type "int")
                nil [156040 156072])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmapatoms" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156080 156090]))                  
                :type "int")
                nil [156073 156094])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmapbacktrace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156102 156116]))                  
                :type "int")
                nil [156095 156120])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmapc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156128 156134]))                  
                :type "int")
                nil [156121 156138])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmapcan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156146 156154]))                  
                :type "int")
                nil [156139 156158])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmapcar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156166 156174]))                  
                :type "int")
                nil [156159 156178])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmapconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156186 156197]))                  
                :type "int")
                nil [156179 156201])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmaphash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156209 156218]))                  
                :type "int")
                nil [156202 156222])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmark_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156230 156243]))                  
                :type "int")
                nil [156223 156247])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmarker_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156255 156270]))                  
                :type "int")
                nil [156248 156274])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmarker_insertion_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156282 156305]))                  
                :type "int")
                nil [156275 156309])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmarker_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156317 156334]))                  
                :type "int")
                nil [156310 156338])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmarkerp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156346 156355]))                  
                :type "int")
                nil [156339 156359])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmatch_beginning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156367 156384]))                  
                :type "int")
                nil [156360 156388])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmatch_data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156396 156408]))                  
                :type "int")
                nil [156389 156412])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmatch_end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156420 156431]))                  
                :type "int")
                nil [156413 156435])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmatching_paren" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156443 156459]))                  
                :type "int")
                nil [156436 156463])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmax" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156471 156476])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156477 156482]))                  
                :type "int")
                nil [156464 156483])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [156505 156521])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmd5" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156529 156534]))                  
                :type "int")
                nil [156522 156538])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmember" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156546 156554]))                  
                :type "int")
                nil [156539 156558])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmemory_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156566 156579]))                  
                :type "int")
                nil [156559 156583])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmemory_use_counts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156591 156610]))                  
                :type "int")
                nil [156584 156614])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmemq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156622 156628]))                  
                :type "int")
                nil [156615 156632])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmemql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156640 156647]))                  
                :type "int")
                nil [156633 156651])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmenu_bar_menu_at_x_y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156659 156681]))                  
                :type "int")
                nil [156652 156685])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmenu_or_popup_active_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156693 156717]))                  
                :type "int")
                nil [156686 156721])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmerge_face_attribute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156729 156751]))                  
                :type "int")
                nil [156722 156755])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmessage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156763 156772])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156773 156778]))                  
                :type "int")
                nil [156756 156779])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmessage_box" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156787 156800])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156801 156806]))                  
                :type "int")
                nil [156780 156807])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmessage_or_box" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156815 156831])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156832 156837]))                  
                :type "int")
                nil [156808 156838])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156846 156851])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156852 156857]))                  
                :type "int")
                nil [156839 156858])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_contents" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156866 156887]))                  
                :type "int")
                nil [156859 156891])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_contents_no_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156899 156934]))                  
                :type "int")
                nil [156892 156938])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_depth" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156946 156964]))                  
                :type "int")
                nil [156939 156968])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_prompt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156976 156995]))                  
                :type "int")
                nil [156969 156999])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_prompt_end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157007 157030]))                  
                :type "int")
                nil [157000 157034])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_selected_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157042 157070]))                  
                :type "int")
                nil [157035 157074])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibuffer_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157082 157101]))                  
                :type "int")
                nil [157075 157105])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminibufferp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157113 157126]))                  
                :type "int")
                nil [157106 157130])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminor_mode_key_binding" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157138 157162]))                  
                :type "int")
                nil [157131 157166])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fminus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157174 157181])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157182 157187]))                  
                :type "int")
                nil [157167 157188])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157196 157201]))                  
                :type "int")
                nil [157189 157205])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmodify_category_entry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157213 157236]))                  
                :type "int")
                nil [157206 157240])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmodify_frame_parameters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157248 157273]))                  
                :type "int")
                nil [157241 157277])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmodify_syntax_entry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157285 157306]))                  
                :type "int")
                nil [157278 157310])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [157341 157357])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmodule_load" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157365 157378]))                  
                :type "int")
                nil [157358 157382])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmouse_pixel_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157390 157412]))                  
                :type "int")
                nil [157383 157416])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmouse_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157424 157440]))                  
                :type "int")
                nil [157417 157444])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmove_overlay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157452 157466]))                  
                :type "int")
                nil [157445 157470])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmove_point_visually" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157478 157499]))                  
                :type "int")
                nil [157471 157503])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmove_to_column" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157511 157527]))                  
                :type "int")
                nil [157504 157531])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmove_to_window_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157539 157560]))                  
                :type "int")
                nil [157532 157564])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmultibyte_char_to_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157572 157599]))                  
                :type "int")
                nil [157565 157603])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmultibyte_string_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157611 157631]))                  
                :type "int")
                nil [157604 157635])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmutex_lock" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157643 157655]))                  
                :type "int")
                nil [157636 157659])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmutex_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157667 157679]))                  
                :type "int")
                nil [157660 157683])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmutex_unlock" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157691 157705]))                  
                :type "int")
                nil [157684 157709])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fmutexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157717 157725]))                  
                :type "int")
                nil [157710 157729])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnarrow_to_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157737 157755]))                  
                :type "int")
                nil [157730 157759])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [157780 157796])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnconc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157804 157811])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157812 157817]))                  
                :type "int")
                nil [157797 157818])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fneq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157826 157831]))                  
                :type "int")
                nil [157819 157835])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnetwork_interface_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157843 157867]))                  
                :type "int")
                nil [157836 157871])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnetwork_interface_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157879 157903]))                  
                :type "int")
                nil [157872 157907])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnew_fontset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157915 157928]))                  
                :type "int")
                nil [157908 157932])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnewline_cache_check" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157940 157961]))                  
                :type "int")
                nil [157933 157965])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_char_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157973 158000]))                  
                :type "int")
                nil [157966 158004])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158012 158024]))                  
                :type "int")
                nil [158005 158028])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_overlay_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158036 158057]))                  
                :type "int")
                nil [158029 158061])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158069 158091]))                  
                :type "int")
                nil [158062 158095])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_read_file_uses_dialog_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158103 158133]))                  
                :type "int")
                nil [158096 158137])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_single_char_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158145 158179]))                  
                :type "int")
                nil [158138 158183])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_single_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158191 158220]))                  
                :type "int")
                nil [158184 158224])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnext_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158232 158245]))                  
                :type "int")
                nil [158225 158249])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [158269 158285])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnreverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158293 158303]))                  
                :type "int")
                nil [158286 158307])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnth" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158315 158320]))                  
                :type "int")
                nil [158308 158324])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnthcdr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158332 158340]))                  
                :type "int")
                nil [158325 158344])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [158362 158378])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnumber_or_marker_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158386 158406]))                  
                :type "int")
                nil [158379 158410])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fnumber_to_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158418 158436]))                  
                :type "int")
                nil [158411 158440])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [158461 158477])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fopen_dribble_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158485 158504]))                  
                :type "int")
                nil [158478 158508])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fopen_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158516 158527]))                  
                :type "int")
                nil [158509 158531])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fopen_termscript" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158539 158556]))                  
                :type "int")
                nil [158532 158560])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foptimize_char_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158568 158589]))                  
                :type "int")
                nil [158561 158593])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("For" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158601 158605])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158606 158616]))                  
                :type "int")
                nil [158594 158617])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fother_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158625 158639]))                  
                :type "int")
                nil [158618 158643])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fother_window_for_scrolling" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158651 158679]))                  
                :type "int")
                nil [158644 158683])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158691 158707]))                  
                :type "int")
                nil [158684 158711])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158719 158732]))                  
                :type "int")
                nil [158712 158736])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158744 158757]))                  
                :type "int")
                nil [158737 158761])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_lists" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158769 158784]))                  
                :type "int")
                nil [158762 158788])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158796 158816]))                  
                :type "int")
                nil [158789 158820])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158828 158841]))                  
                :type "int")
                nil [158821 158845])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_recenter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158853 158871]))                  
                :type "int")
                nil [158846 158875])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlay_start" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158883 158898]))                  
                :type "int")
                nil [158876 158902])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlayp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158910 158920]))                  
                :type "int")
                nil [158903 158924])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlays_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158932 158945]))                  
                :type "int")
                nil [158925 158949])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Foverlays_in" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158957 158970]))                  
                :type "int")
                nil [158950 158974])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fparse_partial_sexp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [158982 159002]))                  
                :type "int")
                nil [158975 159006])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fplay_sound_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159014 159035]))                  
                :type "int")
                nil [159007 159039])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fplist_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159047 159058]))                  
                :type "int")
                nil [159040 159062])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fplist_member" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159070 159084]))                  
                :type "int")
                nil [159063 159088])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fplist_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159096 159107]))                  
                :type "int")
                nil [159089 159111])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fplus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159119 159125])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159126 159131]))                  
                :type "int")
                nil [159112 159132])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpoint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159140 159147]))                  
                :type "int")
                nil [159133 159151])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpoint_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159159 159173]))                  
                :type "int")
                nil [159152 159177])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpoint_max" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159185 159196]))                  
                :type "int")
                nil [159178 159200])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpoint_max_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159208 159226]))                  
                :type "int")
                nil [159201 159230])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpoint_min" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159238 159249]))                  
                :type "int")
                nil [159231 159253])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpoint_min_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159261 159279]))                  
                :type "int")
                nil [159254 159283])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpos_visible_in_window_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159291 159316]))                  
                :type "int")
                nil [159284 159320])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposition_bytes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159328 159344]))                  
                :type "int")
                nil [159321 159348])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposix_looking_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159356 159374]))                  
                :type "int")
                nil [159349 159378])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposix_search_backward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159386 159409]))                  
                :type "int")
                nil [159379 159413])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposix_search_forward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159421 159443]))                  
                :type "int")
                nil [159414 159447])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposix_string_match" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159455 159475]))                  
                :type "int")
                nil [159448 159479])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposn_at_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159487 159502]))                  
                :type "int")
                nil [159480 159506])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fposn_at_x_y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159514 159527]))                  
                :type "int")
                nil [159507 159531])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprefix_numeric_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159539 159561]))                  
                :type "int")
                nil [159532 159565])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159573 159588]))                  
                :type "int")
                nil [159566 159592])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_char_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159600 159631]))                  
                :type "int")
                nil [159593 159635])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159643 159659]))                  
                :type "int")
                nil [159636 159663])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_overlay_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159671 159696]))                  
                :type "int")
                nil [159664 159700])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159708 159734]))                  
                :type "int")
                nil [159701 159738])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_single_char_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159746 159784]))                  
                :type "int")
                nil [159739 159788])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_single_property_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159796 159829]))                  
                :type "int")
                nil [159789 159833])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprevious_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159841 159858]))                  
                :type "int")
                nil [159834 159862])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprin1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159870 159877]))                  
                :type "int")
                nil [159863 159881])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprin1_to_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159889 159906]))                  
                :type "int")
                nil [159882 159910])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprinc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159918 159925]))                  
                :type "int")
                nil [159911 159929])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159937 159944]))                  
                :type "int")
                nil [159930 159948])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprint_preprocess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159956 159974]))                  
                :type "int")
                nil [159949 159978])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [159986 160006]))                  
                :type "int")
                nil [159979 160010])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160018 160034]))                  
                :type "int")
                nil [160011 160038])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160046 160069]))                  
                :type "int")
                nil [160039 160073])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_command" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160081 160098]))                  
                :type "int")
                nil [160074 160102])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_connection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160110 160130]))                  
                :type "int")
                nil [160103 160134])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_contact" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160142 160159]))                  
                :type "int")
                nil [160135 160163])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_datagram_address" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160171 160197]))                  
                :type "int")
                nil [160164 160201])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_exit_status" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160209 160230]))                  
                :type "int")
                nil [160202 160234])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_filter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160242 160258]))                  
                :type "int")
                nil [160235 160262])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_filter_multibyte_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160270 160298]))                  
                :type "int")
                nil [160263 160302])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_id" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160310 160322]))                  
                :type "int")
                nil [160303 160326])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_inherit_coding_system_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160334 160370]))                  
                :type "int")
                nil [160327 160374])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160382 160396]))                  
                :type "int")
                nil [160375 160400])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_mark" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160408 160422]))                  
                :type "int")
                nil [160401 160426])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160434 160448]))                  
                :type "int")
                nil [160427 160452])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160460 160475]))                  
                :type "int")
                nil [160453 160479])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_query_on_exit_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160487 160515]))                  
                :type "int")
                nil [160480 160519])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_running_child_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160527 160552]))                  
                :type "int")
                nil [160520 160556])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_send_eof" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160564 160582]))                  
                :type "int")
                nil [160557 160586])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_send_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160594 160615]))                  
                :type "int")
                nil [160587 160619])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_send_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160627 160648]))                  
                :type "int")
                nil [160620 160652])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_sentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160660 160678]))                  
                :type "int")
                nil [160653 160682])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_status" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160690 160706]))                  
                :type "int")
                nil [160683 160710])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_thread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160718 160734]))                  
                :type "int")
                nil [160711 160738])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_tty_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160746 160764]))                  
                :type "int")
                nil [160739 160768])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocess_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160776 160790]))                  
                :type "int")
                nil [160769 160794])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprocessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160802 160812]))                  
                :type "int")
                nil [160795 160816])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_cpu_log" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160824 160842]))                  
                :type "int")
                nil [160817 160846])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_cpu_running_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160854 160878]))                  
                :type "int")
                nil [160847 160882])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_cpu_start" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160890 160910]))                  
                :type "int")
                nil [160883 160914])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_cpu_stop" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160922 160941]))                  
                :type "int")
                nil [160915 160945])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_memory_log" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160953 160974]))                  
                :type "int")
                nil [160946 160978])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_memory_running_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160986 161013]))                  
                :type "int")
                nil [160979 161017])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_memory_start" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161025 161048]))                  
                :type "int")
                nil [161018 161052])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprofiler_memory_stop" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161060 161082]))                  
                :type "int")
                nil [161053 161086])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprog1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161094 161101])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161102 161112]))                  
                :type "int")
                nil [161087 161113])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprog2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161121 161128])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161129 161139]))                  
                :type "int")
                nil [161114 161140])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprogn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161148 161155])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161156 161166]))                  
                :type "int")
                nil [161141 161167])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [161194 161210])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpropertize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161218 161230])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161231 161236]))                  
                :type "int")
                nil [161211 161237])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fprovide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161245 161254]))                  
                :type "int")
                nil [161238 161258])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fpurecopy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161266 161276]))                  
                :type "int")
                nil [161259 161280])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fput" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161288 161293]))                  
                :type "int")
                nil [161281 161297])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fput_text_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161305 161324]))                  
                :type "int")
                nil [161298 161328])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fput_unicode_property_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161336 161367]))                  
                :type "int")
                nil [161329 161371])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fputhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161379 161388]))                  
                :type "int")
                nil [161372 161392])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fquery_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161400 161412]))                  
                :type "int")
                nil [161393 161416])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fquery_fontset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161424 161439]))                  
                :type "int")
                nil [161417 161443])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fquit_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161451 161465]))                  
                :type "int")
                nil [161444 161469])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fquo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161477 161482])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161483 161488]))                  
                :type "int")
                nil [161470 161489])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fquote" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161497 161504])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161505 161515]))                  
                :type "int")
                nil [161490 161516])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fraise_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161524 161537]))                  
                :type "int")
                nil [161517 161541])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frandom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161549 161557]))                  
                :type "int")
                nil [161542 161561])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frassoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161569 161577]))                  
                :type "int")
                nil [161562 161581])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frassq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161589 161596]))                  
                :type "int")
                nil [161582 161600])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fre_search_backward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161608 161628]))                  
                :type "int")
                nil [161601 161632])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fre_search_forward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161640 161659]))                  
                :type "int")
                nil [161633 161663])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161671 161677]))                  
                :type "int")
                nil [161664 161681])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161689 161702]))                  
                :type "int")
                nil [161682 161706])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161714 161725]))                  
                :type "int")
                nil [161707 161729])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_char_exclusive" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161737 161758]))                  
                :type "int")
                nil [161730 161762])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161770 161790]))                  
                :type "int")
                nil [161763 161794])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_command" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161802 161816]))                  
                :type "int")
                nil [161795 161820])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_event" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161828 161840]))                  
                :type "int")
                nil [161821 161844])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_from_minibuffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161852 161874]))                  
                :type "int")
                nil [161845 161878])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_from_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161886 161904]))                  
                :type "int")
                nil [161879 161908])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161916 161931]))                  
                :type "int")
                nil [161909 161935])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_key_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161943 161962]))                  
                :type "int")
                nil [161936 161966])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_key_sequence_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161974 162000]))                  
                :type "int")
                nil [161967 162004])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_no_blanks_input" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162012 162034]))                  
                :type "int")
                nil [162005 162038])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_non_nil_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162046 162074]))                  
                :type "int")
                nil [162039 162078])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162086 162099]))                  
                :type "int")
                nil [162079 162103])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fread_variable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162111 162126]))                  
                :type "int")
                nil [162104 162130])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecent_auto_save_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162138 162158]))                  
                :type "int")
                nil [162131 162162])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecent_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162170 162183]))                  
                :type "int")
                nil [162163 162187])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecenter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162195 162205]))                  
                :type "int")
                nil [162188 162209])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162217 162225])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162226 162231]))                  
                :type "int")
                nil [162210 162232])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecordp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162240 162249]))                  
                :type "int")
                nil [162233 162253])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecursion_depth" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162261 162278]))                  
                :type "int")
                nil [162254 162282])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frecursive_edit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162290 162306]))                  
                :type "int")
                nil [162283 162310])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fredirect_debugging_output" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162318 162345]))                  
                :type "int")
                nil [162311 162349])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fredirect_frame_focus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162357 162379]))                  
                :type "int")
                nil [162350 162383])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fredisplay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162391 162402]))                  
                :type "int")
                nil [162384 162406])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fredraw_display" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162414 162430]))                  
                :type "int")
                nil [162407 162434])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fredraw_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162442 162456]))                  
                :type "int")
                nil [162435 162460])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fregexp_quote" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162468 162482]))                  
                :type "int")
                nil [162461 162486])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fregion_beginning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162494 162512]))                  
                :type "int")
                nil [162487 162516])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fregion_end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162524 162536]))                  
                :type "int")
                nil [162517 162540])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fregister_ccl_program" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162548 162570]))                  
                :type "int")
                nil [162541 162574])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fregister_code_conversion_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162582 162612]))                  
                :type "int")
                nil [162575 162616])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frem" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162624 162629]))                  
                :type "int")
                nil [162617 162633])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fremhash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162641 162650]))                  
                :type "int")
                nil [162634 162654])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fremove_list_of_text_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162662 162694]))                  
                :type "int")
                nil [162655 162698])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fremove_text_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162706 162730]))                  
                :type "int")
                nil [162699 162734])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fremove_variable_watcher" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162742 162767]))                  
                :type "int")
                nil [162735 162771])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frename_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162779 162794]))                  
                :type "int")
                nil [162772 162798])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frename_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162806 162819]))                  
                :type "int")
                nil [162799 162823])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Freplace_buffer_contents" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162831 162856]))                  
                :type "int")
                nil [162824 162860])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Freplace_match" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162868 162883]))                  
                :type "int")
                nil [162861 162887])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frequire" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162895 162904]))                  
                :type "int")
                nil [162888 162908])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fresize_mini_window_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162916 162945]))                  
                :type "int")
                nil [162909 162949])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frestore_buffer_modified_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162957 162984]))                  
                :type "int")
                nil [162950 162988])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fresume_tty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162996 163008]))                  
                :type "int")
                nil [162989 163012])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Freverse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163020 163029]))                  
                :type "int")
                nil [163013 163033])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fright_divider_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163041 163062]))                  
                :type "int")
                nil [163034 163066])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fround" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163074 163081]))                  
                :type "int")
                nil [163067 163085])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_hook_with_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163093 163113])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163114 163119]))                  
                :type "int")
                nil [163086 163120])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_hook_with_args_until_failure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163128 163162])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163163 163168]))                  
                :type "int")
                nil [163121 163169])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_hook_with_args_until_success" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163177 163211])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163212 163217]))                  
                :type "int")
                nil [163170 163218])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_hook_wrapped" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163226 163244])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163245 163250]))                  
                :type "int")
                nil [163219 163251])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_hooks" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163259 163270])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163271 163276]))                  
                :type "int")
                nil [163252 163277])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_window_configuration_change_hook" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163285 163323]))                  
                :type "int")
                nil [163278 163327])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Frun_window_scroll_functions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163335 163364]))                  
                :type "int")
                nil [163328 163368])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsafe_length" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163376 163389]))                  
                :type "int")
                nil [163369 163393])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsave_current_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163401 163422])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163423 163433]))                  
                :type "int")
                nil [163394 163434])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsave_excursion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163442 163458])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163459 163469]))                  
                :type "int")
                nil [163435 163470])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsave_restriction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163478 163496])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163497 163507]))                  
                :type "int")
                nil [163471 163508])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscan_lists" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163516 163528]))                  
                :type "int")
                nil [163509 163532])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscan_sexps" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163540 163552]))                  
                :type "int")
                nil [163533 163556])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_bar_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163564 163583]))                  
                :type "int")
                nil [163557 163587])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_bar_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163595 163613]))                  
                :type "int")
                nil [163588 163617])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_down" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163625 163638]))                  
                :type "int")
                nil [163618 163642])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163650 163663]))                  
                :type "int")
                nil [163643 163667])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_other_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163675 163696]))                  
                :type "int")
                nil [163668 163700])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_other_window_down" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163708 163734]))                  
                :type "int")
                nil [163701 163738])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163746 163760]))                  
                :type "int")
                nil [163739 163764])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fscroll_up" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163772 163783]))                  
                :type "int")
                nil [163765 163787])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsearch_backward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163795 163812]))                  
                :type "int")
                nil [163788 163816])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsearch_forward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163824 163840]))                  
                :type "int")
                nil [163817 163844])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsecure_hash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163852 163865]))                  
                :type "int")
                nil [163845 163869])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsecure_hash_algorithms" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163877 163901]))                  
                :type "int")
                nil [163870 163905])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fselect_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163913 163927]))                  
                :type "int")
                nil [163906 163931])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fselect_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163939 163954]))                  
                :type "int")
                nil [163932 163958])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fselected_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163966 163982]))                  
                :type "int")
                nil [163959 163986])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fselected_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163994 164011]))                  
                :type "int")
                nil [163987 164015])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fself_insert_command" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164023 164044]))                  
                :type "int")
                nil [164016 164048])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsend_string_to_terminal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164056 164081]))                  
                :type "int")
                nil [164049 164085])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsequencep" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164093 164104]))                  
                :type "int")
                nil [164086 164108])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fserial_process_configure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164116 164142])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164143 164148]))                  
                :type "int")
                nil [164109 164149])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164157 164162]))                  
                :type "int")
                nil [164150 164166])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset__this_command_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164174 164198]))                  
                :type "int")
                nil [164167 164202])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_binary_mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164210 164227]))                  
                :type "int")
                nil [164203 164231])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164239 164251]))                  
                :type "int")
                nil [164232 164255])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_buffer_auto_saved" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164263 164286]))                  
                :type "int")
                nil [164256 164290])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_buffer_major_mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164298 164321]))                  
                :type "int")
                nil [164291 164325])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_buffer_modified_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164333 164356]))                  
                :type "int")
                nil [164326 164360])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_buffer_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164368 164390]))                  
                :type "int")
                nil [164361 164394])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_buffer_redisplay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164402 164424]))                  
                :type "int")
                nil [164395 164428])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_case_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164436 164452]))                  
                :type "int")
                nil [164429 164456])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_category_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164464 164484]))                  
                :type "int")
                nil [164457 164488])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_char_table_extra_slot" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164496 164523]))                  
                :type "int")
                nil [164489 164527])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_char_table_parent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164535 164558]))                  
                :type "int")
                nil [164528 164562])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_char_table_range" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164570 164592]))                  
                :type "int")
                nil [164563 164596])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_charset_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164604 164623]))                  
                :type "int")
                nil [164597 164627])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_charset_priority" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164635 164657])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164658 164663]))                  
                :type "int")
                nil [164628 164664])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_coding_system_priority" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164672 164700])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164701 164706]))                  
                :type "int")
                nil [164665 164707])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_default" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164715 164728]))                  
                :type "int")
                nil [164708 164732])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_default_file_modes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164740 164764]))                  
                :type "int")
                nil [164733 164768])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_default_toplevel_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164776 164804]))                  
                :type "int")
                nil [164769 164808])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_file_acl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164816 164830]))                  
                :type "int")
                nil [164809 164834])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_file_modes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164842 164858]))                  
                :type "int")
                nil [164835 164862])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_file_selinux_context" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164870 164896]))                  
                :type "int")
                nil [164863 164900])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_file_times" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164908 164924]))                  
                :type "int")
                nil [164901 164928])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_fontset_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164936 164954]))                  
                :type "int")
                nil [164929 164958])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_frame_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164966 164984]))                  
                :type "int")
                nil [164959 164988])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_frame_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164996 165016]))                  
                :type "int")
                nil [164989 165020])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_frame_selected_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165028 165055]))                  
                :type "int")
                nil [165021 165059])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_frame_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165067 165083]))                  
                :type "int")
                nil [165060 165087])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_frame_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165095 165112]))                  
                :type "int")
                nil [165088 165116])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_fringe_bitmap_face" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165124 165148]))                  
                :type "int")
                nil [165117 165152])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_input_interrupt_mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165160 165186]))                  
                :type "int")
                nil [165153 165190])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_input_meta_mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165198 165219]))                  
                :type "int")
                nil [165191 165223])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_input_mode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165231 165247]))                  
                :type "int")
                nil [165224 165251])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_keyboard_coding_system_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165259 165296]))                  
                :type "int")
                nil [165252 165300])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_keymap_parent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165308 165327]))                  
                :type "int")
                nil [165301 165331])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_marker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165339 165351]))                  
                :type "int")
                nil [165332 165355])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_marker_insertion_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165363 165390]))                  
                :type "int")
                nil [165356 165394])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_match_data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165402 165418]))                  
                :type "int")
                nil [165395 165422])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_minibuffer_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165430 165453]))                  
                :type "int")
                nil [165423 165457])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_mouse_pixel_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165465 165491]))                  
                :type "int")
                nil [165458 165495])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_mouse_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165503 165523]))                  
                :type "int")
                nil [165496 165527])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_network_process_option" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165535 165563]))                  
                :type "int")
                nil [165528 165567])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_output_flow_control" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165575 165600]))                  
                :type "int")
                nil [165568 165604])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165612 165632]))                  
                :type "int")
                nil [165605 165636])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165644 165671]))                  
                :type "int")
                nil [165637 165675])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_datagram_address" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165683 165713]))                  
                :type "int")
                nil [165676 165717])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_filter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165725 165745]))                  
                :type "int")
                nil [165718 165749])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_filter_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165757 165787]))                  
                :type "int")
                nil [165750 165791])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_inherit_coding_system_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165799 165839]))                  
                :type "int")
                nil [165792 165843])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165851 165870]))                  
                :type "int")
                nil [165844 165874])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_query_on_exit_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165882 165914]))                  
                :type "int")
                nil [165875 165918])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_sentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165926 165948]))                  
                :type "int")
                nil [165919 165952])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_thread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165960 165980]))                  
                :type "int")
                nil [165953 165984])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_process_window_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165992 166017]))                  
                :type "int")
                nil [165985 166021])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_quit_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166029 166044]))                  
                :type "int")
                nil [166022 166048])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_safe_terminal_coding_system_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166056 166098]))                  
                :type "int")
                nil [166049 166102])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_standard_case_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166110 166135]))                  
                :type "int")
                nil [166103 166139])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_syntax_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166147 166165]))                  
                :type "int")
                nil [166140 166169])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_terminal_coding_system_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166177 166214]))                  
                :type "int")
                nil [166170 166218])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_terminal_parameter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166226 166250]))                  
                :type "int")
                nil [166219 166254])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_text_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166262 166283]))                  
                :type "int")
                nil [166255 166287])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_time_zone_rule" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166295 166315]))                  
                :type "int")
                nil [166288 166319])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_visited_file_modtime" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166327 166353]))                  
                :type "int")
                nil [166320 166357])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166365 166384]))                  
                :type "int")
                nil [166358 166388])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_combination_limit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166396 166426]))                  
                :type "int")
                nil [166389 166430])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_configuration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166438 166464]))                  
                :type "int")
                nil [166431 166468])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_dedicated_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166476 166500]))                  
                :type "int")
                nil [166469 166504])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_display_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166512 166538]))                  
                :type "int")
                nil [166505 166542])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_fringes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166550 166570]))                  
                :type "int")
                nil [166543 166574])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_hscroll" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166582 166602]))                  
                :type "int")
                nil [166575 166606])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_margins" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166614 166634]))                  
                :type "int")
                nil [166607 166638])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_new_normal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166646 166669]))                  
                :type "int")
                nil [166639 166673])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_new_pixel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166681 166703]))                  
                :type "int")
                nil [166674 166707])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_new_total" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166715 166737]))                  
                :type "int")
                nil [166708 166741])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_next_buffers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166749 166774]))                  
                :type "int")
                nil [166742 166778])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_parameter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166786 166808]))                  
                :type "int")
                nil [166779 166812])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166820 166838]))                  
                :type "int")
                nil [166813 166842])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_prev_buffers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166850 166875]))                  
                :type "int")
                nil [166843 166879])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_redisplay_end_trigger" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166887 166921]))                  
                :type "int")
                nil [166880 166925])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_scroll_bars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166933 166957]))                  
                :type "int")
                nil [166926 166961])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_start" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166969 166987]))                  
                :type "int")
                nil [166962 166991])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_window_vscroll" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166999 167019]))                  
                :type "int")
                nil [166992 167023])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_xwidget_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167031 167050]))                  
                :type "int")
                nil [167024 167054])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fset_xwidget_query_on_exit_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167062 167094]))                  
                :type "int")
                nil [167055 167098])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsetcar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167106 167114]))                  
                :type "int")
                nil [167099 167118])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsetcdr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167126 167134]))                  
                :type "int")
                nil [167119 167138])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsetplist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167146 167156]))                  
                :type "int")
                nil [167139 167160])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsetq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167168 167174])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167175 167185]))                  
                :type "int")
                nil [167161 167186])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsetq_default" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167194 167208])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167209 167219]))                  
                :type "int")
                nil [167187 167220])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fshow_face_resources" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167228 167249]))                  
                :type "int")
                nil [167221 167253])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsignal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167271 167279]))                  
                :type "int")
                nil [167264 167283])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsignal_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167291 167307]))                  
                :type "int")
                nil [167284 167311])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167319 167324]))                  
                :type "int")
                nil [167312 167328])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsingle_key_description" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167336 167360]))                  
                :type "int")
                nil [167329 167364])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fskip_chars_backward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167372 167393]))                  
                :type "int")
                nil [167365 167397])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fskip_chars_forward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167405 167425]))                  
                :type "int")
                nil [167398 167429])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fskip_syntax_backward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167437 167459]))                  
                :type "int")
                nil [167430 167463])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fskip_syntax_forward" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167471 167492]))                  
                :type "int")
                nil [167464 167496])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsleep_for" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167504 167515]))                  
                :type "int")
                nil [167497 167519])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsnarf_documentation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167527 167548]))                  
                :type "int")
                nil [167520 167552])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167560 167566]))                  
                :type "int")
                nil [167553 167570])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsort_charsets" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167578 167593]))                  
                :type "int")
                nil [167571 167597])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fspecial_variable_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167605 167625]))                  
                :type "int")
                nil [167598 167629])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsplit_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167637 167649]))                  
                :type "int")
                nil [167630 167653])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsplit_window_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167661 167684]))                  
                :type "int")
                nil [167654 167688])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsqrt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167696 167702]))                  
                :type "int")
                nil [167689 167706])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstandard_case_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167714 167735]))                  
                :type "int")
                nil [167707 167739])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstandard_category_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167747 167772]))                  
                :type "int")
                nil [167740 167776])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstandard_syntax_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167784 167807]))                  
                :type "int")
                nil [167777 167811])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstart_kbd_macro" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167819 167836]))                  
                :type "int")
                nil [167812 167840])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstop_process" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167848 167862]))                  
                :type "int")
                nil [167841 167866])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstore_kbd_macro_event" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167874 167897]))                  
                :type "int")
                nil [167867 167901])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167909 167917])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167918 167923]))                  
                :type "int")
                nil [167902 167924])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_as_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167932 167953]))                  
                :type "int")
                nil [167925 167957])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_as_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167965 167984]))                  
                :type "int")
                nil [167958 167988])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_bytes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167996 168010]))                  
                :type "int")
                nil [167989 168014])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_collate_equalp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168022 168045]))                  
                :type "int")
                nil [168015 168049])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_collate_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168057 168079]))                  
                :type "int")
                nil [168050 168083])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_distance" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168091 168108]))                  
                :type "int")
                nil [168084 168112])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168120 168134]))                  
                :type "int")
                nil [168113 168138])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168146 168160]))                  
                :type "int")
                nil [168139 168164])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_make_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168172 168195]))                  
                :type "int")
                nil [168165 168199])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_make_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168207 168228]))                  
                :type "int")
                nil [168200 168232])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_match" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168240 168254]))                  
                :type "int")
                nil [168233 168258])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_to_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168266 168282]))                  
                :type "int")
                nil [168259 168286])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_to_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168294 168315]))                  
                :type "int")
                nil [168287 168319])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_to_number" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168327 168345]))                  
                :type "int")
                nil [168320 168349])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_to_syntax" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168357 168375]))                  
                :type "int")
                nil [168350 168379])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_to_unibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168387 168406]))                  
                :type "int")
                nil [168380 168410])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_version_lessp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168418 168440]))                  
                :type "int")
                nil [168411 168444])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fstring_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168452 168466]))                  
                :type "int")
                nil [168445 168470])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [168491 168507])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsub1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168515 168521]))                  
                :type "int")
                nil [168508 168525])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubr_arity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168533 168545]))                  
                :type "int")
                nil [168526 168549])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubr_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168557 168568]))                  
                :type "int")
                nil [168550 168572])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubrp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168580 168587]))                  
                :type "int")
                nil [168573 168591])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubst_char_in_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168599 168621]))                  
                :type "int")
                nil [168592 168625])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubstitute_command_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168633 168658]))                  
                :type "int")
                nil [168626 168662])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubstitute_in_file_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168670 168695]))                  
                :type "int")
                nil [168663 168699])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubstring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168707 168718]))                  
                :type "int")
                nil [168700 168722])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsubstring_no_properties" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168730 168755]))                  
                :type "int")
                nil [168723 168759])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsuspend_emacs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168767 168782]))                  
                :type "int")
                nil [168760 168786])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsuspend_tty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168794 168807]))                  
                :type "int")
                nil [168787 168811])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsuspicious_object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168819 168838]))                  
                :type "int")
                nil [168812 168842])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsxhash_eq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168850 168861]))                  
                :type "int")
                nil [168843 168865])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsxhash_eql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168873 168885]))                  
                :type "int")
                nil [168866 168889])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsxhash_equal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168897 168911]))                  
                :type "int")
                nil [168890 168915])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsymbol_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168923 168940]))                  
                :type "int")
                nil [168916 168944])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsymbol_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168952 168965]))                  
                :type "int")
                nil [168945 168969])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsymbol_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168977 168991]))                  
                :type "int")
                nil [168970 168995])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsymbol_value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169003 169017]))                  
                :type "int")
                nil [168996 169021])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [169042 169058])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsyntax_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169066 169080]))                  
                :type "int")
                nil [169059 169084])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsyntax_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169092 169108]))                  
                :type "int")
                nil [169085 169112])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsystem_groups" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169120 169135]))                  
                :type "int")
                nil [169113 169139])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsystem_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169147 169160]))                  
                :type "int")
                nil [169140 169164])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fsystem_users" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169172 169186]))                  
                :type "int")
                nil [169165 169190])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169198 169203]))                  
                :type "int")
                nil [169191 169207])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterminal_coding_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169215 169239]))                  
                :type "int")
                nil [169208 169243])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterminal_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169251 169266]))                  
                :type "int")
                nil [169244 169270])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterminal_live_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169278 169295]))                  
                :type "int")
                nil [169271 169299])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterminal_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169307 169322]))                  
                :type "int")
                nil [169300 169326])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterminal_parameter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169334 169354]))                  
                :type "int")
                nil [169327 169358])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterminal_parameters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169366 169387]))                  
                :type "int")
                nil [169359 169391])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fterpri" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169399 169407]))                  
                :type "int")
                nil [169392 169411])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftest_completion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169419 169436]))                  
                :type "int")
                nil [169412 169440])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftext_char_description" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169448 169471]))                  
                :type "int")
                nil [169441 169475])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftext_properties_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169483 169503]))                  
                :type "int")
                nil [169476 169507])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftext_property_any" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169515 169534]))                  
                :type "int")
                nil [169508 169538])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftext_property_not_all" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169546 169569]))                  
                :type "int")
                nil [169539 169573])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthis_command_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169581 169600]))                  
                :type "int")
                nil [169574 169604])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthis_command_keys_vector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169612 169638]))                  
                :type "int")
                nil [169605 169642])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthis_single_command_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169650 169676]))                  
                :type "int")
                nil [169643 169680])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthis_single_command_raw_keys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169688 169718]))                  
                :type "int")
                nil [169681 169722])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_alive_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169730 169746]))                  
                :type "int")
                nil [169723 169750])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_blocker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169758 169774]))                  
                :type "int")
                nil [169751 169778])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_join" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169786 169799]))                  
                :type "int")
                nil [169779 169803])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_last_error" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169811 169830]))                  
                :type "int")
                nil [169804 169834])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169842 169855]))                  
                :type "int")
                nil [169835 169859])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_signal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169867 169882]))                  
                :type "int")
                nil [169860 169886])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthread_yield" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169894 169908]))                  
                :type "int")
                nil [169887 169912])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthreadp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169920 169929]))                  
                :type "int")
                nil [169913 169933])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fthrow" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169951 169958]))                  
                :type "int")
                nil [169944 169962])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftime_add" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169970 169980]))                  
                :type "int")
                nil [169963 169984])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftime_less_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169992 170005]))                  
                :type "int")
                nil [169985 170009])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftime_subtract" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170017 170032]))                  
                :type "int")
                nil [170010 170036])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftimes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170044 170051])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170052 170057]))                  
                :type "int")
                nil [170037 170058])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftool_bar_get_system_style" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170066 170093]))                  
                :type "int")
                nil [170059 170097])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftool_bar_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170105 170122]))                  
                :type "int")
                nil [170098 170126])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftool_bar_pixel_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170134 170156]))                  
                :type "int")
                nil [170127 170160])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftop_level" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170178 170189]))                  
                :type "int")
                nil [170171 170193])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftrace_redisplay" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170201 170218]))                  
                :type "int")
                nil [170194 170222])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftrace_to_stderr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170230 170247])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170248 170253]))                  
                :type "int")
                nil [170223 170254])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftrack_mouse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170262 170275]))                  
                :type "int")
                nil [170255 170279])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftranslate_region_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170287 170314]))                  
                :type "int")
                nil [170280 170318])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftranspose_regions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170326 170345]))                  
                :type "int")
                nil [170319 170349])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftruncate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170357 170367]))                  
                :type "int")
                nil [170350 170371])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftry_completion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170379 170395]))                  
                :type "int")
                nil [170372 170399])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftty_display_color_cells" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170407 170432]))                  
                :type "int")
                nil [170400 170436])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftty_display_color_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170444 170465]))                  
                :type "int")
                nil [170437 170469])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftty_no_underline" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170477 170495]))                  
                :type "int")
                nil [170470 170499])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftty_suppress_bold_inverse_default_colors" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170507 170549]))                  
                :type "int")
                nil [170500 170553])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftty_top_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170561 170576]))                  
                :type "int")
                nil [170554 170580])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftty_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170588 170598]))                  
                :type "int")
                nil [170581 170602])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ftype_of" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170610 170619]))                  
                :type "int")
                nil [170603 170623])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fundo_boundary" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170631 170646]))                  
                :type "int")
                nil [170624 170650])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funencodable_char_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170658 170685]))                  
                :type "int")
                nil [170651 170689])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funhandled_file_name_directory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170697 170728]))                  
                :type "int")
                nil [170690 170732])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funibyte_char_to_multibyte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170740 170767]))                  
                :type "int")
                nil [170733 170771])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funibyte_string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170779 170795])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170796 170801]))                  
                :type "int")
                nil [170772 170802])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funicode_property_table_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170810 170843]))                  
                :type "int")
                nil [170803 170847])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funify_charset" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170855 170870]))                  
                :type "int")
                nil [170848 170874])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funintern" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170882 170892]))                  
                :type "int")
                nil [170875 170896])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funix_sync" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170904 170915]))                  
                :type "int")
                nil [170897 170919])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funlock_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170927 170942]))                  
                :type "int")
                nil [170920 170946])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Funwind_protect" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170954 170970])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170971 170981]))                  
                :type "int")
                nil [170947 170982])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fupcase" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [170990 170998]))                  
                :type "int")
                nil [170983 171002])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fupcase_initials" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171010 171027]))                  
                :type "int")
                nil [171003 171031])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fupcase_initials_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171039 171063]))                  
                :type "int")
                nil [171032 171067])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fupcase_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171075 171090]))                  
                :type "int")
                nil [171068 171094])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fupcase_word" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171102 171115]))                  
                :type "int")
                nil [171095 171119])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuse_global_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171127 171143]))                  
                :type "int")
                nil [171120 171147])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuse_local_map" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171155 171170]))                  
                :type "int")
                nil [171148 171174])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuser_full_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171182 171198]))                  
                :type "int")
                nil [171175 171202])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuser_login_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171210 171227]))                  
                :type "int")
                nil [171203 171231])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuser_ptrp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171239 171250]))                  
                :type "int")
                nil [171232 171254])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuser_real_login_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171262 171284]))                  
                :type "int")
                nil [171255 171288])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuser_real_uid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171296 171311]))                  
                :type "int")
                nil [171289 171315])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fuser_uid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171323 171333]))                  
                :type "int")
                nil [171316 171337])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvariable_binding_locus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171345 171369]))                  
                :type "int")
                nil [171338 171373])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvconcat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171381 171390])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171391 171396]))                  
                :type "int")
                nil [171374 171397])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171405 171413])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171414 171419]))                  
                :type "int")
                nil [171398 171420])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvector_or_char_table_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171428 171452]))                  
                :type "int")
                nil [171421 171456])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvectorp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171464 171473]))                  
                :type "int")
                nil [171457 171477])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fverify_visited_file_modtime" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171485 171514]))                  
                :type "int")
                nil [171478 171518])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvertical_motion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171526 171543]))                  
                :type "int")
                nil [171519 171547])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvisible_frame_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171555 171575]))                  
                :type "int")
                nil [171548 171579])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fvisited_file_modtime" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171587 171609]))                  
                :type "int")
                nil [171580 171613])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwaiting_for_user_input_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171621 171647]))                  
                :type "int")
                nil [171614 171651])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwhere_is_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171659 171678]))                  
                :type "int")
                nil [171652 171682])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwhile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171690 171697])
                    ("" variable (:type ("UNEVALLED" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171698 171708]))                  
                :type "int")
                nil [171683 171709])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwiden" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171717 171724]))                  
                :type "int")
                nil [171710 171728])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwidget_apply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171736 171750])
                    ("" variable (:type ("MANY" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171751 171756]))                  
                :type "int")
                nil [171729 171757])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwidget_get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171765 171777]))                  
                :type "int")
                nil [171758 171781])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwidget_put" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171789 171801]))                  
                :type "int")
                nil [171782 171805])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_at" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171813 171824]))                  
                :type "int")
                nil [171806 171828])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_body_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171836 171856]))                  
                :type "int")
                nil [171829 171860])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_body_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171868 171887]))                  
                :type "int")
                nil [171861 171891])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_bottom_divider_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171899 171928]))                  
                :type "int")
                nil [171892 171932])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171940 171955]))                  
                :type "int")
                nil [171933 171959])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_combination_limit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171967 171993]))                  
                :type "int")
                nil [171960 171997])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_configuration_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172005 172033]))                  
                :type "int")
                nil [171998 172037])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_configuration_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172045 172069]))                  
                :type "int")
                nil [172038 172073])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_dedicated_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172081 172101]))                  
                :type "int")
                nil [172074 172105])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_display_table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172113 172135]))                  
                :type "int")
                nil [172106 172139])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172147 172159]))                  
                :type "int")
                nil [172140 172163])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172171 172185]))                  
                :type "int")
                nil [172164 172189])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_fringes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172197 172213]))                  
                :type "int")
                nil [172190 172217])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_header_line_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172225 172252]))                  
                :type "int")
                nil [172218 172256])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_hscroll" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172264 172280]))                  
                :type "int")
                nil [172257 172284])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_left_child" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172292 172311]))                  
                :type "int")
                nil [172285 172315])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_left_column" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172323 172343]))                  
                :type "int")
                nil [172316 172347])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_line_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172355 172375]))                  
                :type "int")
                nil [172348 172379])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_lines_pixel_dimensions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172387 172418]))                  
                :type "int")
                nil [172380 172422])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172430 172443]))                  
                :type "int")
                nil [172423 172447])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_list_1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172455 172470]))                  
                :type "int")
                nil [172448 172474])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_live_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172482 172497]))                  
                :type "int")
                nil [172475 172501])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_margins" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172509 172525]))                  
                :type "int")
                nil [172502 172529])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_minibuffer_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172537 172558]))                  
                :type "int")
                nil [172530 172562])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_mode_line_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172570 172595]))                  
                :type "int")
                nil [172563 172599])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_new_normal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172607 172626]))                  
                :type "int")
                nil [172600 172630])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_new_pixel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172638 172656]))                  
                :type "int")
                nil [172631 172660])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_new_total" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172668 172686]))                  
                :type "int")
                nil [172661 172690])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_next_buffers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172698 172719]))                  
                :type "int")
                nil [172691 172723])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_next_sibling" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172731 172752]))                  
                :type "int")
                nil [172724 172756])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_normal_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172764 172784]))                  
                :type "int")
                nil [172757 172788])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_old_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172796 172814]))                  
                :type "int")
                nil [172789 172818])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_parameter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172826 172844]))                  
                :type "int")
                nil [172819 172848])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_parameters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172856 172875]))                  
                :type "int")
                nil [172849 172879])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_parent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172887 172902]))                  
                :type "int")
                nil [172880 172906])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_pixel_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172914 172935]))                  
                :type "int")
                nil [172907 172939])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_pixel_height_before_size_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172947 172987]))                  
                :type "int")
                nil [172940 172991])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_pixel_left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172999 173018]))                  
                :type "int")
                nil [172992 173022])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_pixel_top" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173030 173048]))                  
                :type "int")
                nil [173023 173052])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_pixel_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173060 173080]))                  
                :type "int")
                nil [173053 173084])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_pixel_width_before_size_change" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173092 173131]))                  
                :type "int")
                nil [173085 173135])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_point" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173143 173157]))                  
                :type "int")
                nil [173136 173161])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_prev_buffers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173169 173190]))                  
                :type "int")
                nil [173162 173194])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_prev_sibling" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173202 173223]))                  
                :type "int")
                nil [173195 173227])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_redisplay_end_trigger" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173235 173265]))                  
                :type "int")
                nil [173228 173269])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_resize_apply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173277 173298]))                  
                :type "int")
                nil [173270 173302])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_resize_apply_total" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173310 173337]))                  
                :type "int")
                nil [173303 173341])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_right_divider_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173349 173377]))                  
                :type "int")
                nil [173342 173381])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_scroll_bar_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173389 173415]))                  
                :type "int")
                nil [173382 173419])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_scroll_bar_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173427 173452]))                  
                :type "int")
                nil [173420 173456])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_scroll_bars" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173464 173484]))                  
                :type "int")
                nil [173457 173488])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_start" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173496 173510]))                  
                :type "int")
                nil [173489 173514])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_system" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173522 173537]))                  
                :type "int")
                nil [173515 173541])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_text_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173549 173569]))                  
                :type "int")
                nil [173542 173573])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_text_pixel_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173581 173605]))                  
                :type "int")
                nil [173574 173609])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_text_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173617 173636]))                  
                :type "int")
                nil [173610 173640])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_top_child" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173648 173666]))                  
                :type "int")
                nil [173641 173670])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_top_line" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173678 173695]))                  
                :type "int")
                nil [173671 173699])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_total_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173707 173728]))                  
                :type "int")
                nil [173700 173732])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_total_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173740 173760]))                  
                :type "int")
                nil [173733 173764])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_use_time" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173772 173789]))                  
                :type "int")
                nil [173765 173793])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_valid_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173801 173817]))                  
                :type "int")
                nil [173794 173821])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindow_vscroll" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173829 173845]))                  
                :type "int")
                nil [173822 173849])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwindowp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173857 173866]))                  
                :type "int")
                nil [173850 173870])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwrite_char" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173878 173890]))                  
                :type "int")
                nil [173871 173894])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fwrite_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173902 173916]))                  
                :type "int")
                nil [173895 173920])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_backspace_delete_keys_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173928 173955]))                  
                :type "int")
                nil [173921 173959])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_change_window_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173967 173993]))                  
                :type "int")
                nil [173960 173997])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_close_connection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174005 174025]))                  
                :type "int")
                nil [173998 174029])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_create_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174037 174053]))                  
                :type "int")
                nil [174030 174057])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_delete_window_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174065 174091]))                  
                :type "int")
                nil [174058 174095])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_disown_selection_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174103 174132]))                  
                :type "int")
                nil [174096 174136])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_backing_store" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174144 174169]))                  
                :type "int")
                nil [174137 174173])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_color_cells" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174181 174204]))                  
                :type "int")
                nil [174174 174208])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_grayscale_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174216 174239]))                  
                :type "int")
                nil [174209 174243])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174251 174267]))                  
                :type "int")
                nil [174244 174271])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_mm_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174279 174300]))                  
                :type "int")
                nil [174272 174304])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_mm_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174312 174332]))                  
                :type "int")
                nil [174305 174336])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_monitor_attributes_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174344 174379]))                  
                :type "int")
                nil [174337 174383])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_pixel_height" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174391 174415]))                  
                :type "int")
                nil [174384 174419])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_pixel_width" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174427 174450]))                  
                :type "int")
                nil [174420 174454])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_planes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174462 174480]))                  
                :type "int")
                nil [174455 174484])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_save_under" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174492 174514]))                  
                :type "int")
                nil [174485 174518])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_screens" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174526 174545]))                  
                :type "int")
                nil [174519 174549])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_display_visual_class" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174557 174581]))                  
                :type "int")
                nil [174550 174585])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_double_buffered_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174593 174614]))                  
                :type "int")
                nil [174586 174618])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_export_frames" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174626 174643]))                  
                :type "int")
                nil [174619 174647])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_family_fonts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174655 174671]))                  
                :type "int")
                nil [174648 174675])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_file_dialog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174683 174698]))                  
                :type "int")
                nil [174676 174702])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_focus_frame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174710 174725]))                  
                :type "int")
                nil [174703 174729])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_frame_edges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174737 174752]))                  
                :type "int")
                nil [174730 174756])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_frame_geometry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174764 174782]))                  
                :type "int")
                nil [174757 174786])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_frame_list_z_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174794 174816]))                  
                :type "int")
                nil [174787 174820])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_frame_restack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174828 174845]))                  
                :type "int")
                nil [174821 174849])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_get_atom_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174857 174874]))                  
                :type "int")
                nil [174850 174878])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_get_page_setup" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174886 174904]))                  
                :type "int")
                nil [174879 174908])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_get_resource" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174916 174932]))                  
                :type "int")
                nil [174909 174936])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_get_selection_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174944 174970]))                  
                :type "int")
                nil [174937 174974])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_hide_tip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174982 174994]))                  
                :type "int")
                nil [174975 174998])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_list_fonts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175006 175020]))                  
                :type "int")
                nil [174999 175024])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_load_color_file" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175032 175051]))                  
                :type "int")
                nil [175025 175055])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_menu_bar_open_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175063 175089]))                  
                :type "int")
                nil [175056 175093])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_mouse_absolute_pixel_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175101 175134]))                  
                :type "int")
                nil [175094 175138])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_open_connection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175146 175165]))                  
                :type "int")
                nil [175139 175169])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_own_selection_internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175177 175203]))                  
                :type "int")
                nil [175170 175207])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_page_setup_dialog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175215 175236]))                  
                :type "int")
                nil [175208 175240])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_parse_geometry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175248 175266]))                  
                :type "int")
                nil [175241 175270])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_popup_dialog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175278 175294]))                  
                :type "int")
                nil [175271 175298])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_popup_menu" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175306 175320]))                  
                :type "int")
                nil [175299 175324])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_print_frames_dialog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175332 175355]))                  
                :type "int")
                nil [175325 175359])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_register_dnd_atom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175367 175388]))                  
                :type "int")
                nil [175360 175392])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_select_font" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175400 175415]))                  
                :type "int")
                nil [175393 175419])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_selection_exists_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175427 175449]))                  
                :type "int")
                nil [175420 175453])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_selection_owner_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175461 175482]))                  
                :type "int")
                nil [175454 175486])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_send_client_message" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175494 175517]))                  
                :type "int")
                nil [175487 175521])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_server_max_request_size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175529 175556]))                  
                :type "int")
                nil [175522 175560])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_server_vendor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175568 175585]))                  
                :type "int")
                nil [175561 175589])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_server_version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175597 175615]))                  
                :type "int")
                nil [175590 175619])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_set_mouse_absolute_pixel_position" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175627 175664]))                  
                :type "int")
                nil [175620 175668])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_show_tip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175676 175688]))                  
                :type "int")
                nil [175669 175692])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_synchronize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175700 175715]))                  
                :type "int")
                nil [175693 175719])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_uses_old_gtk_dialog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175727 175750]))                  
                :type "int")
                nil [175720 175754])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_window_property" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175762 175781]))                  
                :type "int")
                nil [175755 175785])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_window_property_attributes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175793 175823]))                  
                :type "int")
                nil [175786 175827])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fx_wm_set_size_hint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175835 175855]))                  
                :type "int")
                nil [175828 175859])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxw_color_defined_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175867 175887]))                  
                :type "int")
                nil [175860 175891])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxw_color_values" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175899 175916]))                  
                :type "int")
                nil [175892 175920])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxw_display_color_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175928 175948]))                  
                :type "int")
                nil [175921 175952])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_buffer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175960 175976]))                  
                :type "int")
                nil [175953 175980])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175988 176002]))                  
                :type "int")
                nil [175981 176006])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176014 176029]))                  
                :type "int")
                nil [176007 176033])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_query_on_exit_flag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176041 176069]))                  
                :type "int")
                nil [176034 176073])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_resize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176081 176097]))                  
                :type "int")
                nil [176074 176101])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_size_request" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176109 176131]))                  
                :type "int")
                nil [176102 176135])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_view_info" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176143 176162]))                  
                :type "int")
                nil [176136 176166])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_view_lookup" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176174 176195]))                  
                :type "int")
                nil [176167 176199])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_view_model" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176207 176227]))                  
                :type "int")
                nil [176200 176231])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_view_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176239 176255]))                  
                :type "int")
                nil [176232 176259])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_view_window" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176267 176288]))                  
                :type "int")
                nil [176260 176292])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_webkit_execute_script" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176300 176331]))                  
                :type "int")
                nil [176293 176335])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_webkit_goto_uri" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176343 176368]))                  
                :type "int")
                nil [176336 176372])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidget_webkit_zoom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176380 176401]))                  
                :type "int")
                nil [176373 176405])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fxwidgetp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176413 176423]))                  
                :type "int")
                nil [176406 176427])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fyes_or_no_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176435 176448]))                  
                :type "int")
                nil [176428 176452])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fzlib_available_p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176460 176478]))                  
                :type "int")
                nil [176453 176482])
            ("EXFUN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Fzlib_decompress_region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176490 176514]))                  
                :type "int")
                nil [176483 176518])
            ("Qnil" variable (:constant-flag t) nil [198222 198226]))          
      :file "globals.h"
      :pointmax 260126
      :fsize 260125
      :lastmodtime '(23408 44897 154745 202000)
      :unmatched-syntax '((number 176515 . 176516) (number 176479 . 176480) (number 176449 . 176450) (number 176424 . 176425) (number 176402 . 176403) (number 176369 . 176370) (number 176332 . 176333) (number 176289 . 176290) (number 176256 . 176257) (number 176228 . 176229) (number 176196 . 176197) (number 176163 . 176164) (number 176132 . 176133) (number 176098 . 176099) (number 176070 . 176071) (number 176030 . 176031) (number 176003 . 176004) (number 175977 . 175978) (number 175949 . 175950) (number 175917 . 175918) (number 175888 . 175889) (number 175856 . 175857) (number 175824 . 175825) (number 175782 . 175783) (number 175751 . 175752) (number 175716 . 175717) (number 175689 . 175690) (number 175665 . 175666) (number 175616 . 175617) (number 175586 . 175587) (number 175557 . 175558) (number 175518 . 175519) (number 175483 . 175484) (number 175450 . 175451) (number 175416 . 175417) (number 175389 . 175390) (number 175356 . 175357) (number 175321 . 175322) (number 175295 . 175296) (number 175267 . 175268) (number 175237 . 175238) (number 175204 . 175205) (number 175166 . 175167) (number 175135 . 175136) (number 175090 . 175091) (number 175052 . 175053) (number 175021 . 175022) (number 174995 . 174996) (number 174971 . 174972) (number 174933 . 174934) (number 174905 . 174906) (number 174875 . 174876) (number 174846 . 174847) (number 174817 . 174818) (number 174783 . 174784) (number 174753 . 174754) (number 174726 . 174727) (number 174699 . 174700) (number 174672 . 174673) (number 174644 . 174645) (number 174615 . 174616) (number 174582 . 174583) (number 174546 . 174547) (number 174515 . 174516) (number 174481 . 174482) (number 174451 . 174452) (number 174416 . 174417) (number 174380 . 174381) (number 174333 . 174334) (number 174301 . 174302) (number 174268 . 174269) (number 174240 . 174241) (number 174205 . 174206) (number 174170 . 174171) (number 174133 . 174134) (number 174092 . 174093) (number 174054 . 174055) (number 174026 . 174027) (number 173994 . 173995) (number 173956 . 173957) (number 173917 . 173918) (number 173891 . 173892) (number 173867 . 173868) (number 173846 . 173847) (number 173818 . 173819) (number 173790 . 173791) (number 173761 . 173762) (number 173729 . 173730) (number 173696 . 173697) (number 173667 . 173668) (number 173637 . 173638) (number 173606 . 173607) (number 173570 . 173571) (number 173538 . 173539) (number 173511 . 173512) (number 173485 . 173486) (number 173453 . 173454) (number 173416 . 173417) (number 173378 . 173379) (number 173338 . 173339) (number 173299 . 173300) (number 173266 . 173267) (number 173224 . 173225) (number 173191 . 173192) (number 173158 . 173159) (number 173132 . 173133) (number 173081 . 173082) (number 173049 . 173050) (number 173019 . 173020) (number 172988 . 172989) (number 172936 . 172937) (number 172903 . 172904) (number 172876 . 172877) (number 172845 . 172846) (number 172815 . 172816) (number 172785 . 172786) (number 172753 . 172754) (number 172720 . 172721) (number 172687 . 172688) (number 172657 . 172658) (number 172627 . 172628) (number 172596 . 172597) (number 172559 . 172560) (number 172526 . 172527) (number 172498 . 172499) (number 172471 . 172472) (number 172444 . 172445) (number 172419 . 172420) (number 172376 . 172377) (number 172344 . 172345) (number 172312 . 172313) (number 172281 . 172282) (number 172253 . 172254) (number 172214 . 172215) (number 172186 . 172187) (number 172160 . 172161) (number 172136 . 172137) (number 172102 . 172103) (number 172070 . 172071) (number 172034 . 172035) (number 171994 . 171995) (number 171956 . 171957) (number 171929 . 171930) (number 171888 . 171889) (number 171857 . 171858) (number 171825 . 171826) (number 171802 . 171803) (number 171778 . 171779) (number 171725 . 171726) (number 171679 . 171680) (number 171648 . 171649) (number 171610 . 171611) (number 171576 . 171577) (number 171544 . 171545) (number 171515 . 171516) (number 171474 . 171475) (number 171453 . 171454) (number 171370 . 171371) (number 171334 . 171335) (number 171312 . 171313) (number 171285 . 171286) (number 171251 . 171252) (number 171228 . 171229) (number 171199 . 171200) (number 171171 . 171172) (number 171144 . 171145) (number 171116 . 171117) (number 171091 . 171092) (number 171064 . 171065) (number 171028 . 171029) (number 170999 . 171000) (number 170943 . 170944) (number 170916 . 170917) (number 170893 . 170894) (number 170871 . 170872) (number 170844 . 170845) (number 170768 . 170769) (number 170729 . 170730) (number 170686 . 170687) (number 170647 . 170648) (number 170620 . 170621) (number 170599 . 170600) (number 170577 . 170578) (number 170550 . 170551) (number 170496 . 170497) (number 170466 . 170467) (number 170433 . 170434) (number 170396 . 170397) (number 170368 . 170369) (number 170346 . 170347) (number 170315 . 170316) (number 170276 . 170277) (number 170219 . 170220) (number 170190 . 170191) (number 170157 . 170158) (number 170123 . 170124) (number 170094 . 170095) (number 170033 . 170034) (number 170006 . 170007) (number 169981 . 169982) (number 169959 . 169960) (number 169930 . 169931) (number 169909 . 169910) (number 169883 . 169884) (number 169856 . 169857) (number 169831 . 169832) (number 169800 . 169801) (number 169775 . 169776) (number 169747 . 169748) (number 169719 . 169720) (number 169677 . 169678) (number 169639 . 169640) (number 169601 . 169602) (number 169570 . 169571) (number 169535 . 169536) (number 169504 . 169505) (number 169472 . 169473) (number 169437 . 169438) (number 169408 . 169409) (number 169388 . 169389) (number 169355 . 169356) (number 169323 . 169324) (number 169296 . 169297) (number 169267 . 169268) (number 169240 . 169241) (number 169204 . 169205) (number 169187 . 169188) (number 169161 . 169162) (number 169136 . 169137) (number 169109 . 169110) (number 169081 . 169082) (semantic-list 169028 . 169041) (symbol 169022 . 169027) (number 169039 . 169040) (number 169018 . 169019) (number 168992 . 168993) (number 168966 . 168967) (number 168941 . 168942) (number 168912 . 168913) (number 168886 . 168887) (number 168862 . 168863) (number 168839 . 168840) (number 168808 . 168809) (number 168783 . 168784) (number 168756 . 168757) (number 168719 . 168720) (number 168696 . 168697) (number 168659 . 168660) (number 168622 . 168623) (number 168588 . 168589) (number 168569 . 168570) (number 168546 . 168547) (number 168522 . 168523) (semantic-list 168477 . 168490) (symbol 168471 . 168476) (number 168488 . 168489) (number 168467 . 168468) (number 168441 . 168442) (number 168407 . 168408) (number 168376 . 168377) (number 168346 . 168347) (number 168316 . 168317) (number 168283 . 168284) (number 168255 . 168256) (number 168229 . 168230) (number 168196 . 168197) (number 168161 . 168162) (number 168135 . 168136) (number 168109 . 168110) (number 168080 . 168081) (number 168046 . 168047) (number 168011 . 168012) (number 167985 . 167986) (number 167954 . 167955) (number 167898 . 167899) (number 167863 . 167864) (number 167837 . 167838) (number 167808 . 167809) (number 167773 . 167774) (number 167736 . 167737) (number 167703 . 167704) (number 167685 . 167686) (number 167650 . 167651) (number 167626 . 167627) (number 167594 . 167595) (number 167567 . 167568) (number 167549 . 167550) (number 167516 . 167517) (number 167493 . 167494) (number 167460 . 167461) (number 167426 . 167427) (number 167394 . 167395) (number 167361 . 167362) (number 167325 . 167326) (number 167308 . 167309) (number 167280 . 167281) (number 167250 . 167251) (number 167157 . 167158) (number 167135 . 167136) (number 167115 . 167116) (number 167095 . 167096) (number 167051 . 167052) (number 167020 . 167021) (number 166988 . 166989) (number 166958 . 166959) (number 166922 . 166923) (number 166876 . 166877) (number 166839 . 166840) (number 166809 . 166810) (number 166775 . 166776) (number 166738 . 166739) (number 166704 . 166705) (number 166670 . 166671) (number 166635 . 166636) (number 166603 . 166604) (number 166571 . 166572) (number 166539 . 166540) (number 166501 . 166502) (number 166465 . 166466) (number 166427 . 166428) (number 166385 . 166386) (number 166354 . 166355) (number 166316 . 166317) (number 166284 . 166285) (number 166251 . 166252) (number 166215 . 166216) (number 166166 . 166167) (number 166136 . 166137) (number 166099 . 166100) (number 166045 . 166046) (number 166018 . 166019) (number 165981 . 165982) (number 165949 . 165950) (number 165915 . 165916) (number 165871 . 165872) (number 165840 . 165841) (number 165788 . 165789) (number 165746 . 165747) (number 165714 . 165715) (number 165672 . 165673) (number 165633 . 165634) (number 165601 . 165602) (number 165564 . 165565) (number 165524 . 165525) (number 165492 . 165493) (number 165454 . 165455) (number 165419 . 165420) (number 165391 . 165392) (number 165352 . 165353) (number 165328 . 165329) (number 165297 . 165298) (number 165248 . 165249) (number 165220 . 165221) (number 165187 . 165188) (number 165149 . 165150) (number 165113 . 165114) (number 165084 . 165085) (number 165056 . 165057) (number 165017 . 165018) (number 164985 . 164986) (number 164955 . 164956) (number 164925 . 164926) (number 164897 . 164898) (number 164859 . 164860) (number 164831 . 164832) (number 164805 . 164806) (number 164765 . 164766) (number 164729 . 164730) (number 164624 . 164625) (number 164593 . 164594) (number 164559 . 164560) (number 164524 . 164525) (number 164485 . 164486) (number 164453 . 164454) (number 164425 . 164426) (number 164391 . 164392) (number 164357 . 164358) (number 164322 . 164323) (number 164287 . 164288) (number 164252 . 164253) (number 164228 . 164229) (number 164199 . 164200) (number 164163 . 164164) (number 164105 . 164106) (number 164082 . 164083) (number 164045 . 164046) (number 164012 . 164013) (number 163983 . 163984) (number 163955 . 163956) (number 163928 . 163929) (number 163902 . 163903) (number 163866 . 163867) (number 163841 . 163842) (number 163813 . 163814) (number 163784 . 163785) (number 163761 . 163762) (number 163735 . 163736) (number 163697 . 163698) (number 163664 . 163665) (number 163639 . 163640) (number 163614 . 163615) (number 163584 . 163585) (number 163553 . 163554) (number 163529 . 163530) (number 163390 . 163391) (number 163365 . 163366) (number 163324 . 163325) (number 163082 . 163083) (number 163063 . 163064) (number 163030 . 163031) (number 163009 . 163010) (number 162985 . 162986) (number 162946 . 162947) (number 162905 . 162906) (number 162884 . 162885) (number 162857 . 162858) (number 162820 . 162821) (number 162795 . 162796) (number 162768 . 162769) (number 162731 . 162732) (number 162695 . 162696) (number 162651 . 162652) (number 162630 . 162631) (number 162613 . 162614) (number 162571 . 162572) (number 162537 . 162538) (number 162513 . 162514) (number 162483 . 162484) (number 162457 . 162458) (number 162431 . 162432) (number 162403 . 162404) (number 162380 . 162381) (number 162346 . 162347) (number 162307 . 162308) (number 162279 . 162280) (number 162250 . 162251) (number 162206 . 162207) (number 162184 . 162185) (number 162159 . 162160) (number 162127 . 162128) (number 162100 . 162101) (number 162075 . 162076) (number 162035 . 162036) (number 162001 . 162002) (number 161963 . 161964) (number 161932 . 161933) (number 161905 . 161906) (number 161875 . 161876) (number 161841 . 161842) (number 161817 . 161818) (number 161791 . 161792) (number 161759 . 161760) (number 161726 . 161727) (number 161703 . 161704) (number 161678 . 161679) (number 161660 . 161661) (number 161629 . 161630) (number 161597 . 161598) (number 161578 . 161579) (number 161558 . 161559) (number 161538 . 161539) (number 161466 . 161467) (number 161440 . 161441) (number 161413 . 161414) (number 161389 . 161390) (number 161368 . 161369) (number 161325 . 161326) (number 161294 . 161295) (number 161277 . 161278) (number 161255 . 161256) (semantic-list 161174 . 161193) (symbol 161168 . 161173) (number 161191 . 161192) (number 161083 . 161084) (number 161049 . 161050) (number 161014 . 161015) (number 160975 . 160976) (number 160942 . 160943) (number 160911 . 160912) (number 160879 . 160880) (number 160843 . 160844) (number 160813 . 160814) (number 160791 . 160792) (number 160765 . 160766) (number 160735 . 160736) (number 160707 . 160708) (number 160679 . 160680) (number 160649 . 160650) (number 160616 . 160617) (number 160583 . 160584) (number 160553 . 160554) (number 160516 . 160517) (number 160476 . 160477) (number 160449 . 160450) (number 160423 . 160424) (number 160397 . 160398) (number 160371 . 160372) (number 160323 . 160324) (number 160299 . 160300) (number 160259 . 160260) (number 160231 . 160232) (number 160198 . 160199) (number 160160 . 160161) (number 160131 . 160132) (number 160099 . 160100) (number 160070 . 160071) (number 160035 . 160036) (number 160007 . 160008) (number 159975 . 159976) (number 159945 . 159946) (number 159926 . 159927) (number 159907 . 159908) (number 159878 . 159879) (number 159859 . 159860) (number 159830 . 159831) (number 159785 . 159786) (number 159735 . 159736) (number 159697 . 159698) (number 159660 . 159661) (number 159632 . 159633) (number 159589 . 159590) (number 159562 . 159563) (number 159528 . 159529) (number 159503 . 159504) (number 159476 . 159477) (number 159444 . 159445) (number 159410 . 159411) (number 159375 . 159376) (number 159345 . 159346) (number 159317 . 159318) (number 159280 . 159281) (number 159250 . 159251) (number 159227 . 159228) (number 159197 . 159198) (number 159174 . 159175) (number 159148 . 159149) (number 159108 . 159109) (number 159085 . 159086) (number 159059 . 159060) (number 159036 . 159037) (number 159003 . 159004) (number 158971 . 158972) (number 158946 . 158947) (number 158921 . 158922) (number 158899 . 158900) (number 158872 . 158873) (number 158842 . 158843) (number 158817 . 158818) (number 158785 . 158786) (number 158758 . 158759) (number 158733 . 158734) (number 158708 . 158709) (number 158680 . 158681) (number 158640 . 158641) (number 158590 . 158591) (number 158557 . 158558) (number 158528 . 158529) (number 158505 . 158506) (semantic-list 158447 . 158460) (symbol 158441 . 158446) (number 158458 . 158459) (number 158437 . 158438) (number 158407 . 158408) (semantic-list 158351 . 158361) (symbol 158345 . 158350) (number 158359 . 158360) (number 158341 . 158342) (number 158321 . 158322) (number 158304 . 158305) (semantic-list 158256 . 158268) (symbol 158250 . 158255) (number 158266 . 158267) (number 158246 . 158247) (number 158221 . 158222) (number 158180 . 158181) (number 158134 . 158135) (number 158092 . 158093) (number 158058 . 158059) (number 158025 . 158026) (number 158001 . 158002) (number 157962 . 157963) (number 157929 . 157930) (number 157904 . 157905) (number 157868 . 157869) (number 157832 . 157833) (semantic-list 157766 . 157779) (symbol 157760 . 157765) (number 157777 . 157778) (number 157756 . 157757) (number 157726 . 157727) (number 157706 . 157707) (number 157680 . 157681) (number 157656 . 157657) (number 157632 . 157633) (number 157600 . 157601) (number 157561 . 157562) (number 157528 . 157529) (number 157500 . 157501) (number 157467 . 157468) (number 157441 . 157442) (number 157413 . 157414) (number 157379 . 157380) (semantic-list 157317 . 157340) (symbol 157311 . 157316) (number 157338 . 157339) (number 157307 . 157308) (number 157274 . 157275) (number 157237 . 157238) (number 157202 . 157203) (number 157163 . 157164) (number 157127 . 157128) (number 157102 . 157103) (number 157071 . 157072) (number 157031 . 157032) (number 156996 . 156997) (number 156965 . 156966) (number 156935 . 156936) (number 156888 . 156889) (number 156752 . 156753) (number 156718 . 156719) (number 156682 . 156683) (number 156648 . 156649) (number 156629 . 156630) (number 156611 . 156612) (number 156580 . 156581) (number 156555 . 156556) (number 156535 . 156536) (semantic-list 156490 . 156504) (symbol 156484 . 156489) (number 156502 . 156503) (number 156460 . 156461) (number 156432 . 156433) (number 156409 . 156410) (number 156385 . 156386) (number 156356 . 156357) (number 156335 . 156336) (number 156306 . 156307) (number 156271 . 156272) (number 156244 . 156245) (number 156219 . 156220) (number 156198 . 156199) (number 156175 . 156176) (number 156155 . 156156) (number 156135 . 156136) (number 156117 . 156118) (number 156091 . 156092) (number 156069 . 156070) (number 156036 . 156037) (number 156012 . 156013) (number 155981 . 155982) (number 155953 . 155954) (number 155929 . 155930) (number 155903 . 155904) (number 155878 . 155879) (number 155838 . 155839) (number 155804 . 155805) (number 155779 . 155780) (number 155746 . 155747) (number 155718 . 155719) (number 155681 . 155682) (number 155649 . 155650) (number 155624 . 155625) (number 155599 . 155600) (number 155531 . 155532) (number 155443 . 155444) (number 155380 . 155381) (number 155356 . 155357) (number 155331 . 155332) (number 155298 . 155299) (number 155275 . 155276) (number 155250 . 155251) (number 155184 . 155185) (number 155152 . 155153) (number 155118 . 155119) (number 155090 . 155091) (number 155053 . 155054) (number 155016 . 155017) (number 154987 . 154988) (number 154964 . 154965) (number 154931 . 154932) (number 154869 . 154870) (number 154839 . 154840) (number 154794 . 154795) (number 154777 . 154778) (number 154728 . 154729) (number 154703 . 154704) (number 154679 . 154680) (number 154649 . 154650) (number 154623 . 154624) (number 154576 . 154577) (number 154533 . 154534) (number 154511 . 154512) (number 154470 . 154471) (number 154453 . 154454) (number 154428 . 154429) (number 154394 . 154395) (number 154369 . 154370) (number 154339 . 154340) (number 154302 . 154303) (number 154271 . 154272) (number 154245 . 154246) (semantic-list 154202 . 154213) (symbol 154196 . 154201) (number 154211 . 154212) (number 154192 . 154193) (number 154157 . 154158) (number 154112 . 154113) (number 154081 . 154082) (number 154042 . 154043) (number 154011 . 154012) (number 153974 . 153975) (number 153937 . 153938) (number 153899 . 153900) (number 153796 . 153797) (number 153776 . 153777) (number 153757 . 153758) (number 153728 . 153729) (number 153690 . 153691) (number 153661 . 153662) (number 153632 . 153633) (number 153603 . 153604) (number 153574 . 153575) (number 153546 . 153547) (number 153515 . 153516) (number 153488 . 153489) (number 153461 . 153462) (number 153426 . 153427) (number 153400 . 153401) (number 153367 . 153368) (number 153333 . 153334) (number 153308 . 153309) (number 153270 . 153271) (number 153248 . 153249) (number 153227 . 153228) (number 153200 . 153201) (number 153173 . 153174) (number 153137 . 153138) (number 153108 . 153109) (number 152956 . 152957) (number 152931 . 152932) (number 152912 . 152913) (number 152883 . 152884) (number 152849 . 152850) (number 152824 . 152825) (number 152793 . 152794) (number 152757 . 152758) (number 152723 . 152724) (number 152663 . 152664) (number 152617 . 152618) (number 152570 . 152571) (number 152512 . 152513) (number 152456 . 152457) (number 152413 . 152414) (number 152376 . 152377) (number 152342 . 152343) (number 152302 . 152303) (number 152262 . 152263) (number 152213 . 152214) (number 152175 . 152176) (number 152129 . 152130) (number 152087 . 152088) (number 152043 . 152044) (number 151996 . 151997) (number 151951 . 151952) (number 151903 . 151904) (number 151866 . 151867) (number 151828 . 151829) (number 151796 . 151797) (number 151771 . 151772) (number 151751 . 151752) (semantic-list 151682 . 151707) (symbol 151676 . 151681) (semantic-list 151644 . 151658) (symbol 151638 . 151643) (number 151656 . 151657) (number 151634 . 151635) (number 151601 . 151602) (number 151567 . 151568) (number 151542 . 151543) (number 151517 . 151518) (number 151334 . 151335) (number 151305 . 151306) (number 151273 . 151274) (number 151244 . 151245) (number 151214 . 151215) (number 151181 . 151182) (number 151150 . 151151) (number 151118 . 151119) (number 151087 . 151088) (number 151056 . 151057) (number 151033 . 151034) (number 151013 . 151014) (number 150982 . 150983) (number 150958 . 150959) (number 150930 . 150931) (number 150904 . 150905) (semantic-list 150827 . 150841) (symbol 150821 . 150826) (number 150839 . 150840) (number 150817 . 150818) (number 150790 . 150791) (number 150757 . 150758) (number 150728 . 150729) (number 150699 . 150700) (number 150658 . 150659) (number 150622 . 150623) (number 150596 . 150597) (number 150566 . 150567) (number 150533 . 150534) (number 150480 . 150481) (number 150452 . 150453) (number 150429 . 150430) (number 150401 . 150402) (number 150372 . 150373) (number 150349 . 150350) (number 150311 . 150312) (number 150273 . 150274) (number 150224 . 150225) (number 150192 . 150193) (number 150167 . 150168) (number 150138 . 150139) (number 150106 . 150107) (semantic-list 150039 . 150058) (symbol 150033 . 150038) (number 150056 . 150057) (number 150029 . 150030) (number 149996 . 149997) (number 149963 . 149964) (number 149935 . 149936) (number 149908 . 149909) (number 149880 . 149881) (number 149856 . 149857) (number 149831 . 149832) (number 149799 . 149800) (number 149755 . 149756) (number 149723 . 149724) (number 149702 . 149703) (number 149673 . 149674) (number 149638 . 149639) (number 149599 . 149600) (number 149566 . 149567) (number 149523 . 149524) (number 149492 . 149493) (number 149467 . 149468) (number 149437 . 149438) (number 149406 . 149407) (number 149371 . 149372) (number 149344 . 149345) (number 149315 . 149316) (number 149272 . 149273) (number 149241 . 149242) (number 149219 . 149220) (number 149186 . 149187) (number 149155 . 149156) (number 149123 . 149124) (number 149092 . 149093) (number 149068 . 149069) (number 149031 . 149032) (number 148993 . 148994) (number 148954 . 148955) (number 148932 . 148933) (number 148906 . 148907) (number 148883 . 148884) (number 148763 . 148764) (number 148739 . 148740) (number 148716 . 148717) (number 148698 . 148699) (number 148678 . 148679) (number 148652 . 148653) (number 148617 . 148618) (number 148598 . 148599) (semantic-list 148536 . 148564) (symbol 148530 . 148535) (number 148562 . 148563) (number 148526 . 148527) (number 148497 . 148498) (number 148466 . 148467) (number 148436 . 148437) (number 148406 . 148407) (number 148376 . 148377) (number 148345 . 148346) (number 148316 . 148317) (number 148288 . 148289) (number 148253 . 148254) (number 148222 . 148223) (number 148194 . 148195) (number 148157 . 148158) (number 148131 . 148132) (number 148101 . 148102) (number 148072 . 148073) (number 148033 . 148034) (number 148001 . 148002) (number 147968 . 147969) (number 147942 . 147943) (number 147918 . 147919) (number 147877 . 147878) (number 147847 . 147848) (number 147822 . 147823) (number 147790 . 147791) (number 147760 . 147761) (number 147730 . 147731) (number 147699 . 147700) (number 147669 . 147670) (number 147633 . 147634) (number 147607 . 147608) (number 147580 . 147581) (number 147554 . 147555) (number 147525 . 147526) (number 147499 . 147500) (number 147467 . 147468) (number 147431 . 147432) (number 147347 . 147348) (number 147314 . 147315) (number 147278 . 147279) (number 147248 . 147249) (number 147222 . 147223) (number 147196 . 147197) (number 147170 . 147171) (number 147151 . 147152) (number 147123 . 147124) (number 147062 . 147063) (number 147030 . 147031) (number 147008 . 147009) (number 146975 . 146976) (number 146949 . 146950) (number 146926 . 146927) (number 146885 . 146886) (number 146851 . 146852) (number 146822 . 146823) (number 146800 . 146801) (number 146770 . 146771) (number 146736 . 146737) (number 146708 . 146709) (number 146687 . 146688) (number 146659 . 146660) (number 146634 . 146635) (semantic-list 146589 . 146601) (symbol 146583 . 146588) (number 146599 . 146600) (number 146579 . 146580) (number 146555 . 146556) (semantic-list 146509 . 146522) (symbol 146503 . 146508) (number 146520 . 146521) (number 146454 . 146455) (number 146431 . 146432) (number 146395 . 146396) (number 146356 . 146357) (number 146307 . 146308) (number 146274 . 146275) (number 146241 . 146242) (number 146218 . 146219) (number 146189 . 146190) (number 146159 . 146160) (number 146131 . 146132) (number 146097 . 146098) (number 146069 . 146070) (number 146040 . 146041) (number 146004 . 146005) (number 145968 . 145969) (number 145935 . 145936) (number 145901 . 145902) (number 145859 . 145860) (number 145823 . 145824) (number 145784 . 145785) (number 145750 . 145751) (number 145726 . 145727) (number 145699 . 145700) (number 145672 . 145673) (number 145641 . 145642) (number 145611 . 145612) (number 145576 . 145577) (number 145547 . 145548) (number 145525 . 145526) (number 145484 . 145485) (number 145444 . 145445) (number 145418 . 145419) (number 145395 . 145396) (number 145366 . 145367) (number 145346 . 145347) (number 145318 . 145319) (number 145296 . 145297) (number 145274 . 145275) (number 145253 . 145254) (number 145230 . 145231) (semantic-list 145146 . 145177) (symbol 145140 . 145145) (number 145175 . 145176) (number 145136 . 145137) (number 145097 . 145098) (number 145079 . 145080) (number 145049 . 145050) (number 145032 . 145033) (number 144989 . 144990) (number 144958 . 144959) (number 144916 . 144917) (number 144884 . 144885) (number 144859 . 144860) (number 144834 . 144835) (number 144816 . 144817) (number 144782 . 144783) (number 144756 . 144757) (number 144716 . 144717) (number 144673 . 144674) (semantic-list 144634 . 144642) (symbol 144628 . 144633) (number 144640 . 144641) (number 144624 . 144625) (number 144606 . 144607) (number 144588 . 144589) (number 144563 . 144564) (number 144508 . 144509) (number 144478 . 144479) (number 144444 . 144445) (number 144410 . 144411) (number 144385 . 144386) (number 144355 . 144356) (number 144332 . 144333) (number 144315 . 144316) (number 144284 . 144285) (number 144248 . 144249) (number 144220 . 144221) (number 144189 . 144190) (number 144152 . 144153) (number 144129 . 144130) (number 144105 . 144106) (number 144080 . 144081) (number 144055 . 144056) (number 144028 . 144029) (number 143999 . 144000) (number 143977 . 143978) (number 143941 . 143942) (number 143914 . 143915) (number 143888 . 143889) (number 143840 . 143841) (number 143813 . 143814) (number 143783 . 143784) (number 143739 . 143740) (number 143710 . 143711) (number 143677 . 143678) (number 143659 . 143660) (number 143625 . 143626) (number 143591 . 143592) (number 143556 . 143557) (number 143527 . 143528) (number 143489 . 143490) (number 143471 . 143472) (number 143438 . 143439) (number 143402 . 143403) (number 143373 . 143374) (number 143346 . 143347) (number 143318 . 143319) (number 143290 . 143291) (number 143247 . 143248) (number 143221 . 143222) (number 143196 . 143197) (number 143170 . 143171) (number 143131 . 143132) (number 143106 . 143107) (number 143067 . 143068) (number 143034 . 143035) (number 143014 . 143015) (number 142961 . 142962) (number 142926 . 142927) (number 142902 . 142903) (number 142866 . 142867) (number 142786 . 142787) (number 142706 . 142707) (number 142672 . 142673) (number 142613 . 142614) (number 142586 . 142587) (number 142550 . 142551) (number 142518 . 142519) (number 142490 . 142491) (number 142468 . 142469) (number 142443 . 142444) (number 142413 . 142414) (number 142379 . 142380) (number 142345 . 142346) (number 142320 . 142321) (number 142290 . 142291) (number 142255 . 142256) (number 142186 . 142187) (number 142152 . 142153) (number 142124 . 142125) (number 142103 . 142104) (number 142071 . 142072) (number 142029 . 142030) (number 141998 . 141999) (number 141965 . 141966) (number 141939 . 141940) (number 141911 . 141912) (number 141874 . 141875) (number 141845 . 141846) (number 141814 . 141815) (number 141782 . 141783) (number 141749 . 141750) (number 141718 . 141719) (number 141686 . 141687) (number 141658 . 141659) (number 141626 . 141627) (number 141598 . 141599) (number 141552 . 141553) (number 141519 . 141520) (number 141502 . 141503) (number 141480 . 141481) (number 141449 . 141450) (number 141422 . 141423) (number 141397 . 141398) (number 141372 . 141373) (number 141343 . 141344) (number 141320 . 141321) (number 141287 . 141288) (number 141263 . 141264) (number 141226 . 141227) (number 141195 . 141196) (number 141165 . 141166) (semantic-list 141108 . 141119) (symbol 141102 . 141107) (number 141117 . 141118) (number 141098 . 141099) (number 141080 . 141081) (number 141052 . 141053) (number 141018 . 141019) (number 140988 . 140989) (number 140960 . 140961) (number 140846 . 140847) (number 140818 . 140819) (number 140781 . 140782) (number 140744 . 140745) (number 140707 . 140708) (number 140678 . 140679) (number 140635 . 140636) (number 140606 . 140607) (number 140567 . 140568) (number 140545 . 140546) (number 140514 . 140515) (number 140470 . 140471) (number 140428 . 140429) (number 140397 . 140398) (number 140371 . 140372) (number 140343 . 140344) (number 140312 . 140313) (number 140271 . 140272) (number 140238 . 140239) (number 140209 . 140210) (number 140173 . 140174) (number 140141 . 140142) (number 140106 . 140107) (number 140085 . 140086) (number 140061 . 140062) (number 140024 . 140025) (number 139998 . 139999) (number 139967 . 139968) (number 139937 . 139938) (number 139907 . 139908) (number 139870 . 139871) (number 139838 . 139839) (number 139794 . 139795) (number 139753 . 139754) (number 139720 . 139721) (number 139698 . 139699) (number 139663 . 139664) (number 139636 . 139637) (number 139603 . 139604) (semantic-list 139546 . 139562) (symbol 139540 . 139545) (number 139560 . 139561) (number 139536 . 139537) (number 139512 . 139513) (number 139484 . 139485) (number 139452 . 139453) (number 139422 . 139423) (number 139391 . 139392) (number 139365 . 139366) (number 139330 . 139331) (number 139305 . 139306) (semantic-list 139233 . 139255) (symbol 139227 . 139232) (number 139253 . 139254) (number 139223 . 139224) (number 139199 . 139200) (number 139173 . 139174) (number 139142 . 139143) (number 139117 . 139118) (number 139093 . 139094) (number 139072 . 139073) (number 139050 . 139051) (number 139033 . 139034) (number 139006 . 139007) (number 138971 . 138972) (number 138946 . 138947) (number 138916 . 138917) (number 138888 . 138889) (number 138852 . 138853) (number 138793 . 138794) (number 138767 . 138768) (number 138745 . 138746) (number 138714 . 138715) (number 138697 . 138698) (number 138668 . 138669) (number 138637 . 138638) (number 138613 . 138614) (number 138511 . 138512) (number 138478 . 138479) (semantic-list 138417 . 138432) (symbol 138411 . 138416) (number 138430 . 138431) (number 138407 . 138408) (number 138379 . 138380) (number 138349 . 138350) (number 138315 . 138316) (number 138292 . 138293) (number 138258 . 138259) (number 138237 . 138238) (number 138207 . 138208) (number 138163 . 138164) (number 138133 . 138134) (number 138106 . 138107) (number 138081 . 138082) (number 138056 . 138057) (number 138022 . 138023) (number 137991 . 137992) (number 137955 . 137956) (number 137923 . 137924) (number 137896 . 137897) (number 137871 . 137872) (number 137846 . 137847) (number 137811 . 137812) (number 137781 . 137782) (number 137749 . 137750) (number 137709 . 137710) (number 137677 . 137678) (number 137657 . 137658) (number 137623 . 137624) (number 137592 . 137593) (number 137559 . 137560) (number 137519 . 137520) (number 137492 . 137493) (number 137463 . 137464) (number 137425 . 137426) (number 137387 . 137388) (number 137345 . 137346) (number 137274 . 137275) (number 137256 . 137257) (number 137238 . 137239) (number 137211 . 137212) (number 137190 . 137191) (number 137156 . 137157) (number 137107 . 137108) (number 137076 . 137077) (number 137042 . 137043) (number 137008 . 137009) (number 136974 . 136975) (number 136940 . 136941) (number 136902 . 136903) (number 136867 . 136868) (number 136840 . 136841) (number 136802 . 136803) (number 136774 . 136775) (number 136745 . 136746) (number 136714 . 136715) (number 136684 . 136685) (semantic-list 136638 . 136648) (symbol 136632 . 136637) (number 136646 . 136647) (number 136628 . 136629) (number 136610 . 136611) (number 136592 . 136593) (number 136566 . 136567) (number 136547 . 136548) (number 136529 . 136530) (number 136512 . 136513) (number 136494 . 136495) (number 136474 . 136475) (number 136456 . 136457) (number 136356 . 136357) (number 136331 . 136332) (number 136302 . 136303) (number 136268 . 136269) (number 136235 . 136236) (number 136205 . 136206) (number 136169 . 136170) (number 136151 . 136152) (number 136113 . 136114) (number 136095 . 136096) (number 136063 . 136064) (number 136038 . 136039) (number 136003 . 136004) (number 135986 . 135987) (semantic-list 135932 . 135945) (symbol 135913 . 135931) (semantic-list 135876 . 135886) (symbol 135857 . 135875) (semantic-list 135811 . 135833) (symbol 135792 . 135810) (semantic-list 135745 . 135756) (symbol 135726 . 135744) (semantic-list 135684 . 135701) (symbol 135665 . 135683) (semantic-list 135618 . 135634) (symbol 135599 . 135617) (semantic-list 135559 . 135569) (symbol 135540 . 135558) (semantic-list 135510 . 135516) (symbol 135491 . 135509) (semantic-list 135444 . 135471) (symbol 135425 . 135443) (semantic-list 135357 . 135384) (symbol 135338 . 135356) (semantic-list 135270 . 135297) (symbol 135251 . 135269) (semantic-list 135185 . 135210) (symbol 135166 . 135184) (semantic-list 135108 . 135127) (symbol 135089 . 135107) (semantic-list 135027 . 135056) (symbol 135008 . 135026) (semantic-list 134959 . 134965) (symbol 134940 . 134958) (semantic-list 134882 . 134920) (symbol 134863 . 134881) (semantic-list 134781 . 134811) (symbol 134762 . 134780) (semantic-list 134696 . 134718) (symbol 134677 . 134695) (semantic-list 134619 . 134641) (symbol 134600 . 134618) (semantic-list 134542 . 134564) (symbol 134523 . 134541) (semantic-list 134464 . 134487) (symbol 134445 . 134463) (semantic-list 134389 . 134408) (symbol 134370 . 134388) (semantic-list 134312 . 134337) (symbol 134293 . 134311) (semantic-list 134225 . 134254) (symbol 134206 . 134224) (semantic-list 134145 . 134163) (symbol 134126 . 134144) (semantic-list 134077 . 134094) (symbol 134058 . 134076) (semantic-list 133998 . 134027) (symbol 133979 . 133997) (semantic-list 133912 . 133936) (symbol 133893 . 133911) (semantic-list 133837 . 133855) (symbol 133818 . 133836) (semantic-list 133766 . 133786) (symbol 133747 . 133765) (semantic-list 133694 . 133713) (symbol 133675 . 133693) (semantic-list 133623 . 133642) (symbol 133604 . 133622) (semantic-list 133550 . 133571) (symbol 133531 . 133549) (semantic-list 133492 . 133496) (symbol 133473 . 133491) (semantic-list 133433 . 133455) (symbol 133414 . 133432) (semantic-list 133350 . 133378) (symbol 133331 . 133349) (semantic-list 133265 . 133289) (symbol 133246 . 133264) (semantic-list 133174 . 133208) (symbol 133155 . 133173) (semantic-list 133092 . 133107) (symbol 133073 . 133091) (semantic-list 133030 . 133044) (symbol 133011 . 133029) (semantic-list 132972 . 132983) (symbol 132953 . 132971) (semantic-list 132918 . 132928) (symbol 132899 . 132917) (semantic-list 132858 . 132875) (symbol 132839 . 132857) (semantic-list 132794 . 132808) (symbol 132775 . 132793) (semantic-list 132721 . 132747) (symbol 132702 . 132720) (semantic-list 132632 . 132662) (symbol 132613 . 132631) (semantic-list 132553 . 132569) (symbol 132534 . 132552) (semantic-list 132492 . 132504) (symbol 132473 . 132491) (semantic-list 132419 . 132447) (symbol 132400 . 132418) (semantic-list 132329 . 132358) (symbol 132310 . 132328) (semantic-list 132250 . 132267) (symbol 132231 . 132249) (semantic-list 132179 . 132200) (symbol 132160 . 132178) (semantic-list 132100 . 132125) (symbol 132081 . 132099) (semantic-list 132007 . 132042) (symbol 131988 . 132006) (semantic-list 131916 . 131939) (symbol 131897 . 131915) (semantic-list 131828 . 131860) (symbol 131809 . 131827) (semantic-list 131723 . 131763) (symbol 131704 . 131722) (semantic-list 131621 . 131650) (symbol 131602 . 131620) (semantic-list 131534 . 131559) (symbol 131515 . 131533) (semantic-list 131467 . 131476) (symbol 131448 . 131466) (semantic-list 131412 . 131425) (symbol 131393 . 131411) (semantic-list 131358 . 131366) (symbol 131339 . 131357) (semantic-list 131303 . 131317) (symbol 131284 . 131302) (semantic-list 131244 . 131256) (symbol 131225 . 131243) (semantic-list 131192 . 131199) (symbol 131173 . 131191) (semantic-list 131143 . 131152) (symbol 131124 . 131142) (semantic-list 131090 . 131101) (symbol 131071 . 131089) (semantic-list 131039 . 131046) (symbol 131020 . 131038) (semantic-list 130988 . 130999) (symbol 130969 . 130987) (semantic-list 130937 . 130944) (symbol 130918 . 130936) (semantic-list 130883 . 130897) (symbol 130864 . 130882) (semantic-list 130830 . 130836) (symbol 130811 . 130829) (semantic-list 130783 . 130791) (symbol 130764 . 130782) (semantic-list 130726 . 130742) (symbol 130707 . 130725) (semantic-list 130661 . 130677) (symbol 130642 . 130660) (semantic-list 130603 . 130612) (symbol 130584 . 130602) (semantic-list 130551 . 130561) (symbol 130532 . 130550) (semantic-list 130495 . 130508) (symbol 130476 . 130494) (semantic-list 130426 . 130449) (symbol 130407 . 130425) (semantic-list 130348 . 130370) (symbol 130329 . 130347) (semantic-list 130277 . 130293) (symbol 130258 . 130276) (semantic-list 130210 . 130228) (symbol 130191 . 130209) (semantic-list 130148 . 130159) (symbol 130129 . 130147) (semantic-list 130074 . 130104) (symbol 130055 . 130073) (semantic-list 129985 . 130011) (symbol 129966 . 129984) (semantic-list 129916 . 129926) (symbol 129897 . 129915) (semantic-list 129863 . 129873) (symbol 129844 . 129862) (semantic-list 129805 . 129820) (symbol 129786 . 129804) (semantic-list 129732 . 129757) (symbol 129713 . 129731) (semantic-list 129665 . 129674) (symbol 129646 . 129664) (semantic-list 129598 . 129623) (symbol 129579 . 129597) (semantic-list 129532 . 129540) (symbol 129513 . 129531) (semantic-list 129483 . 129491) (symbol 129464 . 129482) (semantic-list 129429 . 129442) (symbol 129410 . 129428) (semantic-list 129366 . 129383) (symbol 129347 . 129365) (semantic-list 129302 . 129316) (symbol 129283 . 129301) (semantic-list 129247 . 129255) (symbol 129228 . 129246) (semantic-list 129195 . 129206) (symbol 129176 . 129194) (semantic-list 129142 . 129151) (symbol 129123 . 129141) (semantic-list 129088 . 129100) (symbol 129069 . 129087) (semantic-list 129022 . 129043) (symbol 129003 . 129021) (semantic-list 128956 . 128968) (symbol 128937 . 128955) (semantic-list 128900 . 128911) (symbol 128881 . 128899) (semantic-list 128840 . 128856) (symbol 128821 . 128839) (semantic-list 128778 . 128791) (symbol 128759 . 128777) (semantic-list 128725 . 128732) (symbol 128706 . 128724) (semantic-list 128661 . 128685) (symbol 128642 . 128660) (semantic-list 128581 . 128604) (symbol 128562 . 128580) (semantic-list 128520 . 128525) (symbol 128501 . 128519) (semantic-list 128467 . 128482) (symbol 128448 . 128466) (semantic-list 128405 . 128419) (symbol 128386 . 128404) (semantic-list 128348 . 128358) (symbol 128329 . 128347) (semantic-list 128297 . 128305) (symbol 128278 . 128296) (semantic-list 128249 . 128256) (symbol 128230 . 128248) (semantic-list 128195 . 128209) (symbol 128176 . 128194) (semantic-list 128138 . 128148) (symbol 128119 . 128137) (semantic-list 128063 . 128095) (symbol 128044 . 128062) (semantic-list 127986 . 127998) (symbol 127967 . 127985) (semantic-list 127918 . 127941) (symbol 127899 . 127917) (semantic-list 127824 . 127862) (symbol 127805 . 127823) (semantic-list 127724 . 127753) (symbol 127705 . 127723) (semantic-list 127623 . 127662) (symbol 127604 . 127622) (semantic-list 127518 . 127551) (symbol 127499 . 127517) (semantic-list 127426 . 127452) (symbol 127407 . 127425) (semantic-list 127340 . 127367) (symbol 127321 . 127339) (semantic-list 127262 . 127280) (symbol 127243 . 127261) (semantic-list 127193 . 127211) (symbol 127174 . 127192) (semantic-list 127130 . 127142) (symbol 127111 . 127129) (semantic-list 127071 . 127085) (symbol 127052 . 127070) (semantic-list 127012 . 127024) (symbol 126993 . 127011) (semantic-list 126957 . 126967) (symbol 126938 . 126956) (semantic-list 126901 . 126914) (symbol 126882 . 126900) (semantic-list 126844 . 126855) (symbol 126825 . 126843) (semantic-list 126777 . 126800) (symbol 126758 . 126776) (semantic-list 126696 . 126721) (symbol 126677 . 126695) (semantic-list 126620 . 126638) (symbol 126601 . 126619) (semantic-list 126548 . 126569) (symbol 126529 . 126547) (semantic-list 126473 . 126494) (symbol 126454 . 126472) (semantic-list 126398 . 126419) (symbol 126379 . 126397) (semantic-list 126323 . 126344) (symbol 126304 . 126322) (semantic-list 126243 . 126269) (symbol 126224 . 126242) (semantic-list 126158 . 126184) (symbol 126139 . 126157) (semantic-list 126081 . 126099) (symbol 126062 . 126080) (semantic-list 126014 . 126030) (symbol 125995 . 126013) (semantic-list 125937 . 125965) (symbol 125918 . 125936) (semantic-list 125859 . 125876) (symbol 125840 . 125858) (semantic-list 125792 . 125809) (symbol 125773 . 125791) (semantic-list 125721 . 125742) (symbol 125702 . 125720) (semantic-list 125649 . 125667) (symbol 125630 . 125648) (semantic-list 125592 . 125598) (symbol 125573 . 125591) (semantic-list 125544 . 125553) (symbol 125525 . 125543) (semantic-list 125489 . 125502) (symbol 125470 . 125488) (semantic-list 125423 . 125443) (symbol 125404 . 125422) (semantic-list 125347 . 125370) (symbol 125328 . 125346) (semantic-list 125271 . 125291) (symbol 125252 . 125270) (semantic-list 125196 . 125218) (symbol 125177 . 125195) (semantic-list 125133 . 125141) (symbol 125114 . 125132) (semantic-list 125073 . 125092) (symbol 125054 . 125072) (semantic-list 125010 . 125021) (symbol 124991 . 125009) (semantic-list 124953 . 124966) (symbol 124934 . 124952) (semantic-list 124895 . 124907) (symbol 124876 . 124894) (semantic-list 124832 . 124850) (symbol 124813 . 124831) (semantic-list 124770 . 124781) (symbol 124751 . 124769) (semantic-list 124713 . 124726) (symbol 124694 . 124712) (semantic-list 124661 . 124667) (symbol 124642 . 124660) (semantic-list 124612 . 124622) (symbol 124593 . 124611) (semantic-list 124552 . 124569) (symbol 124533 . 124551) (semantic-list 124486 . 124502) (symbol 124467 . 124485) (semantic-list 124417 . 124437) (symbol 124398 . 124416) (semantic-list 124347 . 124364) (symbol 124328 . 124346) (semantic-list 124277 . 124297) (symbol 124258 . 124276) (semantic-list 124213 . 124224) (symbol 124194 . 124212) (semantic-list 124157 . 124169) (symbol 124138 . 124156) (semantic-list 124095 . 124112) (symbol 124076 . 124094) (semantic-list 124037 . 124045) (symbol 124018 . 124036) (semantic-list 123974 . 123996) (symbol 123955 . 123973) (semantic-list 123912 . 123919) (symbol 123893 . 123911) (semantic-list 123865 . 123872) (symbol 123846 . 123864) (semantic-list 123815 . 123825) (symbol 123796 . 123814) (semantic-list 123763 . 123772) (symbol 123744 . 123762) (semantic-list 123708 . 123721) (symbol 123689 . 123707) (semantic-list 123652 . 123662) (symbol 123633 . 123651) (semantic-list 123592 . 123609) (symbol 123573 . 123591) (semantic-list 123528 . 123542) (symbol 123509 . 123527) (semantic-list 123462 . 123481) (symbol 123443 . 123461) (semantic-list 123403 . 123410) (symbol 123384 . 123402) (semantic-list 123356 . 123363) (symbol 123337 . 123355) (semantic-list 123298 . 123316) (symbol 123279 . 123297) (semantic-list 123230 . 123247) (symbol 123211 . 123229) (semantic-list 123169 . 123180) (symbol 123150 . 123168) (semantic-list 123101 . 123125) (symbol 123082 . 123100) (semantic-list 123019 . 123044) (symbol 123000 . 123018) (semantic-list 122948 . 122961) (symbol 122929 . 122947) (semantic-list 122889 . 122902) (symbol 122870 . 122888) (semantic-list 122839 . 122843) (symbol 122820 . 122838) (semantic-list 122785 . 122802) (symbol 122766 . 122784) (semantic-list 122720 . 122735) (symbol 122701 . 122719) (semantic-list 122658 . 122672) (symbol 122639 . 122657) (semantic-list 122601 . 122611) (symbol 122582 . 122600) (semantic-list 122548 . 122558) (symbol 122529 . 122547) (semantic-list 122496 . 122505) (symbol 122477 . 122495) (semantic-list 122439 . 122454) (symbol 122420 . 122438) (semantic-list 122386 . 122391) (symbol 122367 . 122385) (semantic-list 122342 . 122348) (symbol 122323 . 122341) (semantic-list 122295 . 122303) (symbol 122276 . 122294) (semantic-list 122228 . 122254) (symbol 122209 . 122227) (semantic-list 122139 . 122169) (symbol 122120 . 122138) (semantic-list 122068 . 122076) (symbol 122049 . 122067) (semantic-list 122020 . 122027) (symbol 122001 . 122019) (semantic-list 121966 . 121980) (symbol 121947 . 121965) (semantic-list 121909 . 121919) (symbol 121890 . 121908) (semantic-list 121856 . 121866) (symbol 121837 . 121855) (semantic-list 121779 . 121813) (symbol 121760 . 121778) (semantic-list 121697 . 121712) (symbol 121678 . 121696) (semantic-list 121634 . 121649) (symbol 121615 . 121633) (semantic-list 121577 . 121586) (symbol 121558 . 121576) (semantic-list 121524 . 121535) (symbol 121505 . 121523) (semantic-list 121473 . 121480) (symbol 121454 . 121472) (semantic-list 121425 . 121433) (symbol 121406 . 121424) (semantic-list 121375 . 121384) (symbol 121356 . 121374) (semantic-list 121324 . 121333) (symbol 121305 . 121323) (semantic-list 121274 . 121282) (symbol 121255 . 121273) (semantic-list 121224 . 121233) (symbol 121205 . 121223) (semantic-list 121174 . 121182) (symbol 121155 . 121173) (semantic-list 121117 . 121133) (symbol 121098 . 121116) (semantic-list 121060 . 121068) (symbol 121041 . 121059) (semantic-list 121001 . 121019) (symbol 120982 . 121000) (semantic-list 120933 . 120950) (symbol 120914 . 120932) (semantic-list 120863 . 120883) (symbol 120844 . 120862) (semantic-list 120790 . 120810) (symbol 120771 . 120789) (semantic-list 120717 . 120737) (symbol 120698 . 120716) (semantic-list 120650 . 120664) (symbol 120631 . 120649) (semantic-list 120595 . 120603) (symbol 120576 . 120594) (semantic-list 120545 . 120554) (symbol 120526 . 120544) (semantic-list 120495 . 120503) (symbol 120476 . 120494) (semantic-list 120446 . 120454) (symbol 120427 . 120445) (semantic-list 120390 . 120405) (symbol 120371 . 120389) (semantic-list 120335 . 120342) (symbol 120316 . 120334) (semantic-list 120275 . 120295) (symbol 120256 . 120274) (semantic-list 120213 . 120222) (symbol 120194 . 120212) (semantic-list 120152 . 120171) (symbol 120133 . 120151) (semantic-list 120088 . 120100) (symbol 120069 . 120087) (semantic-list 120034 . 120043) (symbol 120015 . 120033) (semantic-list 119983 . 119992) (symbol 119964 . 119982) (semantic-list 119932 . 119941) (symbol 119913 . 119931) (semantic-list 119881 . 119890) (symbol 119862 . 119880) (semantic-list 119832 . 119839) (symbol 119813 . 119831) (semantic-list 119773 . 119792) (symbol 119754 . 119772) (semantic-list 119714 . 119721) (symbol 119695 . 119713) (semantic-list 119647 . 119674) (symbol 119628 . 119646) (semantic-list 119560 . 119587) (symbol 119541 . 119559) (semantic-list 119483 . 119500) (symbol 119464 . 119482) (semantic-list 119416 . 119433) (symbol 119397 . 119415) (semantic-list 119340 . 119367) (symbol 119321 . 119339) (semantic-list 119264 . 119281) (symbol 119245 . 119263) (semantic-list 119200 . 119215) (symbol 119181 . 119199) (semantic-list 119139 . 119153) (symbol 119120 . 119138) (semantic-list 119087 . 119093) (symbol 119068 . 119086) (semantic-list 119042 . 119049) (symbol 119023 . 119041) (semantic-list 118994 . 119003) (symbol 118975 . 118993) (semantic-list 118941 . 118953) (symbol 118922 . 118940) (semantic-list 118885 . 118897) (symbol 118866 . 118884) (semantic-list 118828 . 118841) (symbol 118809 . 118827) (semantic-list 118771 . 118783) (symbol 118752 . 118770) (semantic-list 118707 . 118727) (symbol 118688 . 118706) (semantic-list 118639 . 118655) (symbol 118620 . 118638) (semantic-list 118575 . 118591) (symbol 118556 . 118574) (semantic-list 118515 . 118527) (symbol 118496 . 118514) (semantic-list 118457 . 118471) (symbol 118438 . 118456) (semantic-list 118394 . 118411) (symbol 118375 . 118393) (semantic-list 118326 . 118345) (symbol 118307 . 118325) (semantic-list 118253 . 118275) (symbol 118234 . 118252) (semantic-list 118179 . 118199) (symbol 118160 . 118178) (semantic-list 118103 . 118127) (symbol 118084 . 118102) (semantic-list 118023 . 118047) (symbol 118004 . 118022) (semantic-list 117954 . 117967) (symbol 117935 . 117953) (semantic-list 117894 . 117909) (symbol 117875 . 117893) (semantic-list 117834 . 117847) (symbol 117815 . 117833) (semantic-list 117774 . 117789) (symbol 117755 . 117773) (semantic-list 117710 . 117727) (symbol 117691 . 117709) (semantic-list 117648 . 117661) (symbol 117629 . 117647) (semantic-list 117589 . 117603) (symbol 117570 . 117588) (semantic-list 117536 . 117543) (symbol 117517 . 117535) (semantic-list 117490 . 117497) (symbol 117471 . 117489) (semantic-list 117430 . 117451) (symbol 117411 . 117429) (semantic-list 117371 . 117377) (symbol 117352 . 117370) (semantic-list 117327 . 117333) (symbol 117308 . 117326) (semantic-list 117266 . 117289) (symbol 117247 . 117265) (semantic-list 117199 . 117211) (symbol 117180 . 117198) (semantic-list 117139 . 117155) (symbol 117120 . 117138) (semantic-list 117076 . 117091) (symbol 117057 . 117075) (semantic-list 117014 . 117029) (symbol 116995 . 117013) (semantic-list 116954 . 116967) (symbol 116935 . 116953) (semantic-list 116887 . 116909) (symbol 116868 . 116886) (semantic-list 116817 . 116833) (symbol 116798 . 116816) (semantic-list 116761 . 116769) (symbol 116742 . 116760) (semantic-list 116702 . 116721) (symbol 116683 . 116701) (semantic-list 116631 . 116651) (symbol 116612 . 116630) (semantic-list 116569 . 116579) (symbol 116550 . 116568) (semantic-list 116499 . 116527) (symbol 116480 . 116498) (semantic-list 116425 . 116439) (symbol 116406 . 116424) (semantic-list 116371 . 116379) (symbol 116352 . 116370) (semantic-list 116313 . 116331) (symbol 116294 . 116312) (semantic-list 116252 . 116263) (symbol 116233 . 116251) (semantic-list 116190 . 116209) (symbol 116171 . 116189) (semantic-list 116125 . 116139) (symbol 116106 . 116124) (semantic-list 116053 . 116079) (symbol 116034 . 116052) (semantic-list 115961 . 115995) (symbol 115942 . 115960) (semantic-list 115861 . 115895) (symbol 115842 . 115860) (semantic-list 115772 . 115795) (symbol 115753 . 115771) (semantic-list 115710 . 115717) (symbol 115691 . 115709) (semantic-list 115661 . 115671) (symbol 115642 . 115660) (semantic-list 115596 . 115619) (symbol 115577 . 115595) (semantic-list 115532 . 115541) (symbol 115513 . 115531) (semantic-list 115465 . 115491) (symbol 115446 . 115464) (semantic-list 115390 . 115407) (symbol 115371 . 115389) (semantic-list 115334 . 115341) (symbol 115315 . 115333) (semantic-list 115283 . 115295) (symbol 115264 . 115282) (semantic-list 115225 . 115239) (symbol 115206 . 115224) (semantic-list 115167 . 115179) (symbol 115148 . 115166) (semantic-list 115116 . 115123) (symbol 115097 . 115115) (semantic-list 115066 . 115077) (symbol 115047 . 115065) (semantic-list 115015 . 115023) (symbol 114996 . 115014) (semantic-list 114961 . 114975) (symbol 114942 . 114960) (semantic-list 114907 . 114915) (symbol 114888 . 114906) (semantic-list 114859 . 114867) (symbol 114840 . 114858) (semantic-list 114811 . 114819) (symbol 114792 . 114810) (semantic-list 114764 . 114771) (symbol 114745 . 114763) (semantic-list 114712 . 114725) (symbol 114693 . 114711) (semantic-list 114656 . 114667) (symbol 114637 . 114655) (semantic-list 114606 . 114613) (symbol 114587 . 114605) (semantic-list 114561 . 114567) (symbol 114542 . 114560) (semantic-list 114513 . 114523) (symbol 114494 . 114512) (semantic-list 114453 . 114471) (symbol 114434 . 114452) (semantic-list 114395 . 114403) (symbol 114376 . 114394) (semantic-list 114328 . 114355) (symbol 114309 . 114327) (semantic-list 114258 . 114269) (symbol 114239 . 114257) (semantic-list 114205 . 114215) (symbol 114186 . 114204) (semantic-list 114152 . 114163) (symbol 114133 . 114151) (semantic-list 114085 . 114109) (symbol 114066 . 114084) (semantic-list 114004 . 114029) (symbol 113985 . 114003) (semantic-list 113941 . 113947) (symbol 113922 . 113940) (semantic-list 113886 . 113903) (symbol 113867 . 113885) (semantic-list 113818 . 113837) (symbol 113799 . 113817) (semantic-list 113760 . 113767) (symbol 113741 . 113759) (semantic-list 113708 . 113721) (symbol 113689 . 113707) (semantic-list 113639 . 113663) (symbol 113620 . 113638) (semantic-list 113568 . 113583) (symbol 113549 . 113567) (semantic-list 113501 . 113521) (symbol 113482 . 113500) (semantic-list 113438 . 113449) (symbol 113419 . 113437) (semantic-list 113384 . 113395) (symbol 113365 . 113383) (semantic-list 113334 . 113341) (symbol 113315 . 113333) (semantic-list 113278 . 113295) (symbol 113259 . 113277) (semantic-list 113219 . 113229) (symbol 113200 . 113218) (semantic-list 113164 . 113177) (symbol 113145 . 113163) (semantic-list 113103 . 113119) (symbol 113084 . 113102) (semantic-list 113049 . 113055) (symbol 113030 . 113048) (semantic-list 113004 . 113011) (symbol 112985 . 113003) (semantic-list 112958 . 112965) (symbol 112939 . 112957) (semantic-list 112910 . 112919) (symbol 112891 . 112909) (semantic-list 112861 . 112869) (symbol 112842 . 112860) (semantic-list 112798 . 112821) (symbol 112779 . 112797) (semantic-list 112736 . 112743) (symbol 112717 . 112735) (semantic-list 112690 . 112697) (symbol 112671 . 112689) (semantic-list 112628 . 112651) (symbol 112609 . 112627) (semantic-list 112555 . 112573) (symbol 112536 . 112554) (semantic-list 112499 . 112505) (symbol 112480 . 112498) (semantic-list 112454 . 112461) (symbol 112435 . 112453) (semantic-list 112410 . 112415) (symbol 112391 . 112409) (semantic-list 112367 . 112373) (symbol 112348 . 112366) (semantic-list 112317 . 112329) (symbol 112298 . 112316) (semantic-list 112258 . 112273) (symbol 112239 . 112257) (semantic-list 112203 . 112211) (symbol 112184 . 112202) (semantic-list 112159 . 112163) (symbol 112140 . 112158) (semantic-list 112099 . 112123) (symbol 112080 . 112098) (semantic-list 112026 . 112043) (symbol 112007 . 112025) (semantic-list 111945 . 111977) (symbol 111926 . 111944) (semantic-list 111850 . 111881) (symbol 111831 . 111849) (semantic-list 111764 . 111787) (symbol 111745 . 111763) (semantic-list 111689 . 111709) (symbol 111670 . 111688) (semantic-list 111626 . 111637) (symbol 111607 . 111625) (semantic-list 111560 . 111583) (symbol 111541 . 111559) (semantic-list 111482 . 111505) (symbol 111463 . 111481) (semantic-list 111411 . 111427) (symbol 111392 . 111410) (semantic-list 111353 . 111363) (symbol 111334 . 111352) (semantic-list 111294 . 111311) (symbol 111275 . 111293) (semantic-list 111227 . 111245) (symbol 111208 . 111226) (semantic-list 111164 . 111177) (symbol 111145 . 111163) (semantic-list 111102 . 111119) (symbol 111083 . 111101) (semantic-list 111039 . 111053) (symbol 111020 . 111038) (semantic-list 110972 . 110993) (symbol 110953 . 110971) (semantic-list 110905 . 110919) (symbol 110886 . 110904) (semantic-list 110846 . 110859) (symbol 110827 . 110845) (semantic-list 110790 . 110801) (symbol 110771 . 110789) (semantic-list 110725 . 110747) (symbol 110706 . 110724) (semantic-list 110664 . 110671) (symbol 110645 . 110663) (semantic-list 110615 . 110625) (symbol 110596 . 110614) (semantic-list 110566 . 110573) (symbol 110547 . 110565) (semantic-list 110521 . 110527) (symbol 110502 . 110520) (semantic-list 110473 . 110483) (symbol 110454 . 110472) (semantic-list 110422 . 110431) (symbol 110403 . 110421) (semantic-list 110371 . 110381) (symbol 110352 . 110370) (semantic-list 110308 . 110329) (symbol 110289 . 110307) (semantic-list 110231 . 110255) (symbol 110212 . 110230) (semantic-list 110149 . 110175) (symbol 110130 . 110148) (semantic-list 110071 . 110091) (symbol 110052 . 110070) (semantic-list 110003 . 110019) (symbol 109984 . 110002) (semantic-list 109950 . 109955) (symbol 109931 . 109949) (semantic-list 109904 . 109913) (symbol 109885 . 109903) (semantic-list 109856 . 109863) (symbol 109837 . 109855) (semantic-list 109805 . 109817) (symbol 109786 . 109804) (semantic-list 109751 . 109761) (symbol 109732 . 109750) (semantic-list 109693 . 109709) (symbol 109674 . 109692) (semantic-list 109628 . 109645) (symbol 109609 . 109627) (semantic-list 109559 . 109579) (symbol 109540 . 109558) (semantic-list 109490 . 109507) (symbol 109471 . 109489) (semantic-list 109423 . 109441) (symbol 109404 . 109422) (semantic-list 109357 . 109373) (symbol 109338 . 109356) (semantic-list 109298 . 109309) (symbol 109279 . 109297) (semantic-list 109237 . 109255) (symbol 109218 . 109236) (semantic-list 109180 . 109187) (symbol 109161 . 109179) (semantic-list 109131 . 109141) (symbol 109112 . 109130) (semantic-list 109079 . 109089) (symbol 109060 . 109078) (semantic-list 109022 . 109037) (symbol 109003 . 109021) (semantic-list 108968 . 108975) (symbol 108949 . 108967) (semantic-list 108920 . 108929) (symbol 108901 . 108919) (semantic-list 108871 . 108879) (symbol 108852 . 108870) (semantic-list 108820 . 108831) (symbol 108801 . 108819) (semantic-list 108764 . 108777) (symbol 108745 . 108763) (semantic-list 108707 . 108719) (symbol 108688 . 108706) (semantic-list 108650 . 108663) (symbol 108631 . 108649) (semantic-list 108584 . 108605) (symbol 108565 . 108583) (semantic-list 108524 . 108531) (symbol 108505 . 108523) (semantic-list 108465 . 108485) (symbol 108446 . 108464) (semantic-list 108396 . 108413) (symbol 108377 . 108395) (semantic-list 108321 . 108347) (symbol 108302 . 108320) (semantic-list 108236 . 108263) (symbol 108217 . 108235) (semantic-list 108164 . 108177) (symbol 108145 . 108163) (semantic-list 108105 . 108119) (symbol 108086 . 108104) (semantic-list 108045 . 108059) (symbol 108026 . 108044) (semantic-list 107991 . 107999) (symbol 107972 . 107990) (semantic-list 107942 . 107951) (symbol 107923 . 107941) (semantic-list 107879 . 107901) (symbol 107860 . 107878) (semantic-list 107813 . 107825) (symbol 107794 . 107812) (semantic-list 107762 . 107769) (symbol 107743 . 107761) (semantic-list 107705 . 107723) (symbol 107686 . 107704) (semantic-list 107636 . 107655) (symbol 107617 . 107635) (semantic-list 107564 . 107585) (symbol 107545 . 107563) (semantic-list 107483 . 107511) (symbol 107464 . 107482) (semantic-list 107402 . 107423) (symbol 107383 . 107401) (semantic-list 107328 . 107349) (symbol 107309 . 107327) (semantic-list 107255 . 107275) (symbol 107236 . 107254) (semantic-list 107185 . 107203) (symbol 107166 . 107184) (semantic-list 107113 . 107135) (symbol 107094 . 107112) (semantic-list 107050 . 107059) (symbol 107031 . 107049) (semantic-list 106992 . 107009) (symbol 106973 . 106991) (semantic-list 106926 . 106943) (symbol 106907 . 106925) (semantic-list 106856 . 106877) (symbol 106837 . 106855) (semantic-list 106792 . 106803) (symbol 106773 . 106791) (semantic-list 106728 . 106749) (symbol 106709 . 106727) (semantic-list 106656 . 106675) (symbol 106637 . 106655) (semantic-list 106575 . 106605) (symbol 106556 . 106574) (semantic-list 106501 . 106513) (symbol 106482 . 106500) (semantic-list 106444 . 106457) (symbol 106425 . 106443) (semantic-list 106389 . 106399) (symbol 106370 . 106388) (semantic-list 106316 . 106347) (symbol 106297 . 106315) (semantic-list 106245 . 106253) (symbol 106226 . 106244) (semantic-list 106181 . 106205) (symbol 106162 . 106180) (semantic-list 106105 . 106125) (symbol 106086 . 106104) (semantic-list 106032 . 106053) (symbol 106013 . 106031) (semantic-list 105956 . 105979) (symbol 105937 . 105955) (semantic-list 105883 . 105901) (symbol 105864 . 105882) (semantic-list 105812 . 105833) (symbol 105793 . 105811) (semantic-list 105729 . 105759) (symbol 105710 . 105728) (semantic-list 105654 . 105667) (symbol 105635 . 105653) (semantic-list 105600 . 105609) (symbol 105581 . 105599) (semantic-list 105547 . 105559) (symbol 105528 . 105546) (semantic-list 105490 . 105503) (symbol 105471 . 105489) (semantic-list 105434 . 105445) (symbol 105415 . 105433) (semantic-list 105384 . 105391) (symbol 105365 . 105383) (semantic-list 105333 . 105345) (symbol 105314 . 105332) (semantic-list 105275 . 105289) (symbol 105256 . 105274) (semantic-list 105206 . 105229) (symbol 105187 . 105205) (semantic-list 105135 . 105151) (symbol 105116 . 105134) (semantic-list 105070 . 105087) (symbol 105051 . 105069) (semantic-list 105001 . 105021) (symbol 104982 . 105000) (semantic-list 104938 . 104949) (symbol 104919 . 104937) (semantic-list 104888 . 104895) (symbol 104869 . 104887) (semantic-list 104843 . 104849) (symbol 104824 . 104842) (semantic-list 104793 . 104805) (symbol 104774 . 104792) (semantic-list 104739 . 104749) (symbol 104720 . 104738) (semantic-list 104688 . 104697) (symbol 104669 . 104687) (semantic-list 104631 . 104647) (symbol 104612 . 104630) (semantic-list 104562 . 104583) (symbol 104543 . 104561) (semantic-list 104500 . 104509) (symbol 104481 . 104499) (semantic-list 104452 . 104459) (symbol 104433 . 104451) (semantic-list 104400 . 104413) (symbol 104381 . 104399) (semantic-list 104334 . 104355) (symbol 104315 . 104333) (semantic-list 104264 . 104281) (symbol 104245 . 104263) (semantic-list 104194 . 104215) (symbol 104175 . 104193) (semantic-list 104115 . 104141) (symbol 104096 . 104114) (semantic-list 104040 . 104057) (symbol 104021 . 104039) (semantic-list 103982 . 103991) (symbol 103963 . 103981) (semantic-list 103933 . 103941) (symbol 103914 . 103932) (semantic-list 103887 . 103893) (symbol 103868 . 103886) (semantic-list 103845 . 103849) (symbol 103826 . 103844) (semantic-list 103803 . 103809) (symbol 103784 . 103802) (semantic-list 103728 . 103765) (symbol 103709 . 103727) (semantic-list 103647 . 103659) (symbol 103628 . 103646) (semantic-list 103595 . 103603) (symbol 103576 . 103594) (semantic-list 103536 . 103555) (symbol 103517 . 103535) (semantic-list 103460 . 103485) (symbol 103441 . 103459) (semantic-list 103386 . 103403) (symbol 103367 . 103385) (semantic-list 103330 . 103337) (symbol 103311 . 103329) (semantic-list 103282 . 103291) (symbol 103263 . 103281) (semantic-list 103233 . 103241) (symbol 103214 . 103232) (semantic-list 103184 . 103193) (symbol 103165 . 103183) (semantic-list 103136 . 103143) (symbol 103117 . 103135) (semantic-list 103082 . 103097) (symbol 103063 . 103081) (semantic-list 103021 . 103035) (symbol 103002 . 103020) (semantic-list 102948 . 102975) (symbol 102929 . 102947) (semantic-list 102875 . 102889) (symbol 102856 . 102874) (semantic-list 102815 . 102829) (symbol 102796 . 102814) (semantic-list 102762 . 102769) (symbol 102743 . 102761) (semantic-list 102715 . 102723) (symbol 102696 . 102714) (semantic-list 102658 . 102675) (symbol 102639 . 102657) (semantic-list 102591 . 102609) (symbol 102572 . 102590) (semantic-list 102521 . 102541) (symbol 102502 . 102520) (semantic-list 102452 . 102469) (symbol 102433 . 102451) (semantic-list 102385 . 102403) (symbol 102366 . 102384) (semantic-list 102328 . 102335) (symbol 102309 . 102327) (semantic-list 102283 . 102289) (symbol 102264 . 102282) (semantic-list 102234 . 102245) (symbol 102215 . 102233) (semantic-list 102175 . 102191) (symbol 102156 . 102174) (semantic-list 102115 . 102127) (symbol 102096 . 102114) (semantic-list 102057 . 102071) (symbol 102038 . 102056) (semantic-list 101997 . 102011) (symbol 101978 . 101996) (semantic-list 101939 . 101951) (symbol 101920 . 101938) (semantic-list 101888 . 101895) (symbol 101869 . 101887) (semantic-list 101839 . 101849) (symbol 101820 . 101838) (semantic-list 101789 . 101797) (symbol 101770 . 101788) (semantic-list 101728 . 101749) (symbol 101709 . 101727) (semantic-list 101655 . 101675) (symbol 101636 . 101654) (semantic-list 101581 . 101603) (symbol 101562 . 101580) (semantic-list 101517 . 101527) (symbol 101498 . 101516) (semantic-list 101457 . 101475) (symbol 101438 . 101456) (semantic-list 101395 . 101407) (symbol 101376 . 101394) (semantic-list 101342 . 101351) (symbol 101323 . 101341) (semantic-list 101296 . 101301) (symbol 101277 . 101295) (semantic-list 101238 . 101259) (symbol 101219 . 101237) (semantic-list 101167 . 101185) (symbol 101148 . 101166) (semantic-list 101104 . 101117) (symbol 101085 . 101103) (semantic-list 101029 . 101059) (symbol 101010 . 101028) (semantic-list 100948 . 100967) (symbol 100929 . 100947) (semantic-list 100887 . 100897) (symbol 100868 . 100886) (semantic-list 100823 . 100845) (symbol 100804 . 100822) (semantic-list 100760 . 100769) (symbol 100741 . 100759) (semantic-list 100704 . 100719) (symbol 100685 . 100703) (semantic-list 100641 . 100657) (symbol 100622 . 100640) (semantic-list 100587 . 100593) (symbol 100568 . 100586) (semantic-list 100536 . 100549) (symbol 100517 . 100535) (semantic-list 100462 . 100491) (symbol 100443 . 100461) (semantic-list 100386 . 100401) (symbol 100367 . 100385) (semantic-list 100315 . 100339) (symbol 100296 . 100314) (semantic-list 100242 . 100259) (symbol 100223 . 100241) (semantic-list 100173 . 100193) (symbol 100154 . 100172) (semantic-list 100102 . 100121) (symbol 100083 . 100101) (semantic-list 100030 . 100051) (symbol 100011 . 100029) (semantic-list 99954 . 99977) (symbol 99935 . 99953) (semantic-list 99886 . 99899) (symbol 99867 . 99885) (semantic-list 99822 . 99841) (symbol 99803 . 99821) (semantic-list 99764 . 99771) (symbol 99745 . 99763) (semantic-list 99720 . 99725) (symbol 99701 . 99719) (semantic-list 99673 . 99683) (symbol 99654 . 99672) (semantic-list 99622 . 99631) (symbol 99603 . 99621) (semantic-list 99568 . 99581) (symbol 99549 . 99567) (semantic-list 99512 . 99523) (symbol 99493 . 99511) (semantic-list 99457 . 99469) (symbol 99438 . 99456) (semantic-list 99400 . 99413) (symbol 99381 . 99399) (semantic-list 99347 . 99355) (symbol 99328 . 99346) (semantic-list 99300 . 99307) (symbol 99281 . 99299) (semantic-list 99254 . 99261) (symbol 99235 . 99253) (semantic-list 99203 . 99215) (symbol 99184 . 99202) (semantic-list 99142 . 99159) (symbol 99123 . 99141) (semantic-list 99076 . 99093) (symbol 99057 . 99075) (semantic-list 99005 . 99027) (symbol 98986 . 99004) (semantic-list 98932 . 98951) (symbol 98913 . 98931) (semantic-list 98865 . 98881) (symbol 98846 . 98864) (semantic-list 98805 . 98817) (symbol 98786 . 98804) (semantic-list 98747 . 98761) (symbol 98728 . 98746) (semantic-list 98671 . 98701) (symbol 98652 . 98670) (semantic-list 98574 . 98609) (symbol 98555 . 98573) (semantic-list 98473 . 98507) (symbol 98454 . 98472) (semantic-list 98371 . 98407) (symbol 98352 . 98370) (semantic-list 98269 . 98303) (symbol 98250 . 98268) (semantic-list 98166 . 98203) (symbol 98147 . 98165) (semantic-list 98073 . 98097) (symbol 98054 . 98072) (semantic-list 97999 . 98017) (symbol 97980 . 97998) (semantic-list 97928 . 97949) (symbol 97909 . 97927) (semantic-list 97845 . 97875) (symbol 97826 . 97844) (semantic-list 97764 . 97783) (symbol 97745 . 97763) (semantic-list 97699 . 97713) (symbol 97680 . 97698) (semantic-list 97642 . 97653) (symbol 97623 . 97641) (semantic-list 97577 . 97599) (symbol 97558 . 97576) (semantic-list 97513 . 97523) (symbol 97494 . 97512) (semantic-list 97458 . 97471) (symbol 97439 . 97457) (semantic-list 97391 . 97413) (symbol 97372 . 97390) (semantic-list 97313 . 97337) (symbol 97294 . 97312) (semantic-list 97234 . 97257) (symbol 97215 . 97233) (semantic-list 97157 . 97179) (symbol 97138 . 97156) (semantic-list 97074 . 97103) (symbol 97055 . 97073) (semantic-list 96979 . 97013) (symbol 96960 . 96978) (semantic-list 96899 . 96913) (symbol 96880 . 96898) (semantic-list 96833 . 96853) (symbol 96814 . 96832) (semantic-list 96761 . 96781) (symbol 96742 . 96760) (semantic-list 96694 . 96709) (symbol 96675 . 96693) (semantic-list 96618 . 96647) (symbol 96599 . 96617) (semantic-list 96528 . 96557) (symbol 96509 . 96527) (semantic-list 96442 . 96467) (symbol 96423 . 96441) (semantic-list 96355 . 96385) (symbol 96336 . 96354) (semantic-list 96263 . 96293) (symbol 96244 . 96262) (semantic-list 96169 . 96201) (symbol 96150 . 96168) (semantic-list 96078 . 96105) (symbol 96059 . 96077) (semantic-list 96000 . 96019) (symbol 95981 . 95999) (semantic-list 95919 . 95949) (symbol 95900 . 95918) (semantic-list 95843 . 95857) (symbol 95824 . 95842) (semantic-list 95789 . 95797) (symbol 95770 . 95788) (semantic-list 95739 . 95749) (symbol 95720 . 95738) (semantic-list 95692 . 95697) (symbol 95673 . 95691) (semantic-list 95644 . 95655) (symbol 95625 . 95643) (semantic-list 95581 . 95601) (symbol 95562 . 95580) (semantic-list 95513 . 95529) (symbol 95494 . 95512) (semantic-list 95453 . 95465) (symbol 95434 . 95452) (semantic-list 95398 . 95409) (symbol 95379 . 95397) (semantic-list 95343 . 95355) (symbol 95324 . 95342) (semantic-list 95287 . 95299) (symbol 95268 . 95286) (semantic-list 95236 . 95243) (symbol 95217 . 95235) (semantic-list 95189 . 95197) (symbol 95170 . 95188) (semantic-list 95144 . 95149) (symbol 95125 . 95143) (semantic-list 95082 . 95107) (symbol 95063 . 95081) (semantic-list 95001 . 95025) (symbol 94982 . 95000) (semantic-list 94925 . 94945) (symbol 94906 . 94924) (semantic-list 94860 . 94873) (symbol 94841 . 94859) (semantic-list 94800 . 94815) (symbol 94781 . 94799) (semantic-list 94744 . 94753) (symbol 94725 . 94743) (semantic-list 94686 . 94703) (symbol 94667 . 94685) (semantic-list 94626 . 94637) (symbol 94607 . 94625) (semantic-list 94571 . 94583) (symbol 94552 . 94570) (semantic-list 94510 . 94527) (symbol 94491 . 94509) (semantic-list 94449 . 94461) (symbol 94430 . 94448) (semantic-list 94391 . 94405) (symbol 94372 . 94390) (semantic-list 94336 . 94345) (symbol 94317 . 94335) (semantic-list 94288 . 94295) (symbol 94269 . 94287) (semantic-list 94228 . 94249) (symbol 94209 . 94227) (semantic-list 94161 . 94175) (symbol 94142 . 94160) (semantic-list 94108 . 94115) (symbol 94089 . 94107) (semantic-list 94051 . 94069) (symbol 94032 . 94050) (semantic-list 93986 . 94001) (symbol 93967 . 93985) (semantic-list 93926 . 93939) (symbol 93907 . 93925) (semantic-list 93859 . 93881) (symbol 93840 . 93858) (semantic-list 93780 . 93805) (symbol 93761 . 93779) (semantic-list 93700 . 93723) (symbol 93681 . 93699) (semantic-list 93636 . 93645) (symbol 93617 . 93635) (semantic-list 93588 . 93595) (symbol 93569 . 93587) (semantic-list 93529 . 93549) (symbol 93510 . 93528) (semantic-list 93465 . 93477) (symbol 93446 . 93464) (semantic-list 93413 . 93421) (symbol 93394 . 93412) (semantic-list 93365 . 93373) (symbol 93346 . 93364) (semantic-list 93315 . 93325) (symbol 93296 . 93314) (semantic-list 93256 . 93273) (symbol 93237 . 93255) (semantic-list 93179 . 93207) (symbol 93160 . 93178) (semantic-list 93088 . 93119) (symbol 93069 . 93087) (semantic-list 93004 . 93025) (symbol 92985 . 93003) (semantic-list 92916 . 92951) (symbol 92897 . 92915) (semantic-list 92822 . 92849) (symbol 92803 . 92821) (semantic-list 92740 . 92763) (symbol 92721 . 92739) (semantic-list 92668 . 92685) (symbol 92649 . 92667) (semantic-list 92605 . 92619) (symbol 92586 . 92604) (semantic-list 92545 . 92559) (symbol 92526 . 92544) (semantic-list 92474 . 92499) (symbol 92455 . 92473) (semantic-list 92400 . 92417) (symbol 92381 . 92399) (semantic-list 92344 . 92351) (symbol 92325 . 92343) (semantic-list 92299 . 92305) (symbol 92280 . 92298) (semantic-list 92244 . 92261) (symbol 92225 . 92243) (semantic-list 92179 . 92195) (symbol 92160 . 92178) (semantic-list 92113 . 92131) (symbol 92094 . 92112) (semantic-list 92036 . 92063) (symbol 92017 . 92035) (semantic-list 91952 . 91977) (symbol 91933 . 91951) (semantic-list 91884 . 91895) (symbol 91865 . 91883) (semantic-list 91828 . 91841) (symbol 91809 . 91827) (semantic-list 91763 . 91783) (symbol 91744 . 91762) (semantic-list 91692 . 91711) (symbol 91673 . 91691) (semantic-list 91626 . 91641) (symbol 91607 . 91625) (semantic-list 91554 . 91579) (symbol 91535 . 91553) (semantic-list 91486 . 91497) (symbol 91467 . 91485) (semantic-list 91419 . 91443) (symbol 91400 . 91418) (semantic-list 91353 . 91363) (symbol 91334 . 91352) (semantic-list 91299 . 91311) (symbol 91280 . 91298) (semantic-list 91242 . 91255) (symbol 91223 . 91241) (semantic-list 91184 . 91197) (symbol 91165 . 91183) (semantic-list 91128 . 91139) (symbol 91109 . 91127) (semantic-list 91078 . 91085) (symbol 91059 . 91077) (semantic-list 91024 . 91039) (symbol 91005 . 91023) (semantic-list 90968 . 90977) (symbol 90949 . 90967) (semantic-list 90916 . 90927) (symbol 90897 . 90915) (semantic-list 90851 . 90873) (symbol 90832 . 90850) (semantic-list 90774 . 90797) (symbol 90755 . 90773) (semantic-list 90696 . 90719) (symbol 90677 . 90695) (semantic-list 90632 . 90641) (symbol 90613 . 90631) (semantic-list 90582 . 90591) (symbol 90563 . 90581) (semantic-list 90516 . 90541) (symbol 90497 . 90515) (semantic-list 90431 . 90459) (symbol 90412 . 90430) (semantic-list 90346 . 90371) (symbol 90327 . 90345) (semantic-list 90274 . 90289) (symbol 90255 . 90273) (semantic-list 90204 . 90227) (symbol 90185 . 90203) (semantic-list 90135 . 90149) (symbol 90116 . 90134) (semantic-list 90081 . 90089) (symbol 90062 . 90080) (semantic-list 90030 . 90041) (symbol 90011 . 90029) (semantic-list 89971 . 89987) (symbol 89952 . 89970) (semantic-list 89896 . 89923) (symbol 89877 . 89895) (semantic-list 89828 . 89837) (symbol 89809 . 89827) (semantic-list 89767 . 89787) (symbol 89748 . 89766) (semantic-list 89696 . 89715) (symbol 89677 . 89695) (semantic-list 89630 . 89645) (symbol 89611 . 89629) (semantic-list 89573 . 89583) (symbol 89554 . 89572) (semantic-list 89519 . 89531) (symbol 89500 . 89518) (semantic-list 89449 . 89475) (symbol 89430 . 89448) (semantic-list 89379 . 89391) (symbol 89360 . 89378) (semantic-list 89321 . 89335) (symbol 89302 . 89320) (semantic-list 89258 . 89275) (symbol 89239 . 89257) (semantic-list 89195 . 89209) (symbol 89176 . 89194) (semantic-list 89137 . 89149) (symbol 89118 . 89136) (semantic-list 89079 . 89093) (symbol 89060 . 89078) (semantic-list 89018 . 89033) (symbol 88999 . 89017) (semantic-list 88964 . 88971) (symbol 88945 . 88963) (semantic-list 88913 . 88925) (symbol 88894 . 88912) (semantic-list 88858 . 88869) (symbol 88839 . 88857) (semantic-list 88807 . 88815) (symbol 88788 . 88806) (semantic-list 88758 . 88767) (symbol 88739 . 88757) (semantic-list 88708 . 88717) (symbol 88689 . 88707) (semantic-list 88659 . 88667) (symbol 88640 . 88658) (semantic-list 88609 . 88619) (symbol 88590 . 88608) (semantic-list 88547 . 88567) (symbol 88528 . 88546) (semantic-list 88483 . 88495) (symbol 88464 . 88482) (semantic-list 88421 . 88439) (symbol 88402 . 88420) (semantic-list 88355 . 88371) (symbol 88336 . 88354) (semantic-list 88288 . 88307) (symbol 88269 . 88287) (semantic-list 88220 . 88237) (symbol 88201 . 88219) (semantic-list 88148 . 88171) (symbol 88129 . 88147) (semantic-list 88076 . 88093) (symbol 88057 . 88075) (semantic-list 88009 . 88027) (symbol 87990 . 88008) (semantic-list 87939 . 87959) (symbol 87920 . 87938) (semantic-list 87873 . 87887) (symbol 87854 . 87872) (semantic-list 87802 . 87827) (symbol 87783 . 87801) (semantic-list 87720 . 87745) (symbol 87701 . 87719) (semantic-list 87643 . 87663) (symbol 87624 . 87642) (semantic-list 87565 . 87591) (symbol 87546 . 87564) (semantic-list 87485 . 87507) (symbol 87466 . 87484) (semantic-list 87408 . 87431) (symbol 87389 . 87407) (semantic-list 87322 . 87353) (symbol 87303 . 87321) (semantic-list 87234 . 87259) (symbol 87215 . 87233) (semantic-list 87149 . 87177) (symbol 87130 . 87148) (semantic-list 87076 . 87089) (symbol 87057 . 87075) (semantic-list 87016 . 87031) (symbol 86997 . 87015) (semantic-list 86953 . 86969) (symbol 86934 . 86952) (semantic-list 86885 . 86905) (symbol 86866 . 86884) (semantic-list 86820 . 86833) (symbol 86801 . 86819) (semantic-list 86756 . 86775) (symbol 86737 . 86755) (semantic-list 86687 . 86705) (symbol 86668 . 86686) (semantic-list 86613 . 86637) (symbol 86594 . 86612) (semantic-list 86539 . 86557) (symbol 86520 . 86538) (semantic-list 86467 . 86489) (symbol 86448 . 86466) (semantic-list 86402 . 86413) (symbol 86383 . 86401) (semantic-list 86329 . 86359) (symbol 86310 . 86328) (semantic-list 86259 . 86267) (symbol 86240 . 86258) (semantic-list 86208 . 86219) (symbol 86189 . 86207) (semantic-list 86155 . 86165) (symbol 86136 . 86154) (semantic-list 86104 . 86113) (symbol 86085 . 86103) (semantic-list 86032 . 86063) (symbol 86013 . 86031) (semantic-list 85951 . 85969) (symbol 85932 . 85950) (semantic-list 85888 . 85901) (symbol 85869 . 85887) (semantic-list 85836 . 85843) (symbol 85817 . 85835) (semantic-list 85783 . 85797) (symbol 85764 . 85782) (semantic-list 85724 . 85737) (symbol 85705 . 85723) (semantic-list 85651 . 85679) (symbol 85632 . 85650) (semantic-list 85568 . 85591) (symbol 85549 . 85567) (semantic-list 85496 . 85513) (symbol 85477 . 85495) (semantic-list 85431 . 85447) (symbol 85412 . 85430) (semantic-list 85372 . 85383) (symbol 85353 . 85371) (semantic-list 85310 . 85329) (symbol 85291 . 85309) (semantic-list 85243 . 85259) (symbol 85224 . 85242) (semantic-list 85188 . 85195) (symbol 85169 . 85187) (semantic-list 85142 . 85149) (symbol 85123 . 85141) (semantic-list 85079 . 85103) (symbol 85060 . 85078) (semantic-list 84995 . 85023) (symbol 84976 . 84994) (semantic-list 84922 . 84935) (symbol 84903 . 84921) (semantic-list 84870 . 84877) (symbol 84851 . 84869) (semantic-list 84819 . 84831) (symbol 84800 . 84818) (semantic-list 84756 . 84775) (symbol 84737 . 84755) (semantic-list 84698 . 84705) (symbol 84679 . 84697) (semantic-list 84652 . 84659) (symbol 84633 . 84651) (semantic-list 84605 . 84613) (symbol 84586 . 84604) (semantic-list 84550 . 84565) (symbol 84531 . 84549) (semantic-list 84487 . 84503) (symbol 84468 . 84486) (semantic-list 84420 . 84439) (symbol 84401 . 84419) (semantic-list 84361 . 84369) (symbol 84342 . 84360) (semantic-list 84313 . 84321) (symbol 84294 . 84312) (semantic-list 84267 . 84273) (symbol 84248 . 84266) (semantic-list 84224 . 84229) (symbol 84205 . 84223) (semantic-list 84173 . 84187) (symbol 84154 . 84172) (semantic-list 84114 . 84127) (symbol 84095 . 84113) (semantic-list 84055 . 84069) (symbol 84036 . 84054) (semantic-list 83993 . 84009) (symbol 83974 . 83992) (semantic-list 83914 . 83945) (symbol 83895 . 83913) (semantic-list 83838 . 83851) (symbol 83819 . 83837) (semantic-list 83781 . 83793) (symbol 83762 . 83780) (semantic-list 83728 . 83737) (symbol 83709 . 83727) (semantic-list 83674 . 83687) (symbol 83655 . 83673) (semantic-list 83621 . 83629) (symbol 83602 . 83620) (semantic-list 83569 . 83581) (symbol 83550 . 83568) (semantic-list 83518 . 83525) (symbol 83499 . 83517) (semantic-list 83462 . 83479) (symbol 83443 . 83461) (semantic-list 83395 . 83413) (symbol 83376 . 83394) (semantic-list 83322 . 83345) (symbol 83303 . 83321) (semantic-list 83256 . 83267) (symbol 83237 . 83255) (semantic-list 83199 . 83213) (symbol 83180 . 83198) (semantic-list 83130 . 83153) (symbol 83111 . 83129) (semantic-list 83068 . 83075) (symbol 83049 . 83067) (semantic-list 83023 . 83029) (symbol 83004 . 83022) (semantic-list 82971 . 82985) (symbol 82952 . 82970) (semantic-list 82910 . 82925) (symbol 82891 . 82909) (semantic-list 82836 . 82863) (symbol 82817 . 82835) (semantic-list 82762 . 82777) (symbol 82743 . 82761) (semantic-list 82699 . 82715) (symbol 82680 . 82698) (semantic-list 82617 . 82651) (symbol 82598 . 82616) (semantic-list 82522 . 82551) (symbol 82503 . 82521) (semantic-list 82432 . 82461) (symbol 82413 . 82431) (semantic-list 82340 . 82371) (symbol 82321 . 82339) (semantic-list 82254 . 82277) (symbol 82235 . 82253) (semantic-list 82182 . 82199) (symbol 82163 . 82181) (semantic-list 82123 . 82133) (symbol 82104 . 82122) (semantic-list 82070 . 82081) (symbol 82051 . 82069) (semantic-list 82012 . 82027) (symbol 81993 . 82011) (semantic-list 81932 . 81965) (symbol 81913 . 81931) (semantic-list 81849 . 81867) (symbol 81830 . 81848) (semantic-list 81777 . 81799) (symbol 81758 . 81776) (semantic-list 81714 . 81723) (symbol 81695 . 81713) (semantic-list 81657 . 81673) (symbol 81638 . 81656) (semantic-list 81581 . 81609) (symbol 81562 . 81580) (semantic-list 81507 . 81521) (symbol 81488 . 81506) (semantic-list 81436 . 81461) (symbol 81417 . 81435) (semantic-list 81364 . 81379) (symbol 81345 . 81363) (semantic-list 81303 . 81317) (symbol 81284 . 81302) (semantic-list 81238 . 81257) (symbol 81219 . 81237) (semantic-list 81159 . 81187) (symbol 81140 . 81158) (semantic-list 81083 . 81099) (symbol 81064 . 81082) (semantic-list 81026 . 81035) (symbol 81007 . 81025) (semantic-list 80961 . 80985) (symbol 80942 . 80960) (semantic-list 80897 . 80905) (symbol 80878 . 80896) (semantic-list 80843 . 80857) (symbol 80824 . 80842) (semantic-list 80789 . 80797) (symbol 80770 . 80788) (semantic-list 80722 . 80749) (symbol 80703 . 80721) (semantic-list 80643 . 80663) (symbol 80624 . 80642) (semantic-list 80581 . 80591) (symbol 80562 . 80580) (semantic-list 80514 . 80539) (symbol 80495 . 80513) (semantic-list 80433 . 80457) (symbol 80414 . 80432) (semantic-list 80356 . 80377) (symbol 80337 . 80355) (semantic-list 80295 . 80303) (symbol 80276 . 80294) (semantic-list 80237 . 80255) (symbol 80218 . 80236) (semantic-list 80163 . 80187) (symbol 80144 . 80162) (semantic-list 80094 . 80107) (symbol 80075 . 80093) (semantic-list 80036 . 80049) (symbol 80017 . 80035) (semantic-list 79984 . 79991) (symbol 79965 . 79983) (semantic-list 79934 . 79945) (symbol 79915 . 79933) (semantic-list 79884 . 79891) (symbol 79865 . 79883) (semantic-list 79841 . 79845) (symbol 79822 . 79840) (semantic-list 79775 . 79805) (symbol 79756 . 79774) (semantic-list 79683 . 79713) (symbol 79664 . 79682) (semantic-list 79612 . 79621) (symbol 79593 . 79611) (semantic-list 79551 . 79571) (symbol 79532 . 79550) (semantic-list 79473 . 79499) (symbol 79454 . 79472) (semantic-list 79401 . 79415) (symbol 79382 . 79400) (semantic-list 79333 . 79355) (symbol 79314 . 79332) (semantic-list 79264 . 79279) (symbol 79245 . 79263) (semantic-list 79208 . 79217) (symbol 79189 . 79207) (semantic-list 79147 . 79167) (symbol 79128 . 79146) (semantic-list 79080 . 79095) (symbol 79061 . 79079) (semantic-list 79010 . 79033) (symbol 78991 . 79009) (semantic-list 78948 . 78955) (symbol 78929 . 78947) (semantic-list 78901 . 78909) (symbol 78882 . 78900) (semantic-list 78852 . 78861) (symbol 78833 . 78851) (semantic-list 78802 . 78811) (symbol 78783 . 78801) (semantic-list 78753 . 78761) (symbol 78734 . 78752) (semantic-list 78701 . 78713) (symbol 78682 . 78700) (semantic-list 78640 . 78657) (symbol 78621 . 78639) (semantic-list 78576 . 78591) (symbol 78557 . 78575) (semantic-list 78521 . 78529) (symbol 78502 . 78520) (semantic-list 78472 . 78481) (symbol 78453 . 78471) (semantic-list 78424 . 78431) (symbol 78405 . 78423) (semantic-list 78375 . 78385) (symbol 78356 . 78374) (semantic-list 78310 . 78333) (symbol 78291 . 78309) (semantic-list 78232 . 78255) (symbol 78213 . 78231) (semantic-list 78156 . 78177) (symbol 78137 . 78155) (semantic-list 78087 . 78103) (symbol 78068 . 78086) (semantic-list 78025 . 78039) (symbol 78006 . 78024) (semantic-list 77954 . 77979) (symbol 77935 . 77953) (semantic-list 77877 . 77897) (symbol 77858 . 77876) (semantic-list 77796 . 77825) (symbol 77777 . 77795) (semantic-list 77724 . 77735) (symbol 77705 . 77723) (semantic-list 77663 . 77681) (symbol 77644 . 77662) (semantic-list 77590 . 77613) (symbol 77571 . 77589) (semantic-list 77523 . 77535) (symbol 77504 . 77522) (semantic-list 77468 . 77479) (symbol 77449 . 77467) (semantic-list 77417 . 77425) (symbol 77398 . 77416) (semantic-list 77370 . 77377) (symbol 77351 . 77369) (semantic-list 77321 . 77331) (symbol 77302 . 77320) (semantic-list 77261 . 77279) (symbol 77242 . 77260) (semantic-list 77187 . 77211) (symbol 77168 . 77186) (semantic-list 77109 . 77131) (symbol 77090 . 77108) (semantic-list 77027 . 77055) (symbol 77008 . 77026) (semantic-list 76957 . 76967) (symbol 76938 . 76956) (semantic-list 76890 . 76915) (symbol 76871 . 76889) (semantic-list 76811 . 76833) (symbol 76792 . 76810) (semantic-list 76747 . 76757) (symbol 76728 . 76746) (semantic-list 76695 . 76705) (symbol 76676 . 76694) (semantic-list 76643 . 76653) (symbol 76624 . 76642) (semantic-list 76592 . 76601) (symbol 76573 . 76591) (semantic-list 76537 . 76551) (symbol 76518 . 76536) (semantic-list 76475 . 76491) (symbol 76456 . 76474) (semantic-list 76419 . 76427) (symbol 76400 . 76418) (semantic-list 76368 . 76379) (symbol 76349 . 76367) (semantic-list 76309 . 76325) (symbol 76290 . 76308) (semantic-list 76252 . 76261) (symbol 76233 . 76251) (semantic-list 76202 . 76211) (symbol 76183 . 76201) (semantic-list 76150 . 76161) (symbol 76131 . 76149) (semantic-list 76097 . 76107) (symbol 76078 . 76096) (semantic-list 76042 . 76055) (symbol 76023 . 76041) (semantic-list 75982 . 75997) (symbol 75963 . 75981) (semantic-list 75910 . 75935) (symbol 75891 . 75909) (semantic-list 75840 . 75853) (symbol 75821 . 75839) (semantic-list 75775 . 75795) (symbol 75756 . 75774) (semantic-list 75704 . 75723) (symbol 75685 . 75703) (semantic-list 75636 . 75653) (symbol 75617 . 75635) (semantic-list 75560 . 75587) (symbol 75541 . 75559) (semantic-list 75494 . 75501) (symbol 75475 . 75493) (semantic-list 75430 . 75455) (symbol 75411 . 75429) (semantic-list 75353 . 75373) (symbol 75334 . 75352) (semantic-list 75292 . 75301) (symbol 75273 . 75291) (semantic-list 75241 . 75251) (symbol 75222 . 75240) (semantic-list 75193 . 75199) (symbol 75174 . 75192) (semantic-list 75148 . 75155) (symbol 75129 . 75147) (semantic-list 75091 . 75109) (symbol 75072 . 75090) (semantic-list 75035 . 75041) (symbol 75016 . 75034) (semantic-list 74982 . 74997) (symbol 74963 . 74981) (semantic-list 74923 . 74935) (symbol 74904 . 74922) (semantic-list 74860 . 74879) (symbol 74841 . 74859) (semantic-list 74792 . 74809) (symbol 74773 . 74791) (semantic-list 74732 . 74743) (symbol 74713 . 74731) (semantic-list 74665 . 74689) (symbol 74646 . 74664) (semantic-list 74594 . 74609) (symbol 74575 . 74593) (semantic-list 74534 . 74547) (symbol 74515 . 74533) (semantic-list 74470 . 74489) (symbol 74451 . 74469) (semantic-list 74399 . 74419) (symbol 74380 . 74398) (semantic-list 74332 . 74347) (symbol 74313 . 74331) (semantic-list 74263 . 74285) (symbol 74244 . 74262) (semantic-list 74194 . 74209) (symbol 74175 . 74193) (semantic-list 74143 . 74147) (symbol 74124 . 74142) (semantic-list 74089 . 74107) (symbol 74070 . 74088) (semantic-list 74018 . 74039) (symbol 73999 . 74017) (semantic-list 73955 . 73965) (symbol 73936 . 73954) (semantic-list 73903 . 73913) (symbol 73884 . 73902) (semantic-list 73842 . 73861) (symbol 73823 . 73841) (semantic-list 73772 . 73791) (symbol 73753 . 73771) (semantic-list 73703 . 73721) (symbol 73684 . 73702) (semantic-list 73632 . 73653) (symbol 73613 . 73631) (semantic-list 73557 . 73579) (symbol 73538 . 73556) (semantic-list 73477 . 73503) (symbol 73458 . 73476) (semantic-list 73405 . 73419) (symbol 73386 . 73404) (semantic-list 73331 . 73359) (symbol 73312 . 73330) (semantic-list 73237 . 73271) (symbol 73218 . 73236) (semantic-list 73162 . 73171) (symbol 73143 . 73161) (semantic-list 73115 . 73121) (symbol 73096 . 73114) (semantic-list 73066 . 73077) (symbol 73047 . 73065) (semantic-list 73001 . 73023) (symbol 72982 . 73000) (semantic-list 72931 . 72947) (symbol 72912 . 72930) (semantic-list 72862 . 72883) (symbol 72843 . 72861) (semantic-list 72795 . 72809) (symbol 72776 . 72794) (semantic-list 72726 . 72749) (symbol 72707 . 72725) (semantic-list 72654 . 72671) (symbol 72635 . 72653) (semantic-list 72596 . 72605) (symbol 72577 . 72595) (semantic-list 72542 . 72555) (symbol 72523 . 72541) (semantic-list 72490 . 72497) (symbol 72471 . 72489) (semantic-list 72436 . 72451) (symbol 72417 . 72435) (semantic-list 72374 . 72389) (symbol 72355 . 72373) (semantic-list 72318 . 72327) (symbol 72299 . 72317) (semantic-list 72261 . 72277) (symbol 72242 . 72260) (semantic-list 72199 . 72213) (symbol 72180 . 72198) (semantic-list 72146 . 72153) (symbol 72127 . 72145) (semantic-list 72091 . 72107) (symbol 72072 . 72090) (semantic-list 72036 . 72043) (symbol 72017 . 72035) (semantic-list 71991 . 71997) (symbol 71972 . 71990) (semantic-list 71938 . 71953) (symbol 71919 . 71937) (semantic-list 71883 . 71891) (symbol 71864 . 71882) (semantic-list 71821 . 71843) (symbol 71802 . 71820) (semantic-list 71751 . 71767) (symbol 71732 . 71750) (semantic-list 71687 . 71703) (symbol 71668 . 71686) (semantic-list 71613 . 71639) (symbol 71594 . 71612) (semantic-list 71549 . 71555) (symbol 71530 . 71548) (semantic-list 71499 . 71511) (symbol 71480 . 71498) (semantic-list 71437 . 71455) (symbol 71418 . 71436) (semantic-list 71368 . 71387) (symbol 71349 . 71367) (semantic-list 71306 . 71317) (symbol 71287 . 71305) (semantic-list 71244 . 71263) (symbol 71225 . 71243) (semantic-list 71180 . 71193) (symbol 71161 . 71179) (semantic-list 71122 . 71135) (symbol 71103 . 71121) (semantic-list 71057 . 71077) (symbol 71038 . 71056) (semantic-list 70987 . 71005) (symbol 70968 . 70986) (semantic-list 70921 . 70937) (symbol 70902 . 70920) (semantic-list 70864 . 70873) (symbol 70845 . 70863) (semantic-list 70805 . 70823) (symbol 70786 . 70804) (semantic-list 70737 . 70755) (symbol 70718 . 70736) (semantic-list 70677 . 70687) (symbol 70658 . 70676) (semantic-list 70627 . 70635) (symbol 70608 . 70626) (semantic-list 70579 . 70587) (symbol 70560 . 70578) (semantic-list 70530 . 70539) (symbol 70511 . 70529) (semantic-list 70475 . 70489) (symbol 70456 . 70474) (semantic-list 70409 . 70429) (symbol 70390 . 70408) (semantic-list 70350 . 70357) (symbol 70331 . 70349) (semantic-list 70303 . 70311) (symbol 70284 . 70302) (semantic-list 70254 . 70263) (symbol 70235 . 70253) (semantic-list 70202 . 70213) (symbol 70183 . 70201) (semantic-list 70144 . 70159) (symbol 70125 . 70143) (semantic-list 70091 . 70097) (symbol 70072 . 70090) (semantic-list 70045 . 70053) (symbol 70026 . 70044) (semantic-list 69992 . 70005) (symbol 69973 . 69991) (semantic-list 69939 . 69947) (symbol 69920 . 69938) (semantic-list 69884 . 69899) (symbol 69865 . 69883) (semantic-list 69806 . 69837) (symbol 69787 . 69805) (semantic-list 69728 . 69743) (symbol 69709 . 69727) (semantic-list 69650 . 69681) (symbol 69631 . 69649) (semantic-list 69562 . 69587) (symbol 69543 . 69561) (semantic-list 69483 . 69505) (symbol 69464 . 69482) (semantic-list 69407 . 69429) (symbol 69388 . 69406) (semantic-list 69331 . 69353) (symbol 69312 . 69330) (semantic-list 69258 . 69277) (symbol 69239 . 69257) (semantic-list 69183 . 69207) (symbol 69164 . 69182) (semantic-list 69103 . 69127) (symbol 69084 . 69102) (semantic-list 69033 . 69047) (symbol 69014 . 69032) (semantic-list 68978 . 68987) (symbol 68959 . 68977) (semantic-list 68919 . 68937) (symbol 68900 . 68918) (semantic-list 68854 . 68869) (symbol 68835 . 68853) (semantic-list 68799 . 68807) (symbol 68780 . 68798) (semantic-list 68745 . 68759) (symbol 68726 . 68744) (semantic-list 68685 . 68699) (symbol 68666 . 68684) (semantic-list 68627 . 68639) (symbol 68608 . 68626) (semantic-list 68576 . 68583) (symbol 68557 . 68575) (semantic-list 68527 . 68537) (symbol 68508 . 68526) (semantic-list 68476 . 68485) (symbol 68457 . 68475) (semantic-list 68423 . 68435) (symbol 68404 . 68422) (semantic-list 68364 . 68379) (symbol 68345 . 68363) (semantic-list 68307 . 68317) (symbol 68288 . 68306) (semantic-list 68258 . 68265) (symbol 68239 . 68257) (semantic-list 68208 . 68219) (symbol 68189 . 68207) (semantic-list 68155 . 68165) (symbol 68136 . 68154) (semantic-list 68106 . 68113) (symbol 68087 . 68105) (semantic-list 68048 . 68067) (symbol 68029 . 68047) (semantic-list 67988 . 67997) (symbol 67969 . 67987) (semantic-list 67936 . 67947) (symbol 67917 . 67935) (semantic-list 67883 . 67893) (symbol 67864 . 67882) (semantic-list 67832 . 67841) (symbol 67813 . 67831) (semantic-list 67781 . 67791) (symbol 67762 . 67780) (semantic-list 67727 . 67739) (symbol 67708 . 67726) (semantic-list 67673 . 67683) (symbol 67654 . 67672) (semantic-list 67620 . 67631) (symbol 67601 . 67619) (semantic-list 67564 . 67577) (symbol 67545 . 67563) (semantic-list 67503 . 67519) (symbol 67484 . 67502) (semantic-list 67439 . 67455) (symbol 67420 . 67438) (semantic-list 67380 . 67391) (symbol 67361 . 67379) (semantic-list 67324 . 67337) (symbol 67305 . 67323) (semantic-list 67256 . 67279) (symbol 67237 . 67255) (semantic-list 67190 . 67201) (symbol 67171 . 67189) (semantic-list 67134 . 67147) (symbol 67115 . 67133) (semantic-list 67079 . 67089) (symbol 67060 . 67078) (semantic-list 67027 . 67037) (symbol 67008 . 67026) (semantic-list 66975 . 66985) (symbol 66956 . 66974) (semantic-list 66925 . 66933) (symbol 66906 . 66924) (semantic-list 66871 . 66885) (symbol 66852 . 66870) (semantic-list 66815 . 66825) (symbol 66796 . 66814) (semantic-list 66755 . 66773) (symbol 66736 . 66754) (semantic-list 66696 . 66705) (symbol 66677 . 66695) (semantic-list 66644 . 66655) (symbol 66625 . 66643) (semantic-list 66593 . 66601) (symbol 66574 . 66592) (semantic-list 66543 . 66553) (symbol 66524 . 66542) (semantic-list 66490 . 66501) (symbol 66471 . 66489) (semantic-list 66438 . 66447) (symbol 66419 . 66437) (semantic-list 66387 . 66397) (symbol 66368 . 66386) (semantic-list 66335 . 66345) (symbol 66316 . 66334) (semantic-list 66275 . 66293) (symbol 66256 . 66274) (semantic-list 66213 . 66225) (symbol 66194 . 66212) (semantic-list 66161 . 66169) (symbol 66142 . 66160) (semantic-list 66110 . 66121) (symbol 66091 . 66109) (semantic-list 66057 . 66067) (symbol 66038 . 66056) (semantic-list 66006 . 66015) (symbol 65987 . 66005) (semantic-list 65954 . 65965) (symbol 65935 . 65953) (semantic-list 65902 . 65911) (symbol 65883 . 65901) (semantic-list 65853 . 65861) (symbol 65834 . 65852) (semantic-list 65800 . 65813) (symbol 65781 . 65799) (semantic-list 65745 . 65755) (symbol 65726 . 65744) (semantic-list 65692 . 65703) (symbol 65673 . 65691) (semantic-list 65638 . 65649) (symbol 65619 . 65637) (semantic-list 65585 . 65595) (symbol 65566 . 65584) (semantic-list 65533 . 65543) (symbol 65514 . 65532) (semantic-list 65479 . 65491) (symbol 65460 . 65478) (semantic-list 65425 . 65435) (symbol 65406 . 65424) (semantic-list 65374 . 65383) (symbol 65355 . 65373) (semantic-list 65321 . 65333) (symbol 65302 . 65320) (semantic-list 65270 . 65277) (symbol 65251 . 65269) (semantic-list 65219 . 65231) (symbol 65200 . 65218) (semantic-list 65158 . 65175) (symbol 65139 . 65157) (semantic-list 65099 . 65109) (symbol 65080 . 65098) (semantic-list 65047 . 65057) (symbol 65028 . 65046) (semantic-list 64987 . 65005) (symbol 64968 . 64986) (semantic-list 64918 . 64937) (symbol 64899 . 64917) (semantic-list 64847 . 64867) (symbol 64828 . 64846) (semantic-list 64780 . 64795) (symbol 64761 . 64779) (semantic-list 64721 . 64733) (symbol 64702 . 64720) (semantic-list 64668 . 64677) (symbol 64649 . 64667) (semantic-list 64615 . 64627) (symbol 64596 . 64614) (semantic-list 64559 . 64571) (symbol 64540 . 64558) (semantic-list 64502 . 64515) (symbol 64483 . 64501) (semantic-list 64443 . 64457) (symbol 64424 . 64442) (semantic-list 64386 . 64397) (symbol 64367 . 64385) (semantic-list 64331 . 64343) (symbol 64312 . 64330) (semantic-list 64263 . 64287) (symbol 64244 . 64262) (semantic-list 64183 . 64207) (symbol 64164 . 64182) (semantic-list 64119 . 64127) (symbol 64100 . 64118) (semantic-list 64068 . 64079) (symbol 64049 . 64067) (semantic-list 64016 . 64025) (symbol 63997 . 64015) (semantic-list 63965 . 63975) (symbol 63946 . 63964) (semantic-list 63911 . 63923) (symbol 63892 . 63910) (semantic-list 63860 . 63867) (symbol 63841 . 63859) (semantic-list 63806 . 63821) (symbol 63787 . 63805) (semantic-list 63744 . 63759) (symbol 63725 . 63743) (semantic-list 63682 . 63697) (symbol 63663 . 63681) (semantic-list 63627 . 63635) (symbol 63608 . 63626) (semantic-list 63577 . 63587) (symbol 63558 . 63576) (semantic-list 63524 . 63535) (symbol 63505 . 63523) (semantic-list 63473 . 63481) (symbol 63454 . 63472) (semantic-list 63421 . 63433) (symbol 63402 . 63420) (semantic-list 63359 . 63377) (symbol 63340 . 63358) (semantic-list 63299 . 63309) (symbol 63280 . 63298) (semantic-list 63244 . 63257) (symbol 63225 . 63243) (semantic-list 63185 . 63199) (symbol 63166 . 63184) (semantic-list 63130 . 63140) (symbol 63111 . 63129) (semantic-list 63081 . 63089) (symbol 63062 . 63080) (semantic-list 63032 . 63042) (symbol 63013 . 63031) (semantic-list 62984 . 62991) (symbol 62965 . 62983) (semantic-list 62919 . 62946) (symbol 62900 . 62918) (semantic-list 62837 . 62861) (symbol 62818 . 62836) (semantic-list 62757 . 62782) (symbol 62738 . 62756) (semantic-list 62681 . 62701) (symbol 62662 . 62680) (semantic-list 62618 . 62630) (symbol 62599 . 62617) (semantic-list 62568 . 62575) (symbol 62549 . 62567) (semantic-list 62521 . 62530) (symbol 62502 . 62520) (semantic-list 62471 . 62481) (symbol 62452 . 62470) (semantic-list 62416 . 62430) (symbol 62397 . 62415) (semantic-list 62363 . 62371) (symbol 62344 . 62362) (semantic-list 62315 . 62324) (symbol 62296 . 62314) (semantic-list 62267 . 62275) (symbol 62248 . 62266) (semantic-list 62217 . 62228) (symbol 62198 . 62216) (semantic-list 62159 . 62175) (symbol 62140 . 62158) (semantic-list 62102 . 62112) (symbol 62083 . 62101) (semantic-list 62044 . 62061) (symbol 62025 . 62043) (semantic-list 61987 . 61996) (symbol 61968 . 61986) (semantic-list 61938 . 61947) (symbol 61919 . 61937) (semantic-list 61889 . 61898) (symbol 61870 . 61888) (semantic-list 61838 . 61849) (symbol 61819 . 61837) (semantic-list 61787 . 61796) (symbol 61768 . 61786) (semantic-list 61738 . 61747) (symbol 61719 . 61737) (semantic-list 61680 . 61698) (symbol 61661 . 61679) (semantic-list 61619 . 61631) (symbol 61600 . 61618) (semantic-list 61568 . 61576) (symbol 61549 . 61567) (semantic-list 61511 . 61529) (symbol 61492 . 61510) (semantic-list 61454 . 61462) (symbol 61435 . 61453) (semantic-list 61405 . 61415) (symbol 61386 . 61404) (semantic-list 61353 . 61364) (symbol 61334 . 61352) (semantic-list 61297 . 61311) (symbol 61278 . 61296) (semantic-list 61241 . 61252) (symbol 61222 . 61240) (semantic-list 61184 . 61199) (symbol 61165 . 61183) (semantic-list 61130 . 61138) (symbol 61111 . 61129) (semantic-list 61076 . 61091) (symbol 61057 . 61075) (semantic-list 61018 . 61030) (symbol 60999 . 61017) (semantic-list 60965 . 60975) (symbol 60946 . 60964) (semantic-list 60916 . 60924) (symbol 60897 . 60915) (semantic-list 60867 . 60877) (symbol 60848 . 60866) (semantic-list 60810 . 60826) (symbol 60791 . 60809) (semantic-list 60754 . 60763) (symbol 60735 . 60753) (semantic-list 60706 . 60714) (symbol 60687 . 60705) (semantic-list 60639 . 60667) (symbol 60620 . 60638) (semantic-list 60570 . 60580) (symbol 60551 . 60569) (semantic-list 60522 . 60529) (symbol 60503 . 60521) (semantic-list 60474 . 60484) (symbol 60455 . 60473) (semantic-list 60416 . 60433) (symbol 60397 . 60415) (semantic-list 60346 . 60368) (symbol 60327 . 60345) (semantic-list 60266 . 60293) (symbol 60247 . 60265) (semantic-list 60185 . 60208) (symbol 60166 . 60184) (semantic-list 60117 . 60131) (symbol 60098 . 60116) (semantic-list 60062 . 60072) (symbol 60043 . 60061) (semantic-list 60005 . 60021) (symbol 59986 . 60004) (semantic-list 59930 . 59958) (symbol 59911 . 59929) (semantic-list 59854 . 59871) (symbol 59835 . 59853) (semantic-list 59798 . 59806) (symbol 59779 . 59797) (semantic-list 59751 . 59759) (symbol 59732 . 59750) (semantic-list 59700 . 59712) (symbol 59681 . 59699) (semantic-list 59643 . 59657) (symbol 59624 . 59642) (semantic-list 59579 . 59598) (symbol 59560 . 59578) (semantic-list 59505 . 59529) (symbol 59486 . 59504) (semantic-list 59439 . 59450) (symbol 59420 . 59438) (semantic-list 59373 . 59397) (symbol 59354 . 59372) (semantic-list 59301 . 59318) (symbol 59282 . 59300) (semantic-list 59233 . 59253) (symbol 59214 . 59232) (semantic-list 59173 . 59182) (symbol 59154 . 59172) (semantic-list 59123 . 59133) (symbol 59104 . 59122) (semantic-list 59064 . 59082) (symbol 59045 . 59063) (semantic-list 58997 . 59015) (symbol 58978 . 58996) (semantic-list 58931 . 58948) (symbol 58912 . 58930) (semantic-list 58870 . 58883) (symbol 58851 . 58869) (semantic-list 58806 . 58826) (symbol 58787 . 58805) (semantic-list 58732 . 58755) (symbol 58713 . 58731) (semantic-list 58666 . 58678) (symbol 58647 . 58665) (semantic-list 58611 . 58623) (symbol 58592 . 58610) (semantic-list 58560 . 58568) (symbol 58541 . 58559) (semantic-list 58511 . 58521) (symbol 58492 . 58510) (semantic-list 58460 . 58470) (symbol 58441 . 58459) (semantic-list 58412 . 58419) (symbol 58393 . 58411) (semantic-list 58363 . 58374) (symbol 58344 . 58362) (semantic-list 58313 . 58321) (symbol 58294 . 58312) (semantic-list 58260 . 58274) (symbol 58241 . 58259) (semantic-list 58203 . 58215) (symbol 58184 . 58202) (semantic-list 58138 . 58160) (symbol 58119 . 58137) (semantic-list 58075 . 58085) (symbol 58056 . 58074) (semantic-list 58025 . 58034) (symbol 58006 . 58024) (semantic-list 57972 . 57985) (symbol 57953 . 57971) (semantic-list 57917 . 57929) (symbol 57898 . 57916) (semantic-list 57853 . 57875) (symbol 57834 . 57852) (semantic-list 57790 . 57801) (symbol 57771 . 57789) (semantic-list 57733 . 57749) (symbol 57714 . 57732) (semantic-list 57667 . 57687) (symbol 57648 . 57666) (semantic-list 57605 . 57617) (symbol 57586 . 57604) (semantic-list 57548 . 57563) (symbol 57529 . 57547) (semantic-list 57496 . 57503) (symbol 57477 . 57495) (semantic-list 57453 . 57459) (symbol 57434 . 57452) (semantic-list "(0)" 57454 . 57458))
      :lexical-table 
        '(("iQCLIPBOARD_MANAGER" . ((number "4" 57646 . 57647)))
          ("iQCdigest_algorithm_length" . ((number "47" 60244 . 60246)))
          ("iQCmap" . ((number "95" 62962 . 62964)))
          ("iQCotf" . ((number "111" 63837 . 63840)))
          ("iQCparity" . ((number "113" 63942 . 63945)))
          ("iQCserver" . ((number "141" 65562 . 65565)))
          ("iQCspacing" . ((number "148" 65931 . 65934)))
          ("iQCstop" . ((number "152" 66138 . 66141)))
          ("iQCuint16" . ((number "167" 66952 . 66955)))
          ("iQCuint64" . ((number "169" 67056 . 67059)))
          ("iQCunderline" . ((number "170" 67111 . 67114)))
          ("iQCuse_external_socket" . ((number "172" 67233 . 67236)))
          ("iQCuser_spec" . ((number "173" 67301 . 67304)))
          ("iQCverify_error" . ((number "175" 67416 . 67419)))
          ("iQactivate_input_method" . ((number "205" 69080 . 69083)))
          ("iQalist" . ((number "216" 69916 . 69919)))
          ("iQarrow" . ((number "228" 70556 . 70559)))
          ("iQattrib" . ((number "233" 70841 . 70844)))
          ("iQborder" . ((number "257" 72295 . 72298)))
          ("iQbuffer_list" . ((number "274" 73382 . 73385)))
          ("iQbuffer_name_history" . ((number "276" 73534 . 73537)))
          ("iQc" . ((number "285" 74120 . 74123)))
          ("iQcase_table" . ((number "291" 74511 . 74514)))
          ("iQcategoryp" . ((number "297" 74900 . 74903)))
          ("iQcharset" . ((number "316" 76074 . 76077)))
          ("iQcode_conversion_map" . ((number "329" 76788 . 76791)))
          ("iQdatagram" . ((number "378" 79911 . 79914)))
          ("iQdays" . ((number "379" 79961 . 79964)))
          ("iQend_scroll" . ((number "441" 84091 . 84094)))
          ("iQend_session" . ((number "442" 84150 . 84153)))
          ("iQetime" . ((number "450" 84582 . 84585)))
          ("iQexternal_debugging_output" . ((number "467" 85628 . 85631)))
          ("iQface" . ((number "470" 85813 . 85816)))
          ("iQfile_already_exists" . ((number "480" 86444 . 86447)))
          ("iQfile_executable_p" . ((number "486" 86862 . 86865)))
          ("iQfile_name_history" . ((number "496" 87620 . 87623)))
          ("iQfile_notify_error" . ((number "500" 87916 . 87919)))
          ("iQfree_frame_menubar_1" . ((number "544" 90673 . 90676)))
          ("iQfreetype" . ((number "547" 90893 . 90896)))
          ("iQget_emacs_mule_file_char" . ((number "565" 92013 . 92016)))
          ("iQglyphless_char_display" . ((number "572" 92451 . 92454)))
          ("iQhistory_length" . ((number "606" 94663 . 94666)))
          ("iQhollow_small" . ((number "608" 94777 . 94780)))
          ("iQhorizontal_scroll_bar" . ((number "611" 94978 . 94981)))
          ("iQimagemagick" . ((number "626" 95820 . 95823)))
          ("iQinhibit_quit" . ((number "636" 96671 . 96674)))
          ("iQinternal_default_process_filter" . ((number "657" 98246 . 98249)))
          ("iQinvalid_function" . ((number "665" 98909 . 98912)))
          ("iQitalic" . ((number "677" 99599 . 99602)))
          ("iQkbd_macro_termination_hook" . ((number "690" 100439 . 100442)))
          ("iQkey_and_value" . ((number "693" 100618 . 100621)))
          ("iQline_number_current_line" . ((number "731" 102925 . 102928)))
          ("iQmake_symbolic_link" . ((number "754" 104311 . 104314)))
          ("iQmakunbound" . ((number "755" 104377 . 104380)))
          ("iQmark_for_redisplay" . ((number "758" 104539 . 104542)))
          ("iQmodifier_value" . ((number "796" 106969 . 106972)))
          ("iQmodule_function" . ((number "799" 107162 . 107165)))
          ("iQmonospace_font_name" . ((number "809" 107856 . 107859)))
          ("iQmove_file_to_trash" . ((number "820" 108561 . 108564)))
          ("iQmove_self" . ((number "822" 108684 . 108687)))
          ("iQnatnump" . ((number "829" 109056 . 109059)))
          ("iQopentype" . ((number "858" 110767 . 110770)))
          ("iQouter_border_width" . ((number "861" 110949 . 110952)))
          ("iQp" . ((number "878" 112136 . 112139)))
          ("iQpbm" . ((number "882" 112344 . 112347)))
          ("iQplistp" . ((number "892" 112887 . 112890)))
          ("iQpostscript" . ((number "906" 113685 . 113688)))
          ("iQprocessp" . ((number "915" 114235 . 114238)))
          ("iQratio" . ((number "929" 114992 . 114995)))
          ("iQrelative" . ((number "948" 116229 . 116232)))
          ("iQrightmost" . ((number "963" 117176 . 117179)))
          ("iQsearch_failed" . ((number "985" 118552 . 118555)))
          ("iQsingularity_error" . ((number "1013" 120251 . 120255)))
          ("iQstandard_input" . ((number "1024" 120909 . 120913)))
          ("iQstart" . ((number "1026" 121036 . 121040)))
          ("iQstart_process" . ((number "1027" 121093 . 121097)))
          ("iQtemp_buffer_show_hook" . ((number "1061" 123077 . 123081)))
          ("iQterminal_live_p" . ((number "1064" 123274 . 123278)))
          ("iQthcount" . ((number "1070" 123628 . 123632)))
          ("iQtitle" . ((number "1077" 124013 . 124017)))
          ("iQtop" . ((number "1087" 124637 . 124641)))
          ("iQtop_bottom" . ((number "1088" 124689 . 124693)))
          ("iQtty_menu_exit" . ((number "1108" 125990 . 125994)))
          ("iQtty_menu_select" . ((number "1116" 126596 . 126600)))
          ("iQunix" . ((number "1138" 128225 . 128229)))
          ("iQvariable_documentation" . ((number "1161" 129574 . 129578)))
          ("iQvertical_scroll_bar" . ((number "1172" 130324 . 130328)))
          ("iQweakness" . ((number "1185" 131066 . 131070)))
          ("iQwidget_type" . ((number "1189" 131279 . 131283)))
          ("iQxg_frame_resized" . ((number "1239" 135084 . 135088)))
          ("iQxwidgetp" . ((number "1248" 135721 . 135725)))
          ("Vafter_load_alist" . 
              ((symbol "globals" 598 . 605) (punctuation "." 605 . 606) (symbol "f_Vafter_load_alist" 606 . 625)))
          ("Vbytecomp_version_regexp" . 
              ((symbol "globals" 2612 . 2619) (punctuation "." 2619 . 2620) (symbol "f_Vbytecomp_version_regexp" 2620 . 2646)))
          ("Vconfigure_info_directory" . 
              ((symbol "globals" 5339 . 5346) (punctuation "." 5346 . 5347) (symbol "f_Vconfigure_info_directory" 5347 . 5374)))
          ("Vdefault_file_name_coding_system" . 
              ((symbol "globals" 7444 . 7451) (punctuation "." 7451 . 7452) (symbol "f_Vdefault_file_name_coding_system" 7452 . 7486)))
          ("Vdelete_terminal_functions" . 
              ((symbol "globals" 8565 . 8572) (punctuation "." 8572 . 8573) (symbol "f_Vdelete_terminal_functions" 8573 . 8601)))
          ("Vexec_path" . 
              ((symbol "globals" 10405 . 10412) (punctuation "." 10412 . 10413) (symbol "f_Vexec_path" 10413 . 10425)))
          ("Vfontset_alias_alist" . 
              ((symbol "globals" 12688 . 12695) (punctuation "." 12695 . 12696) (symbol "f_Vfontset_alias_alist" 12696 . 12718)))
          ("Vframe_alpha_lower_limit" . 
              ((symbol "globals" 12794 . 12801) (punctuation "." 12801 . 12802) (symbol "f_Vframe_alpha_lower_limit" 12802 . 12828)))
          ("Vinhibit_file_name_handlers" . 
              ((symbol "globals" 15154 . 15161) (punctuation "." 15161 . 15162) (symbol "f_Vinhibit_file_name_handlers" 15162 . 15191)))
          ("Vinhibit_point_motion_hooks" . 
              ((symbol "globals" 15395 . 15402) (punctuation "." 15402 . 15403) (symbol "f_Vinhibit_point_motion_hooks" 15403 . 15432)))
          ("Vlast_event_frame" . 
              ((symbol "globals" 17634 . 17641) (punctuation "." 17641 . 17642) (symbol "f_Vlast_event_frame" 17642 . 17661)))
          ("Vline_prefix" . 
              ((symbol "globals" 18022 . 18029) (punctuation "." 18029 . 18030) (symbol "f_Vline_prefix" 18030 . 18044)))
          ("Vmaximum_scroll_margin" . 
              ((symbol "globals" 19577 . 19584) (punctuation "." 19584 . 19585) (symbol "f_Vmaximum_scroll_margin" 19585 . 19609)))
          ("Vmenu_bar_final_items" . 
              ((symbol "globals" 19848 . 19855) (punctuation "." 19855 . 19856) (symbol "f_Vmenu_bar_final_items" 19856 . 19879)))
          ("Vminibuffer_history_position" . 
              ((symbol "globals" 21152 . 21159) (punctuation "." 21159 . 21160) (symbol "f_Vminibuffer_history_position" 21160 . 21190)))
          ("Vmodule_file_suffix" . 
              ((symbol "globals" 22270 . 22277) (punctuation "." 22277 . 22278) (symbol "f_Vmodule_file_suffix" 22278 . 22299)))
          ("Vmodule_runtimes" . 
              ((symbol "globals" 22448 . 22455) (punctuation "." 22455 . 22456) (symbol "f_Vmodule_runtimes" 22456 . 22474)))
          ("Vnetwork_coding_system_alist" . 
              ((symbol "globals" 23378 . 23385) (punctuation "." 23385 . 23386) (symbol "f_Vnetwork_coding_system_alist" 23386 . 23416)))
          ("Vobarray" . 
              ((symbol "globals" 23561 . 23568) (punctuation "." 23568 . 23569) (symbol "f_Vobarray" 23569 . 23579)))
          ("Voverriding_plist_environment" . 
              ((symbol "globals" 24673 . 24680) (punctuation "." 24680 . 24681) (symbol "f_Voverriding_plist_environment" 24681 . 24712)))
          ("Vprevious_system_time_locale" . 
              ((symbol "globals" 25678 . 25685) (punctuation "." 25685 . 25686) (symbol "f_Vprevious_system_time_locale" 25686 . 25716)))
          ("Vpurify_flag" . 
              ((symbol "globals" 26959 . 26966) (punctuation "." 26966 . 26967) (symbol "f_Vpurify_flag" 26967 . 26981)))
          ("Vreal_this_command" . 
              ((symbol "globals" 27719 . 27726) (punctuation "." 27726 . 27727) (symbol "f_Vreal_this_command" 27727 . 27747)))
          ("Vtext_property_default_nonsticky" . 
              ((symbol "globals" 32307 . 32314) (punctuation "." 32314 . 32315) (symbol "f_Vtext_property_default_nonsticky" 32315 . 32349)))
          ("Vthis_command_keys_shift_translated" . 
              ((symbol "globals" 32619 . 32626) (punctuation "." 32626 . 32627) (symbol "f_Vthis_command_keys_shift_translated" 32627 . 32664)))
          ("Vtranslation_table_vector" . 
              ((symbol "globals" 34004 . 34011) (punctuation "." 34011 . 34012) (symbol "f_Vtranslation_table_vector" 34012 . 34039)))
          ("Vwindow_combination_limit" . 
              ((symbol "globals" 36102 . 36109) (punctuation "." 36109 . 36110) (symbol "f_Vwindow_combination_limit" 36110 . 36137)))
          ("Vwindow_persistent_parameters" . 
              ((symbol "globals" 36476 . 36483) (punctuation "." 36483 . 36484) (symbol "f_Vwindow_persistent_parameters" 36484 . 36515)))
          ("Vwindow_system_version" . 
              ((symbol "globals" 36944 . 36951) (punctuation "." 36951 . 36952) (symbol "f_Vwindow_system_version" 36952 . 36976)))
          ("Vwrite_region_post_annotation_function" . 
              ((symbol "globals" 37657 . 37664) (punctuation "." 37664 . 37665) (symbol "f_Vwrite_region_post_annotation_function" 37665 . 37705)))
          ("Vx_max_tooltip_size" . 
              ((symbol "globals" 38522 . 38529) (punctuation "." 38529 . 38530) (symbol "f_Vx_max_tooltip_size" 38530 . 38551)))
          ("Vx_window_bottom_right_corner_shape" . 
              ((symbol "globals" 40560 . 40567) (punctuation "." 40567 . 40568) (symbol "f_Vx_window_bottom_right_corner_shape" 40568 . 40605)))
          ("Vx_window_horizontal_drag_shape" . 
              ((symbol "globals" 40695 . 40702) (punctuation "." 40702 . 40703) (symbol "f_Vx_window_horizontal_drag_shape" 40703 . 40736)))
          ("last_command_event" . 
              ((symbol "globals" 42731 . 42738) (punctuation "." 42738 . 42739) (symbol "f_last_command_event" 42739 . 42759)))
          ("global_gnutls_log_level" . 
              ((symbol "globals" 44126 . 44133) (punctuation "." 44133 . 44134) (symbol "f_global_gnutls_log_level" 44134 . 44159)))
          ("line_number_display_limit_width" . 
              ((symbol "globals" 44514 . 44521) (punctuation "." 44521 . 44522) (symbol "f_line_number_display_limit_width" 44522 . 44555)))
          ("num_input_keys" . 
              ((symbol "globals" 44990 . 44997) (punctuation "." 44997 . 44998) (symbol "f_num_input_keys" 44998 . 45014)))
          ("num_nonmacro_input_events" . 
              ((symbol "globals" 45090 . 45097) (punctuation "." 45097 . 45098) (symbol "f_num_nonmacro_input_events" 45098 . 45125)))
          ("polling_period" . 
              ((symbol "globals" 45260 . 45267) (punctuation "." 45267 . 45268) (symbol "f_polling_period" 45268 . 45284)))
          ("binary_as_unsigned" . 
              ((symbol "globals" 47707 . 47714) (punctuation "." 47714 . 47715) (symbol "f_binary_as_unsigned" 47715 . 47735)))
          ("debug_on_next_call" . 
              ((symbol "globals" 48420 . 48427) (punctuation "." 48427 . 48428) (symbol "f_debug_on_next_call" 48428 . 48448)))
          ("display_hourglass_p" . 
              ((symbol "globals" 49101 . 49108) (punctuation "." 49108 . 49109) (symbol "f_display_hourglass_p" 49109 . 49130)))
          ("load_force_doc_strings" . 
              ((symbol "globals" 52376 . 52383) (punctuation "." 52383 . 52384) (symbol "f_load_force_doc_strings" 52384 . 52408)))
          ("load_prefer_newer" . 
              ((symbol "globals" 52542 . 52549) (punctuation "." 52549 . 52550) (symbol "f_load_prefer_newer" 52550 . 52569)))
          ("menu_prompting" . 
              ((symbol "globals" 52745 . 52752) (punctuation "." 52752 . 52753) (symbol "f_menu_prompting" 52753 . 52769)))
          ("x_mouse_click_focus_ignore_position" . 
              ((symbol "globals" 56926 . 56933) (punctuation "." 56933 . 56934) (symbol "f_x_mouse_click_focus_ignore_position" 56934 . 56971)))
          ("iQCascent" . ((number "11" 58053 . 58055)))
          ("iQCcombining_capability" . ((number "33" 59351 . 59353)))
          ("iQCcomplete_negotiation" . ((number "35" 59483 . 59485)))
          ("iQCdigest_algorithm_id" . ((number "46" 60163 . 60165)))
          ("iQCfilter" . ((number "59" 60943 . 60945)))
          ("iQChelp" . ((number "68" 61432 . 61434)))
          ("iQCitalic" . ((number "80" 62080 . 62082)))
          ("iQCkey_sequence" . ((number "81" 62137 . 62139)))
          ("iQCline_width" . ((number "86" 62394 . 62396)))
          ("iQCmac_algorithm_length" . ((number "93" 62815 . 62817)))
          ("iQCmin_prime_bits" . ((number "102" 63336 . 63339)))
          ("iQCmnemonic" . ((number "103" 63398 . 63401)))
          ("iQCobject_path" . ((number "109" 63721 . 63724)))
          ("iQCrelative_width" . ((number "130" 64964 . 64967)))
          ("iQCrotation" . ((number "134" 65196 . 65199)))
          ("iQCscalable" . ((number "136" 65298 . 65301)))
          ("iQCservice" . ((number "142" 65615 . 65618)))
          ("iQCsize" . ((number "146" 65830 . 65833)))
          ("iQCvolume" . ((number "179" 67650 . 67653)))
          ("iQINTEGER" . ((number "188" 68132 . 68135)))
          ("iQUTF8_STRING" . ((number "198" 68662 . 68665)))
          ("iQactivate_menubar_hook" . ((number "206" 69160 . 69163)))
          ("iQappend" . ((number "222" 70231 . 70234)))
          ("iQauto_fill_chars" . ((number "235" 70964 . 70967)))
          ("iQbelow" . ((number "249" 71860 . 71863)))
          ("iQcar_less_than_car" . ((number "289" 74376 . 74379)))
          ("iQcategory_table" . ((number "295" 74769 . 74772)))
          ("iQcclp" . ((number "301" 75125 . 75128)))
          ("iQchar_script_table" . ((number "311" 75752 . 75755)))
          ("iQclosed" . ((number "325" 76569 . 76572)))
          ("iQcoding_system_error" . ((number "333" 77086 . 77089)))
          ("iQcons" . ((number "353" 78401 . 78404)))
          ("iQcstime" . ((number "361" 78829 . 78832)))
          ("iQcursor_color" . ((number "368" 79241 . 79244)))
          ("iQcursor_in_echo_area" . ((number "369" 79310 . 79313)))
          ("iQd" . ((number "376" 79818 . 79821)))
          ("iQdefun" . ((number "391" 80766 . 80769)))
          ("iQdelete_by_moving_to_trash" . ((number "397" 81136 . 81139)))
          ("iQdelete_file" . ((number "399" 81280 . 81283)))
          ("iQdirectory_file_name" . ((number "406" 81754 . 81757)))
          ("iQdisplay_line_numbers" . ((number "413" 82231 . 82234)))
          ("iQdont_follow" . ((number "422" 82948 . 82951)))
          ("iQedge_detection" . ((number "430" 83439 . 83442)))
          ("iQerror_conditions" . ((number "447" 84397 . 84400)))
          ("iQeuid" . ((number "451" 84629 . 84632)))
          ("iQfile_date_error" . ((number "483" 86664 . 86667)))
          ("iQfile_name_case_insensitive_p" . ((number "492" 87299 . 87302)))
          ("iQfile_name_handler_alist" . ((number "495" 87542 . 87545)))
          ("iQfloatp" . ((number "512" 88685 . 88688)))
          ("iQfocus_in" . ((number "515" 88835 . 88838)))
          ("iQfree_frame_menubar_2" . ((number "545" 90751 . 90754)))
          ("iQfullheight" . ((number "552" 91161 . 91164)))
          ("iQget_file_char" . ((number "567" 92156 . 92159)))
          ("iQgnutls_type_mac_algorithm" . ((number "581" 93156 . 93159)))
          ("iQhash_table_p" . ((number "594" 93963 . 93966)))
          ("iQheader_line_format" . ((number "598" 94205 . 94208)))
          ("iQheight" . ((number "600" 94313 . 94316)))
          ("iQhyper" . ((number "614" 95166 . 95169)))
          ("iQicon" . ((number "615" 95213 . 95216)))
          ("iQicon_top" . ((number "618" 95375 . 95378)))
          ("iQidentity" . ((number "622" 95621 . 95624)))
          ("iQinsufficient_source" . ((number "645" 97368 . 97371)))
          ("iQinteger_or_marker_p" . ((number "648" 97554 . 97557)))
          ("iQinterrupted" . ((number "662" 98724 . 98727)))
          ("iQja" . ((number "679" 99697 . 99700)))
          ("iQkeep_ratio" . ((number "691" 100513 . 100516)))
          ("iQkill_forward_chars" . ((number "702" 101215 . 101218)))
          ("iQleft" . ((number "713" 101865 . 101868)))
          ("iQmake_frame_visible" . ((number "752" 104171 . 104174)))
          ("iQmargin" . ((number "757" 104477 . 104480)))
          ("iQmd5" . ((number "763" 104820 . 104823)))
          ("iQmenu" . ((number "764" 104865 . 104868)))
          ("iQminflt" . ((number "776" 105577 . 105580)))
          ("iQminibuffer_exit_hook" . ((number "781" 105933 . 105936)))
          ("iQmodule_not_gpl_compatible" . ((number "803" 107460 . 107463)))
          ("iQmutexp" . ((number "826" 108897 . 108900)))
          ("iQnetwork" . ((number "830" 109108 . 109111)))
          ("iQodd" . ((number "853" 110498 . 110501)))
          ("iQoverlayp" . ((number "871" 111603 . 111606)))
          ("iQpaper" . ((number "879" 112180 . 112183)))
          ("iQparent_id" . ((number "881" 112294 . 112297)))
          ("iQpoly" . ((number "900" 113311 . 113314)))
          ("iQposition" . ((number "902" 113415 . 113418)))
          ("iQpty" . ((number "920" 114538 . 114541)))
          ("iQpure" . ((number "921" 114583 . 114586)))
          ("iQread_char" . ((number "932" 115144 . 115147)))
          ("iQrecordp" . ((number "940" 115638 . 115641)))
          ("iQscroll_bar_background" . ((number "977" 118000 . 118003)))
          ("iQscroll_bar_foreground" . ((number "978" 118080 . 118083)))
          ("iQselection_request" . ((number "987" 118684 . 118687)))
          ("iQset_visited_file_modtime" . ((number "1001" 119536 . 119540)))
          ("iQsetting_constant" . ((number "1004" 119749 . 119753)))
          ("iQsignal" . ((number "1012" 120189 . 120193)))
          ("iQspace" . ((number "1019" 120571 . 120575)))
          ("iQsymbolp" . ((number "1052" 122524 . 122528)))
          ("iQtitlecase" . ((number "1079" 124133 . 124137)))
          ("iQttname" . ((number "1101" 125520 . 125524)))
          ("iQunicode" . ((number "1136" 128114 . 128118)))
          ("iQuser" . ((number "1146" 128701 . 128705)))
          ("iQuser_size" . ((number "1152" 129064 . 129068)))
          ("iQwidth_only" . ((number "1191" 131388 . 131392)))
          ("iQwindow_divider_first_pixel" . ((number "1202" 132305 . 132309)))
          ("iQwrite_region" . ((number "1213" 133068 . 133072)))
          ("iQx_handle_net_wm_state" . ((number "1224" 133888 . 133892)))
          ("iQx_lost_selection_functions" . ((number "1225" 133974 . 133978)))
          ("iQx_set_frame_parameters" . ((number "1229" 134288 . 134292)))
          ("Vauto_save_include_big_deletions" . 
              ((symbol "globals" 1240 . 1247) (punctuation "." 1247 . 1248) (symbol "f_Vauto_save_include_big_deletions" 1248 . 1282)))
          ("Vauto_save_list_file_name" . 
              ((symbol "globals" 1360 . 1367) (punctuation "." 1367 . 1368) (symbol "f_Vauto_save_list_file_name" 1368 . 1395)))
          ("Vcairo_version_string" . 
              ((symbol "globals" 2716 . 2723) (punctuation "." 2723 . 2724) (symbol "f_Vcairo_version_string" 2724 . 2747)))
          ("Vchar_property_alias_alist" . 
              ((symbol "globals" 3047 . 3054) (punctuation "." 3054 . 3055) (symbol "f_Vchar_property_alias_alist" 3055 . 3083)))
          ("Vcommand_debug_status" . 
              ((symbol "globals" 4356 . 4363) (punctuation "." 4363 . 4364) (symbol "f_Vcommand_debug_status" 4364 . 4387)))
          ("Vcurrent_load_list" . 
              ((symbol "globals" 5548 . 5555) (punctuation "." 5555 . 5556) (symbol "f_Vcurrent_load_list" 5556 . 5576)))
          ("Vdeferred_action_function" . 
              ((symbol "globals" 8016 . 8023) (punctuation "." 8023 . 8024) (symbol "f_Vdeferred_action_function" 8024 . 8051)))
          ("Vdefine_key_rebound_commands" . 
              ((symbol "globals" 8236 . 8243) (punctuation "." 8243 . 8244) (symbol "f_Vdefine_key_rebound_commands" 8244 . 8274)))
          ("Vdisable_point_adjustment" . 
              ((symbol "globals" 8679 . 8686) (punctuation "." 8686 . 8687) (symbol "f_Vdisable_point_adjustment" 8687 . 8714)))
          ("Vdoc_file_name" . 
              ((symbol "globals" 9332 . 9339) (punctuation "." 9339 . 9340) (symbol "f_Vdoc_file_name" 9340 . 9356)))
          ("Venable_character_translation" . 
              ((symbol "globals" 10006 . 10013) (punctuation "." 10013 . 10014) (symbol "f_Venable_character_translation" 10014 . 10045)))
          ("Vfile_name_coding_system" . 
              ((symbol "globals" 11374 . 11381) (punctuation "." 11381 . 11382) (symbol "f_Vfile_name_coding_system" 11382 . 11408)))
          ("Vframe_title_format" . 
              ((symbol "globals" 12894 . 12901) (punctuation "." 12901 . 12902) (symbol "f_Vframe_title_format" 12902 . 12923)))
          ("Vglobal_mode_string" . 
              ((symbol "globals" 13461 . 13468) (punctuation "." 13468 . 13469) (symbol "f_Vglobal_mode_string" 13469 . 13490)))
          ("Vhelp_form" . 
              ((symbol "globals" 13968 . 13975) (punctuation "." 13975 . 13976) (symbol "f_Vhelp_form" 13976 . 13988)))
          ("Vhourglass_delay" . 
              ((symbol "globals" 14235 . 14242) (punctuation "." 14242 . 14243) (symbol "f_Vhourglass_delay" 14243 . 14261)))
          ("Vinhibit_field_text_motion" . 
              ((symbol "globals" 15036 . 15043) (punctuation "." 15043 . 15044) (symbol "f_Vinhibit_field_text_motion" 15044 . 15072)))
          ("Vinhibit_redisplay" . 
              ((symbol "globals" 15665 . 15672) (punctuation "." 15672 . 15673) (symbol "f_Vinhibit_redisplay" 15673 . 15693)))
          ("Vinitial_environment" . 
              ((symbol "globals" 15761 . 15768) (punctuation "." 15768 . 15769) (symbol "f_Vinitial_environment" 15769 . 15791)))
          ("Vinput_method_function" . 
              ((symbol "globals" 15967 . 15974) (punctuation "." 15974 . 15975) (symbol "f_Vinput_method_function" 15975 . 15999)))
          ("Vload_file_name" . 
              ((symbol "globals" 18102 . 18109) (punctuation "." 18109 . 18110) (symbol "f_Vload_file_name" 18110 . 18127)))
          ("Vmemory_full" . 
              ((symbol "globals" 19661 . 19668) (punctuation "." 19668 . 19669) (symbol "f_Vmemory_full" 19669 . 19683)))
          ("Vminibuffer_completion_predicate" . 
              ((symbol "globals" 20702 . 20709) (punctuation "." 20709 . 20710) (symbol "f_Vminibuffer_completion_predicate" 20710 . 20744)))
          ("Vminibuffer_setup_hook" . 
              ((symbol "globals" 21839 . 21846) (punctuation "." 21846 . 21847) (symbol "f_Vminibuffer_setup_hook" 21847 . 21871)))
          ("Vminor_mode_overriding_map_alist" . 
              ((symbol "globals" 22064 . 22071) (punctuation "." 22071 . 22072) (symbol "f_Vminor_mode_overriding_map_alist" 22072 . 22106)))
          ("Vprint_continuous_numbering" . 
              ((symbol "globals" 25997 . 26004) (punctuation "." 26004 . 26005) (symbol "f_Vprint_continuous_numbering" 26005 . 26034)))
          ("Vprocess_environment" . 
              ((symbol "globals" 26877 . 26884) (punctuation "." 26884 . 26885) (symbol "f_Vprocess_environment" 26885 . 26907)))
          ("Vquit_flag" . 
              ((symbol "globals" 27029 . 27036) (punctuation "." 27036 . 27037) (symbol "f_Vquit_flag" 27037 . 27049)))
          ("Vselection_converter_alist" . 
              ((symbol "globals" 29528 . 29535) (punctuation "." 29535 . 29536) (symbol "f_Vselection_converter_alist" 29536 . 29564)))
          ("Vset_auto_coding_function" . 
              ((symbol "globals" 29782 . 29789) (punctuation "." 29789 . 29790) (symbol "f_Vset_auto_coding_function" 29790 . 29817)))
          ("Vspecial_event_map" . 
              ((symbol "globals" 30487 . 30494) (punctuation "." 30494 . 30495) (symbol "f_Vspecial_event_map" 30495 . 30515)))
          ("Vtool_bar_button_margin" . 
              ((symbol "globals" 33168 . 33175) (punctuation "." 33175 . 33176) (symbol "f_Vtool_bar_button_margin" 33176 . 33201)))
          ("Vtranslation_hash_table_vector" . 
              ((symbol "globals" 33764 . 33771) (punctuation "." 33771 . 33772) (symbol "f_Vtranslation_hash_table_vector" 33772 . 33804)))
          ("Vuser_full_name" . 
              ((symbol "globals" 35185 . 35192) (punctuation "." 35192 . 35193) (symbol "f_Vuser_full_name" 35193 . 35210)))
          ("Vwindow_scroll_functions" . 
              ((symbol "globals" 36713 . 36720) (punctuation "." 36720 . 36721) (symbol "f_Vwindow_scroll_functions" 36721 . 36747)))
          ("Vx_window_bottom_edge_shape" . 
              ((symbol "globals" 40285 . 40292) (punctuation "." 40292 . 40293) (symbol "f_Vx_window_bottom_edge_shape" 40293 . 40322)))
          ("Vx_window_top_left_corner_shape" . 
              ((symbol "globals" 41165 . 41172) (punctuation "." 41172 . 41173) (symbol "f_Vx_window_top_left_corner_shape" 41173 . 41206)))
          ("iconify_child_frame" . 
              ((symbol "globals" 42638 . 42645) (punctuation "." 42645 . 42646) (symbol "f_iconify_child_frame" 42646 . 42667)))
          ("cons_cells_consed" . 
              ((symbol "globals" 43337 . 43344) (punctuation "." 43344 . 43345) (symbol "f_cons_cells_consed" 43345 . 43364)))
          ("floats_consed" . 
              ((symbol "globals" 43884 . 43891) (punctuation "." 43891 . 43892) (symbol "f_floats_consed" 43892 . 43907)))
          ("auto_window_vscroll_p" . 
              ((symbol "globals" 47619 . 47626) (punctuation "." 47626 . 47627) (symbol "f_auto_window_vscroll_p" 47627 . 47650)))
          ("garbage_collection_messages" . 
              ((symbol "globals" 49932 . 49939) (punctuation "." 49939 . 49940) (symbol "f_garbage_collection_messages" 49940 . 49969)))
          ("indent_tabs_mode" . 
              ((symbol "globals" 50246 . 50253) (punctuation "." 50253 . 50254) (symbol "f_indent_tabs_mode" 50254 . 50272)))
          ("inhibit_message" . 
              ((symbol "globals" 51301 . 51308) (punctuation "." 51308 . 51309) (symbol "f_inhibit_message" 51309 . 51326)))
          ("minibuffer_allow_text_properties" . 
              ((symbol "globals" 52951 . 52958) (punctuation "." 52958 . 52959) (symbol "f_minibuffer_allow_text_properties" 52959 . 52993)))
          ("noninteractive1" . 
              ((symbol "globals" 53544 . 53551) (punctuation "." 53551 . 53552) (symbol "f_noninteractive1" 53552 . 53569)))
          ("parse_sexp_lookup_properties" . 
              ((symbol "globals" 53897 . 53904) (punctuation "." 53904 . 53905) (symbol "f_parse_sexp_lookup_properties" 53905 . 53935)))
          ("iQnil" . ((number "0" 57432 . 57433)))
          ("iQCavgwidth" . ((number "13" 58181 . 58183)))
          ("iQCcategory" . ((number "22" 58644 . 58646)))
          ("iQCconnection_type" . ((number "36" 59557 . 59559)))
          ("iQCdistant_foreground" . ((number "48" 60324 . 60326)))
          ("iQCfont_entity" . ((number "63" 61162 . 61164)))
          ("iQCheight" . ((number "67" 61383 . 61385)))
          ("iQCimage" . ((number "73" 61716 . 61718)))
          ("iQCkeylist" . ((number "82" 62195 . 62197)))
          ("iQCmargin" . ((number "96" 63010 . 63012)))
          ("iQCname" . ((number "104" 63450 . 63453)))
          ("iQCplist" . ((number "114" 63993 . 63996)))
          ("iQCpointer" . ((number "115" 64045 . 64048)))
          ("iQCpropertize" . ((number "121" 64420 . 64423)))
          ("iQCsignal" . ((number "144" 65722 . 65725)))
          ("iQCslant" . ((number "147" 65879 . 65882)))
          ("iQCstrike_through" . ((number "154" 66252 . 66255)))
          ("iQCtrustfiles" . ((number "165" 66848 . 66851)))
          ("iQCuint32" . ((number "168" 67004 . 67007)))
          ("iQabove_suspended" . ((number "202" 68896 . 68899)))
          ("iQbottom" . ((number "262" 72573 . 72576)))
          ("iQboundary" . ((number "269" 73043 . 73046)))
          ("iQbox" . ((number "270" 73092 . 73095)))
          ("iQbufferp" . ((number "281" 73880 . 73883)))
          ("iQcall_process_region" . ((number "287" 74240 . 74243)))
          ("iQcancel_timer" . ((number "288" 74309 . 74312)))
          ("iQccl" . ((number "299" 75012 . 75015)))
          ("iQcenter" . ((number "304" 75269 . 75272)))
          ("iQchar" . ((number "307" 75471 . 75474)))
          ("iQchar_or_string_p" . ((number "310" 75681 . 75684)))
          ("iQcoding_system_p" . ((number "335" 77238 . 77241)))
          ("iQcontinuation" . ((number "356" 78553 . 78556)))
          ("iQcopy_file" . ((number "358" 78678 . 78681)))
          ("iQcursor_type" . ((number "370" 79378 . 79381)))
          ("iQcyclic_variable_indirection" . ((number "375" 79752 . 79755)))
          ("iQdbus_event" . ((number "381" 80071 . 80074)))
          ("iQdebug_on_next_call" . ((number "385" 80333 . 80336)))
          ("iQdecomposed_characters" . ((number "386" 80410 . 80413)))
          ("iQdefault_directory" . ((number "389" 80620 . 80623)))
          ("iQdelete_directory" . ((number "398" 81215 . 81218)))
          ("iQdelete_frame_functions" . ((number "401" 81413 . 81416)))
          ("iQdos" . ((number "423" 83000 . 83003)))
          ("iQdrag_n_drop" . ((number "426" 83176 . 83179)))
          ("iQeq" . ((number "443" 84201 . 84204)))
          ("iQerror_message" . ((number "448" 84464 . 84467)))
          ("iQfile_name_nondirectory" . ((number "497" 87697 . 87700)))
          ("iQfloat" . ((number "511" 88636 . 88639)))
          ("iQfont_backend" . ((number "518" 88995 . 88998)))
          ("iQfraction" . ((number "534" 90007 . 90010)))
          ("iQframe_set_background_mode" . ((number "540" 90408 . 90411)))
          ("iQfringe" . ((number "548" 90945 . 90948)))
          ("iQfront_sticky" . ((number "549" 91001 . 91004)))
          ("iQftcr" . ((number "550" 91055 . 91058)))
          ("iQfunction_key" . ((number "559" 91603 . 91606)))
          ("iQgc_cons_threshold" . ((number "561" 91740 . 91743)))
          ("iQglyphless_char" . ((number "571" 92377 . 92380)))
          ("iQgroup" . ((number "585" 93390 . 93393)))
          ("iQhorizontal" . ((number "609" 94837 . 94840)))
          ("iQicon_name" . ((number "617" 95320 . 95323)))
          ("iQinhibit_menubar_update" . ((number "633" 96419 . 96422)))
          ("iQinhibit_read_only" . ((number "637" 96738 . 96741)))
          ("iQinput_method_exit_on_first_char" . ((number "640" 96956 . 96959)))
          ("iQinternal_border" . ((number "654" 97976 . 97979)))
          ("iQinvalid_read_syntax" . ((number "666" 98982 . 98985)))
          ("iQinvalid_source" . ((number "668" 99119 . 99122)))
          ("iQiso8859_1" . ((number "674" 99434 . 99437)))
          ("iQkey" . ((number "692" 100564 . 100567)))
          ("iQleft_edge" . ((number "714" 101916 . 101919)))
          ("iQleft_margin" . ((number "716" 102034 . 102037)))
          ("iQline_spacing" . ((number "733" 103059 . 103062)))
          ("iQlistp" . ((number "736" 103210 . 103213)))
          ("iQload_in_progress" . ((number "741" 103513 . 103516)))
          ("iQmacro" . ((number "748" 103910 . 103913)))
          ("iQmonths" . ((number "810" 107919 . 107922)))
          ("iQmouse" . ((number "811" 107968 . 107971)))
          ("iQmutex" . ((number "825" 108848 . 108851)))
          ("iQnice" . ((number "831" 109157 . 109160)))
          ("iQno_accept_focus" . ((number "832" 109214 . 109217)))
          ("iQnoelisp" . ((number "840" 109728 . 109731)))
          ("iQnormal" . ((number "843" 109881 . 109884)))
          ("iQnsm_verify_connection" . ((number "848" 110208 . 110211)))
          ("iQnumber_or_marker_p" . ((number "849" 110285 . 110288)))
          ("iQoverlay" . ((number "867" 111330 . 111333)))
          ("iQpermanent_local" . ((number "886" 112532 . 112535)))
          ("iQpermanent_local_hook" . ((number "887" 112605 . 112608)))
          ("iQplay_sound_functions" . ((number "890" 112775 . 112778)))
          ("iQpmem" . ((number "894" 112981 . 112984)))
          ("iQpoint_entered" . ((number "896" 113080 . 113083)))
          ("iQprofiler_backtrace_equal" . ((number "916" 114305 . 114308)))
          ("iQprovide" . ((number "919" 114490 . 114493)))
          ("iQq_overflow" . ((number "923" 114689 . 114692)))
          ("iQread" . ((number "931" 115093 . 115096)))
          ("iQrecord" . ((number "938" 115509 . 115512)))
          ("iQredisplay_internal_xC_functionx" . ((number "944" 115938 . 115941)))
          ("iQright_divider_width" . ((number "958" 116864 . 116867)))
          ("iQscroll_command" . ((number "982" 118371 . 118374)))
          ("iQscroll_up" . ((number "984" 118492 . 118495)))
          ("iQset_default" . ((number "995" 119116 . 119119)))
          ("iQskip_taskbar" . ((number "1015" 120366 . 120370)))
          ("iQsymbol" . ((number "1051" 122472 . 122476)))
          ("iQtty_color_desc" . ((number "1105" 125768 . 125772)))
          ("iQtty_menu_prev_menu" . ((number "1115" 126524 . 126528)))
          ("iQunicode_bmp" . ((number "1137" 128171 . 128175)))
          ("iQunspecified" . ((number "1141" 128381 . 128385)))
          ("iQvectors" . ((number "1166" 129892 . 129896)))
          ("iQvertical" . ((number "1169" 130124 . 130128)))
          ("iQwindow__sanitize_window_sizes" . ((number "1196" 131804 . 131808)))
          ("iQwindow_configuration_change_hook" . ((number "1198" 131983 . 131987)))
          ("iQwindow_divider_last_pixel" . ((number "1203" 132395 . 132399)))
          ("iQx_net_wm_state" . ((number "1226" 134053 . 134057)))
          ("Vauto_composition_mode" . 
              ((symbol "globals" 926 . 933) (punctuation "." 933 . 934) (symbol "f_Vauto_composition_mode" 934 . 958)))
          ("Vbuffer_list_update_hook" . 
              ((symbol "globals" 2250 . 2257) (punctuation "." 2257 . 2258) (symbol "f_Vbuffer_list_update_hook" 2258 . 2284)))
          ("Vdbus_registered_objects_table" . 
              ((symbol "globals" 6618 . 6625) (punctuation "." 6625 . 6626) (symbol "f_Vdbus_registered_objects_table" 6626 . 6658)))
          ("Vdeactivate_mark" . 
              ((symbol "globals" 6819 . 6826) (punctuation "." 6826 . 6827) (symbol "f_Vdeactivate_mark" 6827 . 6845)))
          ("Vdebug_on_error" . 
              ((symbol "globals" 7004 . 7011) (punctuation "." 7011 . 7012) (symbol "f_Vdebug_on_error" 7012 . 7029)))
          ("Vdebug_on_message" . 
              ((symbol "globals" 7174 . 7181) (punctuation "." 7181 . 7182) (symbol "f_Vdebug_on_message" 7182 . 7201)))
          ("Vdebug_on_signal" . 
              ((symbol "globals" 7261 . 7268) (punctuation "." 7268 . 7269) (symbol "f_Vdebug_on_signal" 7269 . 7287)))
          ("Vdefault_frame_alist" . 
              ((symbol "globals" 7554 . 7561) (punctuation "." 7561 . 7562) (symbol "f_Vdefault_frame_alist" 7562 . 7584)))
          ("Venable_disabled_menus_and_buttons" . 
              ((symbol "globals" 10141 . 10148) (punctuation "." 10148 . 10149) (symbol "f_Venable_disabled_menus_and_buttons" 10149 . 10185)))
          ("Vface_default_stipple" . 
              ((symbol "globals" 10673 . 10680) (punctuation "." 10680 . 10681) (symbol "f_Vface_default_stipple" 10681 . 10704)))
          ("Vfind_word_boundary_function_table" . 
              ((symbol "globals" 11614 . 11621) (punctuation "." 11621 . 11622) (symbol "f_Vfind_word_boundary_function_table" 11622 . 11658)))
          ("Vfont_encoding_alist" . 
              ((symbol "globals" 12023 . 12030) (punctuation "." 12030 . 12031) (symbol "f_Vfont_encoding_alist" 12031 . 12053)))
          ("Vfont_log" . 
              ((symbol "globals" 12221 . 12228) (punctuation "." 12228 . 12229) (symbol "f_Vfont_log" 12229 . 12240)))
          ("Vglyphless_char_display" . 
              ((symbol "globals" 13638 . 13645) (punctuation "." 13645 . 13646) (symbol "f_Vglyphless_char_display" 13646 . 13671)))
          ("Vinhibit_quit" . 
              ((symbol "globals" 15486 . 15493) (punctuation "." 15493 . 15494) (symbol "f_Vinhibit_quit" 15494 . 15509)))
          ("Vinterrupt_process_functions" . 
              ((symbol "globals" 16693 . 16700) (punctuation "." 16700 . 16701) (symbol "f_Vinterrupt_process_functions" 16701 . 16731)))
          ("Vlexical_binding" . 
              ((symbol "globals" 17828 . 17835) (punctuation "." 17835 . 17836) (symbol "f_Vlexical_binding" 17836 . 17854)))
          ("Vline_number_display_limit" . 
              ((symbol "globals" 17934 . 17941) (punctuation "." 17941 . 17942) (symbol "f_Vline_number_display_limit" 17942 . 17970)))
          ("Vload_path" . 
              ((symbol "globals" 18359 . 18366) (punctuation "." 18366 . 18367) (symbol "f_Vload_path" 18367 . 18379)))
          ("Vlucid_menu_bar_dirty_flag" . 
              ((symbol "globals" 18994 . 19001) (punctuation "." 19001 . 19002) (symbol "f_Vlucid_menu_bar_dirty_flag" 19002 . 19030)))
          ("Vmake_pointer_invisible" . 
              ((symbol "globals" 19178 . 19185) (punctuation "." 19185 . 19186) (symbol "f_Vmake_pointer_invisible" 19186 . 19211)))
          ("Voverlay_arrow_variable_list" . 
              ((symbol "globals" 24317 . 24324) (punctuation "." 24324 . 24325) (symbol "f_Voverlay_arrow_variable_list" 24325 . 24355)))
          ("Vpost_self_insert_hook" . 
              ((symbol "globals" 25036 . 25043) (punctuation "." 25043 . 25044) (symbol "f_Vpost_self_insert_hook" 25044 . 25068)))
          ("Vpre_redisplay_function" . 
              ((symbol "globals" 25231 . 25238) (punctuation "." 25238 . 25239) (symbol "f_Vpre_redisplay_function" 25239 . 25264)))
          ("Vprefix_help_command" . 
              ((symbol "globals" 25332 . 25339) (punctuation "." 25339 . 25340) (symbol "f_Vprefix_help_command" 25340 . 25362)))
          ("Vpreloaded_file_list" . 
              ((symbol "globals" 25430 . 25437) (punctuation "." 25437 . 25438) (symbol "f_Vpreloaded_file_list" 25438 . 25460)))
          ("Vprocess_coding_system_alist" . 
              ((symbol "globals" 26661 . 26668) (punctuation "." 26668 . 26669) (symbol "f_Vprocess_coding_system_alist" 26669 . 26699)))
          ("Vreport_emacs_bug_address" . 
              ((symbol "globals" 28301 . 28308) (punctuation "." 28308 . 28309) (symbol "f_Vreport_emacs_bug_address" 28309 . 28336)))
          ("Vvalues" . 
              ((symbol "globals" 35522 . 35529) (punctuation "." 35529 . 35530) (symbol "f_Vvalues" 35530 . 35539)))
          ("Vwindow_size_change_functions" . 
              ((symbol "globals" 36833 . 36840) (punctuation "." 36840 . 36841) (symbol "f_Vwindow_size_change_functions" 36841 . 36872)))
          ("Vx_cursor_fore_pixel" . 
              ((symbol "globals" 38025 . 38032) (punctuation "." 38032 . 38033) (symbol "f_Vx_cursor_fore_pixel" 38033 . 38055)))
          ("Vx_window_right_edge_shape" . 
              ((symbol "globals" 40929 . 40936) (punctuation "." 40936 . 40937) (symbol "f_Vx_window_right_edge_shape" 40937 . 40965)))
          ("Vxft_settings" . 
              ((symbol "globals" 41519 . 41526) (punctuation "." 41526 . 41527) (symbol "f_Vxft_settings" 41527 . 41542)))
          ("focus_follows_mouse" . 
              ((symbol "globals" 42329 . 42336) (punctuation "." 42336 . 42337) (symbol "f_focus_follows_mouse" 42337 . 42358)))
          ("last_input_event" . 
              ((symbol "globals" 42819 . 42826) (punctuation "." 42826 . 42827) (symbol "f_last_input_event" 42827 . 42845)))
          ("last_nonmenu_event" . 
              ((symbol "globals" 42909 . 42916) (punctuation "." 42916 . 42917) (symbol "f_last_nonmenu_event" 42917 . 42937)))
          ("meta_prefix_char" . 
              ((symbol "globals" 43098 . 43105) (punctuation "." 43105 . 43106) (symbol "f_meta_prefix_char" 43106 . 43124)))
          ("imagemagick_render_type" . 
              ((symbol "globals" 44309 . 44316) (punctuation "." 44316 . 44317) (symbol "f_imagemagick_render_type" 44317 . 44342)))
          ("intervals_consed" . 
              ((symbol "globals" 44400 . 44407) (punctuation "." 44407 . 44408) (symbol "f_intervals_consed" 44408 . 44426)))
          ("overline_margin" . 
              ((symbol "globals" 45181 . 45188) (punctuation "." 45188 . 45189) (symbol "f_overline_margin" 45189 . 45206)))
          ("pure_bytes_used" . 
              ((symbol "globals" 45535 . 45542) (punctuation "." 45542 . 45543) (symbol "f_pure_bytes_used" 45543 . 45560)))
          ("undo_limit" . 
              ((symbol "globals" 46449 . 46456) (punctuation "." 46456 . 46457) (symbol "f_undo_limit" 46457 . 46469)))
          ("Vcomment_end_can_be_escaped" . 
              ((symbol "globals" 46817 . 46824) (punctuation "." 46824 . 46825) (symbol "f_Vcomment_end_can_be_escaped" 46825 . 46854)))
          ("auto_raise_tool_bar_buttons_p" . 
              ((symbol "globals" 47426 . 47433) (punctuation "." 47433 . 47434) (symbol "f_auto_raise_tool_bar_buttons_p" 47434 . 47465)))
          ("face_filters_always_match" . 
              ((symbol "globals" 49528 . 49535) (punctuation "." 49535 . 49536) (symbol "f_face_filters_always_match" 49536 . 49563)))
          ("history_delete_duplicates" . 
              ((symbol "globals" 50158 . 50165) (punctuation "." 50165 . 50166) (symbol "f_history_delete_duplicates" 50166 . 50193)))
          ("inhibit_iso_escape_detection" . 
              ((symbol "globals" 51012 . 51019) (punctuation "." 51019 . 51020) (symbol "f_inhibit_iso_escape_detection" 51020 . 51050)))
          ("inhibit_modification_hooks" . 
              ((symbol "globals" 51399 . 51406) (punctuation "." 51406 . 51407) (symbol "f_inhibit_modification_hooks" 51407 . 51435)))
          ("load_dangerous_libraries" . 
              ((symbol "globals" 52277 . 52284) (punctuation "." 52284 . 52285) (symbol "f_load_dangerous_libraries" 52285 . 52311)))
          ("minibuffer_auto_raise" . 
              ((symbol "globals" 53056 . 53063) (punctuation "." 53063 . 53064) (symbol "f_minibuffer_auto_raise" 53064 . 53087)))
          ("print_escape_control_characters" . 
              ((symbol "globals" 54018 . 54025) (punctuation "." 54025 . 54026) (symbol "f_print_escape_control_characters" 54026 . 54059)))
          ("x_underline_at_descent_line" . 
              ((symbol "globals" 57131 . 57138) (punctuation "." 57138 . 57139) (symbol "f_x_underline_at_descent_line" 57139 . 57168)))
          ("iQCadstyle" . ((number "6" 57769 . 57770)))
          ("iQCbox" . ((number "17" 58390 . 58392)))
          ("iQCcipher_aead_capable" . ((number "23" 58710 . 58712)))
          ("iQCdict_entry" . ((number "45" 60095 . 60097)))
          ("iQCignore_defface" . ((number "72" 61658 . 61660)))
          ("iQCregistry" . ((number "126" 64698 . 64701)))
          ("iQCscript" . ((number "138" 65402 . 65405)))
          ("iQCunix_fd" . ((number "171" 67167 . 67170)))
          ("iQCverify_flags" . ((number "176" 67480 . 67483)))
          ("iQascii" . ((number "229" 70604 . 70607)))
          ("iQauto_save_coding" . ((number "239" 71221 . 71224)))
          ("iQbefore_handle" . ((number "246" 71664 . 71667)))
          ("iQbuffer_or_string_p" . ((number "277" 73609 . 73612)))
          ("iQchange_frame_size" . ((number "305" 75330 . 75333)))
          ("iQchar_from_name" . ((number "309" 75613 . 75616)))
          ("iQcircle" . ((number "319" 76229 . 76232)))
          ("iQcoding_system_history" . ((number "334" 77164 . 77167)))
          ("iQcompletion_ignore_case" . ((number "346" 77931 . 77934)))
          ("iQcondition_variable_p" . ((number "350" 78209 . 78212)))
          ("iQdirectory_files" . ((number "407" 81826 . 81829)))
          ("iQemacs_mule" . ((number "434" 83651 . 83654)))
          ("iQempty_line" . ((number "437" 83815 . 83818)))
          ("iQfile_exists_p" . ((number "487" 86930 . 86933)))
          ("iQfile_newer_than_file_p" . ((number "498" 87779 . 87782)))
          ("iQfile_regular_p" . ((number "502" 88053 . 88056)))
          ("iQfile_symlink_p" . ((number "504" 88197 . 88200)))
          ("iQfile_system_info" . ((number "505" 88265 . 88268)))
          ("iQfirst_change_hook" . ((number "509" 88524 . 88527)))
          ("iQfloor" . ((number "514" 88784 . 88787)))
          ("iQfontified" . ((number "526" 89496 . 89499)))
          ("iQfontset" . ((number "527" 89550 . 89553)))
          ("iQformat" . ((number "531" 89805 . 89808)))
          ("iQformat_annotate_function" . ((number "532" 89873 . 89876)))
          ("iQframep" . ((number "542" 90559 . 90562)))
          ("iQgdk_pixbuf" . ((number "562" 91805 . 91808)))
          ("iQget_file_buffer" . ((number "566" 92090 . 92093)))
          ("iQhandle" . ((number "589" 93613 . 93616)))
          ("iQhex_code" . ((number "605" 94603 . 94606)))
          ("iQif" . ((number "623" 95669 . 95672)))
          ("iQintegerp" . ((number "649" 97619 . 97622)))
          ("iQinternal_interpreter_environment" . ((number "660" 98551 . 98554)))
          ("iQipv4" . ((number "670" 99231 . 99234)))
          ("iQiso10646_1" . ((number "673" 99377 . 99380)))
          ("iQjson_end_of_file" . ((number "681" 99799 . 99802)))
          ("iQlandscape" . ((number "705" 101372 . 101375)))
          ("iQleft_fringe" . ((number "715" 101974 . 101977)))
          ("iQlibjpeg_version" . ((number "725" 102568 . 102571)))
          ("iQlread_unescaped_character_literals" . ((number "744" 103705 . 103708)))
          ("iQmarker" . ((number "760" 104665 . 104668)))
          ("iQmenu_bar_size" . ((number "768" 105112 . 105115)))
          ("iQminibuffer_prompt" . ((number "783" 106082 . 106085)))
          ("iQmode_line" . ((number "789" 106478 . 106481)))
          ("iQmodification_hooks" . ((number "794" 106833 . 106836)))
          ("iQmodule_function_p" . ((number "800" 107232 . 107235)))
          ("iQopen" . ((number "856" 110641 . 110644)))
          ("iQoverride_redirect" . ((number "872" 111666 . 111669)))
          ("iQpgrp" . ((number "888" 112667 . 112670)))
          ("iQpolling_period" . ((number "899" 113255 . 113258)))
          ("iQpre_command_hook" . ((number "908" 113795 . 113798)))
          ("iQquit" . ((number "924" 114741 . 114744)))
          ("iQread_number" . ((number "933" 115202 . 115205)))
          ("iQread_only" . ((number "934" 115260 . 115263)))
          ("iQrecord_window_buffer" . ((number "939" 115573 . 115576)))
          ("iQrename_file" . ((number "951" 116402 . 116405)))
          ("iQreverse_portrait" . ((number "955" 116679 . 116682)))
          ("iQright_margin" . ((number "961" 117053 . 117056)))
          ("iQright_to_left" . ((number "962" 117116 . 117119)))
          ("iQsans__serif" . ((number "970" 117566 . 117569)))
          ("iQscroll_bar_movement" . ((number "980" 118230 . 118233)))
          ("iQset_file_times" . ((number "999" 119393 . 119396)))
          ("iQsource" . ((number "1018" 120521 . 120525)))
          ("iQstime" . ((number "1033" 121401 . 121405)))
          ("iQstraight" . ((number "1035" 121500 . 121504)))
          ("iQsvg" . ((number "1048" 122318 . 122322)))
          ("iQthreadp" . ((number "1073" 123791 . 123795)))
          ("iQtitle_bar_size" . ((number "1078" 124071 . 124075)))
          ("iQtool_bar_size" . ((number "1084" 124462 . 124466)))
          ("iQtooltip" . ((number "1086" 124588 . 124592)))
          ("iQtty_menu_next_item" . ((number "1112" 126299 . 126303)))
          ("iQundefined" . ((number "1124" 127106 . 127110)))
          ("iQundo_auto__this_command_amalgamating" . ((number "1130" 127599 . 127603)))
          ("iQundo_auto__undoably_changed_buffers" . ((number "1132" 127800 . 127804)))
          ("iQupdate_frame_menubar" . ((number "1144" 128557 . 128561)))
          ("iQuser_error" . ((number "1147" 128754 . 128758)))
          ("iQutf_8_emacs" . ((number "1156" 129278 . 129282)))
          ("iQverify_visited_file_modtime" . ((number "1168" 130050 . 130054)))
          ("iQvoid_function" . ((number "1177" 130637 . 130641)))
          ("iQwindow_configuration" . ((number "1197" 131892 . 131896)))
          ("iQwindow_deletable_p" . ((number "1200" 132155 . 132159)))
          ("iQwindow_id" . ((number "1204" 132468 . 132472)))
          ("iQwindow_size" . ((number "1208" 132770 . 132774)))
          ("iQwindowp" . ((number "1210" 132894 . 132898)))
          ("iQx_create_frame_1" . ((number "1220" 133599 . 133603)))
          ("Vbuffer_access_fontified_property" . 
              ((symbol "globals" 1997 . 2004) (punctuation "." 2004 . 2005) (symbol "f_Vbuffer_access_fontified_property" 2005 . 2040)))
          ("Vcoding_category_list" . 
              ((symbol "globals" 3726 . 3733) (punctuation "." 3733 . 3734) (symbol "f_Vcoding_category_list" 3734 . 3757)))
          ("Vcurrent_iso639_language" . 
              ((symbol "globals" 5450 . 5457) (punctuation "." 5457 . 5458) (symbol "f_Vcurrent_iso639_language" 5458 . 5484)))
          ("Vdisplay_line_numbers_current_absolute" . 
              ((symbol "globals" 8919 . 8926) (punctuation "." 8926 . 8927) (symbol "f_Vdisplay_line_numbers_current_absolute" 8927 . 8967)))
          ("Vdisplay_pixels_per_inch" . 
              ((symbol "globals" 9162 . 9169) (punctuation "." 9169 . 9170) (symbol "f_Vdisplay_pixels_per_inch" 9170 . 9196)))
          ("Vdynamic_library_alist" . 
              ((symbol "globals" 9520 . 9527) (punctuation "." 9527 . 9528) (symbol "f_Vdynamic_library_alist" 9528 . 9552)))
          ("Vface_font_rescale_alist" . 
              ((symbol "globals" 10780 . 10787) (punctuation "." 10787 . 10788) (symbol "f_Vface_font_rescale_alist" 10788 . 10814)))
          ("Vfloat_output_format" . 
              ((symbol "globals" 11818 . 11825) (punctuation "." 11825 . 11826) (symbol "f_Vfloat_output_format" 11826 . 11848)))
          ("Vignore_relative_composition" . 
              ((symbol "globals" 14514 . 14521) (punctuation "." 14521 . 14522) (symbol "f_Vignore_relative_composition" 14522 . 14552)))
          ("Vload_history" . 
              ((symbol "globals" 18288 . 18295) (punctuation "." 18295 . 18296) (symbol "f_Vload_history" 18296 . 18311)))
          ("Vminibuffer_completion_table" . 
              ((symbol "globals" 20828 . 20835) (punctuation "." 20835 . 20836) (symbol "f_Vminibuffer_completion_table" 20836 . 20866)))
          ("Vmost_negative_fixnum" . 
              ((symbol "globals" 22544 . 22551) (punctuation "." 22551 . 22552) (symbol "f_Vmost_negative_fixnum" 22552 . 22575)))
          ("Vmouse_autoselect_window" . 
              ((symbol "globals" 22853 . 22860) (punctuation "." 22860 . 22861) (symbol "f_Vmouse_autoselect_window" 22861 . 22887)))
          ("Vprocess_adaptive_read_buffering" . 
              ((symbol "globals" 26535 . 26542) (punctuation "." 26542 . 26543) (symbol "f_Vprocess_adaptive_read_buffering" 26543 . 26577)))
          ("Vresume_tty_functions" . 
              ((symbol "globals" 28504 . 28511) (punctuation "." 28511 . 28512) (symbol "f_Vresume_tty_functions" 28512 . 28535)))
          ("Vring_bell_function" . 
              ((symbol "globals" 28601 . 28608) (punctuation "." 28608 . 28609) (symbol "f_Vring_bell_function" 28609 . 28630)))
          ("Vselect_active_regions" . 
              ((symbol "globals" 29273 . 29280) (punctuation "." 29280 . 29281) (symbol "f_Vselect_active_regions" 29281 . 29305)))
          ("Vstandard_translation_table_for_encode" . 
              ((symbol "globals" 31047 . 31054) (punctuation "." 31054 . 31055) (symbol "f_Vstandard_translation_table_for_encode" 31055 . 31095)))
          ("Vsystem_type" . 
              ((symbol "globals" 31881 . 31888) (punctuation "." 31888 . 31889) (symbol "f_Vsystem_type" 31889 . 31903)))
          ("Vterminal_frame" . 
              ((symbol "globals" 32190 . 32197) (punctuation "." 32197 . 32198) (symbol "f_Vterminal_frame" 32198 . 32215)))
          ("Vtranslation_table_for_input" . 
              ((symbol "globals" 33888 . 33895) (punctuation "." 33895 . 33896) (symbol "f_Vtranslation_table_for_input" 33896 . 33926)))
          ("Vuse_default_ascent" . 
              ((symbol "globals" 35098 . 35105) (punctuation "." 35105 . 35106) (symbol "f_Vuse_default_ascent" 35106 . 35127)))
          ("Vwhere_is_preferred_modifier" . 
              ((symbol "globals" 35861 . 35868) (punctuation "." 35868 . 35869) (symbol "f_Vwhere_is_preferred_modifier" 35869 . 35899)))
          ("Vword_separating_categories" . 
              ((symbol "globals" 37174 . 37181) (punctuation "." 37181 . 37182) (symbol "f_Vword_separating_categories" 37182 . 37211)))
          ("Vx_hyper_keysym" . 
              ((symbol "globals" 38229 . 38236) (punctuation "." 38236 . 38237) (symbol "f_Vx_hyper_keysym" 38237 . 38254)))
          ("Vx_session_id" . 
              ((symbol "globals" 39776 . 39783) (punctuation "." 39783 . 39784) (symbol "f_Vx_session_id" 39784 . 39799)))
          ("Vx_window_top_right_corner_shape" . 
              ((symbol "globals" 41298 . 41305) (punctuation "." 41305 . 41306) (symbol "f_Vx_window_top_right_corner_shape" 41306 . 41340)))
          ("auto_save_interval" . 
              ((symbol "globals" 43186 . 43193) (punctuation "." 43193 . 43194) (symbol "f_auto_save_interval" 43194 . 43214)))
          ("scroll_conservatively" . 
              ((symbol "globals" 45628 . 45635) (punctuation "." 45635 . 45636) (symbol "f_scroll_conservatively" 45636 . 45659)))
          ("tool_bar_button_relief" . 
              ((symbol "globals" 46158 . 46165) (punctuation "." 46165 . 46166) (symbol "f_tool_bar_button_relief" 46166 . 46190)))
          ("undo_strong_limit" . 
              ((symbol "globals" 46529 . 46536) (punctuation "." 46536 . 46537) (symbol "f_undo_strong_limit" 46537 . 46556)))
          ("print_escape_multibyte" . 
              ((symbol "globals" 54124 . 54131) (punctuation "." 54131 . 54132) (symbol "f_print_escape_multibyte" 54132 . 54156)))
          ("print_quoted" . 
              ((symbol "globals" 54389 . 54396) (punctuation "." 54396 . 54397) (symbol "f_print_quoted" 54397 . 54411)))
          ("redisplay__inhibit_bidi" . 
              ((symbol "globals" 54611 . 54618) (punctuation "." 54618 . 54619) (symbol "f_redisplay__inhibit_bidi" 54619 . 54644)))
          ("x_use_underline_position_properties" . 
              ((symbol "globals" 57259 . 57266) (punctuation "." 57266 . 57267) (symbol "f_x_use_underline_position_properties" 57267 . 57304)))
          ("iQAutomatic_GC" . ((number "2" 57527 . 57528)))
          ("iQCantialias" . ((number "9" 57951 . 57952)))
          ("iQCcipher_blocksize" . ((number "24" 58784 . 58786)))
          ("iQCcipher_tagsize" . ((number "28" 59042 . 59044)))
          ("iQCheuristic_mask" . ((number "69" 61489 . 61491)))
          ("iQChostname" . ((number "71" 61597 . 61599)))
          ("iQCindex" . ((number "74" 61765 . 61767)))
          ("iQCint16" . ((number "76" 61867 . 61869)))
          ("iQCint64" . ((number "78" 61965 . 61967)))
          ("iQCinverse_video" . ((number "79" 62022 . 62024)))
          ("iQCnull" . ((number "107" 63604 . 63607)))
          ("iQCport" . ((number "116" 64096 . 64099)))
          ("iQCpriority" . ((number "119" 64308 . 64311)))
          ("iQMULTIPLE" . ((number "189" 68185 . 68188)))
          ("iQadd_name_to_file" . ((number "207" 69235 . 69238)))
          ("iQafter_delete_frame_functions" . ((number "212" 69627 . 69630)))
          ("iQand_rest" . ((number "221" 70179 . 70182)))
          ("iQbelow_handle" . ((number "250" 71915 . 71918)))
          ("iQborder_color" . ((number "258" 72351 . 72354)))
          ("iQborder_width" . ((number "259" 72413 . 72416)))
          ("iQbottom_right_corner" . ((number "268" 72978 . 72981)))
          ("iQchange_major_mode_hook" . ((number "306" 75407 . 75410)))
          ("iQcircular_list" . ((number "320" 76286 . 76289)))
          ("iQclosure" . ((number "326" 76620 . 76623)))
          ("iQdir_ok" . ((number "405" 81691 . 81694)))
          ("iQdirectory_files_and_attributes" . ((number "408" 81909 . 81912)))
          ("iQdisplay_monitor_attributes_list" . ((number "417" 82594 . 82597)))
          ("iQdrag_internal_border" . ((number "425" 83107 . 83110)))
          ("iQemboss" . ((number "435" 83705 . 83708)))
          ("iQeval_buffer_list" . ((number "453" 84733 . 84736)))
          ("iQexternal_border_size" . ((number "466" 85545 . 85548)))
          ("iQface_no_inherit" . ((number "472" 85928 . 85931)))
          ("iQfailed" . ((number "474" 86081 . 86084)))
          ("iQfield" . ((number "477" 86236 . 86239)))
          ("iQfile_writable_p" . ((number "507" 88398 . 88401)))
          ("iQfloats" . ((number "513" 88735 . 88738)))
          ("iQfontset_info" . ((number "528" 89607 . 89610)))
          ("iQfree_frame_tool_bar" . ((number "546" 90828 . 90831)))
          ("iQgnutls_code" . ((number "574" 92582 . 92585)))
          ("iQheap" . ((number "599" 94265 . 94268)))
          ("iQhw" . ((number "613" 95121 . 95124)))
          ("iQicon_left" . ((number "616" 95264 . 95267)))
          ("iQinhibit_double_buffering" . ((number "629" 96055 . 96058)))
          ("iQinner_edges" . ((number "639" 96876 . 96879)))
          ("iQinput_method_use_echo_area" . ((number "641" 97051 . 97054)))
          ("iQjpeg" . ((number "680" 99741 . 99744)))
          ("iQjson_object_too_deep" . ((number "683" 99931 . 99934)))
          ("iQkey_or_value" . ((number "694" 100681 . 100684)))
          ("iQkeymap_canonicalize" . ((number "696" 100800 . 100803)))
          ("iQkill_emacs_hook" . ((number "701" 101144 . 101147)))
          ("iQlast_nonmenu_event" . ((number "710" 101705 . 101708)))
          ("iQlocal_map" . ((number "743" 103624 . 103627)))
          ("iQmarkerp" . ((number "761" 104716 . 104719)))
          ("iQminibuffer" . ((number "777" 105631 . 105634)))
          ("iQminibuffer_default" . ((number "779" 105789 . 105792)))
          ("iQmissing_module_init_function" . ((number "786" 106293 . 106296)))
          ("iQmode_line_default_help_echo" . ((number "790" 106552 . 106555)))
          ("iQmodule_environments" . ((number "798" 107090 . 107093)))
          ("iQmouse_fixup_help_message" . ((number "815" 108213 . 108216)))
          ("iQmouse_movement" . ((number "817" 108373 . 108376)))
          ("iQno_catch" . ((number "833" 109275 . 109278)))
          ("iQno_focus_on_map" . ((number "835" 109400 . 109403)))
          ("iQnobreak_space" . ((number "839" 109670 . 109673)))
          ("iQonly" . ((number "854" 110543 . 110546)))
          ("iQopen_network_stream" . ((number "857" 110702 . 110705)))
          ("iQoverlay_arrow_string" . ((number "870" 111537 . 111540)))
          ("iQoverriding_local_map" . ((number "873" 111741 . 111744)))
          ("iQoverwrite_mode" . ((number "876" 112003 . 112006)))
          ("iQpipe" . ((number "889" 112713 . 112716)))
          ("iQpng" . ((number "895" 113026 . 113029)))
          ("iQportrait" . ((number "901" 113361 . 113364)))
          ("iQrear_nonsticky" . ((number "936" 115367 . 115370)))
          ("iQright_fringe" . ((number "960" 116991 . 116994)))
          ("iQsave_session" . ((number "973" 117751 . 117754)))
          ("iQscroll_down" . ((number "983" 118434 . 118437)))
          ("iQsequencep" . ((number "991" 118918 . 118921)))
          ("iQset" . ((number "994" 119064 . 119067)))
          ("iQshift_jis" . ((number "1010" 120064 . 120068)))
          ("iQside_effect_free" . ((number "1011" 120128 . 120132)))
          ("iQslice" . ((number "1016" 120422 . 120426)))
          ("iQsound" . ((number "1017" 120471 . 120475)))
          ("iQstate" . ((number "1028" 121150 . 121154)))
          ("iQstdout" . ((number "1031" 121300 . 121304)))
          ("iQsuper" . ((number "1047" 122271 . 122275)))
          ("iQsymbols" . ((number "1053" 122577 . 122581)))
          ("iQt" . ((number "1057" 122815 . 122819)))
          ("iQtool_bar_style" . ((number "1085" 124528 . 124532)))
          ("iQtruncation" . ((number "1100" 125465 . 125469)))
          ("iQtty_color_by_index" . ((number "1104" 125697 . 125701)))
          ("iQunsplittable" . ((number "1142" 128443 . 128447)))
          ("iQuser_search_failed" . ((number "1151" 128998 . 129002)))
          ("iQutf_16" . ((number "1153" 129118 . 129122)))
          ("iQvertical_scroll_bars" . ((number "1173" 130402 . 130406)))
          ("iQvisible" . ((number "1175" 130527 . 130531)))
          ("iQwatchers" . ((number "1183" 130964 . 130968)))
          ("iQwhen" . ((number "1187" 131168 . 131172)))
          ("iQx_create_frame_2" . ((number "1221" 133670 . 133674)))
          ("iQx_underline_at_descent_line" . ((number "1235" 134757 . 134761)))
          ("iQxg_frame_set_char_size" . ((number "1240" 135161 . 135165)))
          ("Vchar_code_property_alist" . 
              ((symbol "globals" 2932 . 2939) (punctuation "." 2939 . 2940) (symbol "f_Vchar_code_property_alist" 2940 . 2967)))
          ("Vchar_width_table" . 
              ((symbol "globals" 3237 . 3244) (punctuation "." 3244 . 3245) (symbol "f_Vchar_width_table" 3245 . 3264)))
          ("Vcoding_system_for_write" . 
              ((symbol "globals" 4038 . 4045) (punctuation "." 4045 . 4046) (symbol "f_Vcoding_system_for_write" 4046 . 4072)))
          ("Vcoding_system_list" . 
              ((symbol "globals" 4138 . 4145) (punctuation "." 4145 . 4146) (symbol "f_Vcoding_system_list" 4146 . 4167)))
          ("Vcomment_use_syntax_ppss" . 
              ((symbol "globals" 4748 . 4755) (punctuation "." 4755 . 4756) (symbol "f_Vcomment_use_syntax_ppss" 4756 . 4782)))
          ("Vdelete_frame_functions" . 
              ((symbol "globals" 8452 . 8459) (punctuation "." 8459 . 8460) (symbol "f_Vdelete_frame_functions" 8460 . 8485)))
          ("Vfont_slant_table" . 
              ((symbol "globals" 12302 . 12309) (punctuation "." 12309 . 12310) (symbol "f_Vfont_slant_table" 12310 . 12329)))
          ("Vglobal_disable_point_adjustment" . 
              ((symbol "globals" 13353 . 13360) (punctuation "." 13360 . 13361) (symbol "f_Vglobal_disable_point_adjustment" 13361 . 13395)))
          ("Vhistory_length" . 
              ((symbol "globals" 14150 . 14157) (punctuation "." 14157 . 14158) (symbol "f_Vhistory_length" 14158 . 14175)))
          ("Vinhibit_changing_match_data" . 
              ((symbol "globals" 14829 . 14836) (punctuation "." 14836 . 14837) (symbol "f_Vinhibit_changing_match_data" 14837 . 14867)))
          ("Vinternal__top_level_message" . 
              ((symbol "globals" 16434 . 16441) (punctuation "." 16441 . 16442) (symbol "f_Vinternal__top_level_message" 16442 . 16472)))
          ("Vmark_even_if_inactive" . 
              ((symbol "globals" 19283 . 19290) (punctuation "." 19290 . 19291) (symbol "f_Vmark_even_if_inactive" 19291 . 19315)))
          ("Vmax_image_size" . 
              ((symbol "globals" 19373 . 19380) (punctuation "." 19380 . 19381) (symbol "f_Vmax_image_size" 19381 . 19398)))
          ("Vmenu_bar_mode" . 
              ((symbol "globals" 19935 . 19942) (punctuation "." 19942 . 19943) (symbol "f_Vmenu_bar_mode" 19943 . 19959)))
          ("Voverlay_arrow_position" . 
              ((symbol "globals" 24099 . 24106) (punctuation "." 24106 . 24107) (symbol "f_Voverlay_arrow_position" 24107 . 24132)))
          ("Voverriding_local_map_menu_flag" . 
              ((symbol "globals" 24546 . 24553) (punctuation "." 24553 . 24554) (symbol "f_Voverriding_local_map_menu_flag" 24554 . 24587)))
          ("Vpost_command_hook" . 
              ((symbol "globals" 24859 . 24866) (punctuation "." 24866 . 24867) (symbol "f_Vpost_command_hook" 24867 . 24887)))
          ("Vrecenter_redisplay" . 
              ((symbol "globals" 27813 . 27820) (punctuation "." 27820 . 27821) (symbol "f_Vrecenter_redisplay" 27821 . 27842)))
          ("Vredisplay__mode_lines_cause" . 
              ((symbol "globals" 28051 . 28058) (punctuation "." 28058 . 28059) (symbol "f_Vredisplay__mode_lines_cause" 28059 . 28089)))
          ("Vshow_help_function" . 
              ((symbol "globals" 30091 . 30098) (punctuation "." 30098 . 30099) (symbol "f_Vshow_help_function" 30099 . 30120)))
          ("Vstandard_input" . 
              ((symbol "globals" 30680 . 30687) (punctuation "." 30687 . 30688) (symbol "f_Vstandard_input" 30688 . 30705)))
          ("Vsystem_configuration" . 
              ((symbol "globals" 31269 . 31276) (punctuation "." 31276 . 31277) (symbol "f_Vsystem_configuration" 31277 . 31300)))
          ("Vtemp_buffer_show_function" . 
              ((symbol "globals" 31983 . 31990) (punctuation "." 31990 . 31991) (symbol "f_Vtemp_buffer_show_function" 31991 . 32019)))
          ("Vtool_bar_mode" . 
              ((symbol "globals" 33257 . 33264) (punctuation "." 33264 . 33265) (symbol "f_Vtool_bar_mode" 33265 . 33281)))
          ("Vwindow_configuration_change_hook" . 
              ((symbol "globals" 36347 . 36354) (punctuation "." 36354 . 36355) (symbol "f_Vwindow_configuration_change_hook" 36355 . 36390)))
          ("Vxwidget_view_list" . 
              ((symbol "globals" 41683 . 41690) (punctuation "." 41690 . 41691) (symbol "f_Vxwidget_view_list" 41691 . 41711)))
          ("symbols_consed" . 
              ((symbol "globals" 45959 . 45966) (punctuation "." 45966 . 45967) (symbol "f_symbols_consed" 45967 . 45983)))
          ("Vxft_ignore_color_fonts" . 
              ((symbol "globals" 47039 . 47046) (punctuation "." 47046 . 47047) (symbol "f_Vxft_ignore_color_fonts" 47047 . 47072)))
          ("enable_recursive_minibuffers" . 
              ((symbol "globals" 49419 . 49426) (punctuation "." 49426 . 49427) (symbol "f_enable_recursive_minibuffers" 49427 . 49457)))
          ("inhibit_bidi_mirroring" . 
              ((symbol "globals" 50455 . 50462) (punctuation "." 50462 . 50463) (symbol "f_inhibit_bidi_mirroring" 50463 . 50487)))
          ("multiple_frames" . 
              ((symbol "globals" 53377 . 53384) (punctuation "." 53384 . 53385) (symbol "f_multiple_frames" 53385 . 53402)))
          ("use_file_dialog" . 
              ((symbol "globals" 55643 . 55650) (punctuation "." 55650 . 55651) (symbol "f_use_file_dialog" 55651 . 55668)))
          ("iQCcoding" . ((number "29" 59101 . 59103)))
          ("iQCcolor" . ((number "30" 59151 . 59153)))
          ("iQCcolor_symbols" . ((number "32" 59279 . 59281)))
          ("iQCconversion" . ((number "37" 59621 . 59623)))
          ("iQCcrop" . ((number "39" 59729 . 59731)))
          ("iQCdefault_char" . ((number "43" 59983 . 59985)))
          ("iQCfalse_object" . ((number "56" 60788 . 60790)))
          ("iQClang" . ((number "85" 62341 . 62343)))
          ("iQCtoggle" . ((number "164" 66792 . 66795)))
          ("iQCwidth" . ((number "182" 67809 . 67812)))
          ("iQTEXT" . ((number "196" 68553 . 68556)))
          ("iQaccess" . ((number "203" 68955 . 68958)))
          ("iQafter_handle" . ((number "213" 69705 . 69708)))
          ("iQargs" . ((number "224" 70327 . 70330)))
          ("iQarrayp" . ((number "227" 70507 . 70510)))
          ("iQascii_character" . ((number "231" 70714 . 70717)))
          ("iQbitmap_spec_p" . ((number "253" 72068 . 72071)))
          ("iQbold" . ((number "254" 72123 . 72126)))
          ("iQboth_horiz" . ((number "261" 72519 . 72522)))
          ("iQbottom_divider" . ((number "263" 72631 . 72634)))
          ("iQbottom_margin" . ((number "267" 72908 . 72911)))
          ("iQbuffer_predicate" . ((number "279" 73749 . 73752)))
          ("iQbuffers" . ((number "282" 73932 . 73935)))
          ("iQcomm" . ((number "337" 77347 . 77350)))
          ("iQconnect" . ((number "352" 78352 . 78355)))
          ("iQcustom_variable_p" . ((number "372" 79528 . 79531)))
          ("iQdelete_self" . ((number "402" 81484 . 81487)))
          ("iQdisplay" . ((number "411" 82100 . 82103)))
          ("iQecho_keystrokes" . ((number "429" 83372 . 83375)))
          ("iQegid" . ((number "431" 83495 . 83498)))
          ("iQempty_box" . ((number "436" 83758 . 83761)))
          ("iQend_of_file" . ((number "440" 84032 . 84035)))
          ("iQexcl" . ((number "459" 85119 . 85122)))
          ("iQexit" . ((number "460" 85165 . 85168)))
          ("iQextension_data" . ((number "465" 85473 . 85476)))
          ("iQface_alias" . ((number "471" 85865 . 85868)))
          ("iQfile_name_all_completions" . ((number "490" 87126 . 87129)))
          ("iQfile_notify" . ((number "499" 87850 . 87853)))
          ("iQfont" . ((number "517" 88941 . 88944)))
          ("iQfullscreen" . ((number "553" 91219 . 91222)))
          ("iQfunction" . ((number "557" 91463 . 91466)))
          ("iQgeometry" . ((number "563" 91861 . 91864)))
          ("iQgui_set_selection" . ((number "587" 93506 . 93509)))
          ("iQhbar" . ((number "596" 94085 . 94088)))
          ("iQhelp_echo" . ((number "602" 94426 . 94429)))
          ("iQintangible" . ((number "646" 97435 . 97438)))
          ("iQinternal_auto_fill" . ((number "653" 97905 . 97908)))
          ("iQinternal_default_interrupt_process" . ((number "656" 98143 . 98146)))
          ("iQinternal_default_process_sentinel" . ((number "658" 98348 . 98351)))
          ("iQipv6" . ((number "671" 99277 . 99280)))
          ("iQjson_error" . ((number "682" 99863 . 99866)))
          ("iQkill_buffer_hook" . ((number "698" 100925 . 100928)))
          ("iQkill_buffer_query_functions" . ((number "699" 101006 . 101009)))
          ("iQko" . ((number "703" 101273 . 101276)))
          ("iQlambda" . ((number "704" 101319 . 101322)))
          ("iQlibgif_version" . ((number "723" 102429 . 102432)))
          ("iQlight" . ((number "727" 102692 . 102695)))
          ("iQline_number" . ((number "730" 102852 . 102855)))
          ("iQlisten" . ((number "735" 103161 . 103164)))
          ("iQlittle" . ((number "737" 103259 . 103262)))
          ("iQminus" . ((number "785" 106222 . 106225)))
          ("iQmodifier_cache" . ((number "795" 106903 . 106906)))
          ("iQmodule_init_failed" . ((number "801" 107305 . 107308)))
          ("iQmodule_refs_hash" . ((number "805" 107613 . 107616)))
          ("iQno_conversion" . ((number "834" 109334 . 109337)))
          ("iQno_special_glyphs" . ((number "837" 109536 . 109539)))
          ("iQns" . ((number "844" 109927 . 109930)))
          ("iQns_transparent_titlebar" . ((number "847" 110126 . 110129)))
          ("iQnumberp" . ((number "850" 110348 . 110351)))
          ("iQorientation" . ((number "860" 110882 . 110885)))
          ("iQouter_edges" . ((number "862" 111016 . 111019)))
          ("iQpcpu" . ((number "884" 112431 . 112434)))
          ("iQpri" . ((number "910" 113918 . 113921)))
          ("iQprotected_field" . ((number "918" 114430 . 114433)))
          ("iQredisplay_end_trigger_functions" . ((number "943" 115838 . 115841)))
          ("iQreplace_buffer_in_windows" . ((number "952" 116476 . 116479)))
          ("iQright_edge" . ((number "959" 116931 . 116934)))
          ("iQscroll_bar_height" . ((number "979" 118156 . 118159)))
          ("iQsemi_bold" . ((number "988" 118748 . 118751)))
          ("iQsemi_light" . ((number "989" 118805 . 118808)))
          ("iQset_file_acl" . ((number "996" 119177 . 119180)))
          ("iQsha1" . ((number "1005" 119808 . 119812)))
          ("iQsha512" . ((number "1009" 120010 . 120014)))
          ("iQspace_width" . ((number "1020" 120626 . 120630)))
          ("iQtiff" . ((number "1074" 123841 . 123845)))
          ("iQtool_bar_external" . ((number "1081" 124253 . 124257)))
          ("iQtop_left_corner" . ((number "1090" 124808 . 124812)))
          ("iQtrailing_whitespace" . ((number "1096" 125172 . 125176)))
          ("iQunderflow_error" . ((number "1126" 127238 . 127242)))
          ("iQvalue" . ((number "1160" 129508 . 129512)))
          ("iQvertical_border" . ((number "1170" 130186 . 130190)))
          ("iQwindow__resize_root_window_vertically" . ((number "1195" 131699 . 131703)))
          ("iQwindow_point_insertion_type" . ((number "1206" 132608 . 132612)))
          ("iQwrap_prefix" . ((number "1212" 133006 . 133010)))
          ("iQwrong_length_argument" . ((number "1215" 133241 . 133245)))
          ("iQwrong_number_of_arguments" . ((number "1216" 133326 . 133330)))
          ("iQx_gtk_map_stock" . ((number "1223" 133813 . 133817)))
          ("iQxg_frame_set_char_size_1" . ((number "1241" 135246 . 135250)))
          ("iQxwidget_view_p" . ((number "1247" 135660 . 135664)))
          ("iQyes_or_no_p_history" . ((number "1249" 135787 . 135791)))
          ("Vauto_fill_chars" . 
              ((symbol "globals" 1018 . 1025) (punctuation "." 1025 . 1026) (symbol "f_Vauto_fill_chars" 1026 . 1044)))
          ("Vbyte_boolean_vars" . 
              ((symbol "globals" 2422 . 2429) (punctuation "." 2429 . 2430) (symbol "f_Vbyte_boolean_vars" 2430 . 2450)))
          ("Vcommand_error_function" . 
              ((symbol "globals" 4461 . 4468) (punctuation "." 4468 . 4469) (symbol "f_Vcommand_error_function" 4469 . 4494)))
          ("Vdbus_message_type_method_call" . 
              ((symbol "globals" 6243 . 6250) (punctuation "." 6250 . 6251) (symbol "f_Vdbus_message_type_method_call" 6251 . 6283)))
          ("Vdebug_on_event" . 
              ((symbol "globals" 7087 . 7094) (punctuation "." 7094 . 7095) (symbol "f_Vdebug_on_event" 7095 . 7112)))
          ("Vdisplay_line_numbers_width" . 
              ((symbol "globals" 9049 . 9056) (punctuation "." 9056 . 9057) (symbol "f_Vdisplay_line_numbers_width" 9057 . 9086)))
          ("Vexec_suffixes" . 
              ((symbol "globals" 10481 . 10488) (punctuation "." 10488 . 10489) (symbol "f_Vexec_suffixes" 10489 . 10505)))
          ("Vgc_elapsed" . 
              ((symbol "globals" 13240 . 13247) (punctuation "." 13247 . 13248) (symbol "f_Vgc_elapsed" 13248 . 13261)))
          ("Vgtk_version_string" . 
              ((symbol "globals" 13737 . 13744) (punctuation "." 13744 . 13745) (symbol "f_Vgtk_version_string" 13745 . 13766)))
          ("Vhscroll_step" . 
              ((symbol "globals" 14315 . 14322) (punctuation "." 14322 . 14323) (symbol "f_Vhscroll_step" 14323 . 14338)))
          ("Vimage_types" . 
              ((symbol "globals" 14723 . 14730) (punctuation "." 14730 . 14731) (symbol "f_Vimage_types" 14731 . 14745)))
          ("Vinternal_interpreter_environment" . 
              ((symbol "globals" 16566 . 16573) (punctuation "." 16573 . 16574) (symbol "f_Vinternal_interpreter_environment" 16574 . 16609)))
          ("Vmenu_bar_update_hook" . 
              ((symbol "globals" 20029 . 20036) (punctuation "." 20036 . 20037) (symbol "f_Vmenu_bar_update_hook" 20037 . 20060)))
          ("Vminibuffer_help_form" . 
              ((symbol "globals" 21037 . 21044) (punctuation "." 21044 . 21045) (symbol "f_Vminibuffer_help_form" 21045 . 21068)))
          ("Vminibuffer_local_ns_map" . 
              ((symbol "globals" 21489 . 21496) (punctuation "." 21496 . 21497) (symbol "f_Vminibuffer_local_ns_map" 21497 . 21523)))
          ("Vmost_positive_fixnum" . 
              ((symbol "globals" 22645 . 22652) (punctuation "." 22652 . 22653) (symbol "f_Vmost_positive_fixnum" 22653 . 22676)))
          ("Vmouse_position_function" . 
              ((symbol "globals" 23159 . 23166) (punctuation "." 23166 . 23167) (symbol "f_Vmouse_position_function" 23167 . 23193)))
          ("Vnobreak_char_display" . 
              ((symbol "globals" 23486 . 23493) (punctuation "." 23493 . 23494) (symbol "f_Vnobreak_char_display" 23494 . 23517)))
          ("Vpre_command_hook" . 
              ((symbol "globals" 25130 . 25137) (punctuation "." 25137 . 25138) (symbol "f_Vpre_command_hook" 25138 . 25157)))
          ("Vprint_length" . 
              ((symbol "globals" 26165 . 26172) (punctuation "." 26172 . 26173) (symbol "f_Vprint_length" 26173 . 26188)))
          ("Vprint_number_table" . 
              ((symbol "globals" 26328 . 26335) (punctuation "." 26335 . 26336) (symbol "f_Vprint_number_table" 26336 . 26357)))
          ("Vread_buffer_function" . 
              ((symbol "globals" 27119 . 27126) (punctuation "." 27126 . 27127) (symbol "f_Vread_buffer_function" 27127 . 27150)))
          ("Vredisplay__all_windows_cause" . 
              ((symbol "globals" 27928 . 27935) (punctuation "." 27935 . 27936) (symbol "f_Vredisplay__all_windows_cause" 27936 . 27967)))
          ("Vselect_safe_coding_system_function" . 
              ((symbol "globals" 29403 . 29410) (punctuation "." 29410 . 29411) (symbol "f_Vselect_safe_coding_system_function" 29411 . 29448)))
          ("Vtemporary_file_directory" . 
              ((symbol "globals" 32097 . 32104) (punctuation "." 32104 . 32105) (symbol "f_Vtemporary_file_directory" 32105 . 32132)))
          ("Vtext_quoting_style" . 
              ((symbol "globals" 32415 . 32422) (punctuation "." 32422 . 32423) (symbol "f_Vtext_quoting_style" 32423 . 32444)))
          ("Vunicode_category_table" . 
              ((symbol "globals" 34642 . 34649) (punctuation "." 34649 . 34650) (symbol "f_Vunicode_category_table" 34650 . 34675)))
          ("Vx_ctrl_keysym" . 
              ((symbol "globals" 37933 . 37940) (punctuation "." 37940 . 37941) (symbol "f_Vx_ctrl_keysym" 37941 . 37957)))
          ("Vx_meta_keysym" . 
              ((symbol "globals" 38607 . 38614) (punctuation "." 38614 . 38615) (symbol "f_Vx_meta_keysym" 38615 . 38631)))
          ("Vx_pixel_size_width_font_regexp" . 
              ((symbol "globals" 39030 . 39037) (punctuation "." 39037 . 39038) (symbol "f_Vx_pixel_size_width_font_regexp" 39038 . 39071)))
          ("Vx_window_bottom_left_corner_shape" . 
              ((symbol "globals" 40418 . 40425) (punctuation "." 40425 . 40426) (symbol "f_Vx_window_bottom_left_corner_shape" 40426 . 40462)))
          ("Vx_window_top_edge_shape" . 
              ((symbol "globals" 41041 . 41048) (punctuation "." 41048 . 41049) (symbol "f_Vx_window_top_edge_shape" 41049 . 41075)))
          ("eol_mnemonic_mac" . 
              ((symbol "globals" 42044 . 42051) (punctuation "." 42051 . 42052) (symbol "f_eol_mnemonic_mac" 42052 . 42070)))
          ("string_chars_consed" . 
              ((symbol "globals" 45798 . 45805) (punctuation "." 45805 . 45806) (symbol "f_string_chars_consed" 45806 . 45827)))
          ("underline_minimum_offset" . 
              ((symbol "globals" 46369 . 46376) (punctuation "." 46376 . 46377) (symbol "f_underline_minimum_offset" 46377 . 46403)))
          ("debugger_may_continue" . 
              ((symbol "globals" 48581 . 48588) (punctuation "." 48588 . 48589) (symbol "f_debugger_may_continue" 48589 . 48612)))
          ("highlight_nonselected_windows" . 
              ((symbol "globals" 50048 . 50055) (punctuation "." 50055 . 50056) (symbol "f_highlight_nonselected_windows" 50056 . 50087)))
          ("inhibit_eol_conversion" . 
              ((symbol "globals" 50673 . 50680) (punctuation "." 50680 . 50681) (symbol "f_inhibit_eol_conversion" 50681 . 50705)))
          ("inhibit_x_resources" . 
              ((symbol "globals" 52009 . 52016) (punctuation "." 52016 . 52017) (symbol "f_inhibit_x_resources" 52017 . 52038)))
          ("parse_sexp_ignore_comments" . 
              ((symbol "globals" 53784 . 53791) (punctuation "." 53791 . 53792) (symbol "f_parse_sexp_ignore_comments" 53792 . 53820)))
          ("undo_inhibit_record_point" . 
              ((symbol "globals" 55218 . 55225) (punctuation "." 55225 . 55226) (symbol "f_undo_inhibit_record_point" 55226 . 55253)))
          ("use_dialog_box" . 
              ((symbol "globals" 55568 . 55575) (punctuation "." 55575 . 55576) (symbol "f_use_dialog_box" 55576 . 55592)))
          ("visible_cursor" . 
              ((symbol "globals" 55860 . 55867) (punctuation "." 55867 . 55868) (symbol "f_visible_cursor" 55868 . 55884)))
          ("write_region_inhibit_fsync" . 
              ((symbol "globals" 56151 . 56158) (punctuation "." 56158 . 56159) (symbol "f_write_region_inhibit_fsync" 56159 . 56187)))
          ("x_frame_normalize_before_maximize" . 
              ((symbol "globals" 56274 . 56281) (punctuation "." 56281 . 56282) (symbol "f_x_frame_normalize_before_maximize" 56282 . 56317)))
          ("x_gtk_use_old_file_dialog" . 
              ((symbol "globals" 56600 . 56607) (punctuation "." 56607 . 56608) (symbol "f_x_gtk_use_old_file_dialog" 56608 . 56635)))
          ("x_stretch_cursor_p" . 
              ((symbol "globals" 57028 . 57035) (punctuation "." 57035 . 57036) (symbol "f_x_stretch_cursor_p" 57036 . 57056)))
          ("iQCOMPOUND_TEXT" . ((number "5" 57712 . 57713)))
          ("iQCascii_compatible_p" . ((number "12" 58116 . 58118)))
          ("iQCbyte" . ((number "20" 58538 . 58540)))
          ("iQCdevice" . ((number "44" 60040 . 60042)))
          ("iQCfontset" . ((number "64" 61219 . 61221)))
          ("iQCint32" . ((number "77" 61916 . 61918)))
          ("iQCrelative_height" . ((number "129" 64895 . 64898)))
          ("iQCstruct" . ((number "156" 66364 . 66367)))
          ("iQCvert_only" . ((number "177" 67541 . 67544)))
          ("iQalt" . ((number "219" 70068 . 70071)))
          ("iQbar" . ((number "244" 71526 . 71529)))
          ("iQbefore_change_functions" . ((number "245" 71590 . 71593)))
          ("iQbeginning_of_buffer" . ((number "248" 71798 . 71801)))
          ("iQbig" . ((number "251" 71968 . 71971)))
          ("iQbig5" . ((number "252" 72013 . 72016)))
          ("iQbyte_code_meter" . ((number "284" 74066 . 74069)))
          ("iQcall_process" . ((number "286" 74171 . 74174)))
          ("iQcategory" . ((number "294" 74709 . 74712)))
          ("iQceiling" . ((number "303" 75218 . 75221)))
          ("iQclose" . ((number "322" 76396 . 76399)))
          ("iQcmajflt" . ((number "327" 76672 . 76675)))
          ("iQcolumns" . ((number "336" 77298 . 77301)))
          ("iQcommandp" . ((number "343" 77701 . 77704)))
          ("iQdata" . ((number "377" 79861 . 79864)))
          ("iQdelay" . ((number "393" 80874 . 80877)))
          ("iQfeatures" . ((number "476" 86185 . 86188)))
          ("iQfile_acl" . ((number "479" 86379 . 86382)))
          ("iQfile_modes" . ((number "489" 87053 . 87056)))
          ("iQfinalizer" . ((number "508" 88460 . 88463)))
          ("iQfont_entity" . ((number "519" 89056 . 89059)))
          ("iQfont_render" . ((number "523" 89298 . 89301)))
          ("iQfontification_functions" . ((number "525" 89426 . 89429)))
          ("iQframe_inhibit_resize" . ((number "537" 90181 . 90184)))
          ("iQframe_live_p" . ((number "538" 90251 . 90254)))
          ("iQframe_windows_min_size" . ((number "541" 90493 . 90496)))
          ("iQframes" . ((number "543" 90609 . 90612)))
          ("iQfunction_documentation" . ((number "558" 91531 . 91534)))
          ("iQimage" . ((number "625" 95766 . 95769)))
          ("iQinhibit_debugger" . ((number "628" 95977 . 95980)))
          ("iQinvisible" . ((number "669" 99180 . 99183)))
          ("iQisdir" . ((number "672" 99324 . 99327)))
          ("iQiso_2022" . ((number "675" 99489 . 99492)))
          ("iQkeymapp" . ((number "697" 100864 . 100867)))
          ("iQlet" . ((number "720" 102260 . 102263)))
          ("iQlibgnutls_version" . ((number "724" 102498 . 102501)))
          ("iQload_force_doc_strings" . ((number "740" 103437 . 103440)))
          ("iQminibuffer_history" . ((number "782" 106009 . 106012)))
          ("iQmouse_color" . ((number "813" 108082 . 108085)))
          ("iQmouse_leave_buffer_hook" . ((number "816" 108298 . 108301)))
          ("iQmouse_wheel_frame" . ((number "818" 108442 . 108445)))
          ("iQplist" . ((number "891" 112838 . 112841)))
          ("iQpoint_left" . ((number "897" 113141 . 113144)))
          ("iQppid" . ((number "907" 113737 . 113740)))
          ("iQprocess" . ((number "914" 114182 . 114185)))
          ("iQrehash_threshold" . ((number "947" 116167 . 116170)))
          ("iQrun_hook_with_args" . ((number "967" 117407 . 117410)))
          ("iQscreen_gamma" . ((number "975" 117871 . 117874)))
          ("iQsticky" . ((number "1032" 121351 . 121355)))
          ("iQstringp" . ((number "1040" 121832 . 121836)))
          ("iQsubrp" . ((number "1044" 122044 . 122048)))
          ("iQtop_edge" . ((number "1089" 124746 . 124750)))
          ("iQtty_color_mode" . ((number "1106" 125835 . 125839)))
          ("iQtty_menu_navigation_map" . ((number "1111" 126219 . 126223)))
          ("iQtty_mode_reset_strings" . ((number "1117" 126672 . 126676)))
          ("iQtty_mode_set_strings" . ((number "1118" 126753 . 126757)))
          ("iQupdate_frame_tool_bar" . ((number "1145" 128637 . 128641)))
          ("iQuser_ptrp" . ((number "1150" 128932 . 128936)))
          ("iQutf_16le" . ((number "1154" 129171 . 129175)))
          ("iQvertical_line" . ((number "1171" 130253 . 130257)))
          ("iQw32" . ((number "1180" 130806 . 130810)))
          ("iQwait_for_wm" . ((number "1181" 130859 . 130863)))
          ("iQwindow__pixel_to_total" . ((number "1193" 131510 . 131514)))
          ("iQwindow_live_p" . ((number "1205" 132529 . 132533)))
          ("iQwrong_type_argument" . ((number "1217" 133409 . 133413)))
          ("iQx_sent_selection_functions" . ((number "1228" 134201 . 134205)))
          ("iQxg_frame_set_char_size_2" . ((number "1242" 135333 . 135337)))
          ("iQxwidget" . ((number "1245" 135535 . 135539)))
          ("Vafter_delete_frame_functions" . 
              ((symbol "globals" 289 . 296) (punctuation "." 296 . 297) (symbol "f_Vafter_delete_frame_functions" 297 . 328)))
          ("Vafter_insert_file_functions" . 
              ((symbol "globals" 498 . 505) (punctuation "." 505 . 506) (symbol "f_Vafter_insert_file_functions" 506 . 536)))
          ("Vauto_resize_tool_bars" . 
              ((symbol "globals" 1116 . 1123) (punctuation "." 1123 . 1124) (symbol "f_Vauto_resize_tool_bars" 1124 . 1148)))
          ("Vchange_major_mode_hook" . 
              ((symbol "globals" 2821 . 2828) (punctuation "." 2828 . 2829) (symbol "f_Vchange_major_mode_hook" 2829 . 2854)))
          ("Vcommand_history" . 
              ((symbol "globals" 4554 . 4561) (punctuation "." 4561 . 4562) (symbol "f_Vcommand_history" 4562 . 4580)))
          ("Vcompletion_ignored_extensions" . 
              ((symbol "globals" 4870 . 4877) (punctuation "." 4877 . 4878) (symbol "f_Vcompletion_ignored_extensions" 4878 . 4910)))
          ("Vdata_directory" . 
              ((symbol "globals" 5729 . 5736) (punctuation "." 5736 . 5737) (symbol "f_Vdata_directory" 5737 . 5754)))
          ("Vdbus_message_type_invalid" . 
              ((symbol "globals" 6119 . 6126) (punctuation "." 6126 . 6127) (symbol "f_Vdbus_message_type_invalid" 6127 . 6155)))
          ("Veval_buffer_list" . 
              ((symbol "globals" 10247 . 10254) (punctuation "." 10254 . 10255) (symbol "f_Veval_buffer_list" 10255 . 10274)))
          ("Vhelp_char" . 
              ((symbol "globals" 13814 . 13821) (punctuation "." 13821 . 13822) (symbol "f_Vhelp_char" 13822 . 13834)))
          ("Vimage_cache_eviction_delay" . 
              ((symbol "globals" 14634 . 14641) (punctuation "." 14641 . 14642) (symbol "f_Vimage_cache_eviction_delay" 14642 . 14671)))
          ("Vinvocation_directory" . 
              ((symbol "globals" 16801 . 16808) (punctuation "." 16808 . 16809) (symbol "f_Vinvocation_directory" 16809 . 16832)))
          ("Vkbd_macro_termination_hook" . 
              ((symbol "globals" 17000 . 17007) (punctuation "." 17007 . 17008) (symbol "f_Vkbd_macro_termination_hook" 17008 . 17037)))
          ("Vlast_coding_system_used" . 
              ((symbol "globals" 17538 . 17545) (punctuation "." 17545 . 17546) (symbol "f_Vlast_coding_system_used" 17546 . 17572)))
          ("Vlatin_extra_code_table" . 
              ((symbol "globals" 17735 . 17742) (punctuation "." 17742 . 17743) (symbol "f_Vlatin_extra_code_table" 17743 . 17768)))
          ("Vload_file_rep_suffixes" . 
              ((symbol "globals" 18201 . 18208) (punctuation "." 18208 . 18209) (symbol "f_Vload_file_rep_suffixes" 18209 . 18234)))
          ("Vload_read_function" . 
              ((symbol "globals" 18445 . 18452) (punctuation "." 18452 . 18453) (symbol "f_Vload_read_function" 18453 . 18474)))
          ("Vminibuf_scroll_window" . 
              ((symbol "globals" 20316 . 20323) (punctuation "." 20323 . 20324) (symbol "f_Vminibuf_scroll_window" 20324 . 20348)))
          ("Vmodule_environments" . 
              ((symbol "globals" 22174 . 22181) (punctuation "." 22181 . 22182) (symbol "f_Vmodule_environments" 22182 . 22204)))
          ("Vmove_frame_functions" . 
              ((symbol "globals" 23263 . 23270) (punctuation "." 23270 . 23271) (symbol "f_Vmove_frame_functions" 23271 . 23294)))
          ("Voperating_system_release" . 
              ((symbol "globals" 23657 . 23664) (punctuation "." 23664 . 23665) (symbol "f_Voperating_system_release" 23665 . 23692)))
          ("Vprint_charset_text_property" . 
              ((symbol "globals" 25800 . 25807) (punctuation "." 25807 . 25808) (symbol "f_Vprint_charset_text_property" 25808 . 25838)))
          ("Vprocess_connection_type" . 
              ((symbol "globals" 26775 . 26782) (punctuation "." 26782 . 26783) (symbol "f_Vprocess_connection_type" 26783 . 26809)))
          ("Vread_with_symbol_positions" . 
              ((symbol "globals" 27618 . 27625) (punctuation "." 27625 . 27626) (symbol "f_Vread_with_symbol_positions" 27626 . 27655)))
          ("Vscript_representative_chars" . 
              ((symbol "globals" 28928 . 28935) (punctuation "." 28935 . 28936) (symbol "f_Vscript_representative_chars" 28936 . 28966)))
          ("Vselection_inhibit_update_commands" . 
              ((symbol "globals" 29660 . 29667) (punctuation "." 29667 . 29668) (symbol "f_Vselection_inhibit_update_commands" 29668 . 29704)))
          ("Vstandard_translation_table_for_decode" . 
              ((symbol "globals" 30895 . 30902) (punctuation "." 30902 . 30903) (symbol "f_Vstandard_translation_table_for_decode" 30903 . 30943)))
          ("Vsystem_name" . 
              ((symbol "globals" 31712 . 31719) (punctuation "." 31719 . 31720) (symbol "f_Vsystem_name" 31720 . 31734)))
          ("Vtty_erase_char" . 
              ((symbol "globals" 34338 . 34345) (punctuation "." 34345 . 34346) (symbol "f_Vtty_erase_char" 34346 . 34363)))
          ("Vundo_outer_limit" . 
              ((symbol "globals" 34425 . 34432) (punctuation "." 34432 . 34433) (symbol "f_Vundo_outer_limit" 34433 . 34452)))
          ("Vunread_input_method_events" . 
              ((symbol "globals" 34861 . 34868) (punctuation "." 34868 . 34869) (symbol "f_Vunread_input_method_events" 34869 . 34898)))
          ("Vx_nontext_pointer_shape" . 
              ((symbol "globals" 38906 . 38913) (punctuation "." 38913 . 38914) (symbol "f_Vx_nontext_pointer_shape" 38914 . 38940)))
          ("Vx_pointer_shape" . 
              ((symbol "globals" 39131 . 39138) (punctuation "." 39138 . 39139) (symbol "f_Vx_pointer_shape" 39139 . 39157)))
          ("Vx_window_vertical_drag_shape" . 
              ((symbol "globals" 41426 . 41433) (punctuation "." 41433 . 41434) (symbol "f_Vx_window_vertical_drag_shape" 41434 . 41465)))
          ("do_mouse_tracking" . 
              ((symbol "globals" 41871 . 41878) (punctuation "." 41878 . 41879) (symbol "f_do_mouse_tracking" 41879 . 41898)))
          ("emacs_scroll_step" . 
              ((symbol "globals" 43586 . 43593) (punctuation "." 43593 . 43594) (symbol "f_emacs_scroll_step" 43594 . 43613)))
          ("extra_keyboard_modifiers" . 
              ((symbol "globals" 43798 . 43805) (punctuation "." 43805 . 43806) (symbol "f_extra_keyboard_modifiers" 43806 . 43832)))
          ("strings_consed" . 
              ((symbol "globals" 45881 . 45888) (punctuation "." 45888 . 45889) (symbol "f_strings_consed" 45889 . 45905)))
          ("coding_system_require_warning" . 
              ((symbol "globals" 47966 . 47973) (punctuation "." 47973 . 47974) (symbol "f_coding_system_require_warning" 47974 . 48005)))
          ("delete_exited_processes" . 
              ((symbol "globals" 48900 . 48907) (punctuation "." 48907 . 48908) (symbol "f_delete_exited_processes" 48908 . 48933)))
          ("inherit_process_coding_system" . 
              ((symbol "globals" 50351 . 50358) (punctuation "." 50358 . 50359) (symbol "f_inherit_process_coding_system" 50359 . 50390)))
          ("inhibit_eval_during_redisplay" . 
              ((symbol "globals" 50784 . 50791) (punctuation "." 50791 . 50792) (symbol "f_inhibit_eval_during_redisplay" 50792 . 50823)))
          ("inhibit_null_byte_detection" . 
              ((symbol "globals" 51510 . 51517) (punctuation "." 51517 . 51518) (symbol "f_inhibit_null_byte_detection" 51518 . 51547)))
          ("message_truncate_lines" . 
              ((symbol "globals" 52834 . 52841) (punctuation "." 52841 . 52842) (symbol "f_message_truncate_lines" 52842 . 52866)))
          ("multibyte_syntax_as_symbol" . 
              ((symbol "globals" 53290 . 53297) (punctuation "." 53297 . 53298) (symbol "f_multibyte_syntax_as_symbol" 53298 . 53326)))
          ("print_escape_newlines" . 
              ((symbol "globals" 54219 . 54226) (punctuation "." 54226 . 54227) (symbol "f_print_escape_newlines" 54227 . 54250)))
          ("redisplay_dont_pause" . 
              ((symbol "globals" 54705 . 54712) (punctuation "." 54712 . 54713) (symbol "f_redisplay_dont_pause" 54713 . 54735)))
          ("use_default_font_for_symbols" . 
              ((symbol "globals" 55481 . 55488) (punctuation "." 55488 . 55489) (symbol "f_use_default_font_for_symbols" 55489 . 55519)))
          ("use_system_font" . 
              ((symbol "globals" 55719 . 55726) (punctuation "." 55726 . 55727) (symbol "f_use_system_font" 55727 . 55744)))
          ("x_gtk_show_hidden_files" . 
              ((symbol "globals" 56496 . 56503) (punctuation "." 56503 . 56504) (symbol "f_x_gtk_show_hidden_files" 56504 . 56529)))
          ("x_gtk_use_system_tooltips" . 
              ((symbol "globals" 56706 . 56713) (punctuation "." 56713 . 56714) (symbol "f_x_gtk_use_system_tooltips" 56714 . 56741)))
          ("iQCadvertised_binding" . ((number "7" 57832 . 57833)))
          ("iQCalign_to" . ((number "8" 57896 . 57897)))
          ("iQCcipher_keysize" . ((number "27" 58975 . 58977)))
          ("iQCcolor_adjustment" . ((number "31" 59211 . 59213)))
          ("iQCkeys" . ((number "83" 62245 . 62247)))
          ("iQClocal" . ((number "88" 62499 . 62501)))
          ("iQCmethod" . ((number "101" 63276 . 63279)))
          ("iQCnoquery" . ((number "105" 63501 . 63504)))
          ("iQCnull_object" . ((number "108" 63659 . 63662)))
          ("iQCpost_read_conversion" . ((number "117" 64160 . 64163)))
          ("iQCpre_write_conversion" . ((number "118" 64240 . 64243)))
          ("iQCpurecopy" . ((number "124" 64592 . 64595)))
          ("iQCrehash_size" . ((number "127" 64757 . 64760)))
          ("iQCrehash_threshold" . ((number "128" 64824 . 64827)))
          ("iQCremote" . ((number "132" 65076 . 65079)))
          ("iQCrtl" . ((number "135" 65247 . 65250)))
          ("iQCsession" . ((number "143" 65669 . 65672)))
          ("iQCvisible" . ((number "178" 67597 . 67600)))
          ("iQCweight" . ((number "181" 67758 . 67761)))
          ("iQall_events" . ((number "217" 69969 . 69972)))
          ("iQbackground_mode" . ((number "242" 71414 . 71417)))
          ("iQboth" . ((number "260" 72467 . 72470)))
          ("iQbuffer_file_coding_system" . ((number "273" 73308 . 73311)))
          ("iQcase_table_p" . ((number "292" 74571 . 74574)))
          ("iQcategorysetp" . ((number "298" 74959 . 74962)))
          ("iQclone_of" . ((number "321" 76345 . 76348)))
          ("iQcodeset" . ((number "331" 76934 . 76937)))
          ("iQcompound_text" . ((number "348" 78064 . 78067)))
          ("iQctime" . ((number "362" 78878 . 78881)))
          ("iQcutime" . ((number "373" 79589 . 79592)))
          ("iQdelete_before" . ((number "396" 81060 . 81063)))
          ("iQerror" . ((number "446" 84338 . 84341)))
          ("iQeval" . ((number "452" 84675 . 84678)))
          ("iQfboundp" . ((number "475" 86132 . 86135)))
          ("iQfile_accessible_directory_p" . ((number "478" 86306 . 86309)))
          ("iQfile_attributes_lessp" . ((number "482" 86590 . 86593)))
          ("iQfile_directory_p" . ((number "484" 86733 . 86736)))
          ("iQfile_name_directory" . ((number "494" 87462 . 87465)))
          ("iQframe" . ((number "535" 90058 . 90061)))
          ("iQfullboth" . ((number "551" 91105 . 91108)))
          ("iQfuncall_interactively" . ((number "556" 91396 . 91399)))
          ("iQgnutls_e_invalid_session" . ((number "577" 92799 . 92802)))
          ("iQheight_only" . ((number "601" 94368 . 94371)))
          ("iQinhibit_file_name_operation" . ((number "631" 96240 . 96243)))
          ("iQinhibit_modification_hooks" . ((number "634" 96505 . 96508)))
          ("iQinhibit_point_motion_hooks" . ((number "635" 96595 . 96598)))
          ("iQinteger" . ((number "647" 97490 . 97493)))
          ("iQinternal_echo_keystrokes_prefix" . ((number "659" 98450 . 98453)))
          ("iQlanguage_change" . ((number "706" 101434 . 101437)))
          ("iQlatin" . ((number "711" 101766 . 101769)))
          ("iQlatin_1" . ((number "712" 101816 . 101819)))
          ("iQleft_only" . ((number "717" 102092 . 102095)))
          ("iQleft_to_right" . ((number "718" 102152 . 102155)))
          ("iQlibpng_version" . ((number "726" 102635 . 102638)))
          ("iQline" . ((number "728" 102739 . 102742)))
          ("iQline_height" . ((number "729" 102792 . 102795)))
          ("iQmake_invisible" . ((number "753" 104241 . 104244)))
          ("iQmark_inactive" . ((number "759" 104608 . 104611)))
          ("iQmenu_bar" . ((number "765" 104915 . 104918)))
          ("iQmodeline" . ((number "793" 106769 . 106772)))
          ("iQmono" . ((number "807" 107739 . 107742)))
          ("iQmoved_from" . ((number "823" 108741 . 108744)))
          ("iQnobreak_hyphen" . ((number "838" 109605 . 109608)))
          ("iQnon_ascii" . ((number "841" 109782 . 109785)))
          ("iQonlydir" . ((number "855" 110592 . 110595)))
          ("iQparent_frame" . ((number "880" 112235 . 112238)))
          ("iQrecompute_lucid_menubar" . ((number "937" 115442 . 115445)))
          ("iQselect_window" . ((number "986" 118616 . 118619)))
          ("iQserial" . ((number "992" 118971 . 118974)))
          ("iQsess" . ((number "993" 119019 . 119022)))
          ("iQset_window_configuration" . ((number "1002" 119623 . 119627)))
          ("iQsha256" . ((number "1007" 119908 . 119912)))
          ("iQstderr" . ((number "1029" 121200 . 121204)))
          ("iQstdin" . ((number "1030" 121250 . 121254)))
          ("iQstring_without_embedded_nulls_p" . ((number "1039" 121755 . 121759)))
          ("iQtext_pixels" . ((number "1068" 123504 . 123508)))
          ("iQthread" . ((number "1072" 123739 . 123743)))
          ("iQtool_bar" . ((number "1080" 124189 . 124193)))
          ("iQtool_bar_position" . ((number "1083" 124393 . 124397)))
          ("iQtty_menu_prev_item" . ((number "1114" 126449 . 126453)))
          ("iQunderline_minimum_offset" . ((number "1127" 127316 . 127320)))
          ("iQunmount" . ((number "1140" 128324 . 128328)))
          ("iQwindow" . ((number "1192" 131443 . 131447)))
          ("iQxbm" . ((number "1237" 134935 . 134939)))
          ("iQxg_change_toolbar_position" . ((number "1238" 135003 . 135007)))
          ("iQxg_frame_set_char_size_3" . ((number "1243" 135420 . 135424)))
          ("iQz_group" . ((number "1250" 135852 . 135856)))
          ("Vblink_cursor_alist" . 
              ((symbol "globals" 1874 . 1881) (punctuation "." 1881 . 1882) (symbol "f_Vblink_cursor_alist" 1882 . 1903)))
          ("Vchar_script_table" . 
              ((symbol "globals" 3147 . 3154) (punctuation "." 3154 . 3155) (symbol "f_Vchar_script_table" 3155 . 3175)))
          ("Vcharset_list" . 
              ((symbol "globals" 3318 . 3325) (punctuation "." 3325 . 3326) (symbol "f_Vcharset_list" 3326 . 3341)))
          ("Vcombine_after_change_calls" . 
              ((symbol "globals" 4249 . 4256) (punctuation "." 4256 . 4257) (symbol "f_Vcombine_after_change_calls" 4257 . 4286)))
          ("Vcomposition_function_table" . 
              ((symbol "globals" 5224 . 5231) (punctuation "." 5231 . 5232) (symbol "f_Vcomposition_function_table" 5232 . 5261)))
          ("Vdebugger" . 
              ((symbol "globals" 7333 . 7340) (punctuation "." 7340 . 7341) (symbol "f_Vdebugger" 7341 . 7352)))
          ("Vdefault_text_properties" . 
              ((symbol "globals" 7904 . 7911) (punctuation "." 7911 . 7912) (symbol "f_Vdefault_text_properties" 7912 . 7938)))
          ("Vdisplay_line_numbers" . 
              ((symbol "globals" 8784 . 8791) (punctuation "." 8791 . 8792) (symbol "f_Vdisplay_line_numbers" 8792 . 8815)))
          ("Vdouble_click_time" . 
              ((symbol "globals" 9420 . 9427) (punctuation "." 9427 . 9428) (symbol "f_Vdouble_click_time" 9428 . 9448)))
          ("Vemacs_version" . 
              ((symbol "globals" 9780 . 9787) (punctuation "." 9787 . 9788) (symbol "f_Vemacs_version" 9788 . 9804)))
          ("Vexec_directory" . 
              ((symbol "globals" 10332 . 10339) (punctuation "." 10339 . 10340) (symbol "f_Vexec_directory" 10340 . 10357)))
          ("Vfile_name_handler_alist" . 
              ((symbol "globals" 11484 . 11491) (punctuation "." 11491 . 11492) (symbol "f_Vfile_name_handler_alist" 11492 . 11518)))
          ("Vfont_width_table" . 
              ((symbol "globals" 12483 . 12490) (punctuation "." 12490 . 12491) (symbol "f_Vfont_width_table" 12491 . 12510)))
          ("Vfunction_key_map" . 
              ((symbol "globals" 13068 . 13075) (punctuation "." 13075 . 13076) (symbol "f_Vfunction_key_map" 13076 . 13095)))
          ("Vhistory_add_new_input" . 
              ((symbol "globals" 14060 . 14067) (punctuation "." 14067 . 14068) (symbol "f_Vhistory_add_new_input" 14068 . 14092)))
          ("Vinput_method_previous_message" . 
              ((symbol "globals" 16087 . 16094) (punctuation "." 16094 . 16095) (symbol "f_Vinput_method_previous_message" 16095 . 16127)))
          ("Vmemory_signal_data" . 
              ((symbol "globals" 19749 . 19756) (punctuation "." 19756 . 19757) (symbol "f_Vmemory_signal_data" 19757 . 19778)))
          ("Vmessage_log_max" . 
              ((symbol "globals" 20218 . 20225) (punctuation "." 20225 . 20226) (symbol "f_Vmessage_log_max" 20226 . 20244)))
          ("Vminibuffer_exit_hook" . 
              ((symbol "globals" 20936 . 20943) (punctuation "." 20943 . 20944) (symbol "f_Vminibuffer_exit_hook" 20944 . 20967)))
          ("Vmodule_refs_hash" . 
              ((symbol "globals" 22361 . 22368) (punctuation "." 22368 . 22369) (symbol "f_Vmodule_refs_hash" 22369 . 22388)))
          ("Vmouse_highlight" . 
              ((symbol "globals" 22947 . 22954) (punctuation "." 22954 . 22955) (symbol "f_Vmouse_highlight" 22955 . 22973)))
          ("Votf_script_alist" . 
              ((symbol "globals" 23754 . 23761) (punctuation "." 23761 . 23762) (symbol "f_Votf_script_alist" 23762 . 23781)))
          ("Vprevious_system_messages_locale" . 
              ((symbol "globals" 25552 . 25559) (punctuation "." 25559 . 25560) (symbol "f_Vprevious_system_messages_locale" 25560 . 25594)))
          ("Vprint_circle" . 
              ((symbol "globals" 25892 . 25899) (punctuation "." 25899 . 25900) (symbol "f_Vprint_circle" 25900 . 25915)))
          ("Vscroll_preserve_screen_position" . 
              ((symbol "globals" 29058 . 29065) (punctuation "." 29065 . 29066) (symbol "f_Vscroll_preserve_screen_position" 29066 . 29100)))
          ("Vsignal_hook_function" . 
              ((symbol "globals" 30303 . 30310) (punctuation "." 30310 . 30311) (symbol "f_Vsignal_hook_function" 30311 . 30334)))
          ("Vsource_directory" . 
              ((symbol "globals" 30396 . 30403) (punctuation "." 30403 . 30404) (symbol "f_Vsource_directory" 30404 . 30423)))
          ("Vstandard_display_table" . 
              ((symbol "globals" 30589 . 30596) (punctuation "." 30596 . 30597) (symbol "f_Vstandard_display_table" 30597 . 30622)))
          ("Vsystem_messages_locale" . 
              ((symbol "globals" 31627 . 31634) (punctuation "." 31634 . 31635) (symbol "f_Vsystem_messages_locale" 31635 . 31660)))
          ("Vunread_post_input_method_events" . 
              ((symbol "globals" 34990 . 34997) (punctuation "." 34997 . 34998) (symbol "f_Vunread_post_input_method_events" 34998 . 35032)))
          ("Vuser_init_file" . 
              ((symbol "globals" 35268 . 35275) (punctuation "." 35275 . 35276) (symbol "f_Vuser_init_file" 35276 . 35293)))
          ("Vx_alt_keysym" . 
              ((symbol "globals" 37759 . 37766) (punctuation "." 37766 . 37767) (symbol "f_Vx_alt_keysym" 37767 . 37782)))
          ("Vx_lost_selection_functions" . 
              ((symbol "globals" 38419 . 38426) (punctuation "." 38426 . 38427) (symbol "f_Vx_lost_selection_functions" 38427 . 38456)))
          ("Vx_sensitive_text_pointer_shape" . 
              ((symbol "globals" 39562 . 39569) (punctuation "." 39569 . 39570) (symbol "f_Vx_sensitive_text_pointer_shape" 39570 . 39603)))
          ("Vx_wait_for_event_timeout" . 
              ((symbol "globals" 40168 . 40175) (punctuation "." 40175 . 40176) (symbol "f_Vx_wait_for_event_timeout" 40176 . 40203)))
          ("eol_mnemonic_unix" . 
              ((symbol "globals" 42236 . 42243) (punctuation "." 42243 . 42244) (symbol "f_eol_mnemonic_unix" 42244 . 42263)))
          ("double_click_fuzz" . 
              ((symbol "globals" 43499 . 43506) (punctuation "." 43506 . 43507) (symbol "f_double_click_fuzz" 43507 . 43526)))
          ("profiler_log_size" . 
              ((symbol "globals" 45344 . 45351) (punctuation "." 45351 . 45352) (symbol "f_profiler_log_size" 45352 . 45371)))
          ("attempt_stack_overflow_recovery" . 
              ((symbol "globals" 47306 . 47313) (punctuation "." 47313 . 47314) (symbol "f_attempt_stack_overflow_recovery" 47314 . 47347)))
          ("display_line_numbers_widen" . 
              ((symbol "globals" 49203 . 49210) (punctuation "." 49210 . 49211) (symbol "f_display_line_numbers_widen" 49211 . 49239)))
          ("force_load_messages" . 
              ((symbol "globals" 49622 . 49629) (punctuation "." 49629 . 49630) (symbol "f_force_load_messages" 49630 . 49651)))
          ("inhibit_try_window_id" . 
              ((symbol "globals" 51810 . 51817) (punctuation "." 51817 . 51818) (symbol "f_inhibit_try_window_id" 51818 . 51841)))
          ("unibyte_display_via_language_environment" . 
              ((symbol "globals" 55354 . 55361) (punctuation "." 55361 . 55362) (symbol "f_unibyte_display_via_language_environment" 55362 . 55404)))
          ("iQCarray" . ((number "10" 58003 . 58005)))
          ("iQCbackground" . ((number "14" 58238 . 58240)))
          ("iQCbold" . ((number "15" 58291 . 58293)))
          ("iQCflowcontrol" . ((number "61" 61054 . 61056)))
          ("iQCfont" . ((number "62" 61108 . 61110)))
          ("iQCforeground" . ((number "65" 61275 . 61277)))
          ("iQCfoundry" . ((number "66" 61331 . 61333)))
          ("iQCloglevel" . ((number "90" 62596 . 62598)))
          ("iQCradio" . ((number "125" 64645 . 64648)))
          ("iQCserial" . ((number "140" 65510 . 65513)))
          ("iQCstderr" . ((number "150" 66034 . 66037)))
          ("iQCwindow" . ((number "183" 67860 . 67863)))
          ("iQNULL" . ((number "190" 68235 . 68238)))
          ("iQSAVE_TARGETS" . ((number "192" 68341 . 68344)))
          ("iQSTRING" . ((number "194" 68453 . 68456)))
          ("iQaccess_file" . ((number "204" 69010 . 69013)))
          ("iQafter_change_functions" . ((number "211" 69539 . 69542)))
          ("iQand_optional" . ((number "220" 70121 . 70124)))
          ("iQbefore_string" . ((number "247" 71728 . 71731)))
          ("iQbottom_divider_width" . ((number "264" 72703 . 72706)))
          ("iQbuffer_access_fontify_functions" . ((number "272" 73214 . 73217)))
          ("iQbuffer_position" . ((number "278" 73680 . 73683)))
          ("iQccl_program_idx" . ((number "300" 75068 . 75071)))
          ("iQcharsetp" . ((number "317" 76127 . 76130)))
          ("iQcminflt" . ((number "328" 76724 . 76727)))
          ("iQcode_conversion_map_id" . ((number "330" 76867 . 76870)))
          ("iQcomma" . ((number "338" 77394 . 77397)))
          ("iQcommand_debug_status" . ((number "341" 77567 . 77570)))
          ("iQcompiled_function" . ((number "345" 77854 . 77857)))
          ("iQconfig_changed_event" . ((number "351" 78287 . 78290)))
          ("iQcurrent_load_list" . ((number "366" 79124 . 79127)))
          ("iQdbus_message_internal" . ((number "382" 80140 . 80143)))
          ("iQdisabled" . ((number "410" 82047 . 82050)))
          ("iQecho_area_clear_hook" . ((number "428" 83299 . 83302)))
          ("iQeight_bit" . ((number "432" 83546 . 83549)))
          ("iQeven" . ((number "455" 84847 . 84850)))
          ("iQevent_symbol_element_mask" . ((number "457" 84972 . 84975)))
          ("iQfile_attributes" . ((number "481" 86516 . 86519)))
          ("iQfile_selinux_context" . ((number "503" 88125 . 88128)))
          ("iQfuncall" . ((number "555" 91330 . 91333)))
          ("iQgnutls_e_interrupted" . ((number "576" 92717 . 92720)))
          ("iQgobject" . ((number "583" 93292 . 93295)))
          ("iQhand" . ((number "588" 93565 . 93568)))
          ("iQhash_table" . ((number "593" 93903 . 93906)))
          ("iQiconify_top_level" . ((number "621" 95558 . 95561)))
          ("iQignored" . ((number "624" 95716 . 95719)))
          ("iQinhibit_redisplay" . ((number "638" 96810 . 96813)))
          ("iQinternal__syntax_propertize" . ((number "652" 97822 . 97825)))
          ("iQjson_value_p" . ((number "689" 100363 . 100366)))
          ("iQkeymap" . ((number "695" 100737 . 100740)))
          ("iQlast_arrow_position" . ((number "708" 101558 . 101561)))
          ("iQletx" . ((number "721" 102305 . 102308)))
          ("iQline_prefix" . ((number "732" 102998 . 103001)))
          ("iQload" . ((number "738" 103307 . 103310)))
          ("iQlss" . ((number "745" 103780 . 103783)))
          ("iQmany" . ((number "756" 104429 . 104432)))
          ("iQmenu_bar_external" . ((number "766" 104978 . 104981)))
          ("iQmm_size" . ((number "787" 106366 . 106369)))
          ("iQmove" . ((number "819" 108501 . 108504)))
          ("iQmoved_to" . ((number "824" 108797 . 108800)))
          ("iQoperations" . ((number "859" 110823 . 110826)))
          ("iQouter_window_id" . ((number "865" 111204 . 111207)))
          ("iQoverlay_arrow_bitmap" . ((number "869" 111459 . 111462)))
          ("iQpc" . ((number "883" 112387 . 112390)))
          ("iQplus" . ((number "893" 112935 . 112938)))
          ("iQpressed_button" . ((number "909" 113863 . 113866)))
          ("iQpriority" . ((number "913" 114129 . 114132)))
          ("iQquote" . ((number "925" 114788 . 114791)))
          ("iQrange" . ((number "927" 114884 . 114887)))
          ("iQsans" . ((number "969" 117513 . 117516)))
          ("iQscroll_bar" . ((number "976" 117931 . 117934)))
          ("iQset_frame_size" . ((number "1000" 119459 . 119463)))
          ("iQsetq" . ((number "1003" 119690 . 119694)))
          ("iQspecial_titlecase" . ((number "1022" 120766 . 120770)))
          ("iQstandard_output" . ((number "1025" 120977 . 120981)))
          ("iQstring" . ((number "1036" 121553 . 121557)))
          ("iQsubr" . ((number "1043" 121996 . 122000)))
          ("iQtimer_event_handler" . ((number "1076" 123950 . 123954)))
          ("iQtop_right_corner" . ((number "1094" 125049 . 125053)))
          ("iQundecided" . ((number "1122" 126988 . 126992)))
          ("iQundefined_color" . ((number "1125" 127169 . 127173)))
          ("iQunlet" . ((number "1139" 128273 . 128277)))
          ("iQuser_ptr" . ((number "1149" 128876 . 128880)))
          ("iQvendor_specific_keysyms" . ((number "1167" 129961 . 129965)))
          ("iQwindow_scroll_functions" . ((number "1207" 132697 . 132701)))
          ("iQx" . ((number "1218" 133468 . 133472)))
          ("iQx_frame_parameter" . ((number "1222" 133742 . 133746)))
          ("iQx_resource_name" . ((number "1227" 134121 . 134125)))
          ("Vcharset_revision_table" . 
              ((symbol "globals" 3504 . 3511) (punctuation "." 3511 . 3512) (symbol "f_Vcharset_revision_table" 3512 . 3537)))
          ("Vcode_conversion_map_vector" . 
              ((symbol "globals" 3619 . 3626) (punctuation "." 3626 . 3627) (symbol "f_Vcode_conversion_map_vector" 3627 . 3656)))
          ("Vcompletion_regexp_list" . 
              ((symbol "globals" 4984 . 4991) (punctuation "." 4991 . 4992) (symbol "f_Vcompletion_regexp_list" 4992 . 5017)))
          ("Vdbus_debug" . 
              ((symbol "globals" 5908 . 5915) (punctuation "." 5915 . 5916) (symbol "f_Vdbus_debug" 5916 . 5929)))
          ("Vdefault_frame_scroll_bars" . 
              ((symbol "globals" 7664 . 7671) (punctuation "." 7671 . 7672) (symbol "f_Vdefault_frame_scroll_bars" 7672 . 7700)))
          ("Vemulation_mode_map_alists" . 
              ((symbol "globals" 9884 . 9891) (punctuation "." 9891 . 9892) (symbol "f_Vemulation_mode_map_alists" 9892 . 9920)))
          ("Vface_new_frame_defaults" . 
              ((symbol "globals" 10985 . 10992) (punctuation "." 10992 . 10993) (symbol "f_Vface_new_frame_defaults" 10993 . 11019)))
          ("Vfile_coding_system_alist" . 
              ((symbol "globals" 11263 . 11270) (punctuation "." 11270 . 11271) (symbol "f_Vfile_coding_system_alist" 11271 . 11298)))
          ("Vfont_encoding_charset_alist" . 
              ((symbol "globals" 12137 . 12144) (punctuation "." 12144 . 12145) (symbol "f_Vfont_encoding_charset_alist" 12145 . 12175)))
          ("Vinhibit_debugger" . 
              ((symbol "globals" 14929 . 14936) (punctuation "." 14936 . 14937) (symbol "f_Vinhibit_debugger" 14937 . 14956)))
          ("Vinhibit_read_only" . 
              ((symbol "globals" 15573 . 15580) (punctuation "." 15580 . 15581) (symbol "f_Vinhibit_read_only" 15581 . 15601)))
          ("Vinternal__daemon_sockname" . 
              ((symbol "globals" 16314 . 16321) (punctuation "." 16321 . 16322) (symbol "f_Vinternal__daemon_sockname" 16322 . 16350)))
          ("Vkill_emacs_hook" . 
              ((symbol "globals" 17317 . 17324) (punctuation "." 17324 . 17325) (symbol "f_Vkill_emacs_hook" 17325 . 17343)))
          ("Vlocale_coding_system" . 
              ((symbol "globals" 18740 . 18747) (punctuation "." 18747 . 18748) (symbol "f_Vlocale_coding_system" 18748 . 18771)))
          ("Vlread_unescaped_character_literals" . 
              ((symbol "globals" 18869 . 18876) (punctuation "." 18876 . 18877) (symbol "f_Vlread_unescaped_character_literals" 18877 . 18914)))
          ("Vmain_thread" . 
              ((symbol "globals" 19082 . 19089) (punctuation "." 19089 . 19090) (symbol "f_Vmain_thread" 19090 . 19104)))
          ("Vother_window_scroll_buffer" . 
              ((symbol "globals" 23863 . 23870) (punctuation "." 23870 . 23871) (symbol "f_Vother_window_scroll_buffer" 23871 . 23900)))
          ("Vpath_separator" . 
              ((symbol "globals" 24770 . 24777) (punctuation "." 24777 . 24778) (symbol "f_Vpath_separator" 24778 . 24795)))
          ("Vprintable_chars" . 
              ((symbol "globals" 26417 . 26424) (punctuation "." 26424 . 26425) (symbol "f_Vprintable_chars" 26425 . 26443)))
          ("Vread_expression_history" . 
              ((symbol "globals" 27300 . 27307) (punctuation "." 27307 . 27308) (symbol "f_Vread_expression_history" 27308 . 27334)))
          ("Vresize_mini_windows" . 
              ((symbol "globals" 28404 . 28411) (punctuation "." 28411 . 28412) (symbol "f_Vresize_mini_windows" 28412 . 28434)))
          ("Vshow_trailing_whitespace" . 
              ((symbol "globals" 30198 . 30205) (punctuation "." 30205 . 30206) (symbol "f_Vshow_trailing_whitespace" 30206 . 30233)))
          ("Vtool_bar_style" . 
              ((symbol "globals" 33485 . 33492) (punctuation "." 33492 . 33493) (symbol "f_Vtool_bar_style" 33493 . 33510)))
          ("Vtransient_mark_mode" . 
              ((symbol "globals" 33646 . 33653) (punctuation "." 33653 . 33654) (symbol "f_Vtransient_mark_mode" 33654 . 33676)))
          ("Vundo_outer_limit_function" . 
              ((symbol "globals" 34532 . 34539) (punctuation "." 34539 . 34540) (symbol "f_Vundo_outer_limit_function" 34540 . 34568)))
          ("Vuser_login_name" . 
              ((symbol "globals" 35353 . 35360) (punctuation "." 35360 . 35361) (symbol "f_Vuser_login_name" 35361 . 35379)))
          ("Vword_combining_categories" . 
              ((symbol "globals" 37056 . 37063) (punctuation "." 37063 . 37064) (symbol "f_Vword_combining_categories" 37064 . 37092)))
          ("eol_mnemonic_dos" . 
              ((symbol "globals" 41958 . 41965) (punctuation "." 41965 . 41966) (symbol "f_eol_mnemonic_dos" 41966 . 41984)))
          ("eol_mnemonic_undecided" . 
              ((symbol "globals" 42142 . 42149) (punctuation "." 42149 . 42150) (symbol "f_eol_mnemonic_undecided" 42150 . 42174)))
          ("frame_size_history" . 
              ((symbol "globals" 42544 . 42551) (punctuation "." 42551 . 42552) (symbol "f_frame_size_history" 42552 . 42572)))
          ("executing_kbd_macro_index" . 
              ((symbol "globals" 43689 . 43696) (punctuation "." 43696 . 43697) (symbol "f_executing_kbd_macro_index" 43697 . 43724)))
          ("gcs_done" . 
              ((symbol "globals" 44036 . 44043) (punctuation "." 44043 . 44044) (symbol "f_gcs_done" 44044 . 44054)))
          ("tool_bar_max_label_size" . 
              ((symbol "globals" 46262 . 46269) (punctuation "." 46269 . 46270) (symbol "f_tool_bar_max_label_size" 46270 . 46295)))
          ("cannot_suspend" . 
              ((symbol "globals" 47863 . 47870) (punctuation "." 47870 . 47871) (symbol "f_cannot_suspend" 47871 . 47887)))
          ("cursor_in_echo_area" . 
              ((symbol "globals" 48334 . 48341) (punctuation "." 48341 . 48342) (symbol "f_cursor_in_echo_area" 48342 . 48363)))
          ("delete_by_moving_to_trash" . 
              ((symbol "globals" 48798 . 48805) (punctuation "." 48805 . 48806) (symbol "f_delete_by_moving_to_trash" 48806 . 48833)))
          ("inverse_video" . 
              ((symbol "globals" 52085 . 52092) (punctuation "." 52092 . 52093) (symbol "f_inverse_video" 52093 . 52108)))
          ("no_redraw_on_reenter" . 
              ((symbol "globals" 53463 . 53470) (punctuation "." 53470 . 53471) (symbol "f_no_redraw_on_reenter" 53471 . 53493)))
          ("words_include_escapes" . 
              ((symbol "globals" 56047 . 56054) (punctuation "." 56054 . 56055) (symbol "f_words_include_escapes" 56055 . 56078)))
          ("x_gtk_use_window_move" . 
              ((symbol "globals" 56804 . 56811) (punctuation "." 56811 . 56812) (symbol "f_x_gtk_use_window_move" 56812 . 56835)))
          ("iQATOM" . ((number "1" 57475 . 57476)))
          ("iQCboolean" . ((number "16" 58341 . 58343)))
          ("iQCbutton" . ((number "19" 58489 . 58491)))
          ("iQCcipher_id" . ((number "25" 58848 . 58850)))
          ("iQCdata" . ((number "40" 59776 . 59778)))
          ("iQCdocumentation" . ((number "49" 60394 . 60396)))
          ("iQCdpi" . ((number "51" 60500 . 60502)))
          ("iQCencode_translation_table" . ((number "53" 60617 . 60619)))
          ("iQCfiltered" . ((number "60" 60996 . 60998)))
          ("iQCinherit" . ((number "75" 61816 . 61818)))
          ("iQClabel" . ((number "84" 62293 . 62295)))
          ("iQCloader" . ((number "87" 62449 . 62451)))
          ("iQCmac_algorithm_keysize" . ((number "92" 62735 . 62737)))
          ("iQCmatrix" . ((number "98" 63108 . 63110)))
          ("iQCprocess" . ((number "120" 64363 . 64366)))
          ("iQCstring" . ((number "155" 66312 . 66315)))
          ("iQCtitle" . ((number "162" 66673 . 66676)))
          ("iQCvariant" . ((number "174" 67357 . 67360)))
          ("iQCweakness" . ((number "180" 67704 . 67707)))
          ("iQCxwidget" . ((number "184" 67913 . 67916)))
          ("iQSECONDARY" . ((number "193" 68400 . 68403)))
          ("iQTIMESTAMP" . ((number "197" 68604 . 68607)))
          ("iQascii_0" . ((number "230" 70654 . 70657)))
          ("iQauto_raise" . ((number "238" 71157 . 71160)))
          ("iQautoload" . ((number "240" 71283 . 71286)))
          ("iQbool_vector" . ((number "255" 72176 . 72179)))
          ("iQbuffer_list_update_hook" . ((number "275" 73454 . 73457)))
          ("iQcatch_all_memory_full" . ((number "293" 74642 . 74645)))
          ("iQcategory_table_p" . ((number "296" 74837 . 74840)))
          ("iQchar_table" . ((number "312" 75817 . 75820)))
          ("iQclose_write" . ((number "324" 76514 . 76517)))
          ("iQcomma_at" . ((number "339" 77445 . 77448)))
          ("iQcomment_end_can_be_escaped" . ((number "344" 77773 . 77776)))
          ("iQcondition_variable" . ((number "349" 78133 . 78136)))
          ("iQdeferred_action_function" . ((number "390" 80699 . 80702)))
          ("iQdelete_window" . ((number "404" 81634 . 81637)))
          ("iQdisplay_type" . ((number "419" 82739 . 82742)))
          ("iQdomain_error" . ((number "421" 82887 . 82890)))
          ("iQemacs" . ((number "433" 83598 . 83601)))
          ("iQevaporate" . ((number "454" 84796 . 84799)))
          ("iQexpand_abbrev" . ((number "461" 85220 . 85223)))
          ("iQfont_parameter" . ((number "522" 89235 . 89238)))
          ("iQfont_spec" . ((number "524" 89356 . 89359)))
          ("iQforeign_selection" . ((number "530" 89744 . 89747)))
          ("iQfullwidth" . ((number "554" 91276 . 91279)))
          ("iQfundamental_mode" . ((number "560" 91669 . 91672)))
          ("iQget_mru_window" . ((number "568" 92221 . 92224)))
          ("iQgnutls_anon" . ((number "573" 92522 . 92525)))
          ("iQhandle_shift_selection" . ((number "591" 93757 . 93760)))
          ("iQhorizontal_handle" . ((number "610" 94902 . 94905)))
          ("iQinhibit_eval_during_redisplay" . ((number "630" 96146 . 96149)))
          ("iQinsert_file_contents" . ((number "643" 97211 . 97214)))
          ("iQintervals" . ((number "663" 98782 . 98785)))
          ("iQinvalid_arity" . ((number "664" 98842 . 98845)))
          ("iQjson_parse_error" . ((number "685" 100079 . 100082)))
          ("iQmenu_bar_lines" . ((number "767" 105047 . 105050)))
          ("iQmenu_item" . ((number "771" 105310 . 105313)))
          ("iQminibuffer_setup_hook" . ((number "784" 106158 . 106161)))
          ("iQmode_line_inactive" . ((number "792" 106705 . 106708)))
          ("iQmodule_runtimes" . ((number "806" 107682 . 107685)))
          ("iQno_other_frame" . ((number "836" 109467 . 109470)))
          ("iQns_appearance" . ((number "845" 109980 . 109983)))
          ("iQoverflow_error" . ((number "866" 111271 . 111274)))
          ("iQprint_escape_multibyte" . ((number "911" 113981 . 113984)))
          ("iQraw_text" . ((number "930" 115043 . 115046)))
          ("iQreleased_button" . ((number "949" 116290 . 116293)))
          ("iQremap" . ((number "950" 116348 . 116351)))
          ("iQsafe" . ((number "968" 117467 . 117470)))
          ("iQsans_serif" . ((number "971" 117625 . 117628)))
          ("iQsave_excursion" . ((number "972" 117687 . 117690)))
          ("iQsha224" . ((number "1006" 119857 . 119861)))
          ("iQstrings" . ((number "1041" 121885 . 121889)))
          ("iQtarget_idx" . ((number "1058" 122865 . 122869)))
          ("iQtb_size_cb" . ((number "1059" 122924 . 122928)))
          ("iQterminal" . ((number "1062" 123145 . 123149)))
          ("iQtest" . ((number "1065" 123332 . 123336)))
          ("iQtext_read_only" . ((number "1069" 123568 . 123572)))
          ("iQthin_space" . ((number "1071" 123684 . 123688)))
          ("iQtool_bar_lines" . ((number "1082" 124323 . 124327)))
          ("iQundecorated" . ((number "1123" 127047 . 127051)))
          ("iQutf_8_string_p" . ((number "1157" 129342 . 129346)))
          ("iQutime" . ((number "1159" 129459 . 129463)))
          ("iQwave" . ((number "1184" 131015 . 131019)))
          ("iQwholenump" . ((number "1188" 131220 . 131224)))
          ("iQwidth" . ((number "1190" 131334 . 131338)))
          ("iQwrite_region_annotate_functions" . ((number "1214" 133150 . 133154)))
          ("iQx_use_underline_position_properties" . ((number "1236" 134858 . 134862)))
          ("Vauto_composition_function" . 
              ((symbol "globals" 818 . 825) (punctuation "." 825 . 826) (symbol "f_Vauto_composition_function" 826 . 854)))
          ("Vauto_save_timeout" . 
              ((symbol "globals" 1459 . 1466) (punctuation "." 1466 . 1467) (symbol "f_Vauto_save_timeout" 1467 . 1487)))
          ("Vbefore_init_time" . 
              ((symbol "globals" 1781 . 1788) (punctuation "." 1788 . 1789) (symbol "f_Vbefore_init_time" 1789 . 1808)))
          ("Vcharset_map_path" . 
              ((symbol "globals" 3403 . 3410) (punctuation "." 3410 . 3411) (symbol "f_Vcharset_map_path" 3411 . 3430)))
          ("Vcoding_system_alist" . 
              ((symbol "globals" 3825 . 3832) (punctuation "." 3832 . 3833) (symbol "f_Vcoding_system_alist" 3833 . 3855)))
          ("Vcoding_system_for_read" . 
              ((symbol "globals" 3929 . 3936) (punctuation "." 3936 . 3937) (symbol "f_Vcoding_system_for_read" 3937 . 3962)))
          ("Vdbus_message_type_signal" . 
              ((symbol "globals" 6495 . 6502) (punctuation "." 6502 . 6503) (symbol "f_Vdbus_message_type_signal" 6503 . 6530)))
          ("Vdbus_runtime_version" . 
              ((symbol "globals" 6728 . 6735) (punctuation "." 6735 . 6736) (symbol "f_Vdbus_runtime_version" 6736 . 6759)))
          ("Vdefault_process_coding_system" . 
              ((symbol "globals" 7788 . 7795) (punctuation "." 7795 . 7796) (symbol "f_Vdefault_process_coding_system" 7796 . 7828)))
          ("Vecho_keystrokes" . 
              ((symbol "globals" 9612 . 9619) (punctuation "." 9619 . 9620) (symbol "f_Vecho_keystrokes" 9620 . 9638)))
          ("Vface_remapping_alist" . 
              ((symbol "globals" 11089 . 11096) (punctuation "." 11096 . 11097) (symbol "f_Vface_remapping_alist" 11097 . 11120)))
          ("Vfirst_change_hook" . 
              ((symbol "globals" 11722 . 11729) (punctuation "." 11729 . 11730) (symbol "f_Vfirst_change_hook" 11730 . 11750)))
          ("Vinstallation_directory" . 
              ((symbol "globals" 16201 . 16208) (punctuation "." 16208 . 16209) (symbol "f_Vinstallation_directory" 16209 . 16234)))
          ("Vminibuffer_completion_confirm" . 
              ((symbol "globals" 20570 . 20577) (punctuation "." 20577 . 20578) (symbol "f_Vminibuffer_completion_confirm" 20578 . 20610)))
          ("Vread_hide_char" . 
              ((symbol "globals" 27392 . 27399) (punctuation "." 27399 . 27400) (symbol "f_Vread_hide_char" 27400 . 27417)))
          ("Vredisplay_end_trigger_functions" . 
              ((symbol "globals" 28181 . 28188) (punctuation "." 28188 . 28189) (symbol "f_Vredisplay_end_trigger_functions" 28189 . 28223)))
          ("Vsaved_region_selection" . 
              ((symbol "globals" 28704 . 28711) (punctuation "." 28711 . 28712) (symbol "f_Vsaved_region_selection" 28712 . 28737)))
          ("Vsystem_configuration_features" . 
              ((symbol "globals" 31388 . 31395) (punctuation "." 31395 . 31396) (symbol "f_Vsystem_configuration_features" 31396 . 31428)))
          ("Vsystem_time_locale" . 
              ((symbol "globals" 31800 . 31807) (punctuation "." 31807 . 31808) (symbol "f_Vsystem_time_locale" 31808 . 31829)))
          ("Vtimer_idle_list" . 
              ((symbol "globals" 32911 . 32918) (punctuation "." 32918 . 32919) (symbol "f_Vtimer_idle_list" 32919 . 32937)))
          ("Vtimer_list" . 
              ((symbol "globals" 32987 . 32994) (punctuation "." 32994 . 32995) (symbol "f_Vtimer_list" 32995 . 33008)))
          ("Vtruncate_partial_width_windows" . 
              ((symbol "globals" 34129 . 34136) (punctuation "." 34136 . 34137) (symbol "f_Vtruncate_partial_width_windows" 34137 . 34170)))
          ("Vx_keysym_table" . 
              ((symbol "globals" 38312 . 38319) (punctuation "." 38319 . 38320) (symbol "f_Vx_keysym_table" 38320 . 38337)))
          ("Vx_no_window_manager" . 
              ((symbol "globals" 38800 . 38807) (punctuation "." 38807 . 38808) (symbol "f_Vx_no_window_manager" 38808 . 38830)))
          ("Vx_select_enable_clipboard_manager" . 
              ((symbol "globals" 39428 . 39435) (punctuation "." 39435 . 39436) (symbol "f_Vx_select_enable_clipboard_manager" 39436 . 39472)))
          ("Vxwidget_list" . 
              ((symbol "globals" 41596 . 41603) (punctuation "." 41603 . 41604) (symbol "f_Vxwidget_list" 41604 . 41619)))
          ("frame_inhibit_implied_resize" . 
              ((symbol "globals" 42442 . 42449) (punctuation "." 42449 . 42450) (symbol "f_frame_inhibit_implied_resize" 42450 . 42480)))
          ("next_screen_context_lines" . 
              ((symbol "globals" 44901 . 44908) (punctuation "." 44908 . 44909) (symbol "f_next_screen_context_lines" 44909 . 44936)))
          ("attempt_orderly_shutdown_on_fatal_signal" . 
              ((symbol "globals" 47173 . 47180) (punctuation "." 47180 . 47181) (symbol "f_attempt_orderly_shutdown_on_fatal_signal" 47181 . 47223)))
          ("auto_save_no_message" . 
              ((symbol "globals" 47526 . 47533) (punctuation "." 47533 . 47534) (symbol "f_auto_save_no_message" 47534 . 47556)))
          ("cross_disabled_images" . 
              ((symbol "globals" 48244 . 48251) (punctuation "." 48251 . 48252) (symbol "f_cross_disabled_images" 48252 . 48275)))
          ("debugger_stack_frame_as_list" . 
              ((symbol "globals" 48689 . 48696) (punctuation "." 48696 . 48697) (symbol "f_debugger_stack_frame_as_list" 48697 . 48727)))
          ("inhibit_free_realized_faces" . 
              ((symbol "globals" 50898 . 50905) (punctuation "." 50905 . 50906) (symbol "f_inhibit_free_realized_faces" 50906 . 50935)))
          ("inhibit_menubar_update" . 
              ((symbol "globals" 51218 . 51225) (punctuation "." 51225 . 51226) (symbol "f_inhibit_menubar_update" 51226 . 51250)))
          ("load_convert_to_unibyte" . 
              ((symbol "globals" 52175 . 52182) (punctuation "." 52182 . 52183) (symbol "f_load_convert_to_unibyte" 52183 . 52208)))
          ("load_in_progress" . 
              ((symbol "globals" 52461 . 52468) (punctuation "." 52468 . 52469) (symbol "f_load_in_progress" 52469 . 52487)))
          ("make_cursor_line_fully_visible_p" . 
              ((symbol "globals" 52654 . 52661) (punctuation "." 52661 . 52662) (symbol "f_make_cursor_line_fully_visible_p" 52662 . 52696)))
          ("x_gtk_file_dialog_help_text" . 
              ((symbol "globals" 56392 . 56399) (punctuation "." 56399 . 56400) (symbol "f_x_gtk_file_dialog_help_text" 56400 . 56429)))
          ("iQCcipher_ivsize" . ((number "26" 58909 . 58911)))
          ("iQCcrlfiles" . ((number "38" 59678 . 59680)))
          ("iQCdebug_on_exit" . ((number "41" 59832 . 59834)))
          ("iQCdecode_translation_table" . ((number "42" 59908 . 59910)))
          ("iQCeval" . ((number "54" 60684 . 60686)))
          ("iQCmac_algorithm_id" . ((number "91" 62659 . 62661)))
          ("iQCmax_height" . ((number "99" 63163 . 63165)))
          ("iQCnowait" . ((number "106" 63554 . 63557)))
          ("iQCpt_height" . ((number "122" 64479 . 64482)))
          ("iQCreverse_video" . ((number "133" 65135 . 65138)))
          ("iQCstyle" . ((number "157" 66415 . 66418)))
          ("iQCsummary" . ((number "158" 66467 . 66470)))
          ("iQDELETE" . ((number "185" 67965 . 67968)))
          ("iQEmacsFrameResize" . ((number "186" 68025 . 68028)))
          ("iQINCR" . ((number "187" 68083 . 68086)))
          ("iQTARGETS" . ((number "195" 68504 . 68507)))
          ("iQ_EMACS_TMP_" . ((number "199" 68722 . 68725)))
          ("iQadjust_frame_size_1" . ((number "208" 69308 . 69311)))
          ("iQafter_insert_file_set_coding" . ((number "214" 69783 . 69786)))
          ("iQafter_string" . ((number "215" 69861 . 69864)))
          ("iQauto_composed" . ((number "234" 70898 . 70901)))
          ("iQauto_hscroll_mode" . ((number "236" 71034 . 71037)))
          ("iQbool_vector_p" . ((number "256" 72238 . 72241)))
          ("iQbottom_left_corner" . ((number "266" 72839 . 72842)))
          ("iQbuffer_read_only" . ((number "280" 73819 . 73822)))
          ("iQburied_buffer_list" . ((number "283" 73995 . 73998)))
          ("iQcase_fold_search" . ((number "290" 74447 . 74450)))
          ("iQchar_table_extra_slots" . ((number "313" 75887 . 75890)))
          ("iQchar_table_p" . ((number "314" 75959 . 75962)))
          ("iQcopy_directory" . ((number "357" 78617 . 78620)))
          ("iQcreate" . ((number "360" 78779 . 78782)))
          ("iQcursor" . ((number "367" 79185 . 79188)))
          ("iQdebug" . ((number "384" 80272 . 80275)))
          ("iQdefalias_fset_function" . ((number "387" 80491 . 80494)))
          ("iQdelayed_warnings_hook" . ((number "394" 80938 . 80941)))
          ("iQdelete" . ((number "395" 81003 . 81006)))
          ("iQdo_after_load_evaluation" . ((number "420" 82813 . 82816)))
          ("iQenable_recursive_minibuffers" . ((number "438" 83891 . 83894)))
          ("iQend_of_buffer" . ((number "439" 83970 . 83973)))
          ("iQeql" . ((number "444" 84244 . 84247)))
          ("iQescape_glyph" . ((number "449" 84527 . 84530)))
          ("iQexpand_file_name" . ((number "462" 85287 . 85290)))
          ("iQexplicit_name" . ((number "464" 85408 . 85411)))
          ("iQextra_light" . ((number "469" 85760 . 85763)))
          ("iQfile_error" . ((number "485" 86797 . 86800)))
          ("iQfile_name_completion" . ((number "493" 87385 . 87388)))
          ("iQfile_truename" . ((number "506" 88332 . 88335)))
          ("iQfont_object" . ((number "521" 89172 . 89175)))
          ("iQframe_edges" . ((number "536" 90112 . 90115)))
          ("iQframe_monitor_workarea" . ((number "539" 90323 . 90326)))
          ("iQgnutls_e_again" . ((number "575" 92645 . 92648)))
          ("iQgnutls_x509pki" . ((number "582" 93233 . 93236)))
          ("iQiconify_frame" . ((number "620" 95490 . 95493)))
          ("iQinsert_in_front_hooks" . ((number "644" 97290 . 97293)))
          ("iQinterrupt_process_functions" . ((number "661" 98648 . 98651)))
          ("iQinvalid_regexp" . ((number "667" 99053 . 99056)))
          ("iQjson_serialize" . ((number "687" 100219 . 100222)))
          ("iQlaplace" . ((number "707" 101494 . 101497)))
          ("iQload_file_name" . ((number "739" 103363 . 103366)))
          ("iQm" . ((number "746" 103822 . 103825)))
          ("iQmin_height" . ((number "774" 105467 . 105470)))
          ("iQminibuffer_exit" . ((number "780" 105860 . 105863)))
          ("iQmode_line_format" . ((number "791" 106633 . 106636)))
          ("iQmodify" . ((number "797" 107027 . 107030)))
          ("iQmodule_open_failed" . ((number "804" 107541 . 107544)))
          ("iQmonospace" . ((number "808" 107790 . 107793)))
          ("iQmove_frame" . ((number "821" 108627 . 108630)))
          ("iQobject" . ((number "851" 110399 . 110402)))
          ("iQoblique" . ((number "852" 110450 . 110453)))
          ("iQouter_size" . ((number "864" 111141 . 111144)))
          ("iQoverlay_arrow" . ((number "868" 111388 . 111391)))
          ("iQoverriding_terminal_local_map" . ((number "875" 111922 . 111925)))
          ("iQoverwrite_mode_binary" . ((number "877" 112076 . 112079)))
          ("iQpost_gc_hook" . ((number "904" 113545 . 113548)))
          ("iQpost_self_insert_hook" . ((number "905" 113616 . 113619)))
          ("iQrange_error" . ((number "928" 114938 . 114941)))
          ("iQreal" . ((number "935" 115311 . 115314)))
          ("iQreverse_landscape" . ((number "954" 116608 . 116611)))
          ("iQright" . ((number "956" 116738 . 116741)))
          ("iQrss" . ((number "965" 117304 . 117307)))
          ("iQscan_error" . ((number "974" 117811 . 117814)))
          ("iQsha384" . ((number "1008" 119959 . 119963)))
          ("iQspecial_uppercase" . ((number "1023" 120839 . 120843)))
          ("iQstop" . ((number "1034" 121449 . 121453)))
          ("iQstring_bytes" . ((number "1037" 121610 . 121614)))
          ("iQtext_image_horiz" . ((number "1067" 123438 . 123442)))
          ("iQtop_level" . ((number "1091" 124871 . 124875)))
          ("iQtpgid" . ((number "1095" 125109 . 125113)))
          ("iQtranslation_table" . ((number "1097" 125247 . 125251)))
          ("iQultra_bold" . ((number "1120" 126877 . 126881)))
          ("iQunbound" . ((number "1121" 126933 . 126937)))
          ("iQundo_auto_amalgamate" . ((number "1133" 127894 . 127898)))
          ("iQunevalled" . ((number "1134" 127962 . 127966)))
          ("iQunhandled_file_name_directory" . ((number "1135" 128039 . 128043)))
          ("iQup" . ((number "1143" 128496 . 128500)))
          ("iQuser_position" . ((number "1148" 128816 . 128820)))
          ("iQvector" . ((number "1162" 129641 . 129645)))
          ("iQwindow__resize_root_window" . ((number "1194" 131597 . 131601)))
          ("iQx_check_fullscreen" . ((number "1219" 133526 . 133530)))
          ("iQx_set_menu_bar_lines" . ((number "1231" 134440 . 134444)))
          ("iQx_set_window_size_1" . ((number "1232" 134518 . 134522)))
          ("iQxpm" . ((number "1244" 135486 . 135490)))
          ("Vafter_change_functions" . 
              ((symbol "globals" 170 . 177) (punctuation "." 177 . 178) (symbol "f_Vafter_change_functions" 178 . 203)))
          ("Vauto_save_visited_file_name" . 
              ((symbol "globals" 1571 . 1578) (punctuation "." 1578 . 1579) (symbol "f_Vauto_save_visited_file_name" 1579 . 1609)))
          ("Vbuffer_access_fontify_functions" . 
              ((symbol "globals" 2132 . 2139) (punctuation "." 2139 . 2140) (symbol "f_Vbuffer_access_fontify_functions" 2140 . 2174)))
          ("Vbuild_files" . 
              ((symbol "globals" 2336 . 2343) (punctuation "." 2343 . 2344) (symbol "f_Vbuild_files" 2344 . 2358)))
          ("Vbyte_code_meter" . 
              ((symbol "globals" 2510 . 2517) (punctuation "." 2517 . 2518) (symbol "f_Vbyte_code_meter" 2518 . 2536)))
          ("Vcurrent_prefix_arg" . 
              ((symbol "globals" 5642 . 5649) (punctuation "." 5649 . 5650) (symbol "f_Vcurrent_prefix_arg" 5650 . 5671)))
          ("Vdbus_compiled_version" . 
              ((symbol "globals" 5826 . 5833) (punctuation "." 5833 . 5834) (symbol "f_Vdbus_compiled_version" 5834 . 5858)))
          ("Vdeferred_action_list" . 
              ((symbol "globals" 8121 . 8128) (punctuation "." 8128 . 8129) (symbol "f_Vdeferred_action_list" 8129 . 8152)))
          ("Vfont_ccl_encoder_alist" . 
              ((symbol "globals" 11922 . 11929) (punctuation "." 11929 . 11930) (symbol "f_Vfont_ccl_encoder_alist" 11930 . 11955)))
          ("Vglyph_table" . 
              ((symbol "globals" 13542 . 13549) (punctuation "." 13549 . 13550) (symbol "f_Vglyph_table" 13550 . 13564)))
          ("Vicon_title_format" . 
              ((symbol "globals" 14402 . 14409) (punctuation "." 14409 . 14410) (symbol "f_Vicon_title_format" 14410 . 14430)))
          ("Vkey_translation_map" . 
              ((symbol "globals" 17105 . 17112) (punctuation "." 17112 . 17113) (symbol "f_Vkey_translation_map" 17113 . 17135)))
          ("Vkill_buffer_query_functions" . 
              ((symbol "globals" 17219 . 17226) (punctuation "." 17226 . 17227) (symbol "f_Vkill_buffer_query_functions" 17227 . 17257)))
          ("Vlast_code_conversion_error" . 
              ((symbol "globals" 17425 . 17432) (punctuation "." 17432 . 17433) (symbol "f_Vlast_code_conversion_error" 17433 . 17462)))
          ("Vminibuffer_local_map" . 
              ((symbol "globals" 21382 . 21389) (punctuation "." 21389 . 21390) (symbol "f_Vminibuffer_local_map" 21390 . 21413)))
          ("Vminibuffer_prompt_properties" . 
              ((symbol "globals" 21728 . 21735) (punctuation "." 21735 . 21736) (symbol "f_Vminibuffer_prompt_properties" 21736 . 21767)))
          ("Voverlay_arrow_string" . 
              ((symbol "globals" 24202 . 24209) (punctuation "." 24209 . 24210) (symbol "f_Voverlay_arrow_string" 24210 . 24233)))
          ("Voverriding_local_map" . 
              ((symbol "globals" 24425 . 24432) (punctuation "." 24432 . 24433) (symbol "f_Voverriding_local_map" 24433 . 24456)))
          ("Vprint_gensym" . 
              ((symbol "globals" 26088 . 26095) (punctuation "." 26095 . 26096) (symbol "f_Vprint_gensym" 26096 . 26111)))
          ("Vread_symbol_positions_list" . 
              ((symbol "globals" 27499 . 27506) (punctuation "." 27506 . 27507) (symbol "f_Vread_symbol_positions_list" 27507 . 27536)))
          ("Vshared_game_score_directory" . 
              ((symbol "globals" 29901 . 29908) (punctuation "." 29908 . 29909) (symbol "f_Vshared_game_score_directory" 29909 . 29939)))
          ("Vshell_file_name" . 
              ((symbol "globals" 29999 . 30006) (punctuation "." 30006 . 30007) (symbol "f_Vshell_file_name" 30007 . 30025)))
          ("Vthis_command" . 
              ((symbol "globals" 32498 . 32505) (punctuation "." 32505 . 32506) (symbol "f_Vthis_command" 32506 . 32521)))
          ("Vthrow_on_input" . 
              ((symbol "globals" 32826 . 32833) (punctuation "." 32833 . 32834) (symbol "f_Vthrow_on_input" 32834 . 32851)))
          ("Vtty_defined_color_alist" . 
              ((symbol "globals" 34246 . 34253) (punctuation "." 34253 . 34254) (symbol "f_Vtty_defined_color_alist" 34254 . 34280)))
          ("Vvertical_centering_font_regexp" . 
              ((symbol "globals" 35629 . 35636) (punctuation "." 35636 . 35637) (symbol "f_Vvertical_centering_font_regexp" 35637 . 35670)))
          ("Vwindow_point_insertion_type" . 
              ((symbol "globals" 36599 . 36606) (punctuation "." 36606 . 36607) (symbol "f_Vwindow_point_insertion_type" 36607 . 36637)))
          ("Vwrap_prefix" . 
              ((symbol "globals" 37263 . 37270) (punctuation "." 37270 . 37271) (symbol "f_Vwrap_prefix" 37271 . 37285)))
          ("Vwrite_region_annotations_so_far" . 
              ((symbol "globals" 37511 . 37518) (punctuation "." 37518 . 37519) (symbol "f_Vwrite_region_annotations_so_far" 37519 . 37553)))
          ("Vx_mode_pointer_shape" . 
              ((symbol "globals" 38701 . 38708) (punctuation "." 38708 . 38709) (symbol "f_Vx_mode_pointer_shape" 38709 . 38732)))
          ("Vx_toolkit_scroll_bars" . 
              ((symbol "globals" 40058 . 40065) (punctuation "." 40065 . 40066) (symbol "f_Vx_toolkit_scroll_bars" 40066 . 40090)))
          ("Vx_window_left_edge_shape" . 
              ((symbol "globals" 40814 . 40821) (punctuation "." 40821 . 40822) (symbol "f_Vx_window_left_edge_shape" 40822 . 40849)))
          ("debug_end_pos" . 
              ((symbol "globals" 43416 . 43423) (punctuation "." 43423 . 43424) (symbol "f_debug_end_pos" 43424 . 43439)))
          ("gc_cons_threshold" . 
              ((symbol "globals" 43967 . 43974) (punctuation "." 43974 . 43975) (symbol "f_gc_cons_threshold" 43975 . 43994)))
          ("profiler_max_stack_depth" . 
              ((symbol "globals" 45445 . 45452) (punctuation "." 45452 . 45453) (symbol "f_profiler_max_stack_depth" 45453 . 45479)))
          ("completion_ignore_case" . 
              ((symbol "globals" 48070 . 48077) (punctuation "." 48077 . 48078) (symbol "f_completion_ignore_case" 48078 . 48102)))
          ("force_new_style_backquotes" . 
              ((symbol "globals" 49724 . 49731) (punctuation "." 49731 . 49732) (symbol "f_force_new_style_backquotes" 49732 . 49760)))
          ("frame_resize_pixelwise" . 
              ((symbol "globals" 49825 . 49832) (punctuation "." 49832 . 49833) (symbol "f_frame_resize_pixelwise" 49833 . 49857)))
          ("inhibit_load_charset_map" . 
              ((symbol "globals" 51119 . 51126) (punctuation "." 51126 . 51127) (symbol "f_inhibit_load_charset_map" 51127 . 51153)))
          ("inhibit_try_window_reusing" . 
              ((symbol "globals" 51914 . 51921) (punctuation "." 51921 . 51922) (symbol "f_inhibit_try_window_reusing" 51922 . 51950)))
          ("open_paren_in_column_0_is_defun_start" . 
              ((symbol "globals" 53664 . 53671) (punctuation "." 53671 . 53672) (symbol "f_open_paren_in_column_0_is_defun_start" 53672 . 53711)))
          ("print_escape_nonascii" . 
              ((symbol "globals" 54313 . 54320) (punctuation "." 54320 . 54321) (symbol "f_print_escape_nonascii" 54321 . 54344)))
          ("system_uses_terminfo" . 
              ((symbol "globals" 54926 . 54933) (punctuation "." 54933 . 54934) (symbol "f_system_uses_terminfo" 54934 . 54956)))
          ("iQCLIPBOARD" . ((number "3" 57584 . 57585)))
          ("iQCbytesize" . ((number "21" 58589 . 58591)))
          ("iQCcommand" . ((number "34" 59417 . 59419)))
          ("iQCenable" . ((number "52" 60548 . 60550)))
          ("iQCfamily" . ((number "57" 60845 . 60847)))
          ("iQCfile" . ((number "58" 60894 . 60896)))
          ("iQClog" . ((number "89" 62546 . 62548)))
          ("iQCmac_algorithm_noncesize" . ((number "94" 62897 . 62899)))
          ("iQCobject_type" . ((number "110" 63783 . 63786)))
          ("iQCscale" . ((number "137" 65351 . 65354)))
          ("iQCsignature" . ((number "145" 65777 . 65780)))
          ("iQCstipple" . ((number "151" 66087 . 66090)))
          ("iQCstopbits" . ((number "153" 66190 . 66193)))
          ("iQCtls_parameters" . ((number "163" 66732 . 66735)))
          ("iQPRIMARY" . ((number "191" 68284 . 68287)))
          ("iQabove_handle" . ((number "201" 68831 . 68834)))
          ("iQadjust_frame_size_2" . ((number "209" 69384 . 69387)))
          ("iQalpha" . ((number "218" 70022 . 70025)))
          ("iQassq_delete_all" . ((number "232" 70782 . 70785)))
          ("iQauto_lower" . ((number "237" 71099 . 71102)))
          ("iQbackground_color" . ((number "241" 71345 . 71348)))
          ("iQbackquote" . ((number "243" 71476 . 71479)))
          ("iQbottom_edge" . ((number "265" 72772 . 72775)))
          ("iQbuffer" . ((number "271" 73139 . 73142)))
          ("iQcdr" . ((number "302" 75170 . 75173)))
          ("iQchar_code_property_table" . ((number "308" 75537 . 75540)))
          ("iQchoice" . ((number "318" 76179 . 76182)))
          ("iQclose_nowrite" . ((number "323" 76452 . 76455)))
          ("iQcoding_system_define_form" . ((number "332" 77004 . 77007)))
          ("iQcommand_execute" . ((number "342" 77640 . 77643)))
          ("iQconses" . ((number "354" 78449 . 78452)))
          ("iQconsp" . ((number "355" 78498 . 78501)))
          ("iQcount" . ((number "359" 78730 . 78733)))
          ("iQcurrent_line" . ((number "365" 79057 . 79060)))
          ("iQcustom_variable_history" . ((number "371" 79450 . 79453)))
          ("iQdeactivate_mark" . ((number "383" 80214 . 80217)))
          ("iQdefault" . ((number "388" 80558 . 80561)))
          ("iQdefvaralias" . ((number "392" 80820 . 80823)))
          ("iQdelete_terminal_functions" . ((number "403" 81558 . 81561)))
          ("iQdisable_eval" . ((number "409" 81989 . 81992)))
          ("iQdisplay_line_numbers_disable" . ((number "414" 82317 . 82320)))
          ("iQdown" . ((number "424" 83045 . 83048)))
          ("iQdragging" . ((number "427" 83233 . 83236)))
          ("iQequal" . ((number "445" 84290 . 84293)))
          ("iQevent_kind" . ((number "456" 84899 . 84902)))
          ("iQevent_symbol_elements" . ((number "458" 85056 . 85059)))
          ("iQextra_bold" . ((number "468" 85701 . 85704)))
          ("iQfile_readable_p" . ((number "501" 87986 . 87989)))
          ("iQfixnump" . ((number "510" 88586 . 88589)))
          ("iQforeground_color" . ((number "529" 89673 . 89676)))
          ("iQformat_decode" . ((number "533" 89948 . 89951)))
          ("iQget_buffer_window_list" . ((number "564" 91929 . 91932)))
          ("iQgif" . ((number "569" 92276 . 92279)))
          ("iQglib" . ((number "570" 92321 . 92324)))
          ("iQgnutls_type_cipher" . ((number "579" 92981 . 92984)))
          ("iQgnutls_type_digest_algorithm" . ((number "580" 93065 . 93068)))
          ("iQgrave" . ((number "584" 93342 . 93345)))
          ("iQgrow_only" . ((number "586" 93442 . 93445)))
          ("iQhandle_select_window" . ((number "590" 93677 . 93680)))
          ("iQhash_table_test" . ((number "595" 94028 . 94031)))
          ("iQinhibit_free_realized_faces" . ((number "632" 96332 . 96335)))
          ("iQinsert_behind_hooks" . ((number "642" 97134 . 97137)))
          ("iQinteractive" . ((number "650" 97676 . 97679)))
          ("iQinternal_border_width" . ((number "655" 98050 . 98053)))
          ("iQiv_auto" . ((number "678" 99650 . 99653)))
          ("iQkill_emacs" . ((number "700" 101081 . 101084)))
          ("iQlexical_binding" . ((number "722" 102362 . 102365)))
          ("iQlist" . ((number "734" 103113 . 103116)))
          ("iQlocal" . ((number "742" 103572 . 103575)))
          ("iQmake_directory_internal" . ((number "751" 104092 . 104095)))
          ("iQmenu_enable" . ((number "770" 105252 . 105255)))
          ("iQmetadata" . ((number "773" 105411 . 105414)))
          ("iQminibuffer_completion_table" . ((number "778" 105706 . 105709)))
          ("iQmouse_click" . ((number "812" 108022 . 108025)))
          ("iQnative_edges" . ((number "828" 108999 . 109002)))
          ("iQnone" . ((number "842" 109833 . 109836)))
          ("iQoverriding_plist_environment" . ((number "874" 111827 . 111830)))
          ("iQpost_command_hook" . ((number "903" 113478 . 113481)))
          ("iQprogn" . ((number "917" 114372 . 114375)))
          ("iQpurecopy" . ((number "922" 114633 . 114636)))
          ("iQrect" . ((number "941" 115687 . 115690)))
          ("iQredisplay_dont_pause" . ((number "942" 115749 . 115752)))
          ("iQregion_extract_function" . ((number "945" 116030 . 116033)))
          ("iQrehash_size" . ((number "946" 116102 . 116105)))
          ("iQright_divider" . ((number "957" 116794 . 116797)))
          ("iQrun" . ((number "966" 117348 . 117351)))
          ("iQset_file_modes" . ((number "997" 119241 . 119244)))
          ("iQsize" . ((number "1014" 120311 . 120315)))
          ("iQspecial_lowercase" . ((number "1021" 120693 . 120697)))
          ("iQstring_lessp" . ((number "1038" 121673 . 121677)))
          ("iQsubfeatures" . ((number "1042" 121942 . 121946)))
          ("iQsubstitute_env_in_file_name" . ((number "1045" 122115 . 122119)))
          ("iQsw" . ((number "1049" 122362 . 122366)))
          ("iQtemp_buffer_setup_hook" . ((number "1060" 122995 . 122999)))
          ("iQtext" . ((number "1066" 123379 . 123383)))
          ("iQtop_only" . ((number "1093" 124986 . 124990)))
          ("iQtrapping_constant" . ((number "1099" 125399 . 125403)))
          ("iQtty" . ((number "1102" 125568 . 125572)))
          ("iQtty_color_alist" . ((number "1103" 125625 . 125629)))
          ("iQtty_menu_mouse_movement" . ((number "1110" 126134 . 126138)))
          ("iQtty_menu_next_menu" . ((number "1113" 126374 . 126378)))
          ("iQtty_type" . ((number "1119" 126820 . 126824)))
          ("iQundo_auto__last_boundary_cause" . ((number "1129" 127494 . 127498)))
          ("iQundo_auto__undoable_change" . ((number "1131" 127700 . 127704)))
          ("iQutf_8_unix" . ((number "1158" 129405 . 129409)))
          ("iQvector_slots" . ((number "1164" 129781 . 129785)))
          ("iQvoid_variable" . ((number "1178" 130702 . 130706)))
          ("iQvsize" . ((number "1179" 130759 . 130763)))
          ("iQwindow_configuration_p" . ((number "1199" 132076 . 132080)))
          ("iQwindow_divider" . ((number "1201" 132226 . 132230)))
          ("iQwindow_valid_p" . ((number "1209" 132834 . 132838)))
          ("iQx_set_window_size_2" . ((number "1233" 134595 . 134599)))
          ("iQxwidget_event" . ((number "1246" 135594 . 135598)))
          ("iQzero_width" . ((number "1251" 135908 . 135912)))
          ("Valternate_fontname_alist" . 
              ((symbol "globals" 703 . 710) (punctuation "." 710 . 711) (symbol "f_Valternate_fontname_alist" 711 . 738)))
          ("Vcommand_line_args" . 
              ((symbol "globals" 4644 . 4651) (punctuation "." 4651 . 4652) (symbol "f_Vcommand_line_args" 4652 . 4672)))
          ("Vdebug_ignored_errors" . 
              ((symbol "globals" 6915 . 6922) (punctuation "." 6922 . 6923) (symbol "f_Vdebug_ignored_errors" 6923 . 6946)))
          ("Vfeatures" . 
              ((symbol "globals" 11166 . 11173) (punctuation "." 11173 . 11174) (symbol "f_Vfeatures" 11174 . 11185)))
          ("Vgc_cons_percentage" . 
              ((symbol "globals" 13161 . 13168) (punctuation "." 13168 . 13169) (symbol "f_Vgc_cons_percentage" 13169 . 13190)))
          ("Vhelp_event_list" . 
              ((symbol "globals" 13894 . 13901) (punctuation "." 13901 . 13902) (symbol "f_Vhelp_event_list" 13902 . 13920)))
          ("Vinvocation_name" . 
              ((symbol "globals" 16892 . 16899) (punctuation "." 16899 . 16900) (symbol "f_Vinvocation_name" 16900 . 16918)))
          ("Vload_source_file_function" . 
              ((symbol "globals" 18554 . 18561) (punctuation "." 18561 . 18562) (symbol "f_Vload_source_file_function" 18562 . 18590)))
          ("Vload_suffixes" . 
              ((symbol "globals" 18646 . 18653) (punctuation "." 18653 . 18654) (symbol "f_Vload_suffixes" 18654 . 18670)))
          ("Vmax_mini_window_height" . 
              ((symbol "globals" 19472 . 19479) (punctuation "." 19479 . 19480) (symbol "f_Vmax_mini_window_height" 19480 . 19505)))
          ("Vmenu_updating_frame" . 
              ((symbol "globals" 20128 . 20135) (punctuation "." 20135 . 20136) (symbol "f_Vmenu_updating_frame" 20136 . 20158)))
          ("Vminibuffer_message_timeout" . 
              ((symbol "globals" 21605 . 21612) (punctuation "." 21612 . 21613) (symbol "f_Vminibuffer_message_timeout" 21613 . 21642)))
          ("Vmotif_version_string" . 
              ((symbol "globals" 22746 . 22753) (punctuation "." 22753 . 22754) (symbol "f_Vmotif_version_string" 22754 . 22777)))
          ("Vsuspend_tty_functions" . 
              ((symbol "globals" 31167 . 31174) (punctuation "." 31174 . 31175) (symbol "f_Vsuspend_tty_functions" 31175 . 31199)))
          ("Vsystem_configuration_options" . 
              ((symbol "globals" 31514 . 31521) (punctuation "." 31521 . 31522) (symbol "f_Vsystem_configuration_options" 31522 . 31553)))
          ("Vthis_original_command" . 
              ((symbol "globals" 32736 . 32743) (punctuation "." 32743 . 32744) (symbol "f_Vthis_original_command" 32744 . 32768)))
          ("Vtool_bar_border" . 
              ((symbol "globals" 33068 . 33075) (punctuation "." 33075 . 33076) (symbol "f_Vtool_bar_border" 33076 . 33094)))
          ("Vwrite_region_annotate_functions" . 
              ((symbol "globals" 37377 . 37384) (punctuation "." 37384 . 37385) (symbol "f_Vwrite_region_annotate_functions" 37385 . 37419)))
          ("Vx_bitmap_file_path" . 
              ((symbol "globals" 37848 . 37855) (punctuation "." 37855 . 37856) (symbol "f_Vx_bitmap_file_path" 37856 . 37877)))
          ("Vx_hourglass_pointer_shape" . 
              ((symbol "globals" 38135 . 38142) (punctuation "." 38142 . 38143) (symbol "f_Vx_hourglass_pointer_shape" 38143 . 38171)))
          ("Vx_resource_class" . 
              ((symbol "globals" 39219 . 39226) (punctuation "." 39226 . 39227) (symbol "f_Vx_resource_class" 39227 . 39246)))
          ("Vx_session_previous_id" . 
              ((symbol "globals" 39871 . 39878) (punctuation "." 39878 . 39879) (symbol "f_Vx_session_previous_id" 39879 . 39903)))
          ("automatic_hscrolling" . 
              ((symbol "globals" 41779 . 41786) (punctuation "." 41786 . 41787) (symbol "f_automatic_hscrolling" 41787 . 41809)))
          ("baud_rate" . 
              ((symbol "globals" 43258 . 43265) (punctuation "." 43265 . 43266) (symbol "f_baud_rate" 43266 . 43277)))
          ("hscroll_margin" . 
              ((symbol "globals" 44213 . 44220) (punctuation "." 44220 . 44221) (symbol "f_hscroll_margin" 44221 . 44237)))
          ("max_lisp_eval_depth" . 
              ((symbol "globals" 44619 . 44626) (punctuation "." 44626 . 44627) (symbol "f_max_lisp_eval_depth" 44627 . 44648)))
          ("misc_objects_consed" . 
              ((symbol "globals" 44796 . 44803) (punctuation "." 44803 . 44804) (symbol "f_misc_objects_consed" 44804 . 44825)))
          ("scroll_margin" . 
              ((symbol "globals" 45711 . 45718) (punctuation "." 45718 . 45719) (symbol "f_scroll_margin" 45719 . 45734)))
          ("x_selection_timeout" . 
              ((symbol "globals" 46713 . 46720) (punctuation "." 46720 . 46721) (symbol "f_x_selection_timeout" 46721 . 46742)))
          ("Vfast_but_imprecise_scrolling" . 
              ((symbol "globals" 46933 . 46940) (punctuation "." 46940 . 46941) (symbol "f_Vfast_but_imprecise_scrolling" 46941 . 46972)))
          ("byte_metering_on" . 
              ((symbol "globals" 47788 . 47795) (punctuation "." 47795 . 47796) (symbol "f_byte_metering_on" 47796 . 47814)))
          ("mode_line_in_non_selected_windows" . 
              ((symbol "globals" 53174 . 53181) (punctuation "." 53181 . 53182) (symbol "f_mode_line_in_non_selected_windows" 53182 . 53217)))
          ("read_buffer_completion_ignore_case" . 
              ((symbol "globals" 54500 . 54507) (punctuation "." 54507 . 54508) (symbol "f_read_buffer_completion_ignore_case" 54508 . 54544)))
          ("scroll_bar_adjust_thumb_portion_p" . 
              ((symbol "globals" 54822 . 54829) (punctuation "." 54829 . 54830) (symbol "f_scroll_bar_adjust_thumb_portion_p" 54830 . 54865)))
          ("text_quoting_flag" . 
              ((symbol "globals" 55011 . 55018) (punctuation "." 55018 . 55019) (symbol "f_text_quoting_flag" 55019 . 55038)))
          ("window_resize_pixelwise" . 
              ((symbol "globals" 55951 . 55958) (punctuation "." 55958 . 55959) (symbol "f_window_resize_pixelwise" 55959 . 55984)))
          ("iQCbuffer" . ((number "18" 58438 . 58440)))
          ("iQCdouble" . ((number "50" 60452 . 60454)))
          ("iQCfalse" . ((number "55" 60732 . 60734)))
          ("iQChost" . ((number "70" 61546 . 61548)))
          ("iQCmask" . ((number "97" 63059 . 63061)))
          ("iQCmax_width" . ((number "100" 63221 . 63224)))
          ("iQCoverline" . ((number "112" 63888 . 63891)))
          ("iQCpt_width" . ((number "123" 64536 . 64539)))
          ("iQCrelief" . ((number "131" 65024 . 65027)))
          ("iQCsentinel" . ((number "139" 65456 . 65459)))
          ("iQCspeed" . ((number "149" 65983 . 65986)))
          ("iQCsystem" . ((number "159" 66520 . 66523)))
          ("iQCtest" . ((number "160" 66570 . 66573)))
          ("iQCtimeout" . ((number "161" 66621 . 66624)))
          ("iQCtype" . ((number "166" 66902 . 66905)))
          ("iQabove" . ((number "200" 68776 . 68779)))
          ("iQadjust_frame_size_3" . ((number "210" 69460 . 69463)))
          ("iQapply" . ((number "223" 70280 . 70283)))
          ("iQargs_out_of_range" . ((number "225" 70386 . 70389)))
          ("iQarith_error" . ((number "226" 70452 . 70455)))
          ("iQcharacterp" . ((number "315" 76019 . 76022)))
          ("iQcomma_dot" . ((number "340" 77500 . 77503)))
          ("iQcomposition" . ((number "347" 78002 . 78005)))
          ("iQctrl" . ((number "363" 78925 . 78928)))
          ("iQcurrent_input_method" . ((number "364" 78987 . 78990)))
          ("iQcyclic_function_indirection" . ((number "374" 79660 . 79663)))
          ("iQdbus_error" . ((number "380" 80013 . 80016)))
          ("iQdelete_frame" . ((number "400" 81341 . 81344)))
          ("iQdisplay_buffer" . ((number "412" 82159 . 82162)))
          ("iQdisplay_line_numbers_widen" . ((number "415" 82409 . 82412)))
          ("iQdisplay_line_numbers_width" . ((number "416" 82499 . 82502)))
          ("iQdisplay_table" . ((number "418" 82676 . 82679)))
          ("iQexplicit" . ((number "463" 85349 . 85352)))
          ("iQface_set_after_frame_default" . ((number "473" 86009 . 86012)))
          ("iQfile_missing" . ((number "488" 86993 . 86996)))
          ("iQfile_name_as_directory" . ((number "491" 87211 . 87214)))
          ("iQfocus_out" . ((number "516" 88890 . 88893)))
          ("iQfont_name" . ((number "520" 89114 . 89117)))
          ("iQgnutls_e_not_ready_for_handshake" . ((number "578" 92893 . 92896)))
          ("iQhandle_switch_frame" . ((number "592" 93836 . 93839)))
          ("iQheader_line" . ((number "597" 94138 . 94141)))
          ("iQhelp_form_show" . ((number "603" 94487 . 94490)))
          ("iQheuristic" . ((number "604" 94548 . 94551)))
          ("iQhollow" . ((number "607" 94721 . 94724)))
          ("iQhorizontal_scroll_bars" . ((number "612" 95059 . 95062)))
          ("iQicon_type" . ((number "619" 95430 . 95433)))
          ("iQinhibit_changing_match_data" . ((number "627" 95896 . 95899)))
          ("iQinteractive_form" . ((number "651" 97741 . 97744)))
          ("iQiso_8859_1" . ((number "676" 99545 . 99548)))
          ("iQjson_out_of_memory" . ((number "684" 100007 . 100010)))
          ("iQjson_parse_string" . ((number "686" 100150 . 100153)))
          ("iQjson_trailing_content" . ((number "688" 100292 . 100295)))
          ("iQlast_arrow_string" . ((number "709" 101632 . 101635)))
          ("iQleftmost" . ((number "719" 102211 . 102214)))
          ("iQmac" . ((number "747" 103864 . 103867)))
          ("iQmajflt" . ((number "749" 103959 . 103962)))
          ("iQmake_directory" . ((number "750" 104017 . 104020)))
          ("iQmaximized" . ((number "762" 104770 . 104773)))
          ("iQmenu_bar_update_hook" . ((number "769" 105183 . 105186)))
          ("iQmeta" . ((number "772" 105361 . 105364)))
          ("iQmin_width" . ((number "775" 105524 . 105527)))
          ("iQmode_class" . ((number "788" 106421 . 106424)))
          ("iQmodule_load_failed" . ((number "802" 107379 . 107382)))
          ("iQmouse_face" . ((number "814" 108141 . 108144)))
          ("iQname" . ((number "827" 108945 . 108948)))
          ("iQns_parse_geometry" . ((number "846" 110048 . 110051)))
          ("iQouter_position" . ((number "863" 111079 . 111082)))
          ("iQpdf" . ((number "885" 112476 . 112479)))
          ("iQpointer" . ((number "898" 113196 . 113199)))
          ("iQprint_escape_nonascii" . ((number "912" 114062 . 114065)))
          ("iQraise" . ((number "926" 114836 . 114839)))
          ("iQrequire" . ((number "953" 116546 . 116549)))
          ("iQrisky_local_variable" . ((number "964" 117243 . 117246)))
          ("iQscroll_bar_width" . ((number "981" 118303 . 118306)))
          ("iQseqpacket" . ((number "990" 118862 . 118865)))
          ("iQset_file_selinux_context" . ((number "998" 119317 . 119320)))
          ("iQsubstitute_in_file_name" . ((number "1046" 122204 . 122208)))
          ("iQswitch_frame" . ((number "1050" 122415 . 122419)))
          ("iQsyntax_ppss" . ((number "1054" 122634 . 122638)))
          ("iQsyntax_table" . ((number "1055" 122696 . 122700)))
          ("iQsyntax_table_p" . ((number "1056" 122761 . 122765)))
          ("iQterminal_frame" . ((number "1063" 123206 . 123210)))
          ("iQtime" . ((number "1075" 123888 . 123892)))
          ("iQtop_margin" . ((number "1092" 124929 . 124933)))
          ("iQtranslation_table_id" . ((number "1098" 125323 . 125327)))
          ("iQtty_color_standard_values" . ((number "1107" 125913 . 125917)))
          ("iQtty_menu_ignore" . ((number "1109" 126057 . 126061)))
          ("iQundo_auto__add_boundary" . ((number "1128" 127402 . 127406)))
          ("iQutf_8" . ((number "1155" 129223 . 129227)))
          ("iQvector_or_char_table_p" . ((number "1163" 129708 . 129712)))
          ("iQvectorp" . ((number "1165" 129839 . 129843)))
          ("iQvisibility" . ((number "1174" 130471 . 130475)))
          ("iQvisual" . ((number "1176" 130579 . 130583)))
          ("iQwall" . ((number "1182" 130913 . 130917)))
          ("iQwebkit" . ((number "1186" 131119 . 131123)))
          ("iQworkarea" . ((number "1211" 132948 . 132952)))
          ("iQx_set_fullscreen" . ((number "1230" 134365 . 134369)))
          ("iQx_set_window_size_3" . ((number "1234" 134672 . 134676)))
          ("Qnil" . ((symbol "builtin_lisp_symbol" 198227 . 198246) (semantic-list "(0)" 198247 . 198250)))
          ("Vafter_init_time" . 
              ((symbol "globals" 388 . 395) (punctuation "." 395 . 396) (symbol "f_Vafter_init_time" 396 . 414)))
          ("Vbefore_change_functions" . 
              ((symbol "globals" 1685 . 1692) (punctuation "." 1692 . 1693) (symbol "f_Vbefore_change_functions" 1693 . 1719)))
          ("Vcompose_chars_after_function" . 
              ((symbol "globals" 5103 . 5110) (punctuation "." 5110 . 5111) (symbol "f_Vcompose_chars_after_function" 5111 . 5142)))
          ("Vdbus_message_type_error" . 
              ((symbol "globals" 6005 . 6012) (punctuation "." 6012 . 6013) (symbol "f_Vdbus_message_type_error" 6013 . 6039)))
          ("Vdbus_message_type_method_return" . 
              ((symbol "globals" 6375 . 6382) (punctuation "." 6382 . 6383) (symbol "f_Vdbus_message_type_method_return" 6383 . 6417)))
          ("Vdelayed_warnings_list" . 
              ((symbol "globals" 8346 . 8353) (punctuation "." 8353 . 8354) (symbol "f_Vdelayed_warnings_list" 8354 . 8378)))
          ("Vdoc_directory" . 
              ((symbol "globals" 9252 . 9259) (punctuation "." 9259 . 9260) (symbol "f_Vdoc_directory" 9260 . 9276)))
          ("Vemacs_copyright" . 
              ((symbol "globals" 9698 . 9705) (punctuation "." 9705 . 9706) (symbol "f_Vemacs_copyright" 9706 . 9724)))
          ("Vexecuting_kbd_macro" . 
              ((symbol "globals" 10573 . 10580) (punctuation "." 10580 . 10581) (symbol "f_Vexecuting_kbd_macro" 10581 . 10603)))
          ("Vface_ignored_fonts" . 
              ((symbol "globals" 10880 . 10887) (punctuation "." 10887 . 10888) (symbol "f_Vface_ignored_fonts" 10888 . 10909)))
          ("Vfont_weight_table" . 
              ((symbol "globals" 12393 . 12400) (punctuation "." 12400 . 12401) (symbol "f_Vfont_weight_table" 12401 . 12421)))
          ("Vfontification_functions" . 
              ((symbol "globals" 12586 . 12593) (punctuation "." 12593 . 12594) (symbol "f_Vfontification_functions" 12594 . 12620)))
          ("Vfringe_bitmaps" . 
              ((symbol "globals" 12981 . 12988) (punctuation "." 12988 . 12989) (symbol "f_Vfringe_bitmaps" 12989 . 13006)))
          ("Vinhibit_file_name_operation" . 
              ((symbol "globals" 15275 . 15282) (punctuation "." 15282 . 15283) (symbol "f_Vinhibit_file_name_operation" 15283 . 15313)))
          ("Vinitial_window_system" . 
              ((symbol "globals" 15863 . 15870) (punctuation "." 15870 . 15871) (symbol "f_Vinitial_window_system" 15871 . 15895)))
          ("Vminibuffer_completing_file_name" . 
              ((symbol "globals" 20440 . 20447) (punctuation "." 20447 . 20448) (symbol "f_Vminibuffer_completing_file_name" 20448 . 20482)))
          ("Vminibuffer_history_variable" . 
              ((symbol "globals" 21274 . 21281) (punctuation "." 21281 . 21282) (symbol "f_Vminibuffer_history_variable" 21282 . 21312)))
          ("Vminor_mode_map_alist" . 
              ((symbol "globals" 21941 . 21948) (punctuation "." 21948 . 21949) (symbol "f_Vminor_mode_map_alist" 21949 . 21972)))
          ("Vmouse_leave_buffer_hook" . 
              ((symbol "globals" 23049 . 23056) (punctuation "." 23056 . 23057) (symbol "f_Vmouse_leave_buffer_hook" 23057 . 23083)))
          ("Voverflow_newline_into_fringe" . 
              ((symbol "globals" 23986 . 23993) (punctuation "." 23993 . 23994) (symbol "f_Voverflow_newline_into_fringe" 23994 . 24025)))
          ("Vpost_gc_hook" . 
              ((symbol "globals" 24941 . 24948) (punctuation "." 24948 . 24949) (symbol "f_Vpost_gc_hook" 24949 . 24964)))
          ("Vprint_level" . 
              ((symbol "globals" 26240 . 26247) (punctuation "." 26247 . 26248) (symbol "f_Vprint_level" 26248 . 26262)))
          ("Vread_circle" . 
              ((symbol "globals" 27202 . 27209) (punctuation "." 27209 . 27210) (symbol "f_Vread_circle" 27210 . 27224)))
          ("Vscalable_fonts_allowed" . 
              ((symbol "globals" 28811 . 28818) (punctuation "." 28818 . 28819) (symbol "f_Vscalable_fonts_allowed" 28819 . 28844)))
          ("Vsearch_spaces_regexp" . 
              ((symbol "globals" 29170 . 29177) (punctuation "." 29177 . 29178) (symbol "f_Vsearch_spaces_regexp" 29178 . 29201)))
          ("Vstandard_output" . 
              ((symbol "globals" 30765 . 30772) (punctuation "." 30772 . 30773) (symbol "f_Vstandard_output" 30773 . 30791)))
          ("Vtool_bar_separator_image_expression" . 
              ((symbol "globals" 33381 . 33388) (punctuation "." 33388 . 33389) (symbol "f_Vtool_bar_separator_image_expression" 33389 . 33427)))
          ("Vtop_level" . 
              ((symbol "globals" 33558 . 33565) (punctuation "." 33565 . 33566) (symbol "f_Vtop_level" 33566 . 33578)))
          ("Vunread_command_events" . 
              ((symbol "globals" 34747 . 34754) (punctuation "." 34754 . 34755) (symbol "f_Vunread_command_events" 34755 . 34779)))
          ("Vuser_real_login_name" . 
              ((symbol "globals" 35449 . 35456) (punctuation "." 35456 . 35457) (symbol "f_Vuser_real_login_name" 35457 . 35480)))
          ("Vvoid_text_area_pointer" . 
              ((symbol "globals" 35744 . 35751) (punctuation "." 35751 . 35752) (symbol "f_Vvoid_text_area_pointer" 35752 . 35777)))
          ("Vwhile_no_input_ignore_events" . 
              ((symbol "globals" 35985 . 35992) (punctuation "." 35992 . 35993) (symbol "f_Vwhile_no_input_ignore_events" 35993 . 36024)))
          ("Vwindow_combination_resize" . 
              ((symbol "globals" 36217 . 36224) (punctuation "." 36224 . 36225) (symbol "f_Vwindow_combination_resize" 36225 . 36253)))
          ("Vx_resource_name" . 
              ((symbol "globals" 39306 . 39313) (punctuation "." 39313 . 39314) (symbol "f_Vx_resource_name" 39314 . 39332)))
          ("Vx_sent_selection_functions" . 
              ((symbol "globals" 39685 . 39692) (punctuation "." 39692 . 39693) (symbol "f_Vx_sent_selection_functions" 39693 . 39722)))
          ("Vx_super_keysym" . 
              ((symbol "globals" 39961 . 39968) (punctuation "." 39968 . 39969) (symbol "f_Vx_super_keysym" 39969 . 39986)))
          ("menu_prompt_more_char" . 
              ((symbol "globals" 43007 . 43014) (punctuation "." 43014 . 43015) (symbol "f_menu_prompt_more_char" 43015 . 43038)))
          ("max_specpdl_size" . 
              ((symbol "globals" 44706 . 44713) (punctuation "." 44713 . 44714) (symbol "f_max_specpdl_size" 44714 . 44732)))
          ("syntax_propertize__done" . 
              ((symbol "globals" 46055 . 46062) (punctuation "." 46062 . 46063) (symbol "f_syntax_propertize__done" 46063 . 46088)))
          ("vector_cells_consed" . 
              ((symbol "globals" 46620 . 46627) (punctuation "." 46627 . 46628) (symbol "f_vector_cells_consed" 46628 . 46649)))
          ("create_lockfiles" . 
              ((symbol "globals" 48155 . 48162) (punctuation "." 48162 . 48163) (symbol "f_create_lockfiles" 48163 . 48181)))
          ("debug_on_quit" . 
              ((symbol "globals" 48495 . 48502) (punctuation "." 48502 . 48503) (symbol "f_debug_on_quit" 48503 . 48518)))
          ("disable_ascii_optimization" . 
              ((symbol "globals" 49006 . 49013) (punctuation "." 49013 . 49014) (symbol "f_disable_ascii_optimization" 49014 . 49042)))
          ("display_raw_bytes_as_hex" . 
              ((symbol "globals" 49308 . 49315) (punctuation "." 49315 . 49316) (symbol "f_display_raw_bytes_as_hex" 49316 . 49342)))
          ("inhibit_compacting_font_caches" . 
              ((symbol "globals" 50568 . 50575) (punctuation "." 50575 . 50576) (symbol "f_inhibit_compacting_font_caches" 50576 . 50608)))
          ("inhibit_record_char" . 
              ((symbol "globals" 51606 . 51613) (punctuation "." 51613 . 51614) (symbol "f_inhibit_record_char" 51614 . 51635)))
          ("inhibit_try_cursor_movement" . 
              ((symbol "globals" 51710 . 51717) (punctuation "." 51717 . 51718) (symbol "f_inhibit_try_cursor_movement" 51718 . 51747)))
          ("tooltip_reuse_hidden_frame" . 
              ((symbol "globals" 55111 . 55118) (punctuation "." 55118 . 55119) (symbol "f_tooltip_reuse_hidden_frame" 55119 . 55147)))
          ("visible_bell" . 
              ((symbol "globals" 55789 . 55796) (punctuation "." 55796 . 55797) (symbol "f_visible_bell" 55797 . 55811)))
          )
)
    (semanticdb-table "semanticdb-table-1a5b6c8"
      :major-mode c-mode
      :tags 
        '( ("EMACS_COMPOSITE_H" variable (:constant-flag t) nil [1136 1153])
            ("font.h" include nil nil [1155 1172])
            ("composition_method" type
               (:members 
                  ( ("COMPOSITION_RELATIVE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1350 1371])
                    ("COMPOSITION_WITH_RULE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1532 1554])
                    ("COMPOSITION_WITH_ALTCHARS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1612 1638])
                    ("COMPOSITION_WITH_RULE_ALTCHARS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1716 1747])
                    ("COMPOSITION_NO" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1781 1797]))                  
                :type "enum")
                nil [1264 1798])
            ("MAX_COMPOSITION_COMPONENTS" variable (:constant-flag t) nil [1875 1901])
            ("composition_registered_p" function
               (:arguments 
                  ( ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2258 2275]))                  
                :type "bool")
                nil [2227 2311])
            ("COMPOSITION_ID" variable (:constant-flag t) nil [2384 2398])
            ("COMPOSITION_LENGTH" variable (:constant-flag t) nil [2477 2495])
            ("COMPOSITION_COMPONENTS" variable (:constant-flag t) nil [2667 2689])
            ("COMPOSITION_MODIFICATION_FUNC" variable (:constant-flag t) nil [2859 2888])
            ("COMPOSITION_GLYPH" variable (:constant-flag t) nil [3126 3143])
            ("COMPOSITION_RULE" variable (:constant-flag t) nil [3544 3560])
            ("COMPOSITION_DECODE_REFS" variable (:constant-flag t) nil [3976 3999])
            ("COMPOSITION_DECODE_RULE" variable (:constant-flag t) nil [4340 4363])
            ("COMPOSITION_ENCODE_RULE_VALID" variable (:constant-flag t) nil [4676 4705])
            ("COMPOSITION_ENCODE_RULE" variable (:constant-flag t) nil [4932 4955])
            ("composition" type
               (:members 
                  ( ("glyph_len" variable (:type "int") (reparse-symbol classsubparts) [5485 5499])
                    ("pixel_width" variable (:type "short") (reparse-symbol classsubparts) [5566 5601])
                    ("ascent" variable (:type "short") (reparse-symbol classsubparts) [5566 5601])
                    ("descent" variable (:type "short") (reparse-symbol classsubparts) [5566 5601])
                    ("lbearing" variable (:type "short") (reparse-symbol classsubparts) [5605 5630])
                    ("rbearing" variable (:type "short") (reparse-symbol classsubparts) [5605 5630])
                    ("width" variable (:type "int") (reparse-symbol classsubparts) [5796 5806])
                    ("method" variable (:type ("composition_method" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [5846 5877])
                    ("hash_index" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5927 5948])
                    ("font" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [6061 6072])
                    ("offsets" variable
                       (:pointer 1
                        :type "short")
                        (reparse-symbol classsubparts) [6406 6421]))                  
                :type "struct")
                nil [5405 6424])
            ("composition_table" variable
               (:pointer 2
                :typemodifiers ("extern")
                :type ("composition" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [6512 6558])
            ("n_compositions" variable
               (:typemodifiers ("extern")
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [6615 6647])
            ("CHECK_HEAD" variable (:constant-flag t) nil [6782 6792])
            ("CHECK_TAIL" variable (:constant-flag t) nil [6826 6836])
            ("CHECK_INSIDE" variable (:constant-flag t) nil [6868 6880])
            ("CHECK_BORDER" variable (:constant-flag t) nil [6917 6929])
            ("CHECK_ALL" variable (:constant-flag t) nil [6964 6973])
            ("composition_hash_table" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [7005 7047])
            ("get_composition_id" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7085 7095])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7096 7106])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7107 7117])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7127 7139])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7140 7152]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [7048 7153])
            ("find_composition" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7184 7194])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7195 7205])
                    ("" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7206 7218])
                    ("" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7219 7231])
                    ("" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7241 7255])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7256 7268]))                  
                :type "bool")
                nil [7154 7269])
            ("update_compositions" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7303 7313])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7314 7324])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [7325 7329]))                  
                :type "void")
                nil [7270 7330])
            ("make_composition_value_copy" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7372 7384]))                  
                :type "void")
                nil [7331 7385])
            ("syms_of_composite" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7417 7422]))                  
                :type "void")
                nil [7386 7423])
            ("compose_text" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7450 7460])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7461 7471])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7472 7484])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7485 7497])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7524 7536]))                  
                :type "void")
                nil [7424 7537])
            ("composition_method" function
               (:arguments 
                  ( ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7653 7670]))                  
                :type ("composition_method" type (:type "enum") nil nil))
                nil [7609 8013])
            ("composition_valid_p" function
               (:arguments 
                  ( ("start" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8165 8181])
                    ("end" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8182 8196])
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8197 8214]))                  
                :type "bool")
                nil [8139 8664])
            ("LGSTRING_HEADER" variable (:constant-flag t) nil [8772 8787])
            ("LGSTRING_SET_HEADER" variable (:constant-flag t) nil [8815 8834])
            ("LGSTRING_FONT" variable (:constant-flag t) nil [8879 8892])
            ("LGSTRING_CHAR" variable (:constant-flag t) nil [8938 8951])
            ("LGSTRING_CHAR_LEN" variable (:constant-flag t) nil [9006 9023])
            ("LGSTRING_SET_FONT" variable (:constant-flag t) nil [9074 9091])
            ("LGSTRING_SET_CHAR" variable (:constant-flag t) nil [9149 9166])
            ("LGSTRING_ID" variable (:constant-flag t) nil [9230 9241])
            ("LGSTRING_SET_ID" variable (:constant-flag t) nil [9269 9284])
            ("LGSTRING_GLYPH_LEN" variable (:constant-flag t) nil [9321 9339])
            ("LGSTRING_GLYPH" variable (:constant-flag t) nil [9373 9387])
            ("LGSTRING_SET_GLYPH" variable (:constant-flag t) nil [9430 9448])
            ("lgstring_glyph_addr" function
               (:pointer 1
                :arguments 
                  ( ("lgs" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9537 9553])
                    ("idx" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9554 9568]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [9502 9607])
            ("lglyph_indices" type
               (:members 
                  ( ("LGLYPH_IX_FROM" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9672 9687])
                    ("LGLYPH_IX_TO" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9688 9701])
                    ("LGLYPH_IX_CHAR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9703 9718])
                    ("LGLYPH_IX_CODE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9719 9734])
                    ("LGLYPH_IX_WIDTH" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9739 9755])
                    ("LGLYPH_IX_LBEARING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9756 9775])
                    ("LGLYPH_IX_RBEARING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9776 9795])
                    ("LGLYPH_IX_ASCENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9800 9817])
                    ("LGLYPH_IX_DESCENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9818 9836])
                    ("LGLYPH_IX_ADJUSTMENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9837 9858])
                    ("LGLYPH_SIZE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9888 9903]))                  
                :type "enum")
                nil [9644 9904])
            ("LGLYPH_NEW" variable (:constant-flag t) nil [9914 9924])
            ("LGLYPH_FROM" variable (:constant-flag t) nil [9982 9993])
            ("LGLYPH_TO" variable (:constant-flag t) nil [10042 10051])
            ("LGLYPH_CHAR" variable (:constant-flag t) nil [10098 10109])
            ("LGLYPH_CODE" variable (:constant-flag t) nil [10158 10169])
            ("LGLYPH_WIDTH" variable (:constant-flag t) nil [10335 10347])
            ("LGLYPH_LBEARING" variable (:constant-flag t) nil [10397 10412])
            ("LGLYPH_RBEARING" variable (:constant-flag t) nil [10465 10480])
            ("LGLYPH_ASCENT" variable (:constant-flag t) nil [10533 10546])
            ("LGLYPH_DESCENT" variable (:constant-flag t) nil [10597 10611])
            ("LGLYPH_ADJUSTMENT" variable (:constant-flag t) nil [10663 10680])
            ("LGLYPH_SET_FROM" variable (:constant-flag t) nil [10725 10740])
            ("LGLYPH_SET_TO" variable (:constant-flag t) nil [10803 10816])
            ("LGLYPH_SET_CHAR" variable (:constant-flag t) nil [10877 10892])
            ("LGLYPH_SET_CODE" variable (:constant-flag t) nil [11008 11023])
            ("LGLYPH_SET_WIDTH" variable (:constant-flag t) nil [11140 11156])
            ("LGLYPH_SET_LBEARING" variable (:constant-flag t) nil [11220 11239])
            ("LGLYPH_SET_RBEARING" variable (:constant-flag t) nil [11306 11325])
            ("LGLYPH_SET_ASCENT" variable (:constant-flag t) nil [11392 11409])
            ("LGLYPH_SET_DESCENT" variable (:constant-flag t) nil [11474 11492])
            ("LGLYPH_SET_ADJUSTMENT" variable (:constant-flag t) nil [11558 11579])
            ("LGLYPH_XOFF" variable (:constant-flag t) nil [11637 11648])
            ("LGLYPH_YOFF" variable (:constant-flag t) nil [11747 11758])
            ("LGLYPH_WADJUST" variable (:constant-flag t) nil [11857 11871])
            ("composition_gstring_put_cache" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12016 12028])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12029 12039]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [11966 12040])
            ("composition_gstring_from_id" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12089 12099]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [12041 12100])
            ("composition_gstring_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12136 12148]))                  
                :type "bool")
                nil [12101 12149])
            ("composition_gstring_width" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12188 12200])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12201 12211])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12212 12222])
                    ("" variable
                       (:pointer 1
                        :type ("font_metrics" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12261 12283]))                  
                :type "int")
                nil [12150 12284])
            ("composition_compute_stop_pos" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("composition_it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12328 12352])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12395 12405])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12406 12416])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12417 12427])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12470 12482]))                  
                :type "void")
                nil [12286 12483])
            ("composition_reseat_it" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("composition_it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12519 12543])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12544 12554])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12562 12572])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12573 12583])
                    ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12584 12600])
                    ("" variable
                       (:pointer 1
                        :type ("face" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12608 12622])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12623 12635]))                  
                :type "bool")
                nil [12484 12636])
            ("composition_update_it" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("composition_it" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12671 12695])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12730 12740])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12741 12751])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12752 12764]))                  
                :type "int")
                nil [12637 12765])
            ("composition_adjust_point" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12810 12820])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12821 12831]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [12767 12832]))          
      :file "composite.h"
      :pointmax 12888
      :fsize 12887
      :lastmodtime '(23408 44231 529557 791000)
      :unmatched-syntax '((symbol 12834 . 12851) (symbol 9495 . 9501) (symbol 8132 . 8138) (symbol 7602 . 7608) (symbol 2220 . 2226) (symbol 1174 . 1193))
      :lexical-table 
        '(("COMPOSITION_DECODE_RULE" (spp-arg-list ("rule_code" "gref" "nref" "xoff" "yoff") 4363 . 4398) . 
              ((DO "do" 4403 . 4405) (semantic-list "{									\\
    xoff = (rule_code) >> 16;						\\
    yoff = ((rule_code) >> 8) & 0xFF;					\\
    COMPOSITION_DECODE_REFS (rule_code, gref, nref);			\\
  }" 4406 . 4559) (WHILE "while" 4560 . 4565) (semantic-list "(false)" 4566 . 4573)))
          ("LGSTRING_ID" (spp-arg-list ("lgs") 9241 . 9246) . ((symbol "AREF" 9247 . 9251) (semantic-list "(lgs, 1)" 9252 . 9260)))
          ("COMPOSITION_COMPONENTS" (spp-arg-list ("prop") 2689 . 2695) . ((semantic-list "(composition_registered_p (prop)	\\
   ? XCAR (XCDR (XCDR (prop)))		\\
   : XCDR (XCAR (prop)))" 2700 . 2793)))
          ("CHECK_TAIL" . ((number "2" 6837 . 6838)))
          ("LGLYPH_SET_FROM" (spp-arg-list ("g" "val") 10740 . 10748) . ((symbol "ASET" 10749 . 10753) (semantic-list "((g), LGLYPH_IX_FROM, make_fixnum (val))" 10754 . 10794)))
          ("LGLYPH_SET_CHAR" (spp-arg-list ("g" "val") 10892 . 10900) . ((symbol "ASET" 10901 . 10905) (semantic-list "((g), LGLYPH_IX_CHAR, make_fixnum (val))" 10906 . 10946)))
          ("LGLYPH_XOFF" (spp-arg-list ("g") 11648 . 11651) . ((semantic-list "(VECTORP (LGLYPH_ADJUSTMENT (g)) \\
			? XFIXNUM (AREF (LGLYPH_ADJUSTMENT (g), 0)) : 0)" 11652 . 11738)))
          ("COMPOSITION_MODIFICATION_FUNC" (spp-arg-list ("prop") 2888 . 2894) . ((semantic-list "(composition_registered_p (prop)		\\
   ? XCDR (XCDR (XCDR (prop)))			\\
   : CONSP (prop) ? XCDR (prop) : Qnil)" 2899 . 3009)))
          ("LGLYPH_SET_ASCENT" (spp-arg-list ("g" "val") 11409 . 11417) . ((symbol "ASET" 11418 . 11422) (semantic-list "((g), LGLYPH_IX_ASCENT, make_fixnum (val))" 11423 . 11465)))
          ("LGLYPH_YOFF" (spp-arg-list ("g") 11758 . 11761) . ((semantic-list "(VECTORP (LGLYPH_ADJUSTMENT (g)) \\
			? XFIXNUM (AREF (LGLYPH_ADJUSTMENT (g), 1)) : 0)" 11762 . 11848)))
          ("LGLYPH_ASCENT" (spp-arg-list ("g") 10546 . 10549) . ((symbol "XFIXNUM" 10550 . 10557) (semantic-list "(AREF ((g), LGLYPH_IX_ASCENT))" 10558 . 10588)))
          ("LGLYPH_SET_WIDTH" (spp-arg-list ("g" "val") 11156 . 11164) . ((symbol "ASET" 11165 . 11169) (semantic-list "((g), LGLYPH_IX_WIDTH, make_fixnum (val))" 11170 . 11211)))
          ("LGLYPH_SET_ADJUSTMENT" (spp-arg-list ("g" "val") 11579 . 11587) . ((symbol "ASET" 11588 . 11592) (semantic-list "((g), LGLYPH_IX_ADJUSTMENT, (val))" 11593 . 11627)))
          ("LGLYPH_NEW" (spp-arg-list nil 9924 . 9926) . ((symbol "Fmake_vector" 9927 . 9939) (semantic-list "(make_fixnum (LGLYPH_SIZE), Qnil)" 9940 . 9973)))
          ("LGLYPH_RBEARING" (spp-arg-list ("g") 10480 . 10483) . ((symbol "XFIXNUM" 10484 . 10491) (semantic-list "(AREF ((g), LGLYPH_IX_RBEARING))" 10492 . 10524)))
          ("LGSTRING_CHAR_LEN" (spp-arg-list ("lgs") 9023 . 9028) . ((semantic-list "(ASIZE (LGSTRING_HEADER (lgs)) - 1)" 9029 . 9064)))
          ("LGSTRING_GLYPH_LEN" (spp-arg-list ("lgs") 9339 . 9344) . ((semantic-list "(ASIZE ((lgs)) - 2)" 9345 . 9364)))
          ("LGLYPH_FROM" (spp-arg-list ("g") 9993 . 9996) . ((symbol "XFIXNUM" 9997 . 10004) (semantic-list "(AREF ((g), LGLYPH_IX_FROM))" 10005 . 10033)))
          ("LGLYPH_CHAR" (spp-arg-list ("g") 10109 . 10112) . ((symbol "XFIXNUM" 10113 . 10120) (semantic-list "(AREF ((g), LGLYPH_IX_CHAR))" 10121 . 10149)))
          ("EMACS_COMPOSITE_H")
          ("COMPOSITION_GLYPH" (spp-arg-list ("cmp" "n") 3143 . 3151) . ((symbol "XFIXNUM" 3160 . 3167) (semantic-list "(XVECTOR (XVECTOR (XHASH_TABLE (composition_hash_table)		\\
			  ->key_and_value)				\\
		 ->contents[cmp->hash_index * 2])			\\
	->contents[cmp->method == COMPOSITION_WITH_RULE_ALTCHARS	\\
		  ? (n) * 2 : (n)])" 3168 . 3375)))
          ("CHECK_HEAD" . ((number "1" 6793 . 6794)))
          ("LGSTRING_SET_CHAR" (spp-arg-list ("lgs" "i" "c") 9166 . 9177) . ((symbol "ASET" 9178 . 9182) (semantic-list "(LGSTRING_HEADER (lgs), (i) + 1, (c))" 9183 . 9220)))
          ("LGSTRING_SET_ID" (spp-arg-list ("lgs" "id") 9284 . 9293) . ((symbol "ASET" 9294 . 9298) (semantic-list "(lgs, 1, id)" 9299 . 9311)))
          ("LGSTRING_SET_GLYPH" (spp-arg-list ("lgs" "idx" "val") 9448 . 9463) . ((symbol "ASET" 9464 . 9468) (semantic-list "((lgs), (idx) + 2, (val))" 9469 . 9494)))
          ("LGLYPH_ADJUSTMENT" (spp-arg-list ("g") 10680 . 10683) . ((symbol "AREF" 10684 . 10688) (semantic-list "((g), LGLYPH_IX_ADJUSTMENT)" 10689 . 10716)))
          ("LGLYPH_SET_LBEARING" (spp-arg-list ("g" "val") 11239 . 11247) . ((symbol "ASET" 11248 . 11252) (semantic-list "((g), LGLYPH_IX_LBEARING, make_fixnum (val))" 11253 . 11297)))
          ("LGLYPH_SET_DESCENT" (spp-arg-list ("g" "val") 11492 . 11500) . ((symbol "ASET" 11501 . 11505) (semantic-list "((g), LGLYPH_IX_DESCENT, make_fixnum (val))" 11506 . 11549)))
          ("MAX_COMPOSITION_COMPONENTS" . ((number "16" 1902 . 1904)))
          ("COMPOSITION_RULE" (spp-arg-list ("cmp" "n") 3560 . 3568) . ((symbol "XFIXNUM" 3576 . 3583) (semantic-list "(XVECTOR (XVECTOR (XHASH_TABLE (composition_hash_table)	\\
			  ->key_and_value)			\\
		 ->contents[cmp->hash_index * 2])		\\
	->contents[(n) * 2 - 1])" 3584 . 3732)))
          ("COMPOSITION_DECODE_REFS" (spp-arg-list ("rule_code" "gref" "nref") 3999 . 4022) . 
              ((DO "do" 4029 . 4031) (semantic-list "{									\\
    rule_code &= 0xFF;							\\
    gref = (rule_code) / 12;						\\
    if (gref > 12) gref = 11;						\\
    nref = (rule_code) % 12;						\\
  }" 4032 . 4187) (WHILE "while" 4188 . 4193) (semantic-list "(false)" 4194 . 4201)))
          ("COMPOSITION_ENCODE_RULE_VALID" (spp-arg-list ("gref" "nref") 4705 . 4717) . ((semantic-list "(UNSIGNED_CMP (gref, <, 12) && UNSIGNED_CMP (nref, <, 12))" 4722 . 4780)))
          ("LGSTRING_CHAR" (spp-arg-list ("lgs" "i") 8951 . 8959) . ((symbol "AREF" 8960 . 8964) (semantic-list "(LGSTRING_HEADER (lgs), (i) + 1)" 8965 . 8997)))
          ("LGLYPH_DESCENT" (spp-arg-list ("g") 10611 . 10614) . ((symbol "XFIXNUM" 10615 . 10622) (semantic-list "(AREF ((g), LGLYPH_IX_DESCENT))" 10623 . 10654)))
          ("LGLYPH_SET_CODE" (spp-arg-list ("g" "val") 11023 . 11031) . ((symbol "ASET" 11041 . 11045) (semantic-list "(g, LGLYPH_IX_CODE,						\\
	val == FONT_INVALID_CODE ? Qnil : INTEGER_TO_CONS (val))" 11046 . 11130)))
          ("LGLYPH_WADJUST" (spp-arg-list ("g") 11871 . 11874) . ((semantic-list "(VECTORP (LGLYPH_ADJUSTMENT (g)) \\
			   ? XFIXNUM (AREF (LGLYPH_ADJUSTMENT (g), 2)) : 0)" 11875 . 11964)))
          ("CHECK_ALL" . ((semantic-list "(CHECK_BORDER | CHECK_INSIDE)" 6974 . 7003)))
          ("LGSTRING_SET_HEADER" (spp-arg-list ("lgs" "header") 8834 . 8847) . ((symbol "ASET" 8848 . 8852) (semantic-list "(lgs, 0, header)" 8853 . 8869)))
          ("LGSTRING_SET_FONT" (spp-arg-list ("lgs" "val") 9091 . 9101) . ((symbol "ASET" 9102 . 9106) (semantic-list "(LGSTRING_HEADER (lgs), 0, (val))" 9107 . 9140)))
          ("LGLYPH_TO" (spp-arg-list ("g") 10051 . 10054) . ((symbol "XFIXNUM" 10055 . 10062) (semantic-list "(AREF ((g), LGLYPH_IX_TO))" 10063 . 10089)))
          ("COMPOSITION_ID" (spp-arg-list ("prop") 2398 . 2404) . ((symbol "XFIXNUM" 2405 . 2412) (semantic-list "(XCAR (prop))" 2413 . 2426)))
          ("CHECK_INSIDE" . ((number "4" 6881 . 6882)))
          ("LGSTRING_GLYPH" (spp-arg-list ("lgs" "idx") 9387 . 9397) . ((symbol "AREF" 9398 . 9402) (semantic-list "((lgs), (idx) + 2)" 9403 . 9421)))
          ("LGLYPH_SET_TO" (spp-arg-list ("g" "val") 10816 . 10824) . ((symbol "ASET" 10825 . 10829) (semantic-list "((g), LGLYPH_IX_TO, make_fixnum (val))" 10830 . 10868)))
          ("COMPOSITION_LENGTH" (spp-arg-list ("prop") 2495 . 2501) . ((semantic-list "(composition_registered_p (prop)	\\
   ? XFIXNUM (XCAR (XCDR (prop)))		\\
   : XFIXNUM (XCAR (XCAR (prop))))" 2506 . 2612)))
          ("CHECK_BORDER" . ((semantic-list "(CHECK_HEAD | CHECK_TAIL)" 6930 . 6955)))
          ("LGSTRING_HEADER" (spp-arg-list ("lgs") 8787 . 8792) . ((symbol "AREF" 8793 . 8797) (semantic-list "(lgs, 0)" 8798 . 8806)))
          ("LGSTRING_FONT" (spp-arg-list ("lgs") 8892 . 8897) . ((symbol "AREF" 8898 . 8902) (semantic-list "(LGSTRING_HEADER (lgs), 0)" 8903 . 8929)))
          ("COMPOSITION_ENCODE_RULE" (spp-arg-list ("gref" "nref") 4955 . 4967) . ((semantic-list "((gref) * 12 + (nref))" 4973 . 4995)))
          ("LGLYPH_CODE" (spp-arg-list ("g") 10169 . 10172) . ((semantic-list "(NILP (AREF ((g), LGLYPH_IX_CODE))				\\
   ? FONT_INVALID_CODE						\\
   : cons_to_unsigned (AREF (g, LGLYPH_IX_CODE), TYPE_MAXIMUM (unsigned)))" 10182 . 10326)))
          ("LGLYPH_WIDTH" (spp-arg-list ("g") 10347 . 10350) . ((symbol "XFIXNUM" 10351 . 10358) (semantic-list "(AREF ((g), LGLYPH_IX_WIDTH))" 10359 . 10388)))
          ("LGLYPH_LBEARING" (spp-arg-list ("g") 10412 . 10415) . ((symbol "XFIXNUM" 10416 . 10423) (semantic-list "(AREF ((g), LGLYPH_IX_LBEARING))" 10424 . 10456)))
          ("LGLYPH_SET_RBEARING" (spp-arg-list ("g" "val") 11325 . 11333) . ((symbol "ASET" 11334 . 11338) (semantic-list "((g), LGLYPH_IX_RBEARING, make_fixnum (val))" 11339 . 11383)))
          )
)
    (semanticdb-table "semanticdb-table-1abe51c"
      :major-mode c-mode
      :tags 
        '( ("EMACS_TERMHOOKS_H" variable (:constant-flag t) nil [810 827])
            ("lisp.h" include nil nil [851 868])
            ("systime.h" include nil nil [869 889])
            ("glyph" type
               (:prototype t
                :type "struct")
                nil [906 919])
            ("scroll_bar_part" type
               (:members 
                  ( ("scroll_bar_nowhere" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [967 986])
                    ("scroll_bar_above_handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [989 1013])
                    ("scroll_bar_handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1016 1034])
                    ("scroll_bar_below_handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1037 1061])
                    ("scroll_bar_up_arrow" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1064 1084])
                    ("scroll_bar_down_arrow" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1087 1109])
                    ("scroll_bar_to_top" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1112 1130])
                    ("scroll_bar_to_bottom" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1133 1154])
                    ("scroll_bar_end_scroll" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1157 1179])
                    ("scroll_bar_move_ratio" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1182 1204])
                    ("scroll_bar_before_handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1207 1232])
                    ("scroll_bar_horizontal_handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1235 1264])
                    ("scroll_bar_after_handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1267 1291])
                    ("scroll_bar_left_arrow" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1294 1316])
                    ("scroll_bar_right_arrow" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1319 1342])
                    ("scroll_bar_to_leftmost" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1345 1368])
                    ("scroll_bar_to_rightmost" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1371 1396]))                  
                :type "enum")
                nil [942 1397])
            ("output_method" type
               (:members 
                  ( ("output_initial" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1503 1518])
                    ("output_termcap" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1521 1536])
                    ("output_x_window" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1539 1555])
                    ("output_msdos_raw" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1558 1575])
                    ("output_w32" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1578 1589])
                    ("output_ns" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1592 1603]))                  
                :type "enum")
                nil [1480 1604])
            ("event_kind" type
               (:members 
                  ( ("NO_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1670 1679])
                    ("ASCII_KEYSTROKE_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1772 1794])
                    ("MULTIBYTE_CHAR_KEYSTROKE_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2086 2117])
                    ("NON_ASCII_KEYSTROKE_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2267 2293])
                    ("TIMER_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2760 2772])
                    ("MOUSE_CLICK_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2814 2832])
                    ("WHEEL_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3242 3254])
                    ("HORIZ_WHEEL_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3816 3834])
                    ("SCROLL_BAR_CLICK_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4243 4266])
                    ("HORIZONTAL_SCROLL_BAR_CLICK_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4789 4823])
                    ("SELECTION_REQUEST_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5346 5370])
                    ("SELECTION_CLEAR_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5467 5489])
                    ("BUFFER_SWITCH_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5539 5559])
                    ("DELETE_WINDOW_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5609 5629])
                    ("MENU_BAR_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5775 5790])
                    ("ICONIFY_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5963 5977])
                    ("DEICONIFY_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6023 6039])
                    ("MENU_BAR_ACTIVATE_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6087 6111])
                    ("DRAG_N_DROP_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6188 6206])
                    ("USER_SIGNAL_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6709 6727])
                    ("HELP_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7051 7062])
                    ("TOOL_BAR_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7248 7263])
                    ("FOCUS_IN_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7404 7419])
                    ("FOCUS_OUT_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7423 7439])
                    ("MOVE_FRAME_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7485 7502])
                    ("SELECT_WINDOW_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7578 7598])
                    ("SAVE_SESSION_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7699 7806])
                    ("CONFIG_CHANGED_EVENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [7807 8965]))                  
                :type "enum")
                nil [1650 8966])
            ("" type
               (:members 
                  ( ("EVENT_KIND_WIDTH" variable
                       (:constant-flag t
                        :default-value (9073 9075)
                        :type "int")
                        (reparse-symbol enumsubparts) [9054 9075]))                  
                :type "enum")
                nil [9047 9078])
            ("input_event" type
               (:members 
                  ( ("EVENT_KIND_WIDTH" variable (:type "int") (reparse-symbol classsubparts) [9627 9644])
                    ("part" variable
                       (:suffix ":16"
                        :type "int")
                        (reparse-symbol classsubparts) [9717 9727])
                    ("code" variable (:type "unsigned int") (reparse-symbol classsubparts) [9947 9961])
                    ("modifiers" variable (:type "unsigned int") (reparse-symbol classsubparts) [10009 10028])
                    ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10165 10182])
                    ("y" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10165 10182])
                    ("timestamp" variable (:type ("Time" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10375 10390])
                    ("frame_or_window" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10519 10547])
                    ("arg" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10773 10789]))                  
                :type "struct")
                nil [9538 10792])
            ("EVENT_INIT" variable (:constant-flag t) nil [10802 10812])
            ("" type
               (:members 
                  ( ("up_modifier" variable
                       (:constant-flag t
                        :default-value (11785 11786)
                        :type "int")
                        (reparse-symbol enumsubparts) [11769 11786])
                    ("down_modifier" variable
                       (:constant-flag t
                        :default-value (11938 11939)
                        :type "int")
                        (reparse-symbol enumsubparts) [11920 11939])
                    ("drag_modifier" variable
                       (:constant-flag t
                        :default-value (11997 11998)
                        :type "int")
                        (reparse-symbol enumsubparts) [11979 11998])
                    ("click_modifier" variable
                       (:constant-flag t
                        :default-value (12146 12147)
                        :type "int")
                        (reparse-symbol enumsubparts) [12128 12147])
                    ("double_modifier" variable
                       (:constant-flag t
                        :default-value (12195 12197)
                        :type "int")
                        (reparse-symbol enumsubparts) [12178 12197])
                    ("triple_modifier" variable
                       (:constant-flag t
                        :default-value (12253 12255)
                        :type "int")
                        (reparse-symbol enumsubparts) [12236 12255])
                    ("alt_modifier" variable
                       (:constant-flag t
                        :default-value (12925 12933)
                        :type "int")
                        (reparse-symbol enumsubparts) [12909 12933])
                    ("super_modifier" variable
                       (:constant-flag t
                        :default-value (12995 13005)
                        :type "int")
                        (reparse-symbol enumsubparts) [12978 13005])
                    ("hyper_modifier" variable
                       (:constant-flag t
                        :default-value (13069 13079)
                        :type "int")
                        (reparse-symbol enumsubparts) [13052 13079])
                    ("shift_modifier" variable
                       (:constant-flag t
                        :default-value (13143 13153)
                        :type "int")
                        (reparse-symbol enumsubparts) [13126 13153])
                    ("ctrl_modifier" variable
                       (:constant-flag t
                        :default-value (13174 13182)
                        :type "int")
                        (reparse-symbol enumsubparts) [13157 13182])
                    ("meta_modifier" variable
                       (:constant-flag t
                        :default-value (13203 13212)
                        :type "int")
                        (reparse-symbol enumsubparts) [13186 13212]))                  
                :type "enum")
                nil [11760 13257])
            ("terminal" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [13692 13723])
                    ("param_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13770 13794])
                    ("charset_list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13951 13976])
                    ("Vselection_alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14773 14802])
                    ("glyph_code_table" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14983 15012])
                    ("next_terminal" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [15198 15229])
                    ("id" variable (:type "int") (reparse-symbol classsubparts) [15277 15284])
                    ("reference_count" variable (:type "int") (reparse-symbol classsubparts) [15344 15364])
                    ("type" variable (:type ("output_method" type (:type "enum") nil nil)) (reparse-symbol classsubparts) [15409 15433])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [15584 15595])
                    ("kboard" variable
                       (:pointer 1
                        :type ("kboard" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [15639 15661])
                    ("display_info" variable (:type ("display_info" type
                         (:prototype t
                          :type "union")
                          nil nil)) (reparse-symbol classsubparts) [15865 16119])
                    ("display_info" type
                       (:members 
                          ( ("tty" variable
                               (:pointer 1
                                :type ("tty_display_info" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol classsubparts) [15892 15921])
                            ("x" variable
                               (:pointer 1
                                :type ("x_display_info" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol classsubparts) [15947 15972])
                            ("w32" variable
                               (:pointer 1
                                :type ("w32_display_info" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol classsubparts) [15999 16028])
                            ("ns" variable
                               (:pointer 1
                                :type ("ns_display_info" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol classsubparts) [16053 16080]))                          
                        :type "union")
                        (reparse-symbol classsubparts) [15865 16119])
                    ("terminal_coding" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [16362 16400])
                    ("keyboard_coding" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [16589 16627])
                    ("rif" variable
                       (:pointer 1
                        :type ("redisplay_interface" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [16714 16746])
                    ("cursor_to_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [16846 16862])
                            ("vpos" variable (:type "int") (reparse-symbol arg-sub-list) [16863 16872])
                            ("hpos" variable (:type "int") (reparse-symbol arg-sub-list) [16873 16882]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [16822 16883])
                    ("raw_cursor_to_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [16914 16929])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [16930 16934])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [16935 16939]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [16886 16940])
                    ("clear_to_end_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [16971 16986]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [16944 16987])
                    ("clear_frame_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17016 17031]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [16990 17032])
                    ("clear_end_of_line_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17067 17082])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [17083 17087]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17035 17088])
                    ("ins_del_lines_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17120 17136])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [17137 17141])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [17142 17146]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17092 17147])
                    ("insert_glyphs_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17179 17195])
                            ("s" variable
                               (:pointer 1
                                :type ("glyph" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17196 17212])
                            ("n" variable (:type "int") (reparse-symbol arg-sub-list) [17213 17219]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17151 17220])
                    ("write_glyphs_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17250 17266])
                            ("s" variable
                               (:pointer 1
                                :type ("glyph" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17267 17283])
                            ("n" variable (:type "int") (reparse-symbol arg-sub-list) [17284 17290]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17223 17291])
                    ("delete_glyphs_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17322 17337])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [17338 17342]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17294 17343])
                    ("ring_bell_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17371 17387]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17347 17388])
                    ("toggle_invisible_pointer_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17430 17446])
                            ("invisible" variable (:type "bool") (reparse-symbol arg-sub-list) [17447 17462]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17391 17463])
                    ("reset_terminal_modes_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("terminal" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17502 17520]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17467 17521])
                    ("set_terminal_modes_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("terminal" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17557 17575]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17524 17576])
                    ("update_begin_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17607 17622]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17580 17623])
                    ("update_end_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17651 17666]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17626 17667])
                    ("set_terminal_window_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17704 17719])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [17720 17724]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [17670 17725])
                    ("mouse_position_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 2
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [18457 18474])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [18475 18479])
                            ("bar_window" variable
                               (:pointer 1
                                :type ("Lisp_Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18511 18535])
                            ("part" variable
                               (:pointer 1
                                :type ("scroll_bar_part" type (:type "enum") nil nil))
                                (reparse-symbol arg-sub-list) [18567 18594])
                            ("x" variable
                               (:pointer 1
                                :type ("Lisp_Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18626 18641])
                            ("y" variable
                               (:pointer 1
                                :type ("Lisp_Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18673 18688])
                            ("" variable
                               (:pointer 1
                                :type ("Time" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18720 18727]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [18428 18728])
                    ("frame_rehighlight_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [18971 18986]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [18939 18987])
                    ("frame_raise_lower_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [19543 19559])
                            ("raise_flag" variable (:type "bool") (reparse-symbol arg-sub-list) [19560 19576]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [19511 19577])
                    ("fullscreen_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [19831 19847]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [19806 19848])
                    ("menu_show_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [19930 19946])
                            ("x" variable (:type "int") (reparse-symbol arg-sub-list) [19947 19953])
                            ("y" variable (:type "int") (reparse-symbol arg-sub-list) [19954 19960])
                            ("menuflags" variable (:type "int") (reparse-symbol arg-sub-list) [19961 19975])
                            ("title" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19981 19999])
                            ("error_name" variable
                               (:pointer 2
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [20000 20024]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19899 20025])
                    ("popup_dialog_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [20117 20133])
                            ("header" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20134 20153])
                            ("contents" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20162 20183]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20083 20184])
                    ("set_vertical_scroll_bar_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("window" variable
                               (:pointer 1
                                :type ("window" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21523 21545])
                            ("portion" variable (:type "int") (reparse-symbol arg-sub-list) [21586 21598])
                            ("whole" variable (:type "int") (reparse-symbol arg-sub-list) [21599 21609])
                            ("position" variable (:type "int") (reparse-symbol arg-sub-list) [21650 21663]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21485 21664])
                    ("set_horizontal_scroll_bar_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("window" variable
                               (:pointer 1
                                :type ("window" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [22039 22061])
                            ("portion" variable (:type "int") (reparse-symbol arg-sub-list) [22069 22081])
                            ("whole" variable (:type "int") (reparse-symbol arg-sub-list) [22082 22092])
                            ("position" variable (:type "int") (reparse-symbol arg-sub-list) [22100 22113]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21999 22114])
                    ("condemn_scroll_bars_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("frame" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [23305 23325]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [23271 23326])
                    ("redeem_scroll_bar_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("window" variable
                               (:pointer 1
                                :type ("window" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [23506 23528]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [23474 23529])
                    ("judge_scroll_bars_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("FRAME" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24144 24164]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [24112 24165])
                    ("read_socket_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("terminal" variable
                               (:pointer 1
                                :type ("terminal" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24622 24648])
                            ("hold_quit" variable
                               (:pointer 1
                                :type ("input_event" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24676 24706]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [24597 24707])
                    ("frame_up_to_date_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24810 24825]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [24779 24826])
                    ("buffer_flipping_unblocked_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25026 25041]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [24986 25042])
                    ("delete_frame_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25178 25193]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [25151 25194])
                    ("delete_terminal_hook" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("terminal" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25713 25731]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [25683 25732]))                  
                :type "struct")
                nil [13605 25735])
            ("TERMINALP" function
               (:arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25760 25774]))                  
                :type "bool")
                nil [25744 25821])
            ("XTERMINAL" function
               (:pointer 1
                :arguments 
                  ( ("a" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25859 25873]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [25830 25959])
            ("tset_charset_list" function
               (:arguments 
                  ( ("t" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26078 26097])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26098 26114]))                  
                :type "void")
                nil [26054 26143])
            ("tset_selection_alist" function
               (:arguments 
                  ( ("t" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26178 26197])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26198 26214]))                  
                :type "void")
                nil [26151 26247])
            ("terminal_list" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [26304 26342])
            ("FRAME_MUST_WRITE_SPACES" variable (:constant-flag t) nil [26352 26375])
            ("FRAME_LINE_INS_DEL_OK" variable (:constant-flag t) nil [26422 26443])
            ("FRAME_CHAR_INS_DEL_OK" variable (:constant-flag t) nil [26488 26509])
            ("FRAME_SCROLL_REGION_OK" variable (:constant-flag t) nil [26554 26576])
            ("FRAME_SCROLL_REGION_COST" variable (:constant-flag t) nil [26622 26646])
            ("FRAME_MEMORY_BELOW_FRAME" variable (:constant-flag t) nil [26694 26718])
            ("FRAME_TERMINAL_CODING" variable (:constant-flag t) nil [26767 26788])
            ("FRAME_KEYBOARD_CODING" variable (:constant-flag t) nil [26833 26854])
            ("TERMINAL_TERMINAL_CODING" variable (:constant-flag t) nil [26900 26924])
            ("TERMINAL_KEYBOARD_CODING" variable (:constant-flag t) nil [26959 26983])
            ("FRAME_RIF" variable (:constant-flag t) nil [27019 27028])
            ("FRAME_TERMINAL" variable (:constant-flag t) nil [27062 27076])
            ("TERMINAL_ACTIVE_P" variable (:constant-flag t) nil [27165 27182])
            ("decode_live_terminal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27915 27927]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [27869 27928])
            ("decode_tty_terminal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27974 27986]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [27929 27987])
            ("get_named_terminal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [28032 28045]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [27988 28046])
            ("create_terminal" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("output_method" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [28088 28107])
                    ("" variable
                       (:pointer 1
                        :type ("redisplay_interface" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28114 28143]))                  
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28047 28144])
            ("delete_terminal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28174 28192]))                  
                :type "void")
                nil [28145 28193])
            ("terminal_glyph_code" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("terminal" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28234 28252])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28253 28257]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28194 28258])
            ("initial_terminal" variable
               (:pointer 1
                :typemodifiers ("extern")
                :type ("terminal" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [28326 28367])
            ("encode_terminal_code" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("glyph" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28413 28428])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28429 28433])
                    ("" variable
                       (:pointer 1
                        :type ("coding_system" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28443 28466]))                  
                :type "unsigned char")
                nil [28369 28467])
            ("cursorX" variable (:constant-flag t) nil [28656 28663])
            ("cursorY" variable (:constant-flag t) nil [28684 28691]))          
      :file "termhooks.h"
      :pointmax 28762
      :fsize 28761
      :lastmodtime '(23408 44231 566224 748000)
      :unmatched-syntax '((symbol 28712 . 28729) (symbol 26144 . 26150) (symbol 26047 . 26053) (symbol 25823 . 25829) (symbol 25737 . 25743) (semantic-list 9699 . 9716) (symbol 9691 . 9698) (punctuation 9625 . 9626) (symbol 9620 . 9624) (semantic-list 9607 . 9619) (symbol 9599 . 9606) (symbol 921 . 940))
      :lexical-table 
        '(("FRAME_TERMINAL" (spp-arg-list ("f") 27076 . 27079) . ((semantic-list "((f)->terminal)" 27080 . 27095)))
          ("FRAME_SCROLL_REGION_OK" (spp-arg-list ("f") 26576 . 26579) . ((semantic-list "(FRAME_TTY (f)->scroll_region_ok)" 26580 . 26613)))
          ("FRAME_MEMORY_BELOW_FRAME" (spp-arg-list ("f") 26718 . 26721) . ((semantic-list "(FRAME_TTY (f)->memory_below_frame)" 26722 . 26757)))
          ("FRAME_TERMINAL_CODING" (spp-arg-list ("f") 26788 . 26791) . ((semantic-list "((f)->terminal->terminal_coding)" 26792 . 26824)))
          ("FRAME_KEYBOARD_CODING" (spp-arg-list ("f") 26854 . 26857) . ((semantic-list "((f)->terminal->keyboard_coding)" 26858 . 26890)))
          ("FRAME_CHAR_INS_DEL_OK" (spp-arg-list ("f") 26509 . 26512) . ((semantic-list "(FRAME_TTY (f)->char_ins_del_ok)" 26513 . 26545)))
          ("TERMINAL_TERMINAL_CODING" (spp-arg-list ("d") 26924 . 26927) . ((semantic-list "((d)->terminal_coding)" 26928 . 26950)))
          ("TERMINAL_KEYBOARD_CODING" (spp-arg-list ("d") 26983 . 26986) . ((semantic-list "((d)->keyboard_coding)" 26987 . 27009)))
          ("FRAME_MUST_WRITE_SPACES" (spp-arg-list ("f") 26375 . 26378) . ((semantic-list "(FRAME_TTY (f)->must_write_spaces)" 26379 . 26413)))
          ("EMACS_TERMHOOKS_H")
          ("TERMINAL_ACTIVE_P" (spp-arg-list ("d") 27182 . 27185) . ((semantic-list "(((d)->type != output_termcap && (d)->type != output_msdos_raw)	\\
   || (d)->display_info.tty->input)" 27195 . 27296)))
          ("FRAME_SCROLL_REGION_COST" (spp-arg-list ("f") 26646 . 26649) . ((semantic-list "(FRAME_TTY (f)->scroll_region_cost)" 26650 . 26685)))
          ("cursorX" (spp-arg-list ("t") 28663 . 28666) . ((symbol "curX" 28668 . 28672) (semantic-list "(t)" 28672 . 28675)))
          ("EVENT_INIT" (spp-arg-list ("event") 10812 . 10819) . ((symbol "memset" 10820 . 10826) (semantic-list "(&(event), 0, sizeof (struct input_event))" 10827 . 10869)))
          ("FRAME_LINE_INS_DEL_OK" (spp-arg-list ("f") 26443 . 26446) . ((semantic-list "(FRAME_TTY (f)->line_ins_del_ok)" 26447 . 26479)))
          ("cursorY" (spp-arg-list ("t") 28691 . 28694) . ((symbol "curY" 28696 . 28700) (semantic-list "(t)" 28700 . 28703)))
          ("FRAME_RIF" (spp-arg-list ("f") 27028 . 27031) . ((semantic-list "((f)->terminal->rif)" 27032 . 27052)))
          )
)
    (semanticdb-table "semanticdb-table-1a3c990"
      :major-mode c-mode
      :tags 
        '( ("EMACS_REGEX_H" variable (:constant-flag t) nil [782 795])
            ("stddef.h" include (:system-flag t) nil [799 818])
            ("re_registers" type
               (:members 
                  ( ("num_regs" variable (:type "unsigned int") (reparse-symbol classsubparts) [1004 1022])
                    ("start" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1025 1042])
                    ("end" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1045 1060]))                  
                :type "struct")
                nil [980 1063])
            ("lisp.h" include nil nil [1065 1082])
            ("re_match_object" variable
               (:typemodifiers ("extern")
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [1698 1733])
            ("emacs_re_max_failures" variable
               (:typemodifiers ("extern")
                :type ("size_t" type (:type "class") nil nil))
                nil [1801 1837])
            ("emacs_re_safe_alloca" variable
               (:typemodifiers ("extern")
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [1898 1936])
            ("re_pattern_buffer" type
               (:members 
                  ( ("buffer" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [2438 2460])
                    ("allocated" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2514 2531])
                    ("used" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2586 2598])
                    ("charset_unibyte" variable (:type "int") (reparse-symbol classsubparts) [2666 2686])
                    ("fastmap" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [2872 2886])
                    ("translate" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3135 3157])
                    ("re_nsub" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3217 3232])
                    ("can_be_null" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [3511 3536])
                    ("regs_allocated" variable
                       (:suffix ":2"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [3776 3804])
                    ("fastmap_accurate" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [3951 3981])
                    ("used_syntax" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [4140 4165])
                    ("multibyte" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [4277 4300])
                    ("target_multibyte" variable
                       (:suffix ":1"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [4413 4443]))                  
                :type "struct")
                nil [2246 4446])
            ("re_compile_pattern" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :constant-flag t
                :arguments 
                  ( ("pattern" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4727 4747])
                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4748 4762])
                    ("posix_backtracking" variable (:type "bool") (reparse-symbol arg-sub-list) [4774 4798])
                    ("whitespace_regexp" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4810 4840])
                    ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4852 4885]))                  
                :type "char")
                nil [4688 4886])
            ("re_search" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5236 5269])
                    ("string" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5276 5295])
                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5296 5310])
                    ("start" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5317 5333])
                    ("range" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5334 5350])
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5357 5383]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [5208 5384])
            ("re_search_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5546 5579])
                    ("string1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5588 5608])
                    ("length1" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5609 5624])
                    ("string2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5633 5653])
                    ("length2" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5654 5669])
                    ("start" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5678 5694])
                    ("range" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5695 5711])
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5720 5746])
                    ("stop" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5755 5770]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [5516 5771])
            ("re_match_2" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5932 5965])
                    ("string1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5973 5993])
                    ("length1" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5994 6009])
                    ("string2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6017 6037])
                    ("length2" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6038 6053])
                    ("start" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6061 6077])
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6078 6104])
                    ("stop" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6112 6127]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [5903 6128])
            ("re_set_registers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("buffer" variable
                       (:pointer 1
                        :type ("re_pattern_buffer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6713 6746])
                    ("regs" variable
                       (:pointer 1
                        :type ("re_registers" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6756 6782])
                    ("num_regs" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6792 6810])
                    ("starts" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6820 6838])
                    ("ends" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6839 6855]))                  
                :type "void")
                nil [6683 6856])
            ("re_wctype_t" type
               (:typedef ("" type
                     (:members 
                        ( ("RECC_ERROR" variable
                             (:constant-flag t
                              :default-value (6912 6913)
                              :type "int")
                              (reparse-symbol enumsubparts) [6899 6913])
                          ("RECC_ALNUM" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6923 6934])
                          ("RECC_ALPHA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6935 6946])
                          ("RECC_WORD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6947 6957])
                          ("RECC_GRAPH" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6966 6977])
                          ("RECC_PRINT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6978 6989])
                          ("RECC_LOWER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6998 7009])
                          ("RECC_UPPER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7010 7021])
                          ("RECC_PUNCT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7030 7041])
                          ("RECC_CNTRL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7042 7053])
                          ("RECC_DIGIT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7062 7073])
                          ("RECC_XDIGIT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7074 7086])
                          ("RECC_BLANK" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7095 7106])
                          ("RECC_SPACE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7107 7118])
                          ("RECC_MULTIBYTE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7127 7142])
                          ("RECC_NONASCII" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7143 7157])
                          ("RECC_ASCII" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7166 7177])
                          ("RECC_UNIBYTE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7178 7192]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [6884 7205])
            ("re_iswctype" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("ch" variable (:type "int") (reparse-symbol arg-sub-list) [7232 7239])
                    ("cc" variable (:type ("re_wctype_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7240 7255]))                  
                :type "bool")
                nil [7207 7256])
            ("re_wctype_parse" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("strp" variable
                       (:pointer 2
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [7293 7320])
                    ("limit" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7329 7344]))                  
                :type ("re_wctype_t" type (:type "class") nil nil))
                nil [7257 7345]))          
      :file "regex-emacs.h"
      :pointmax 7374
      :fsize 7373
      :lastmodtime '(23404 19614 897309 262000)
      :unmatched-syntax nil
      :lexical-table 
        '(("EMACS_REGEX_H" . ((number "1" 796 . 797)))
          )
)
    (semanticdb-table "semanticdb-table-1a3c9b0"
      :major-mode c-mode
      :tags 
        '( ("SYSSELECT_H" variable (:constant-flag t) nil [807 818])
            ("sys/select.h" include (:system-flag t) nil [837 860])
            ("lisp.h" include nil nil [869 886])
            ("FD_SETSIZE" variable (:constant-flag t) nil [1196 1206])
            ("fd_set" type
               (:typedef ("int")
                :type "typedef")
                nil [1210 1229])
            ("FD_SET" variable (:constant-flag t) nil [1310 1316])
            ("FD_CLR" variable (:constant-flag t) nil [1352 1358])
            ("FD_ISSET" variable (:constant-flag t) nil [1395 1403])
            ("FD_ZERO" variable (:constant-flag t) nil [1438 1445])
            ("select" variable (:constant-flag t) nil [1546 1552])
            ("fd_CLR" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [2020 2027])
                    ("set" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2028 2040]))                  
                :type "void")
                nil [2007 2104])
            ("fd_ISSET" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [2128 2135])
                    ("set" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2136 2148]))                  
                :type "bool")
                nil [2113 2226])
            ("fd_SET" function
               (:arguments 
                  ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [2248 2255])
                    ("set" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2256 2268]))                  
                :type "void")
                nil [2235 2332])
            ("FD_CLR" variable (:constant-flag t) nil [2386 2392])
            ("FD_ISSET" variable (:constant-flag t) nil [2427 2435])
            ("FD_SET" variable (:constant-flag t) nil [2472 2478]))          
      :file "sysselect.h"
      :pointmax 2557
      :fsize 2556
      :lastmodtime '(23336 3763 603020 817000)
      :unmatched-syntax '((symbol 2506 . 2523) (symbol 2228 . 2234) (symbol 2106 . 2112) (symbol 2000 . 2006) (symbol 1910 . 1929))
      :lexical-table 
        '(("FD_ZERO" (spp-arg-list ("p") 1445 . 1448) . ((semantic-list "(*(p) = 0)" 1449 . 1459)))
          ("SYSSELECT_H" . ((number "1" 819 . 820)))
          ("FD_ISSET" (spp-arg-list ("fd" "set") 2435 . 2444) . ((symbol "fd_ISSET" 2445 . 2453) (semantic-list "(fd, set)" 2454 . 2463)))
          ("FD_SET" (spp-arg-list ("fd" "set") 2478 . 2487) . ((symbol "fd_SET" 2488 . 2494) (semantic-list "(fd, set)" 2495 . 2504)))
          ("FD_CLR" (spp-arg-list ("fd" "set") 2392 . 2401) . ((symbol "fd_CLR" 2402 . 2408) (semantic-list "(fd, set)" 2409 . 2418)))
          ("FD_SETSIZE" . ((number "32" 1207 . 1209)))
          ("select" . ((symbol "sys_select" 1553 . 1563)))
          )
)
    (semanticdb-table "semanticdb-table-1a3c9d0"
      :major-mode c-mode
      :tags 
        '( ("EMACS_SYSTIME_H" variable (:constant-flag t) nil [813 828])
            ("timespec.h" include (:system-flag t) nil [830 851])
            ("sys/time.h" include (:system-flag t) nil [1200 1221])
            ("invalid_timespec" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1692 1697]))                  
                :type ("timespec" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1658 1733])
            ("timespec_valid_p" function
               (:arguments 
                  ( ("t" variable (:type ("timespec" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [1951 1969]))                  
                :type "bool")
                nil [1928 1998])
            ("current_timespec" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2076 2081]))                  
                :type ("timespec" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2042 2134])
            ("set_file_times" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2189 2193])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2194 2207])
                    ("" variable (:type ("timespec" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [2208 2224])
                    ("" variable (:type ("timespec" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [2225 2241]))                  
                :type "int")
                nil [2162 2242])
            ("ATTRIBUTE_CONST" variable (:type "int") nil [2296 2312])
            ("set_waiting_for_input" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("timespec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2377 2395]))                  
                :type "void")
                nil [2342 2396]))          
      :file "systime.h"
      :pointmax 3188
      :fsize 3187
      :lastmodtime '(23336 3763 603020 817000)
      :unmatched-syntax '((symbol 3140 . 3157) (semantic-list 2278 . 2295) (symbol 2265 . 2277) (symbol 2257 . 2264) (STRUCT 2250 . 2256) (EXTERN 2243 . 2249) (symbol 2035 . 2041) (symbol 1921 . 1927) (symbol 1651 . 1657) (symbol 853 . 872))
      :lexical-table 
        '(("EMACS_SYSTIME_H")
          )
)
    (semanticdb-table "semanticdb-table-1a3c9f0"
      :major-mode c-mode
      :tags 
        '( ("SYSTHREAD_H" variable (:constant-flag t) nil [756 767])
            ("stdbool.h" include (:system-flag t) nil [769 789])
            ("__has_attribute" variable (:constant-flag t) nil [824 839])
            ("ATTRIBUTE_WARN_UNUSED_RESULT" variable (:constant-flag t) nil [996 1024])
            ("sys_mutex_t" type
               (:typedef ("int")
                :type "typedef")
                nil [2544 2568])
            ("sys_cond_t" type
               (:typedef ("int")
                :type "typedef")
                nil [2569 2592])
            ("sys_thread_t" type
               (:typedef ("int")
                :type "typedef")
                nil [2593 2618])
            ("thread_creation_function" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2692 2699]))                  
                :type "void")
                nil [2658 2700])
            ("sys_mutex_init" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_mutex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2730 2744]))                  
                :type "void")
                nil [2702 2745])
            ("sys_mutex_lock" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_mutex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2774 2788]))                  
                :type "void")
                nil [2746 2789])
            ("sys_mutex_unlock" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_mutex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2820 2834]))                  
                :type "void")
                nil [2790 2835])
            ("sys_cond_init" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_cond_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2864 2877]))                  
                :type "void")
                nil [2837 2878])
            ("sys_cond_wait" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_cond_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2906 2919])
                    ("" variable
                       (:pointer 1
                        :type ("sys_mutex_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2920 2934]))                  
                :type "void")
                nil [2879 2935])
            ("sys_cond_signal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_cond_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2965 2978]))                  
                :type "void")
                nil [2936 2979])
            ("sys_cond_broadcast" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_cond_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3012 3025]))                  
                :type "void")
                nil [2980 3026])
            ("sys_cond_destroy" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_cond_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3057 3070]))                  
                :type "void")
                nil [3027 3071])
            ("sys_thread_self" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3110 3115]))                  
                :type ("sys_thread_t" type (:type "class") nil nil))
                nil [3073 3147])
            ("sys_thread_equal" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("sys_thread_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3178 3191])
                    ("" variable (:type ("sys_thread_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3192 3205]))                  
                :type "bool")
                nil [3148 3237])
            ("sys_thread_create" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("sys_thread_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3270 3285])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3286 3299])
                    ("" variable
                       (:pointer 1
                        :type ("thread_creation_function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3331 3358])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [3359 3366]))                  
                :type "bool")
                nil [3239 3398])
            ("sys_thread_yield" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3430 3435]))                  
                :type "void")
                nil [3400 3436]))          
      :file "systhread.h"
      :pointmax 3463
      :fsize 3462
      :lastmodtime '(23336 3763 603020 817000)
      :unmatched-syntax '((TYPEDEF 2650 . 2657))
      :lexical-table 
        '(("SYSTHREAD_H")
          ("ATTRIBUTE_WARN_UNUSED_RESULT")
          ("__has_attribute" (spp-arg-list ("a") 839 . 842) . ((symbol "false" 843 . 848)))
          )
)
    (semanticdb-table "semanticdb-table-1d22f80"
      :major-mode c-mode
      :tags 
        '( ("EMACS_FONT_H" variable (:constant-flag t) nil [948 960])
            ("composition_it" type
               (:prototype t
                :type "struct")
                nil [962 984])
            ("face" type
               (:prototype t
                :type "struct")
                nil [985 997])
            ("glyph_string" type
               (:prototype t
                :type "struct")
                nil [998 1018])
            ("font_property_index" type
               (:members 
                  ( ("FONT_TYPE_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2342 2358])
                    ("FONT_FOUNDRY_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2416 2435])
                    ("FONT_FAMILY_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2491 2509])
                    ("FONT_ADSTYLE_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2577 2596])
                    ("FONT_REGISTRY_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2709 2729])
                    ("FONT_WEIGHT_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2982 3000])
                    ("FONT_SLANT_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3246 3263])
                    ("FONT_WIDTH_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3508 3525])
                    ("FONT_SIZE_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3748 3764])
                    ("FONT_DPI_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3859 3874])
                    ("FONT_SPACING_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4004 4023])
                    ("FONT_AVGWIDTH_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4112 4132])
                    ("FONT_EXTRA_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5868 5885])
                    ("FONT_SPEC_MAX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5968 5982])
                    ("FONT_OBJLIST_INDEX" variable
                       (:constant-flag t
                        :default-value (6148 6161)
                        :type "int")
                        (reparse-symbol enumsubparts) [6127 6161])
                    ("FONT_ENTITY_MAX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6227 6243])
                    ("FONT_NAME_INDEX" variable
                       (:constant-flag t
                        :default-value (6369 6384)
                        :type "int")
                        (reparse-symbol enumsubparts) [6351 6384])
                    ("FONT_FULLNAME_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6588 6608])
                    ("FONT_FILE_INDEX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6714 6730])
                    ("FONT_OBJECT_MAX" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6795 6814]))                  
                :type "enum")
                nil [2117 6815])
            ("FONT_WEIGHT_NUMERIC" variable (:constant-flag t) nil [6873 6892])
            ("FONT_SLANT_NUMERIC" variable (:constant-flag t) nil [7066 7084])
            ("FONT_WIDTH_NUMERIC" variable (:constant-flag t) nil [7256 7274])
            ("FONT_WEIGHT_SYMBOLIC" variable (:constant-flag t) nil [7448 7468])
            ("FONT_SLANT_SYMBOLIC" variable (:constant-flag t) nil [7588 7607])
            ("FONT_WIDTH_SYMBOLIC" variable (:constant-flag t) nil [7726 7745])
            ("FONT_WEIGHT_FOR_FACE" variable (:constant-flag t) nil [7883 7903])
            ("FONT_SLANT_FOR_FACE" variable (:constant-flag t) nil [8039 8058])
            ("FONT_WIDTH_FOR_FACE" variable (:constant-flag t) nil [8194 8213])
            ("FONT_WEIGHT_NAME_NUMERIC" variable (:constant-flag t) nil [8357 8381])
            ("FONT_SLANT_NAME_NUMERIC" variable (:constant-flag t) nil [8534 8557])
            ("FONT_WIDTH_NAME_NUMERIC" variable (:constant-flag t) nil [8709 8732])
            ("FONT_SET_STYLE" variable (:constant-flag t) nil [9016 9030])
            ("FONT_WIDTH" variable (:constant-flag t) nil [9148 9158])
            ("FONT_HEIGHT" variable (:constant-flag t) nil [9224 9235])
            ("FONT_BASE" variable (:constant-flag t) nil [9261 9270])
            ("FONT_DESCENT" variable (:constant-flag t) nil [9296 9308])
            ("font_spec" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [9385 9416])
                    ("props" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9419 9452]))                  
                :type "struct")
                nil [9364 9455])
            ("font_entity" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [9517 9548])
                    ("props" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9551 9586]))                  
                :type "struct")
                nil [9494 9589])
            ("FONT_ENCODING_NOT_DECIDED" variable (:constant-flag t) nil [9747 9772])
            ("font" type
               (:members 
                  ( ("header" variable (:type ("vectorlike_header" type (:type "union") nil nil)) (reparse-symbol classsubparts) [9831 9862])
                    ("props" variable
                       (:dereference 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9969 10004])
                    ("min_width" variable (:type "int") (reparse-symbol classsubparts) [10313 10327])
                    ("max_width" variable (:type "int") (reparse-symbol classsubparts) [10330 10344])
                    ("pixel_size" variable (:type "int") (reparse-symbol classsubparts) [10397 10412])
                    ("height" variable (:type "int") (reparse-symbol classsubparts) [10516 10527])
                    ("space_width" variable (:type "int") (reparse-symbol classsubparts) [10640 10656])
                    ("average_width" variable (:type "int") (reparse-symbol classsubparts) [10883 10901])
                    ("ascent" variable (:type "int") (reparse-symbol classsubparts) [10958 10978])
                    ("descent" variable (:type "int") (reparse-symbol classsubparts) [10958 10978])
                    ("driver" variable
                       (:pointer 1
                        :type ("font_driver" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [14578 14611]))                  
                :type "struct")
                nil [9815 14712])
            ("font_spacing" type
               (:members 
                  ( ("FONT_SPACING_PROPORTIONAL" variable
                       (:constant-flag t
                        :default-value (14768 14769)
                        :type "int")
                        (reparse-symbol enumsubparts) [14740 14769])
                    ("FONT_SPACING_DUAL" variable
                       (:constant-flag t
                        :default-value (14795 14797)
                        :type "int")
                        (reparse-symbol enumsubparts) [14775 14797])
                    ("FONT_SPACING_MONO" variable
                       (:constant-flag t
                        :default-value (14823 14826)
                        :type "int")
                        (reparse-symbol enumsubparts) [14803 14826])
                    ("FONT_SPACING_CHARCELL" variable
                       (:constant-flag t
                        :default-value (14856 14859)
                        :type "int")
                        (reparse-symbol enumsubparts) [14832 14859]))                  
                :type "enum")
                nil [14714 14864])
            ("font_metrics" type
               (:members 
                  ( ("lbearing" variable (:type "short") (reparse-symbol classsubparts) [14890 14939])
                    ("rbearing" variable (:type "short") (reparse-symbol classsubparts) [14890 14939])
                    ("width" variable (:type "short") (reparse-symbol classsubparts) [14890 14939])
                    ("ascent" variable (:type "short") (reparse-symbol classsubparts) [14890 14939])
                    ("descent" variable (:type "short") (reparse-symbol classsubparts) [14890 14939]))                  
                :type "struct")
                nil [14866 14942])
            ("font_bitmap" type
               (:members 
                  ( ("bits_per_pixel" variable (:type "int") (reparse-symbol classsubparts) [14967 14986])
                    ("rows" variable (:type "int") (reparse-symbol classsubparts) [14989 14998])
                    ("width" variable (:type "int") (reparse-symbol classsubparts) [15001 15011])
                    ("pitch" variable (:type "int") (reparse-symbol classsubparts) [15014 15024])
                    ("buffer" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [15027 15049])
                    ("left" variable (:type "int") (reparse-symbol classsubparts) [15052 15061])
                    ("top" variable (:type "int") (reparse-symbol classsubparts) [15064 15072])
                    ("advance" variable (:type "int") (reparse-symbol classsubparts) [15075 15087]))                  
                :type "struct")
                nil [14944 15090])
            ("FONTP" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15238 15252]))                  
                :type "bool")
                nil [15226 15295])
            ("FONT_SPEC_P" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15354 15368]))                  
                :type "bool")
                nil [15336 15423])
            ("GC_FONT_SPEC_P" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15520 15534]))                  
                :type "bool")
                nil [15499 15618])
            ("FONT_ENTITY_P" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15681 15695]))                  
                :type "bool")
                nil [15661 15752])
            ("GC_FONT_ENTITY_P" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15853 15867]))                  
                :type "bool")
                nil [15830 15953])
            ("FONT_OBJECT_P" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16016 16030]))                  
                :type "bool")
                nil [15996 16087])
            ("GC_FONT_OBJECT_P" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16188 16202]))                  
                :type "bool")
                nil [16165 16288])
            ("CHECK_FONT" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16380 16394]))                  
                :type "void")
                nil [16363 16434])
            ("CHECK_FONT_SPEC" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16465 16479]))                  
                :type "void")
                nil [16443 16530])
            ("CHECK_FONT_ENTITY" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16563 16577]))                  
                :type "void")
                nil [16539 16632])
            ("CHECK_FONT_OBJECT" function
               (:arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16665 16679]))                  
                :type "void")
                nil [16641 16734])
            ("XFONT_SPEC" function
               (:pointer 1
                :arguments 
                  ( ("p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16847 16861]))                  
                :type ("font_spec" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [16816 16950])
            ("GC_XFONT_SPEC" function
               (:pointer 1
                :arguments 
                  ( ("p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16993 17007]))                  
                :type ("font_spec" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [16959 17099])
            ("XFONT_ENTITY" function
               (:pointer 1
                :arguments 
                  ( ("p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17143 17157]))                  
                :type ("font_entity" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17108 17250])
            ("GC_XFONT_ENTITY" function
               (:pointer 1
                :arguments 
                  ( ("p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17297 17311]))                  
                :type ("font_entity" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17259 17407])
            ("XFONT_OBJECT" function
               (:pointer 1
                :arguments 
                  ( ("p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17444 17458]))                  
                :type ("font" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17416 17544])
            ("GC_XFONT_OBJECT" function
               (:pointer 1
                :arguments 
                  ( ("p" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17584 17598]))                  
                :type ("font" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17553 17687])
            ("XSETFONT" variable (:constant-flag t) nil [17697 17705])
            ("CHECK_FONT_GET_OBJECT" function
               (:pointer 1
                :arguments 
                  ( ("x" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17794 17808]))                  
                :type ("font" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17757 17864])
            ("PT_PER_INCH" variable (:constant-flag t) nil [17923 17934])
            ("POINT_TO_PIXEL" variable (:constant-flag t) nil [18046 18060])
            ("PIXEL_TO_POINT" variable (:constant-flag t) nil [18472 18486])
            ("FONT_PIXEL_SIZE_QUANTUM" variable (:constant-flag t) nil [18632 18655])
            ("FONT_INVALID_CODE" variable (:constant-flag t) nil [18667 18684])
            ("font_driver" type
               (:members 
                  ( ("type" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18843 18860])
                    ("case_sensitive" variable (:type "bool") (reparse-symbol classsubparts) [18953 18973])
                    ("get_cache" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [19128 19144]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19102 19145])
                    ("list" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("frame" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [20297 20317])
                            ("font_spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20318 20340]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20276 20341])
                    ("match" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [20694 20710])
                            ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20711 20728]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20672 20729])
                    ("list_family" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [20863 20879]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20835 20880])
                    ("free_entity" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font_entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20973 20997]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [20952 20998])
                    ("open" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21137 21153])
                            ("font_entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21154 21178])
                            ("pixel_size" variable (:type "int") (reparse-symbol arg-sub-list) [21202 21217]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21116 21218])
                    ("close" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21291 21309]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21276 21310])
                    ("prepare_face" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21445 21461])
                            ("face" variable
                               (:pointer 1
                                :type ("face" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21462 21480]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21423 21481])
                    ("done_face" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21590 21606])
                            ("face" variable
                               (:pointer 1
                                :type ("face" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21607 21625]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21571 21626])
                    ("has_char" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21867 21884])
                            ("c" variable (:type "int") (reparse-symbol arg-sub-list) [21885 21891]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [21850 21892])
                    ("encode_char" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [22062 22080])
                            ("c" variable (:type "int") (reparse-symbol arg-sub-list) [22081 22087]))                          
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [22037 22088])
                    ("text_extents" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [22279 22297])
                            ("code" variable
                               (:pointer 1
                                :type "unsigned int")
                                (reparse-symbol arg-sub-list) [22301 22316])
                            ("nglyphs" variable (:type "int") (reparse-symbol arg-sub-list) [22317 22329])
                            ("metrics" variable
                               (:pointer 1
                                :type ("font_metrics" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [22333 22362]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [22257 22363])
                    ("anchor_point" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [23500 23518])
                            ("code" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [23519 23533])
                            ("index" variable (:type "int") (reparse-symbol arg-sub-list) [23534 23544])
                            ("x" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [23568 23575])
                            ("y" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [23576 23583]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [23479 23584])
                    ("otf_capability" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [23759 23777]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [23728 23778])
                    ("otf_drive" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24436 24454])
                            ("features" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24455 24476])
                            ("gstring_in" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24497 24520])
                            ("from" variable (:type "int") (reparse-symbol arg-sub-list) [24521 24530])
                            ("to" variable (:type "int") (reparse-symbol arg-sub-list) [24531 24538])
                            ("gstring_out" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24559 24583])
                            ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [24584 24592])
                            ("alternate_subst" variable (:type "bool") (reparse-symbol arg-sub-list) [24593 24614]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [24418 24615])
                    ("start_for_frame" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24824 24840]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [24800 24841])
                    ("end_for_frame" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24982 24998]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [24960 24999])
                    ("shape" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("lgstring" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25732 25753]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25710 25754])
                    ("check" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25986 26002])
                            ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [26003 26021]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [25972 26022])
                    ("get_variation_glyphs" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [26327 26345])
                            ("c" variable (:type "int") (reparse-symbol arg-sub-list) [26377 26383])
                            ("variations" variable
                               (:dereference 1
                                :type "unsigned int")
                                (reparse-symbol arg-sub-list) [26384 26409]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [26298 26410])
                    ("filter_properties" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26441 26458])
                            ("properties" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26459 26482]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [26414 26483])
                    ("cached_font_ok" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [26626 26642])
                            ("font_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26669 26693])
                            ("entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26720 26739]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [26602 26740])
                    ("combining_capability" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("font" variable
                               (:pointer 1
                                :type ("font" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [26928 26946]))                          
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26891 26947])
                    ("drop_xrender_surfaces" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("f" variable
                               (:pointer 1
                                :type ("frame" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [27191 27207]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [27160 27208]))                  
                :type "struct")
                nil [18764 27211])
            ("font_driver_list" type
               (:members 
                  ( ("on" variable (:type "bool") (reparse-symbol classsubparts) [27523 27531])
                    ("driver" variable
                       (:pointer 1
                        :type ("font_driver" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [27571 27604])
                    ("next" variable
                       (:pointer 1
                        :type ("font_driver_list" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [27658 27688]))                  
                :type "struct")
                nil [27396 27691])
            ("copy_font_spec" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27728 27740]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27693 27741])
            ("merge_font_spec" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27778 27790])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27791 27803]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27742 27804])
            ("font_make_entity" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [27843 27848]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27806 27849])
            ("font_make_object" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [27887 27891])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27892 27904])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [27905 27909]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [27850 27910])
            ("find_font_encoding" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28107 28119]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28068 28120])
            ("font_registry_charsets" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28156 28168])
                    ("" variable
                       (:pointer 2
                        :type ("charset" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28169 28187])
                    ("" variable
                       (:pointer 2
                        :type ("charset" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28223 28241]))                  
                :type "int")
                nil [28121 28242])
            ("font_style_to_value" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("prop" variable (:type ("font_property_index" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [28275 28305])
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28338 28355])
                    ("noerror" variable (:type "bool") (reparse-symbol arg-sub-list) [28356 28369]))                  
                :type "int")
                nil [28243 28370])
            ("font_style_symbolic" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28411 28428])
                    ("prop" variable (:type ("font_property_index" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [28469 28499])
                    ("for_face" variable (:type "bool") (reparse-symbol arg-sub-list) [28540 28554]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28371 28555])
            ("font_match_p" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28583 28600])
                    ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28601 28618]))                  
                :type "bool")
                nil [28557 28619])
            ("font_list_entities" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28659 28674])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28675 28687]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28620 28688])
            ("font_get_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28724 28748]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28690 28749])
            ("font_spec_from_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font_name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28790 28812]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28750 28813])
            ("font_get_frame" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font_object" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28849 28873]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [28814 28874])
            ("font_has_char" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28901 28916])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28917 28929])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28930 28934]))                  
                :type "int")
                nil [28875 28935])
            ("font_clear_prop" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("attrs" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28966 28985])
                    ("prop" variable (:type ("font_property_index" type (:type "enum") nil nil)) (reparse-symbol arg-sub-list) [29015 29045]))                  
                :type "void")
                nil [28937 29046])
            ("font_find_for_lface" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29087 29103])
                    ("lface" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29104 29123])
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29164 29181])
                    ("c" variable (:type "int") (reparse-symbol arg-sub-list) [29182 29188]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29047 29189])
            ("font_open_for_lface" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29230 29246])
                    ("entity" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29247 29266])
                    ("lface" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29307 29326])
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29367 29384]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29190 29385])
            ("font_load_for_lface" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29426 29442])
                    ("lface" variable
                       (:pointer 1
                        :type ("Lisp_Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29443 29462])
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29503 29520]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29386 29521])
            ("font_prepare_for_face" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29557 29573])
                    ("face" variable
                       (:pointer 1
                        :type ("face" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29574 29592]))                  
                :type "void")
                nil [29522 29593])
            ("font_done_for_face" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29626 29642])
                    ("face" variable
                       (:pointer 1
                        :type ("face" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29643 29661]))                  
                :type "void")
                nil [29594 29662])
            ("clear_font_cache" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29693 29708]))                  
                :type "void")
                nil [29663 29709])
            ("font_open_by_spec" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29749 29765])
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29766 29783]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29711 29784])
            ("font_open_by_name" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29823 29839])
                    ("name" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29840 29857]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29785 29858])
            ("font_intern_prop" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [29897 29913])
                    ("len" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29914 29928])
                    ("force_symbol" variable (:type "bool") (reparse-symbol arg-sub-list) [29938 29956]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [29860 29957])
            ("font_update_sort_order" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("order" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [29994 30005]))                  
                :type "void")
                nil [29958 30006])
            ("font_parse_family_registry" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("family" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30048 30067])
                    ("registry" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30108 30129])
                    ("spec" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30170 30187]))                  
                :type "void")
                nil [30008 30188])
            ("font_parse_xlfd" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [30218 30229])
                    ("len" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30230 30244])
                    ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30245 30262]))                  
                :type "int")
                nil [30190 30263])
            ("font_unparse_xlfd" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30300 30317])
                    ("pixel_size" variable (:type "int") (reparse-symbol arg-sub-list) [30318 30333])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [30342 30353])
                    ("bytes" variable (:type "int") (reparse-symbol arg-sub-list) [30354 30364]))                  
                :type ("ptrdiff_t" type (:type "class") nil nil))
                nil [30264 30365])
            ("register_font_driver" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("font_driver" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30400 30427])
                    ("" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30428 30443]))                  
                :type "void")
                nil [30366 30444])
            ("free_font_driver_list" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30480 30496]))                  
                :type "void")
                nil [30445 30497])
            ("valid_font_driver" function
               (:arguments 
                  ( ("d" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("font_driver" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30618 30646]))                  
                :type "bool")
                nil [30594 30665])
            ("font_update_drivers" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30713 30729])
                    ("list" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30730 30747]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30673 30748])
            ("font_range" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30780 30790])
                    ("" variable (:type ("ptrdiff_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30791 30801])
                    ("" variable
                       (:pointer 1
                        :type ("ptrdiff_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30802 30814])
                    ("" variable
                       (:pointer 1
                        :type ("window" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30825 30841])
                    ("" variable
                       (:pointer 1
                        :type ("face" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30842 30856])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30867 30879]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30749 30880])
            ("font_fill_lglyph_metrics" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30919 30931])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30932 30944]))                  
                :type "void")
                nil [30881 30945])
            ("font_put_extra" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30982 30999])
                    ("prop" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31000 31017])
                    ("val" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31053 31069]))                  
                :type ("Lisp_Object" type (:type "class") nil nil))
                nil [30947 31070])
            ("font_filter_properties" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("font" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31334 31351])
                    ("alist" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31360 31378])
                    ("boolean_properties" variable
                       (:pointer 1
                        :dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [31387 31426])
                    ("non_boolean_properties" variable
                       (:pointer 1
                        :dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [31463 31506]))                  
                :type "void")
                nil [31298 31507])
            ("font_drop_xrender_surfaces" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("f" variable
                       (:pointer 1
                        :type ("frame" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [31549 31565]))                  
                :type "void")
                nil [31509 31566])
            ("FONT_DEBUG" variable (:constant-flag t) nil [33650 33660])
            ("font_add_log" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [33695 33708])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33709 33721])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33722 33734]))                  
                :type "void")
                nil [33669 33735])
            ("font_deferred_log" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [33767 33780])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33781 33793])
                    ("" variable (:type ("Lisp_Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33794 33806]))                  
                :type "void")
                nil [33736 33807])
            ("FONT_ADD_LOG" variable (:constant-flag t) nil [33817 33829])
            ("FONT_DEFERRED_LOG" variable (:constant-flag t) nil [33978 33995])
            ("font_data_structures_may_be_ill_formed" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [34418 34423]))                  
                :type "bool")
                nil [34373 34592]))          
      :file "font.h"
      :pointmax 34643
      :fsize 34642
      :lastmodtime '(23408 44231 542891 230000)
      :unmatched-syntax '((symbol 34594 . 34611) (symbol 34366 . 34372) (symbol 30587 . 30593) (symbol 17750 . 17756) (symbol 17546 . 17552) (symbol 17409 . 17415) (symbol 17252 . 17258) (symbol 17101 . 17107) (symbol 16952 . 16958) (symbol 16809 . 16815) (symbol 16634 . 16640) (symbol 16532 . 16538) (symbol 16436 . 16442) (symbol 16356 . 16362) (symbol 16158 . 16164) (symbol 15989 . 15995) (symbol 15823 . 15829) (symbol 15654 . 15660) (symbol 15492 . 15498) (symbol 15329 . 15335) (symbol 15219 . 15225) (symbol 1020 . 1039))
      :lexical-table 
        '(("FONT_WIDTH_NAME_NUMERIC" (spp-arg-list ("name") 8732 . 8738) . ((semantic-list "(font_style_to_value (FONT_WIDTH_INDEX, (name), false) >> 8)" 8743 . 8803)))
          ("FONT_WIDTH" (spp-arg-list ("f") 9158 . 9161) . ((semantic-list "((f)->max_width)" 9162 . 9178)))
          ("FONT_DEBUG")
          ("FONT_ADD_LOG" (spp-arg-list ("ACTION" "ARG" "RESULT") 33829 . 33850) . 
              ((DO "do" 33855 . 33857) (semantic-list "{						\\
    if (! EQ (Vfont_log, Qt))			\\
      font_add_log ((ACTION), (ARG), (RESULT));	\\
  }" 33858 . 33954) (WHILE "while" 33955 . 33960) (semantic-list "(false)" 33961 . 33968)))
          ("FONT_SLANT_NUMERIC" (spp-arg-list ("font") 7084 . 7090) . ((semantic-list "(FIXNUMP (AREF ((font), FONT_SLANT_INDEX))	\\
   ? (XFIXNUM (AREF ((font), FONT_SLANT_INDEX)) >> 8) : -1)" 7096 . 7200)))
          ("FONT_BASE" (spp-arg-list ("f") 9270 . 9273) . ((semantic-list "((f)->ascent)" 9274 . 9287)))
          ("FONT_DESCENT" (spp-arg-list ("f") 9308 . 9311) . ((semantic-list "((f)->descent)" 9312 . 9326)))
          ("POINT_TO_PIXEL" (spp-arg-list ("POINT" "DPI") 18060 . 18072) . ((semantic-list "((POINT) * (DPI) / PT_PER_INCH + 0.5)" 18073 . 18110)))
          ("PIXEL_TO_POINT" (spp-arg-list ("PIXEL" "DPI") 18486 . 18498) . ((semantic-list "((PIXEL) * PT_PER_INCH / (DPI) + 0.5)" 18499 . 18536)))
          ("FONT_WIDTH_NUMERIC" (spp-arg-list ("font") 7274 . 7280) . ((semantic-list "(FIXNUMP (AREF ((font), FONT_WIDTH_INDEX))	\\
   ? (XFIXNUM (AREF ((font), FONT_WIDTH_INDEX)) >> 8) : -1)" 7286 . 7390)))
          ("FONT_WEIGHT_NAME_NUMERIC" (spp-arg-list ("name") 8381 . 8387) . ((semantic-list "(font_style_to_value (FONT_WEIGHT_INDEX, (name), false) >> 8)" 8392 . 8453)))
          ("XSETFONT" (spp-arg-list ("a" "b") 17705 . 17711) . ((semantic-list "(XSETPSEUDOVECTOR (a, b, PVEC_FONT))" 17712 . 17748)))
          ("FONT_SLANT_FOR_FACE" (spp-arg-list ("font") 8058 . 8064) . ((symbol "font_style_symbolic" 8069 . 8088) (semantic-list "(font, FONT_SLANT_INDEX, true)" 8089 . 8119)))
          ("FONT_ENCODING_NOT_DECIDED" . ((number "255" 9773 . 9776)))
          ("FONT_HEIGHT" (spp-arg-list ("f") 9235 . 9238) . ((semantic-list "((f)->height)" 9239 . 9252)))
          ("FONT_INVALID_CODE" . ((number "0xFFFFFFFF" 18685 . 18695)))
          ("FONT_SLANT_SYMBOLIC" (spp-arg-list ("font") 7607 . 7613) . ((symbol "font_style_symbolic" 7618 . 7637) (semantic-list "(font, FONT_SLANT_INDEX, false)" 7638 . 7669)))
          ("FONT_SET_STYLE" (spp-arg-list ("font" "prop" "val") 9030 . 9047) . ((symbol "ASET" 9052 . 9056) (semantic-list "((font), prop, make_fixnum (font_style_to_value (prop, val, true)))" 9057 . 9124)))
          ("EMACS_FONT_H")
          ("FONT_WIDTH_FOR_FACE" (spp-arg-list ("font") 8213 . 8219) . ((symbol "font_style_symbolic" 8224 . 8243) (semantic-list "(font, FONT_WIDTH_INDEX, true)" 8244 . 8274)))
          ("FONT_SLANT_NAME_NUMERIC" (spp-arg-list ("name") 8557 . 8563) . ((semantic-list "(font_style_to_value (FONT_SLANT_INDEX, (name), false) >> 8)" 8568 . 8628)))
          ("FONT_PIXEL_SIZE_QUANTUM" . ((number "1" 18656 . 18657)))
          ("FONT_WEIGHT_NUMERIC" (spp-arg-list ("font") 6892 . 6898) . ((semantic-list "(FIXNUMP (AREF ((font), FONT_WEIGHT_INDEX))	\\
   ? (XFIXNUM (AREF ((font), FONT_WEIGHT_INDEX)) >> 8) : -1)" 6904 . 7010)))
          ("FONT_WEIGHT_FOR_FACE" (spp-arg-list ("font") 7903 . 7909) . ((symbol "font_style_symbolic" 7914 . 7933) (semantic-list "(font, FONT_WEIGHT_INDEX, true)" 7934 . 7965)))
          ("PT_PER_INCH" . ((number "72.27" 17935 . 17940)))
          ("FONT_WIDTH_SYMBOLIC" (spp-arg-list ("font") 7745 . 7751) . ((symbol "font_style_symbolic" 7756 . 7775) (semantic-list "(font, FONT_WIDTH_INDEX, false)" 7776 . 7807)))
          ("FONT_DEFERRED_LOG" (spp-arg-list ("ACTION" "ARG" "RESULT") 33995 . 34016) . 
              ((DO "do" 34022 . 34024) (semantic-list "{							\\
    if (! EQ (Vfont_log, Qt))				\\
      font_deferred_log ((ACTION), (ARG), (RESULT));	\\
  }" 34025 . 34128) (WHILE "while" 34129 . 34134) (semantic-list "(false)" 34135 . 34142)))
          ("FONT_WEIGHT_SYMBOLIC" (spp-arg-list ("font") 7468 . 7474) . ((symbol "font_style_symbolic" 7479 . 7498) (semantic-list "(font, FONT_WEIGHT_INDEX, false)" 7499 . 7531)))
          )
))
  :file "!home!lk!self!projects!emacs-git!build!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
