;; Object semanticdb-project-database-file-2135a30
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-2135a30"
  :tables
  (list
    (semanticdb-table "semanticdb-table-2030a38"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("dash" include nil nil [1057 1072])
            ("tab-jump-out" customgroup
               (:documentation "Custom group for `tab-jump-out-mode'."
                :user-visible-flag t)
                nil [1074 1187])
            ("defvar-local" code nil nil [1189 1323])
            ("tab-jump-out-fallback" function (:documentation "Fallback behavior of `tab-jump-out'.") nil [1325 1537])
            ("tab-jump-out-original-keybinding" function (:documentation "Get current keys' binding as if `tab-jump-out-' didn't exist.") nil [1539 1853])
            ("tab-jump-out--fallback-translate-input" function
               (:documentation "Emulate `read-key-sequence', at least what I think it does.

Keys should be an untranslated key vector.  Returns a translated
vector of keys.  FIXME not thoroughly tested."
                :arguments ("keys"))
                nil [1855 2861])
            ("tab-jump-out" function
               (:documentation "Use tab to jump out."
                :user-visible-flag t
                :arguments ("arg"))
                nil [2878 3106])
            ("tab-jump-out-mode-map" variable
               (:documentation "Keymap for `tab-jump-out-mode'."
                :default-value (let ((map (make-sparse-keymap))) (define-key map [tab] 'tab-jump-out) map))
                nil [3108 3260])
            ("define-minor-mode" code nil nil [3277 3401])
            ("tab-jump-out" package nil nil [3403 3426]))          
      :file "tab-jump-out.el"
      :pointmax 3457
      :fsize 3456
      :lastmodtime '(23443 9250 249174 198000)
      :unmatched-syntax nil))
  :file "!home!lk!.emacs.d!elpa!tab-jump-out-20151006.130!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
