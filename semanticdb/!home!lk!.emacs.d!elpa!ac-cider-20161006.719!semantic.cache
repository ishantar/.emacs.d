;; Object semanticdb-project-database-file-1768fbc
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1768fbc"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1768f9c"
      :major-mode emacs-lisp-mode
      :tags nil
      :file "ac-cider-autoloads.el"
      :pointmax 355
      :fsize 1593
      :lastmodtime '(23398 10680 477677 222000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-176c6b4"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cider" include nil nil [2495 2511])
            ("auto-complete" include nil nil [2512 2536])
            ("cl-lib" include nil nil [2537 2554])
            ("ac-cider-available-p" function (:documentation "Return t if CIDER supports completion, otherwise nil.") nil [2556 2675])
            ("ac-cider-documentation-cache" variable (:default-value 'nil) nil [2677 2718])
            ("ac-cider" customgroup
               (:documentation "auto-complete sources for cider."
                :user-visible-flag t)
                nil [2743 2846])
            ("ac-cider-show-ns" variable
               (:documentation "Non-nil means rows in the AC popup menu will show the namespace of the item."
                :default-value t)
                nil [2848 2995])
            ("ac-cider-prepare-candidates" function
               (:documentation "Apply changes for auto-complete to the candidates returned from cider-complete."
                :arguments ("candidates"))
                nil [2997 3469])
            ("ac-cider-candidates-everything" function (:documentation "Return all candidates for a symbol at point.") nil [3471 3693])
            ("ac-cider-documentation" function
               (:documentation "Return documentation for the given SYMBOL, if available.
Caches fetched documentation for the current completion call."
                :arguments ("symbol"))
                nil [3695 4820])
            ("ac-cider--is-separator" function (:arguments ("c")) nil [4822 4881])
            ("ac-cider--is-capital" function (:arguments ("c")) nil [4883 4943])
            ("ac-cider-fuzzy-matches-p" function
               (:documentation "Return t if PREFIX and CANDIDATE are matched."
                :arguments ("prefix" "candidate"))
                nil [4945 6590])
            ("ac-cider-match-fuzzy" function
               (:documentation "Returns candidates that match fuzzily with the prefix."
                :arguments ("prefix" "candidates"))
                nil [6592 6828])
            ("ac-cider-candidate-face" variable
               (:documentation "Face for nrepl candidates."
                :default-value '((t (:inherit ac-candidate-face)))
                :type "face")
                nil [6845 6971])
            ("ac-cider-selection-face" variable
               (:documentation "Face for the nrepl selected candidate."
                :default-value '((t (:inherit ac-selection-face)))
                :type "face")
                nil [6988 7126])
            ("ac-cider-source-defaults" variable
               (:documentation "Defaults common to the various completion sources."
                :constant-flag t
                :default-value '((available . ac-cider-available-p) (candidate-face . ac-cider-candidate-face) (selection-face . ac-cider-selection-face) (prefix . cider-completion-symbol-start-pos) (match . ac-cider-match-fuzzy) (document . ac-cider-documentation) (cache)))
                nil [7143 7503])
            ("ac-source-cider-everything" variable
               (:documentation "Auto-complete source for CIDER buffers."
                :default-value (append '((candidates . ac-cider-candidates-everything) (symbol . "v")) ac-cider-source-defaults))
                nil [7520 7710])
            ("ac-cider-setup" function
               (:documentation "Add the CIDER completion source to the front of `ac-sources'.
This affects only the current buffer."
                :user-visible-flag t)
                nil [7727 7962])
            ("ac-cider-popup-doc" function
               (:documentation "A popup alternative to `cider-doc'."
                :user-visible-flag t)
                nil [7979 8264])
            ("ac-cider" package nil nil [8266 8285]))          
      :file "ac-cider.el"
      :pointmax 8417
      :fsize 8416
      :lastmodtime '(23398 10680 287675 296000)
      :unmatched-syntax nil))
  :file "!home!lk!.emacs.d!elpa!ac-cider-20161006.719!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
