((("s" .
    [1])
   ("node" .
     [1 0 0 0])
   ("obj_node" .
     [3 0 0 0 0 0 0 0])
   ("pair" .
     [1 0 0 0])
   ("a" .
     [2])
   ("size_h" .
     [1 0 0 0 0 0])
   ("loc_h" .
     [3 0 0 0 0])
   ("meta" .
     [2 0 0 0])
   ("size" .
     [1 0 0 0])
   ("strncmp" .
     [1 0 0 0 0 0 0])
   ("args" .
     [3 0 0 0])
   ("new_argv" .
     [1 0 0 0 0 0 0 0])
   ("Company-mode" .
     [0 0 0 0 0 0 0 0 1 0 0 0])
   ("fset" .
     [0 0 1 0])
   ("reduce" .
     [23 0 0 0 1 0])
   ("+" .
     [4])
   (":a" .
     [24 1])
   (":c" .
     [12 0])
   (":d" .
     [5 0])
   (":e" .
     [2 0])
   (":C" .
     [2 0])
   (":A" .
     [2 0])
   ("doc" .
     [46 2 1])
   ("get" .
     [23 0 0])
   ("last" .
     [4 1 0 0])
   ("last-in" .
     [0 1 0 1 0 0 0])
   ("indexed?" .
     [9 0 1 1 0 1 0 0])
   ("get-in" .
     [1 0 0 0 0 0])
   ("*in*" .
     [0 0 0 1])
   ("take-last" .
     [0 0 1 0 0 0 0 0 0])
   ("subvec" .
     [1 0 0 1 1 1])
   ("take" .
     [7 0 0 0])
   ("or" .
     [1 0])
   ("first" .
     [30 5 0 0 0])
   ("and" .
     [1 0 0])
   ("split-at" .
     [1 1 0 0 0 0 0 0])
   ("fn" .
     [12 0])
   ("let" .
     [5 0 0])
   ("*'" .
     [0 1])
   ("apropos" .
     [1 0 0 0 0 0 0])
   ("clojure.core/get" .
     [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
   ("lookup" .
     [0 1 0 0 0 0])
   ("count" .
     [11 0 0 0 0])
   ("vec" .
     [7 0 1])
   ("vector" .
     [14 0 0 2 3 1])
   ("drop" .
     [5 0 0 0])
   ("disj" .
     [5 1 0 0])
   ("do" .
     [8 0])
   ("seq" .
     [12 0 0])
   ("sequence" .
     [2 0 0 0 0 0 0 0])
   ("seq." .
     [0 0 0 2])
   ("seq?" .
     [2 0 0 0])
   ("SecurityManager" .
     [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
   ("source" .
     [7 0 0 0 1 1])
   ("but" .
     [2 0 0])
   ("butlast" .
     [1 0 0 0 0 0 0])
   ("pop" .
     [1 0 0])
   ("next" .
     [20 0 0 0])
   ("lazy-seq" .
     [0 0 1 0 0 0 0 0])
   ("conj" .
     [37 0 0 0])
   ("empty" .
     [12 0 0 0 0])
   ("recur" .
     [7 0 0 0 0])
   ("if" .
     [12 1])
   ("hs" .
     [2 0])
   ("apply" .
     [9 0 0 0 0])
   ("println" .
     [9 0 0 0 0 0 0])
   ("%1" .
     [16 0])
   ("%2" .
     [17 9])
   ("nil." .
     [0 0 0 3])
   ("%&" .
     [2 0])
   ("map" .
     [6 0 0])
   ("identity" .
     [1 0 0 0 0 0 0 0])
   ("cons" .
     [17 0 0 0])
   ("nil" .
     [8 0 0])
   ("into" .
     [5 0 0 0])
   ("defn" .
     [1 0 0 0])
   ("sd" .
     [2 0])
   ("#object" .
     [0 5 0 0 0 0 0])
   ("nfirst" .
     [3 0 0 0 0 0])
   ("ffirst" .
     [3 0 0 0 0 0])
   ("fnext" .
     [7 0 0 0 0])
   ("nnext" .
     [1 0 0 0 0])
   ("false?" .
     [1 0 0 0 0 0])
   ("cond" .
     [3 0 0 0])
   ("list" .
     [6 0 0 0])
   ("rest" .
     [7 0 0 0])
   ("clojure.lang.LazilyPersistentVector" .
     [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
   ("clojure.lang.LazilyPersistentVector/create" .
     [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
   ("counted?" .
     [7 0 0 0 0 0 0 1])
   ("loop" .
     [1 0 0 0])
   ("while" .
     [2 0 1 0 0])
   ("rand" .
     [5 0 0 0])
   (">" .
     [4])
   ("-" .
     [11])
   ("rand-int" .
     [5 0 0 0 0 0 0 0])
   ("repeat" .
     [3 0 0 0 0 0])
   ("repeatedly" .
     [3 0 0 0 0 0 0 0 0 0])
   ("vrl" .
     [2 0 0])
   ("concat" .
     [3 0 0 0 0 0])
   ("Long" .
     [0 0 1 0])
   ("ILookup" .
     [1 0 0 0 0 0 0])
   ("transduce" .
     [1 0 0 0 0 0 0 0 2])
   ("reverse" .
     [1 0 0 1 1 0 0])
   ("xform" .
     [1 0 0 1 0])
   ("dotimes" .
     [1 0 0 1 0 0 0])
   ("list?" .
     [1 0 0 0 0])
   ("drop-last" .
     [2 0 0 0 0 0 0 0 1])
   ("Takes" .
     [1 0 0 0 0])
   ("take-nth" .
     [0 0 0 0 0 0 1 0])
   ("Indexed" .
     [0 0 0 0 0 0 2])
   ("sorted-set" .
     [4 0 0 0 0 0 0 0 0 0])
   ("hash-set" .
     [2 0 0 0 1 1 0 0])
   ("hash-map" .
     [3 0 0 0 0 0 0 0])
   (":b" .
     [16 0])
   ("sorted-map" .
     [1 0 0 0 0 0 0 0 0 0])
   ("*" .
     [2])
   ("def" .
     [1 0 0])
   ("nm" .
     [4 0])
   ("if-not" .
     [1 0 0 0 0 0])
   ("empty?" .
     [1 0 0 0 0 0])
   ("acc" .
     [2 0 0])
   ("arg" .
     [1 0 0])
   (">=" .
     [1 0])
   ("deconj" .
     [7 0 0 0 1 0])
   ("dc" .
     [5 0])
   ("zipmap" .
     [0 0 0 1 0 0])
   ("Key" .
     [2 0 0])
   ("use" .
     [0 1 0])
   ("unp" .
     [0 0 1])
   ("set" .
     [1 0 0])
   ("dissoc" .
     [6 0 0 0 0 0])
   ("defmacro" .
     [1 0 0 0 0 0 0 0])
   ("col" .
     [2 0 0])
   ("quote" .
     [1 0 0 0 0])
   ("else" .
     [1 0 0 0])
   ("vector?" .
     [1 0 0 0 0 0 0])
   ("sorted?" .
     [0 0 0 0 0 0 1])
   ("ns" .
     [1 0])
   ("q" .
     [1])))
