(deftheme theme-lksettings-2018-06-07
  "Created 2018-06-07.")

(custom-theme-set-variables
 'theme-lksettings-2018-06-07
 '(ansi-color-faces-vector [default default default italic underline success warning error])
 '(ansi-color-names-vector ["#2d3743" "#ff4242" "#74af68" "#dbdb95" "#34cae2" "#008b8b" "#00ede1" "#e1e1e0"])
 '(beacon-blink-when-focused t)
 '(blink-cursor-delay 0.45)
 '(blink-cursor-interval 0.45)
 '(c-mode-hook (quote (completion-c-mode-hook macrostep-c-mode-hook cwarn-mode flycheck-mode irony-mode irony-eldoc electric-pair-mode)))
 '(comint-completion-autolist t)
 '(company-auto-complete (quote (quote company-explicit-action-p)))
 '(company-auto-complete-chars (quote (32 95 40 41 119 46 36 124)))
 '(company-backends (quote (company-clang company-cmake (company-dabbrev-code company-gtags company-keywords company-etags) company-capf company-irony company-c-headers company-irony-c-headers (company-shell company-shell-env) company-files company-semantic company-elisp company-oddmuse company-dabbrev company-oddmuse company-nxml company-bbdb company-css company-eclim company-abbrev)))
 '(company-cmake-executable (quote /usr/bin/cmake))
 '(company-dabbrev-code-everywhere t)
 '(company-irony-ignore-case (quote smart))
 '(company-lighter-base "company")
 '(company-minimum-prefix-length 2)
 '(confirm-kill-emacs (quote y-or-n-p))
 '(cua-mode t)
 '(cua-normal-cursor-color "light grey")
 '(cursor-in-non-selected-windows (quote hollow))
 '(dired-hide-details-hide-information-lines nil)
 '(dired-hide-details-hide-symlink-targets nil)
 '(dired-listing-switches "-alh")
 '(dired-mode-hook (quote (dired-hide-details-mode visual-line-mode toggle-truncate-lines)))
 '(eldoc-echo-area-use-multiline-p t)
 '(eldoc-idle-delay 0.25)
 '(eldoc-minor-mode-string " eldoc")
 '(emacs-lisp-mode-hook (quote (checkdoc-minor-mode eldoc-mode irony-eldoc edebug-x-mode)))
 '(garbage-collection-messages nil)
 '(global-hl-line-sticky-flag t)
 '(hl-line-face (quote hl-line))
 '(hl-line-sticky-flag t)
 '(indent-tabs-mode nil)
 '(initial-buffer-choice t)
 '(irony-eldoc-strip-underscores t)
 '(irony-eldoc-use-unicode t)
 '(irony-lang-compile-option-alist (quote ((c-mode . "c") (c++-mode . "c++") (objc-mode . "objective-c"))))
 '(irony-lighter " irony")
 '(line-spacing 0.12)
 '(linum-format "%4d")
 '(lisp-body-indent 3)
 '(lisp-indent-offset 2)
 '(lisp-interaction-mode-hook (quote (eldoc-mode irony-eldoc)))
 '(mc/edit-lines-empty-lines (quote ignore))
 '(normal-erase-is-backspace t)
 '(overline-margin 1)
 '(package-enable-at-startup t)
 '(package-selected-packages (quote (align-cljlet ac-cider cider cider-decompile cider-eval-sexp-fu cider-hydra cider-spy clj-refactor clojure-cheatsheet clojure-mode clojure-mode-extra-font-locking clojure-quick-repls clojure-snippets flycheck-clojure inf-clojure foreign-regexp unkillable-scratch visual-regexp visual-regexp-steroids hungry-delete morlock delim-kill company-math company-statistics counsel-etags ac-capf auto-minor-mode autopair beacon better-shell readline-complete repl-toggle shell-command ssh ssh-agency ssh-config-mode ssh-deploy ssh-tunnels tab-jump-out test-simple undercover undohist yafolding yasnippet-snippets yatemplate ac-c-headers build-helper build-status company-erlang company-shell diffview edts egg flycheck flycheck-dialyzer flycheck-swiftlint flymake-shell function-args git git-attr git-auto-commit-mode git-blamed git-command git-commit git-commit-insert-issue git-dwim git-io git-lens git-link git-messenger git-msg-prefix git-timemachine git-wip-timemachine gitattributes-mode gitconfig gitconfig-mode gited ido-at-point ipretty ivy-dired-history ivy-erlang-complete json-mode makefile-executor math-symbol-lists math-symbols matlab-mode modern-cpp-font-lock move-dup msvc nose npm-mode outrespace package-safe-delete pcmpl-args pcmpl-git popup-complete company-c-headers company-irony company-irony-c-headers company window-layout window-purpose erlang vkill wconf with-simulated-input xterm-frobs xterm-title paren-face picolisp-mode plur scheme-complete shell-switcher shell-toggle shen-elisp shen-mode signal smart-comment smart-compile smart-cursor-color smart-forward snippet sotlisp sourcemap strace-mode stream string-edit sudo-edit sudo-ext swap-buffers swbuff sync-recentf tco try iedit ipcalc itail iter2 iterator iterators lfe-mode list-packages-ext list-utils macro-math macrostep manage-minor-mode maxframe mbe mic-paren minimal-session-saver mmt erefactor es-lib eval-expr eval-in-repl eval-sexp-fu evalator flash-region flycheck-rebar3 flycheck-rtags heap highlight-defined highlight-escape-sequences highlight-function-calls highlight-indent-guides highlight-indentation highlight-operators highlight-parentheses highlight-quoted highlight-refontification highlight-stages highlight-symbol highlight-thing highlight-unique-symbol hippie-exp-ext hippie-namespace ctable ctags-update dash-functional db discover discover-my-major dr-racket-like-unicode eacl ecb ede-compdb edebug-x eide el-sprunge elf-mode elhome elisp-format elisp-lint elisp-refs elisp-sandbox elmacro elogcat elx emacs-setup emaps auto-compile auto-complete-chunk auto-complete-distel auto-highlight-symbol auto-shell-command autodisass-llvm-bitcode bash-completion bshell c-eldoc cd-compile cedit cff chapel-mode charmap cil-mode cl-format cl-generic cl-lib cl-lib-highlight cl-print codebug codesearch comint-intercept commenter common-lisp-snippets auto-complete-c-headers google-c-style malinka opencl-mode preproc-font-lock xcscope basic-c-compile cpputils-cmake flycheck-pkg-config flycheck-tip flycheck-title flymake-cursor irony-eldoc ivy-hydra language-detection mark-multiple scheme-here term+ term+mux term-manager test-c test-case-mode test-kitchen tree-mode xterm-color xterm-keybinder xtest use-package-ensure-system-package use-package-el-get use-package quack isend-mode racket-mode hlinum golden-ratio-scroll-screen mc-extras font-lock-studio font-lock+ flyparens flymake-cppcheck flycheck-irony flycheck-inline flycheck-cstyle flycheck-color-mode-line flycheck-clangcheck flycheck-clang-tidy flycheck-clang-analyzer flycheck-checkbashisms cmake-project cmake-ide cmake-font-lock clang-format auto-complete-clang-async auto-complete-clang ac-clang)))
 '(package-user-dir "/home/lk/.emacs.d/elpa")
 '(scalable-fonts-allowed t)
 '(show-paren-delay 0.085)
 '(show-paren-style (quote mixed))
 '(show-paren-when-point-in-periphery t)
 '(show-paren-when-point-inside-paren t)
 '(tab-always-indent nil)
 '(temporary-file-directory "/tmp/emacs/")
 '(visible-bell t)
 '(beacon-mode t)
 '(column-number-mode t)
 '(company-statistics-mode t)
 '(dynamic-completion-mode t)
 '(electric-indent-mode nil)
 '(global-company-mode t)
 '(global-eldoc-mode t)
 '(global-hl-line-mode t)
 '(global-linum-mode t)
 '(global-paren-face-mode t)
 '(global-visual-line-mode t)
 '(show-paren-mode t)
 '(smart-cursor-color-mode t)
 '(tool-bar-mode nil)
 '(unkillable-scratch t))

(custom-theme-set-faces
 'theme-lksettings-2018-06-07
 '(default ((t (:inherit nil :stipple nil :background "#2d3743" :foreground "#c1c1c0" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 120 :width normal :foundry "PfEd" :family "DejaVu Sans Mono"))))
 '(company-scrollbar-bg ((t (:background "light gray"))))
 '(company-scrollbar-fg ((t (:background "snow4"))))
 '(company-template-field ((t (:background "#34ef9a" :foreground "#414141"))))
 '(company-tooltip ((t (:background "#54efff" :foreground "#3a3a39"))))
 '(company-tooltip-common ((t (:foreground "#0000bb" :weight bold))))
 '(company-tooltip-selection ((t (:background "#bfbfff"))))
 '(cursor ((t (:background "azure1"))))
 '(dired-directory ((t (:inherit font-lock-type-face :foreground "#00bfff" :underline t :weight semi-bold :height 1.03))))
 '(dired-flagged ((t (:foreground "pink2" :box (:line-width -1 :color "gray35" :style pressed-button) :strike-through "pink3" :slant italic))))
 '(dired-header ((t (:inherit dired-directory :foreground "#2abee9" :box (:line-width 1 :color "grey45" :style released-button) :underline t :height 1.8))))
 '(dired-mark ((t (:inherit dired-flagged :foreground "indianred1" :box (:line-width 1 :color "darkorange3" :style released-button) :strike-through nil :slant normal :weight bold))))
 '(dired-symlink ((t (:foreground "#208acb" :slant italic))))
 '(font-lock-builtin-face ((t (:foreground "#23ffef" :weight extra-bold))))
 '(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face))))
 '(font-lock-comment-face ((t (:foreground "#74af68" :slant italic))))
 '(font-lock-doc-face ((t (:inherit font-lock-string-face :slant italic))))
 '(font-lock-keyword-face ((t (:foreground "#f68627" :weight bold))))
 '(font-lock-preprocessor-face ((t (:foreground "#f68627" :slant italic))))
 '(font-lock-regexp-grouping-construct ((t (:inherit bold))))
 '(font-lock-string-face ((t (:foreground "#5bbb35" :weight bold))))
 '(font-lock-type-face ((t (:foreground "#23afd8" :weight semi-bold))))
 '(font-lock-variable-name-face ((t (:foreground "#dbdb95"))))
 '(fringe ((t (:background "#323c47"))))
 '(highlight ((t (:inherit nil :background "#2f3f4f"))))
 '(hl-line ((t (:background "#2f3f4f"))))
 '(lazy-highlight ((t (:background "#335f86"))))
 '(linum ((t (:inherit (default hl-line) :stipple nil :foreground "#8b8682" :strike-through nil :overline nil :slant normal :height 110 :width condensed))))
 '(mc/cursor-face ((t (:background "cyan4" :inverse-video nil :box (:line-width 1 :color "#55cc66" :style released-button)))))
 '(mode-line ((t (:background "#212931" :foreground "#eeeeec" :box (:line-width 1 :color "#264969" :style released-button) :overline "dark violet"))))
 '(mode-line-inactive ((t (:inherit mode-line :background "grey30" :foreground "grey80" :box (:line-width 1 :color "grey40" :style released-button) :overline nil :weight light))))
 '(region ((t (:inherit hl-line :background "#3d7d5e"))))
 '(scroll-bar ((t nil)))
 '(secondary-selection ((t (:background "SkyBlue4"))))
 '(shadow ((t (:foreground "grey64"))))
 '(show-paren-match ((t (:background "#3f5a90" :inverse-video nil :box (:line-width -1 :color "deep sky blue") :underline (:color "deep sky blue" :style wave) :weight bold))))
 '(show-paren-mismatch ((t (:box (:line-width -1 :color "magenta") :underline (:color "magenta" :style wave) :weight bold))))
 '(warning ((t (:foreground "VioletRed1" :weight bold))))
 '(window-divider ((t (:foreground "dark cyan"))))
 '(window-divider-first-pixel ((t (:foreground "dark cyan"))))
 '(window-divider-last-pixel ((t (:foreground "light sea green")))))

(provide-theme 'theme-lksettings-2018-06-07)
