(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.800000011920929 data ("pack" ((lisp-interaction-mode . 1) (nil . 1)) "global-company-mode" (((:file "/home/lk/.emacs") . 2) ((:keyword "quote") . 2) (emacs-lisp-mode . 2) (nil . 2)) "/usr/bin/cmake" (((:symbol "nil") . 2) (Custom-mode . 1) (nil . 2) ((:file "/home/lk/.emacs.d/*scratch*") . 1) (fundamental-mode . 1)) "lk-windowsize" (((:file "/home/lk/.emacs") . 2) ((:keyword "interactive") . 2) (emacs-lisp-mode . 2) (nil . 2)) "winlk-top-up" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winlk-right-out" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winlk-bottom-down" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winlk-bottom-up" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winlk-left-out" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "winlk-top-down" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "TOP/LEFT?" (((:file "/home/lk/.emacs") . 1) ((:keyword "and") . 1) (emacs-lisp-mode . 1) (nil . 1)) "horizontal" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "command-execute" (((:file "/home/lk/.emacs") . 2) ((:keyword "and") . 2) (emacs-lisp-mode . 2) (nil . 2)) "window-in-direction" (((:file "/home/lk/.emacs") . 1) ((:keyword "cond") . 1) (emacs-lisp-mode . 1) (nil . 1)) "wchar_t" (((:file "/home/workbench-lk/c/mini.patience.c") . 2) ((:keyword "struct") . 2) (c-mode . 3) (nil . 3) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) "__SIZEOF_POINTER__" (((:file "/home/workbench-lk/c/mini.patience.c") . 1) ((:keyword "else") . 1) (c-mode . 1) (nil . 1)) "concat" (((:file "/home/lk/.emacs") . 2) ((:keyword "interactive") . 2) (emacs-lisp-mode . 2) (nil . 2)) "cond" (((:file "/home/lk/.emacs") . 2) ((:keyword "interactive") . 2) (emacs-lisp-mode . 2) (nil . 2)) "symbol-plist" (((:file "/home/lk/.emacs") . 2) ((:keyword "interactive") . 2) (emacs-lisp-mode . 2) (nil . 2)) "symbol-function" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "symbol-macrolet" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "symbol-file" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "symbol-under-or-before-point" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "symbol-before-point" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "gray35" ((Custom-mode . 1) (nil . 1)) "defmacro" ((emacs-lisp-mode . 5) (nil . 5) ((:file "/home/lk/.emacs") . 4) ((:keyword "interactive") . 4)) "defmath" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "defmethod" (((:file "/home/lk/.emacs") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "company" ((Custom-mode . 3) (nil . 3)) "short" ((Custom-mode . 1) (nil . 1)) "flycheck" ((Custom-mode . 2) (nil . 3) ((:file "/home/lk/self/.notes") . 1) (fundamental-mode . 1)) "edebug" ((Custom-mode . 1) (nil . 1)) "auto" ((Custom-mode . 1) (nil . 1)) "autocomplete" ((Custom-mode . 1) (nil . 1)) "mode" ((Custom-mode . 9) (nil . 9) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1) ((:keyword "goto") . 1)) "yasnippet" ((Custom-mode . 1) (nil . 1)) "CRYPT_REQUIREMENT_UNKNOWN" (((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1) ((:keyword "goto") . 1) (c-mode . 1) (nil . 1)) "strcasecmp" (((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 2) ((:keyword "goto") . 2) (c-mode . 2) (nil . 2)) "stat" (((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1) ((:keyword "goto") . 1) (c-mode . 1) (nil . 1)) "daddr_t" (((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1) ((:keyword "goto") . 1) (c-mode . 1) (nil . 1)) "condition-case" ((lisp-interaction-mode . 1) (nil . 1)) "parens" ((Custom-mode . 1) (nil . 1)) "yes-or-no-p" (((:file "/home/lk/.emacs") . 1) ((:keyword "or") . 1) (emacs-lisp-mode . 1) (nil . 1)) "y-or-n-p" (((:file "/home/lk/.emacs") . 1) ((:keyword "or") . 1) (emacs-lisp-mode . 1) (nil . 1)) "tool-bar-mode" (((:file "/home/lk/.emacs") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "autopair-global-mode" (((:file "/home/lk/.emacs") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "auto-compile-mode" (((:file "/home/lk/.emacs") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "global-auto-complete-mode" (((:file "/home/lk/.emacs") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hl-line" (((:file "/home/lk/.emacs") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hl-line-sticky-flag" (((:file "/home/lk/.emacs") . 1) ((:keyword "quote") . 1) (emacs-lisp-mode . 1) (nil . 1)) "call" ((inferior-emacs-lisp-mode . 1) (nil . 1)) "funcall" ((inferior-emacs-lisp-mode . 1) (nil . 1)) "extern" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "execv" (((:file "/home/workbench-lk/c/tpadexec.c") . 3) (c-mode . 3) (nil . 3) ((:keyword "const") . 2) ((:symbol "nil") . 1)) "/usr/lib/casper/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/lib/gcc/x86_64-linux-gnu/8.0.1/" (((:file "/home/workbench-lk/c/tpadexec.c") . 2) (c-mode . 2) (nil . 2)) "fork" (((:file "/home/workbench-lk/c/tpadexec.c") . 2) (c-mode . 2) (nil . 2)) "envar" (((:file "/home/workbench-lk/c/tpadexec.c") . 6) ((:keyword "for") . 3) (c-mode . 6) (nil . 6) ((:keyword "sizeof") . 3) ((:symbol "nil") . 1)) "size_t" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "printf" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "while") . 1) (c-mode . 1) (nil . 1)) "arglen" (((:file "/home/workbench-lk/c/tpadexec.c") . 4) ((:keyword "while") . 2) (c-mode . 4) (nil . 4) ((:symbol "nil") . 2) ((:keyword "sizeof") . 2)) "strcpy" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "sizeof") . 1) (c-mode . 1) (nil . 1)) "argl" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "sizeof") . 1) (c-mode . 1) (nil . 1)) "ardup" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "sizeof") . 1) (c-mode . 1) (nil . 1)) "/sbin/acpi_available" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "env" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:symbol "nil") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "/usr/lib/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/lib/kernel/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/lib/kernel/install.d/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/lib/init/init-d-script" (((:file "/home/workbench-lk/c/tpadexec.c") . 2) (c-mode . 2) (nil . 2)) "/var/lib/" (((:file "/home/workbench-lk/c/tpadexec.c") . 2) (c-mode . 2) (nil . 2)) "/var/lib/ispell/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/share/abiword-3.0/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/share/doc/abiword-common/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/lib/x86_64-linux-gnu/libkeyutils.so.1" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/lib/x86_64-linux-gnu/libkmod.so.2" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/src/linux-headers-4.15.0-21/include/keys/" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/src/linux-headers-4.15.0-21/include/linux/8250_pci.h" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "/usr/src/linux-headers-4.15.0-21/include/linux/kmod.h" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) (c-mode . 1) (nil . 1)) "exit" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "const") . 1) (c-mode . 2) (nil . 2) ((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1)) "getuid" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "for") . 1) (c-mode . 1) (nil . 1)) "select" (((:file "/home/workbench-lk/c/tpadexec.c") . 2) ((:keyword "const") . 2) (c-mode . 2) (nil . 2)) "intel_lpss_pci" (((:file "/home/workbench-lk/c/tpadexec.c") . 3) ((:keyword "const") . 4) (c-mode . 4) (nil . 4) ((:file "/home/workbench-lk/c/tpadoff.c") . 1)) "system" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "tpadtoggle" (((:file "/home/workbench-lk/c/tpadexec.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "strncasecmp" (((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "confstr" (((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "_tpadtoggle" (((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1) ((:keyword "const") . 3) (c-mode . 3) (nil . 3) ((:file "/home/workbench-lk/c/tpad/v3/tpadtoggle.s.l.euid.c") . 2)) "new_argv" (((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "execve" (((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 2) ((:symbol "nil") . 2) ((:keyword "return") . 2) (c-mode . 2) (nil . 2)) "setting" (((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1) ((:keyword "return") . 1) (c-mode . 1) (nil . 1)) "calls" (((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1) ((:keyword "return") . 1) (c-mode . 1) (nil . 1)) "requires" (((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1) (c-mode . 1) (nil . 1)) "located" (((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1) (c-mode . 1) (nil . 1)) "location" (((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1) (c-mode . 1) (nil . 1)) "query-replace-defaults" ((lisp-interaction-mode . 1) (nil . 1)) "modes" ((Custom-mode . 2) (nil . 2)) "~/.emacs.d/irony/" ((Custom-mode . 1) (nil . 1)) "~/.emacs.d/irony/bin/" ((Custom-mode . 1) (nil . 1)) "irony" ((Custom-mode . 1) (nil . 1)) "unistd" (((:file "/home/workbench-lk/c/tpad/v3/tpadtoggle.s.l.euid.c") . 1) ((:keyword "const") . 1) (c-mode . 1) (nil . 1)) "assign" ((lisp-interaction-mode . 1) (nil . 1)) "regions" ((lisp-interaction-mode . 1) (nil . 1)) "pvcreate" ((lisp-interaction-mode . 1) (nil . 1)) "volume" ((lisp-interaction-mode . 2) (nil . 2)) "block" ((lisp-interaction-mode . 3) (nil . 3)) "these" ((lisp-interaction-mode . 5) (nil . 12) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 7) (text-mode . 7)) "free" ((lisp-interaction-mode . 1) (nil . 1)) "partitions." ((lisp-interaction-mode . 1) (nil . 1)) "buffer" ((lisp-interaction-mode . 1) (nil . 1)) "produces" ((lisp-interaction-mode . 3) (nil . 3)) "partition" ((lisp-interaction-mode . 1) (nil . 1)) "semantics" ((lisp-interaction-mode . 2) (nil . 2)) "disk" ((lisp-interaction-mode . 3) (nil . 3)) "interface" ((lisp-interaction-mode . 2) (nil . 2)) "form" ((lisp-interaction-mode . 4) (nil . 4)) "allocation" ((lisp-interaction-mode . 2) (nil . 2)) "offering" ((lisp-interaction-mode . 2) (nil . 2)) "accepts" ((lisp-interaction-mode . 1) (nil . 1)) "physical" ((lisp-interaction-mode . 1) (nil . 1)) "form/grow" ((lisp-interaction-mode . 1) (nil . 1)) "them" ((lisp-interaction-mode . 7) (nil . 7)) "pool" ((lisp-interaction-mode . 1) (nil . 1)) "formatting" ((lisp-interaction-mode . 1) (nil . 1)) "abstraction" ((lisp-interaction-mode . 2) (nil . 2)) "backed" ((lisp-interaction-mode . 2) (nil . 2)) "border." ((lisp-interaction-mode . 2) (nil . 2)) "assumes" ((lisp-interaction-mode . 5) (nil . 5)) "region" ((lisp-interaction-mode . 1) (nil . 1)) "seperation/abstraction" ((lisp-interaction-mode . 1) (nil . 1)) "done" (((:file "/home/workbench-lk/cmdline/bash/nestfor") . 4) ((:keyword " in") . 1) (sh-mode . 6) (nil . 6) ((:keyword "done") . 3) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1) ((:keyword "function") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1) ((:keyword "bash") . 1)) "seqvar" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1) ((:keyword "function") . 1) (sh-mode . 1) (nil . 1)) "SV_BASE" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 3) ((:keyword "bash") . 3) (sh-mode . 3) (nil . 3)) "iter-to" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1) ((:keyword "bash") . 1) (sh-mode . 1) (nil . 1)) "iter_from" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 4) ((:keyword "function") . 3) (sh-mode . 4) (nil . 4) ((:keyword " in") . 1)) "echo" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 2) ((:keyword "else") . 1) (sh-mode . 5) (nil . 5) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 3) ((:keyword "fi") . 1) ((:keyword "in") . 1) ((:keyword "then") . 1)) "iter_to" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 2) ((:keyword "function") . 2) (sh-mode . 2) (nil . 2)) "SEQVARS" (((:file "/home/workbench-lk/cmdline/bash/seqvar") . 3) ((:keyword "done") . 3) (sh-mode . 3) (nil . 3)) "matchln" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 10) ((:keyword "bash") . 4) (sh-mode . 10) (nil . 10) ((:keyword "fi") . 2) ((:keyword "do") . 2) ((:keyword "case") . 1) ((:keyword "done") . 1)) "testln" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 6) ((:keyword "fi") . 1) (sh-mode . 6) (nil . 6) ((:keyword "do") . 4) ((:keyword "case") . 1)) "groupln" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 4) ((:keyword "bash") . 2) (sh-mode . 4) (nil . 4) ((:keyword "elif") . 1) ((:keyword "done") . 1)) "len." (((:file "/home/lk/self/workbench/shell/dudiff-a") . 1) ((:keyword "bash") . 1) (sh-mode . 1) (nil . 1)) "length," (((:file "/home/lk/self/workbench/shell/dudiff-a") . 1) ((:keyword "bash") . 1) (sh-mode . 1) (nil . 1)) "len:" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 9) ((:keyword "bash") . 9) (sh-mode . 9) (nil . 9)) "c::test" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 2) ((:keyword "done") . 2) (sh-mode . 2) (nil . 2)) "match+2" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 1) ((:keyword "done") . 1) (sh-mode . 1) (nil . 1)) "!match" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 2) ((:keyword "done") . 2) (sh-mode . 2) (nil . 2)) "!match+3" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 1) ((:keyword "done") . 1) (sh-mode . 1) (nil . 1)) "else:" (((:file "/home/lk/self/workbench/shell/dudiff-a") . 1) ((:keyword "fi") . 1) (sh-mode . 1) (nil . 1)) "install" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4) (text-mode . 4) (nil . 4) ((:symbol "nil") . 1)) "/boot/" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4) (text-mode . 4) (nil . 4)) "/dev/sda" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2) (text-mode . 2) (nil . 2)) "boot" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 5) (text-mode . 5) (nil . 5)) "/etc/.pwd.lock" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "performing" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2) (text-mode . 2) (nil . 2)) "println" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 3) ((:keyword "ns") . 1) (cider-repl-mode . 2)) "previously" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "note" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 5) (text-mode . 5) (nil . 5)) "mount" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "nowfiles" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "unencrypted" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "need" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "installation" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "/usr/share/grub/ascii.h" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "used" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3) ((:symbol "nil") . 1) (text-mode . 3) (nil . 3)) "args" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "../efi/" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2) (text-mode . 2) (nil . 2)) "configured" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3) (text-mode . 3) (nil . 3)) "'10s" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "mkdir" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "fstab" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4) ((:symbol "TYPE") . 1) (text-mode . 4) (nil . 4)) "embedded" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3) (text-mode . 3) (nil . 3)) "share" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "file" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3) (text-mode . 3) (nil . 3)) "crypto" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) ((:symbol "nil") . 1) (text-mode . 1) (nil . 1)) "following" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "device" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "your" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 5) (text-mode . 5) (nil . 5)) "it's" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2) (text-mode . 2) (nil . 2)) "core" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "xxxx" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "grub" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4) (text-mode . 4) (nil . 4)) "encrypted" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "normally" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "from" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "path" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "/etc/fstab" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) (text-mode . 1) (nil . 1)) "subvol" (((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1) ((:symbol "nil") . 1) (text-mode . 1) (nil . 1)) "text" ((Custom-mode . 1) (nil . 1)) "cd-create-profile" ((shell-mode . 1) (nil . 1)) "git" ((shell-mode . 1) (nil . 1)) "scripts/../" (((:symbol "nil") . 3) (shell-mode . 3) (nil . 3)) "~/.nicotine/" ((shell-mode . 1) (nil . 1)) "~/.bash_history" ((shell-mode . 1) (nil . 1)) "/bin/bash" ((Custom-mode . 1) (nil . 1)) "cksum" ((shell-mode . 1) (nil . 1)) "24bit" ((Custom-mode . 2) (nil . 2)) "/usr/share/emacs/26.1/" ((Custom-mode . 1) (nil . 1)) "/usr/share/emacs/26.1/lisp/" ((Custom-mode . 1) (nil . 1)) "256color" ((Custom-mode . 1) (nil . 1)) "term" ((Custom-mode . 2) (nil . 2)) "hide" ((Custom-mode . 1) (nil . 1)) "selecting" ((Custom-mode . 1) (nil . 1)) "cider/cider-nrepl" (((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/project.clj") . 1) ((:keyword "defproject") . 2) (clojure-mode . 3) (nil . 3) ((:file "/home/lk/self/projects/lang_clojure/cider-handler/project.clj") . 1) ((:file "/home/lk/self/projects/lang_clojure/cider-nrepl-handler/project.clj") . 1)) "terminfo" ((Custom-mode . 1) (nil . 1)) "tryclj.core" (((:keyword "ns") . 1) (cider-repl-mode . 1) (nil . 1)) ":gen" (((:keyword "ns") . 1) (cider-repl-mode . 1) (nil . 1)) "find-doc" ((cider-repl-mode . 2) (nil . 2)) "../../cider-handler/" ((term-mode . 1) (nil . 1)) ":dependencies" (((:file "/home/lk/self/projects/lang_clojure/cider-handler/project.clj") . 1) (clojure-mode . 1) (nil . 1)) "eldoc" ((Custom-mode . 1) (nil . 1)) "function" ((Custom-mode . 1) (nil . 1)) "clojure" ((Custom-mode . 1) (nil . 1)) "modeformatting" ((Custom-mode . 1) (nil . 1)) "reporting" (((:file "/home/lk/self/.notes") . 1) (fundamental-mode . 1) (nil . 1)) "/usr/lib/jvm/java-10-openjdk/bin/" ((Custom-mode . 1) (nil . 1)) "cider-handler" (((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/cider_handler.clj") . 1) ((:keyword "defn") . 1) (clojure-mode . 1) (nil . 1)) "0.18.0-SNAPSHOT" (((:file "/home/lk/.lein/profiles.clj") . 1) (clojure-mode . 4) (nil . 4) ((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/profiles.clj") . 1) ((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/project.clj") . 1) ((:keyword "defproject") . 2) ((:file "/home/lk/self/projects/lang_clojure/cider-nrepl-handler/project.clj") . 1)))) company-statistics--log [nil nil nil ("pack" (nil . 1) (lisp-interaction-mode . 1)) ("global-company-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "quote") . 2) ((:file "/home/lk/.emacs") . 2)) ("global-company-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("/usr/bin/cmake" (nil . 2) (Custom-mode . 1) ((:symbol "nil") . 2)) ("/usr/bin/cmake" (nil . 1) (fundamental-mode . 1) ((:symbol "nil") . 1) ((:file "/home/lk/.emacs.d/*scratch*") . 1)) ("lk-windowsize" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "interactive") . 2) ((:file "/home/lk/.emacs") . 2)) ("winlk-top-up" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("lk-windowsize" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("winlk-right-out" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("winlk-bottom-down" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("winlk-bottom-up" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("winlk-left-out" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("winlk-top-down" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("TOP/LEFT?" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "and") . 1) ((:file "/home/lk/.emacs") . 1)) ("horizontal" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("command-execute" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "and") . 2) ((:file "/home/lk/.emacs") . 2)) ("command-execute" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "and") . 1) ((:file "/home/lk/.emacs") . 1)) ("window-in-direction" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "cond") . 1) ((:file "/home/lk/.emacs") . 1)) ("wchar_t" (nil . 2) (c-mode . 2) ((:keyword "struct") . 2) ((:file "/home/workbench-lk/c/mini.patience.c") . 2)) ("wchar_t" (nil . 1) (c-mode . 1) ((:keyword "struct") . 1) ((:file "/home/workbench-lk/c/mini.patience.c") . 1)) ("__SIZEOF_POINTER__" (nil . 1) (c-mode . 1) ((:keyword "else") . 1) ((:file "/home/workbench-lk/c/mini.patience.c") . 1)) ("concat" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "interactive") . 2) ((:file "/home/lk/.emacs") . 2)) ("concat" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("cond" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "interactive") . 2) ((:file "/home/lk/.emacs") . 2)) ("cond" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("symbol-plist" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "interactive") . 2) ((:file "/home/lk/.emacs") . 2)) ("symbol-plist" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("symbol-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("symbol-macrolet" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("symbol-file" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("symbol-under-or-before-point" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("symbol-before-point" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("gray35" (nil . 1) (Custom-mode . 1)) ("defmacro" (nil . 5) (emacs-lisp-mode . 5)) ("defmath" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("defmethod" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("defmacro" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 4) ((:file "/home/lk/.emacs") . 4)) ("defmacro" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("defmacro" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("defmacro" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/lk/.emacs") . 1)) ("company" (nil . 2) (Custom-mode . 2)) ("company" (nil . 1) (Custom-mode . 1)) ("short" (nil . 1) (Custom-mode . 1)) ("flycheck" (nil . 1) (Custom-mode . 1)) ("edebug" (nil . 1) (Custom-mode . 1)) ("auto" (nil . 1) (Custom-mode . 1)) ("autocomplete" (nil . 1) (Custom-mode . 1)) ("mode" (nil . 5) (Custom-mode . 5)) ("mode" (nil . 1) (Custom-mode . 1)) ("mode" (nil . 1) (Custom-mode . 1)) ("mode" (nil . 1) (Custom-mode . 1)) ("yasnippet" (nil . 1) (Custom-mode . 1)) ("CRYPT_REQUIREMENT_UNKNOWN" (nil . 1) (c-mode . 1) ((:keyword "goto") . 1) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1)) ("mode" (nil . 1) (Custom-mode . 1) ((:keyword "goto") . 1) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1)) ("strcasecmp" (nil . 2) (c-mode . 2) ((:keyword "goto") . 2) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 2)) ("strcasecmp" (nil . 1) (c-mode . 1) ((:keyword "goto") . 1) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1)) ("stat" (nil . 1) (c-mode . 1) ((:keyword "goto") . 1) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1)) ("daddr_t" (nil . 1) (c-mode . 1) ((:keyword "goto") . 1) ((:file "/home/workbench-lk/projects/debian/cryptsetup-git/src/cryptsetup_reencrypt.c") . 1)) ("condition-case" (nil . 1) (lisp-interaction-mode . 1)) ("parens" (nil . 1) (Custom-mode . 1)) ("yes-or-no-p" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "or") . 1) ((:file "/home/lk/.emacs") . 1)) ("y-or-n-p" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "or") . 1) ((:file "/home/lk/.emacs") . 1)) ("tool-bar-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("autopair-global-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("auto-compile-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("global-auto-complete-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("hl-line" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("hl-line-sticky-flag" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/home/lk/.emacs") . 1)) ("call" (nil . 1) (inferior-emacs-lisp-mode . 1)) ("funcall" (nil . 1) (inferior-emacs-lisp-mode . 1)) ("extern" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("execv" (nil . 3) (c-mode . 3) ((:file "/home/workbench-lk/c/tpadexec.c") . 3)) ("/usr/lib/casper/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/lib/gcc/x86_64-linux-gnu/8.0.1/" (nil . 2) (c-mode . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 2)) ("/usr/lib/gcc/x86_64-linux-gnu/8.0.1/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("fork" (nil . 2) (c-mode . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 2)) ("envar" (nil . 6) (c-mode . 6) ((:keyword "for") . 3) ((:file "/home/workbench-lk/c/tpadexec.c") . 6)) ("envar" (nil . 1) (c-mode . 1) ((:keyword "for") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("size_t" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("wchar_t" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("printf" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("arglen" (nil . 4) (c-mode . 4) ((:keyword "while") . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 4)) ("arglen" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("envar" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 3) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("envar" (nil . 1) (c-mode . 1) ((:keyword "for") . 1) ((:symbol "nil") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("envar" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("strcpy" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("arglen" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 2) ((:symbol "nil") . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("arglen" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:symbol "nil") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("argl" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("ardup" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("envar" (nil . 1) (c-mode . 1) ((:keyword "sizeof") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("execv" (nil . 1) (c-mode . 1) ((:keyword "const") . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/sbin/acpi_available" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("execv" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:symbol "nil") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("env" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:symbol "nil") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/lib/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/lib/kernel/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/lib/kernel/install.d/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/lib/init/init-d-script" (nil . 2) (c-mode . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 2)) ("/lib/init/init-d-script" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/var/lib/" (nil . 2) (c-mode . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 2)) ("/var/lib/ispell/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/share/abiword-3.0/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/share/doc/abiword-common/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/var/lib/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/lib/x86_64-linux-gnu/libkeyutils.so.1" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/lib/x86_64-linux-gnu/libkmod.so.2" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/src/linux-headers-4.15.0-21/include/keys/" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/src/linux-headers-4.15.0-21/include/linux/8250_pci.h" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("/usr/src/linux-headers-4.15.0-21/include/linux/kmod.h" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("fork" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("exit" (nil . 2) (c-mode . 2) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("getuid" (nil . 1) (c-mode . 1) ((:keyword "for") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("select" (nil . 2) (c-mode . 2) ((:keyword "const") . 2) ((:file "/home/workbench-lk/c/tpadexec.c") . 2)) ("select" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("intel_lpss_pci" (nil . 4) (c-mode . 4) ((:keyword "const") . 4) ((:file "/home/workbench-lk/c/tpadexec.c") . 3)) ("intel_lpss_pci" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("system" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("intel_lpss_pci" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("tpadtoggle" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadexec.c") . 1)) ("intel_lpss_pci" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadoff.c") . 1)) ("strncasecmp" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1)) ("confstr" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1)) ("_tpadtoggle" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1)) ("new_argv" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1)) ("execve" (nil . 2) (c-mode . 2) ((:keyword "return") . 2) ((:symbol "nil") . 2) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 2)) ("execve" (nil . 1) (c-mode . 1) ((:keyword "return") . 1) ((:symbol "nil") . 1) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1)) ("setting" (nil . 1) (c-mode . 1) ((:keyword "return") . 1) ((:file "/home/workbench-lk/c/tpadtoggle.standards.c") . 1)) ("calls" (nil . 1) (c-mode . 1) ((:keyword "return") . 1) ((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1)) ("requires" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1)) ("located" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1)) ("exit" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1)) ("location" (nil . 1) (c-mode . 1) ((:file "/home/workbench-lk/c/tpadoff.standards.c") . 1)) ("query-replace-defaults" (nil . 1) (lisp-interaction-mode . 1)) ("mode" (nil . 1) (Custom-mode . 1)) ("modes" (nil . 1) (Custom-mode . 1)) ("modes" (nil . 1) (Custom-mode . 1)) ("~/.emacs.d/irony/" (nil . 1) (Custom-mode . 1)) ("~/.emacs.d/irony/bin/" (nil . 1) (Custom-mode . 1)) ("irony" (nil . 1) (Custom-mode . 1)) ("company" (nil . 1) (Custom-mode . 1)) ("mode" (nil . 1) (Custom-mode . 1)) ("unistd" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpad/v3/tpadtoggle.s.l.euid.c") . 1)) ("_tpadtoggle" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpad/v3/tpadtoggle.s.l.euid.c") . 2)) ("_tpadtoggle" (nil . 1) (c-mode . 1) ((:keyword "const") . 1) ((:file "/home/workbench-lk/c/tpad/v3/tpadtoggle.s.l.euid.c") . 1)) ("assign" (nil . 1) (lisp-interaction-mode . 1)) ("regions" (nil . 1) (lisp-interaction-mode . 1)) ("pvcreate" (nil . 1) (lisp-interaction-mode . 1)) ("volume" (nil . 2) (lisp-interaction-mode . 2)) ("block" (nil . 3) (lisp-interaction-mode . 3)) ("these" (nil . 5) (lisp-interaction-mode . 5)) ("free" (nil . 1) (lisp-interaction-mode . 1)) ("these" (nil . 1) (lisp-interaction-mode . 1)) ("these" (nil . 1) (lisp-interaction-mode . 1)) ("partitions." (nil . 1) (lisp-interaction-mode . 1)) ("buffer" (nil . 1) (lisp-interaction-mode . 1)) ("produces" (nil . 3) (lisp-interaction-mode . 3)) ("these" (nil . 1) (lisp-interaction-mode . 1)) ("these" (nil . 1) (lisp-interaction-mode . 1)) ("partition" (nil . 1) (lisp-interaction-mode . 1)) ("semantics" (nil . 2) (lisp-interaction-mode . 2)) ("disk" (nil . 3) (lisp-interaction-mode . 3)) ("disk" (nil . 1) (lisp-interaction-mode . 1)) ("interface" (nil . 2) (lisp-interaction-mode . 2)) ("form" (nil . 4) (lisp-interaction-mode . 4)) ("volume" (nil . 1) (lisp-interaction-mode . 1)) ("interface" (nil . 1) (lisp-interaction-mode . 1)) ("disk" (nil . 1) (lisp-interaction-mode . 1)) ("form" (nil . 1) (lisp-interaction-mode . 1)) ("allocation" (nil . 2) (lisp-interaction-mode . 2)) ("form" (nil . 1) (lisp-interaction-mode . 1)) ("produces" (nil . 1) (lisp-interaction-mode . 1)) ("offering" (nil . 2) (lisp-interaction-mode . 2)) ("form" (nil . 1) (lisp-interaction-mode . 1)) ("accepts" (nil . 1) (lisp-interaction-mode . 1)) ("offering" (nil . 1) (lisp-interaction-mode . 1)) ("physical" (nil . 1) (lisp-interaction-mode . 1)) ("allocation" (nil . 1) (lisp-interaction-mode . 1)) ("form/grow" (nil . 1) (lisp-interaction-mode . 1)) ("block" (nil . 1) (lisp-interaction-mode . 1)) ("block" (nil . 1) (lisp-interaction-mode . 1)) ("them" (nil . 7) (lisp-interaction-mode . 7)) ("them" (nil . 1) (lisp-interaction-mode . 1)) ("pool" (nil . 1) (lisp-interaction-mode . 1)) ("formatting" (nil . 1) (lisp-interaction-mode . 1)) ("produces" (nil . 1) (lisp-interaction-mode . 1)) ("semantics" (nil . 1) (lisp-interaction-mode . 1)) ("abstraction" (nil . 2) (lisp-interaction-mode . 2)) ("backed" (nil . 2) (lisp-interaction-mode . 2)) ("border." (nil . 2) (lisp-interaction-mode . 2)) ("assumes" (nil . 5) (lisp-interaction-mode . 5)) ("region" (nil . 1) (lisp-interaction-mode . 1)) ("them" (nil . 1) (lisp-interaction-mode . 1)) ("abstraction" (nil . 1) (lisp-interaction-mode . 1)) ("assumes" (nil . 1) (lisp-interaction-mode . 1)) ("border." (nil . 1) (lisp-interaction-mode . 1)) ("seperation/abstraction" (nil . 1) (lisp-interaction-mode . 1)) ("them" (nil . 1) (lisp-interaction-mode . 1)) ("backed" (nil . 1) (lisp-interaction-mode . 1)) ("them" (nil . 1) (lisp-interaction-mode . 1)) ("assumes" (nil . 1) (lisp-interaction-mode . 1)) ("them" (nil . 1) (lisp-interaction-mode . 1)) ("assumes" (nil . 1) (lisp-interaction-mode . 1)) ("assumes" (nil . 1) (lisp-interaction-mode . 1)) ("them" (nil . 1) (lisp-interaction-mode . 1)) ("done" (nil . 5) (sh-mode . 5) ((:keyword " in") . 1) ((:file "/home/workbench-lk/cmdline/bash/nestfor") . 4)) ("done" (nil . 1) (sh-mode . 1) ((:keyword "done") . 3) ((:file "/home/workbench-lk/cmdline/bash/nestfor") . 1)) ("done" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/workbench-lk/cmdline/bash/nestfor") . 1)) ("done" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/workbench-lk/cmdline/bash/nestfor") . 1)) ("done" (nil . 1) (sh-mode . 1) ((:keyword "function") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("seqvar" (nil . 1) (sh-mode . 1) ((:keyword "function") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("SV_BASE" (nil . 3) (sh-mode . 3) ((:keyword "bash") . 3) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 3)) ("iter-to" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("iter_from" (nil . 4) (sh-mode . 4) ((:keyword "function") . 3) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 4)) ("echo" (nil . 2) (sh-mode . 2) ((:keyword "else") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 2)) ("echo" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("iter_from" (nil . 1) (sh-mode . 1) ((:keyword "function") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("iter_from" (nil . 1) (sh-mode . 1) ((:keyword "function") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("iter_to" (nil . 2) (sh-mode . 2) ((:keyword "function") . 2) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 2)) ("iter_to" (nil . 1) (sh-mode . 1) ((:keyword "function") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("iter_from" (nil . 1) (sh-mode . 1) ((:keyword " in") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("SEQVARS" (nil . 3) (sh-mode . 3) ((:keyword "done") . 3) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 3)) ("SEQVARS" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("SV_BASE" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("SV_BASE" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("SEQVARS" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/workbench-lk/cmdline/bash/seqvar") . 1)) ("matchln" (nil . 10) (sh-mode . 10) ((:keyword "bash") . 4) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 10)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "fi") . 2) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("testln" (nil . 6) (sh-mode . 6) ((:keyword "fi") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 6)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "fi") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("testln" (nil . 1) (sh-mode . 1) ((:keyword "do") . 4) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("echo" (nil . 1) (sh-mode . 1) ((:keyword "fi") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 3)) ("testln" (nil . 1) (sh-mode . 1) ((:keyword "case") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("echo" (nil . 1) (sh-mode . 1) ((:keyword "in") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "do") . 2) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "do") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("testln" (nil . 1) (sh-mode . 1) ((:keyword "do") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("testln" (nil . 1) (sh-mode . 1) ((:keyword "do") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "case") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("testln" (nil . 1) (sh-mode . 1) ((:keyword "do") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("groupln" (nil . 4) (sh-mode . 4) ((:keyword "bash") . 2) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 4)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("done" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("groupln" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("groupln" (nil . 1) (sh-mode . 1) ((:keyword "elif") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("echo" (nil . 1) (sh-mode . 1) ((:keyword "then") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len." (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("length," (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 9) (sh-mode . 9) ((:keyword "bash") . 9) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 9)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("len:" (nil . 1) (sh-mode . 1) ((:keyword "bash") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("c::test" (nil . 2) (sh-mode . 2) ((:keyword "done") . 2) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 2)) ("c::test" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("matchln" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("groupln" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("match+2" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("!match" (nil . 2) (sh-mode . 2) ((:keyword "done") . 2) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 2)) ("!match" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("!match+3" (nil . 1) (sh-mode . 1) ((:keyword "done") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("else:" (nil . 1) (sh-mode . 1) ((:keyword "fi") . 1) ((:file "/home/lk/self/workbench/shell/dudiff-a") . 1)) ("install" (nil . 4) (text-mode . 4) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4)) ("/boot/" (nil . 4) (text-mode . 4) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4)) ("/dev/sda" (nil . 2) (text-mode . 2) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2)) ("/dev/sda" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("/boot/" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("boot" (nil . 5) (text-mode . 5) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 5)) ("boot" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("/etc/.pwd.lock" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("performing" (nil . 2) (text-mode . 2) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2)) ("boot" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("install" (nil . 1) (text-mode . 1) ((:symbol "nil") . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("performing" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("println" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("previously" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("note" (nil . 5) (text-mode . 5) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 5)) ("/boot/" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("mount" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("note" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("/boot/" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("note" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("these" (nil . 1) (text-mode . 7) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 7)) ("nowfiles" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("these" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("unencrypted" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("need" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("installation" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("/usr/share/grub/ascii.h" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("used" (nil . 3) (text-mode . 3) ((:symbol "nil") . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3)) ("used" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("args" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("../efi/" (nil . 2) (text-mode . 2) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2)) ("../efi/" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("configured" (nil . 3) (text-mode . 3) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3)) ("'10s" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("mkdir" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("these" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("configured" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("configured" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("install" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("fstab" (nil . 4) (text-mode . 4) ((:symbol "TYPE") . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4)) ("embedded" (nil . 3) (text-mode . 3) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3)) ("these" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("share" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("file" (nil . 3) (text-mode . 3) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 3)) ("crypto" (nil . 1) (text-mode . 1) ((:symbol "nil") . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("following" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("device" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("these" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("note" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("these" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("your" (nil . 5) (text-mode . 5) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 5)) ("it's" (nil . 2) (text-mode . 2) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 2)) ("these" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("core" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("it's" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("fstab" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("file" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("note" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("fstab" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("xxxx" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("fstab" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("embedded" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("grub" (nil . 4) (text-mode . 4) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 4)) ("your" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("file" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("encrypted" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("grub" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("normally" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("from" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("your" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("path" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("install" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("/etc/fstab" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("your" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("subvol" (nil . 1) (text-mode . 1) ((:symbol "nil") . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("your" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("used" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("boot" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("grub" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("boot" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("grub" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("embedded" (nil . 1) (text-mode . 1) ((:file "/home/lk/self/workbench/boottime/grub/howto.txt") . 1)) ("text" (nil . 1) (Custom-mode . 1)) ("cd-create-profile" (nil . 1) (shell-mode . 1)) ("git" (nil . 1) (shell-mode . 1)) ("scripts/../" (nil . 3) (shell-mode . 3) ((:symbol "nil") . 3)) ("scripts/../" (nil . 1) (shell-mode . 1) ((:symbol "nil") . 1)) ("scripts/../" (nil . 1) (shell-mode . 1) ((:symbol "nil") . 1)) ("~/.nicotine/" (nil . 1) (shell-mode . 1)) ("~/.bash_history" (nil . 1) (shell-mode . 1)) ("/bin/bash" (nil . 1) (Custom-mode . 1)) ("cksum" (nil . 1) (shell-mode . 1)) ("24bit" (nil . 2) (Custom-mode . 2)) ("/usr/share/emacs/26.1/" (nil . 1) (Custom-mode . 1)) ("/usr/share/emacs/26.1/lisp/" (nil . 1) (Custom-mode . 1)) ("24bit" (nil . 1) (Custom-mode . 1)) ("256color" (nil . 1) (Custom-mode . 1)) ("term" (nil . 2) (Custom-mode . 2)) ("term" (nil . 1) (Custom-mode . 1)) ("hide" (nil . 1) (Custom-mode . 1)) ("selecting" (nil . 1) (Custom-mode . 1)) ("cider/cider-nrepl" (nil . 1) (clojure-mode . 1) ((:keyword "defproject") . 1) ((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/project.clj") . 1)) ("terminfo" (nil . 1) (Custom-mode . 1)) ("tryclj.core" (nil . 1) (cider-repl-mode . 1) ((:keyword "ns") . 1)) (":gen" (nil . 1) (cider-repl-mode . 1) ((:keyword "ns") . 1)) ("println" (nil . 1) (cider-repl-mode . 2) ((:keyword "ns") . 1)) ("println" (nil . 1) (cider-repl-mode . 1)) ("find-doc" (nil . 2) (cider-repl-mode . 2)) ("find-doc" (nil . 1) (cider-repl-mode . 1)) ("../../cider-handler/" (nil . 1) (term-mode . 1)) (":dependencies" (nil . 1) (clojure-mode . 1) ((:file "/home/lk/self/projects/lang_clojure/cider-handler/project.clj") . 1)) ("cider/cider-nrepl" (nil . 1) (clojure-mode . 1) ((:file "/home/lk/self/projects/lang_clojure/cider-handler/project.clj") . 1)) ("eldoc" (nil . 1) (Custom-mode . 1)) ("mode" (nil . 1) (Custom-mode . 1)) ("function" (nil . 1) (Custom-mode . 1)) ("flycheck" (nil . 1) (fundamental-mode . 1) ((:file "/home/lk/self/.notes") . 1)) ("clojure" (nil . 1) (Custom-mode . 1)) ("flycheck" (nil . 1) (Custom-mode . 1)) ("modeformatting" (nil . 1) (Custom-mode . 1)) ("mode" (nil . 1) (Custom-mode . 1)) ("reporting" (nil . 1) (fundamental-mode . 1) ((:file "/home/lk/self/.notes") . 1)) ("/usr/lib/jvm/java-10-openjdk/bin/" (nil . 1) (Custom-mode . 1)) ("cider-handler" (nil . 1) (clojure-mode . 1) ((:keyword "defn") . 1) ((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/cider_handler.clj") . 1)) ("0.18.0-SNAPSHOT" (nil . 4) (clojure-mode . 4) ((:file "/home/lk/.lein/profiles.clj") . 1)) ("0.18.0-SNAPSHOT" (nil . 1) (clojure-mode . 1) ((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/profiles.clj") . 1)) ("0.18.0-SNAPSHOT" (nil . 1) (clojure-mode . 1) ((:keyword "defproject") . 2) ((:file "/home/lk/self/projects/lang_clojure/tut1/tryclj/project.clj") . 1)) ("cider/cider-nrepl" (nil . 1) (clojure-mode . 1) ((:keyword "defproject") . 1) ((:file "/home/lk/self/projects/lang_clojure/cider-nrepl-handler/project.clj") . 1)) ("0.18.0-SNAPSHOT" (nil . 1) (clojure-mode . 1) ((:keyword "defproject") . 1) ((:file "/home/lk/self/projects/lang_clojure/cider-nrepl-handler/project.clj") . 1))] company-statistics--index 0)